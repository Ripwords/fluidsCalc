{"version":3,"sources":["webpack:///./node_modules/nerdamer/nerdamer.core.js","webpack:///./src/views/internalFlow/lamFriction.vue","webpack:///./src/views/internalFlow/lamFriction.vue?658b","webpack:///./node_modules/nerdamer/Calculus.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/views/internalFlow/lamFriction.vue?360c","webpack:///./node_modules/nerdamer/Algebra.js","webpack:///./node_modules/nerdamer/all.min.js"],"names":["nerdamer","imports","version","_","Parser","bigInt","bigDec","set","precision","Groups","PRIMES","CUSTOM_OPERATORS","Settings","callPeekers","init_primes","exclude","suppress_errors","PARSE2NUMBER","SAFE","IMAGINARY","FUNCTION_MODULES","Math","ALLOW_CHARS","USE_MULTICHARACTER_VARS","POWER_OPERATOR","VALIDATION_REGEX","IMPLIED_MULTIPLICATION_REGEX","ALIASES","POSITIVE_MULTIPLIERS","CACHE","SILENCE_WARNINGS","PRECISION","VECTOR","PARENTHESIS","SQRT","ABS","FACTORIAL","DOUBLEFACTORIAL","LONG_PI","LONG_E","PI","E","LOG","LOG10","LOG10_LATEX","MAX_EXP","SCIENTIFIC_MAX_DECIMAL_PLACES","SCIENTIFIC_IGNORE_ZERO_EXPONENTS","roots","x","y","i","j","nthpow","pow","N","P","S","EX","FN","PL","CB","CP","CONST_HASH","EXPRESSIONS","VARS","RESERVED","WARNINGS","err","msg","ErrorObj","Error","customError","name","message","this","undefined","error","stack","prototype","Object","create","isReserved","value","indexOf","allSame","arr","last","l","length","equals","warn","push","SHOW_WARNINGS","console","validateName","typ","regex","test","InvalidVariableNameError","scientificToDecimal","num","nsign","sign","abs","zero","parts","String","toLowerCase","split","e","pop","coeff_array","slice","Array","join","dec","isPrime","n","q","floor","sqrt","knownVariable","variable","o","isNumber","allNumeric","isFraction","isSymbol","multiplier","toDecimal","obj","Symbol","isExpression","Expression","variables","poly","vars","c","add","isNaN","group","prevgroup","previousGroup","power","symbols","firstObject","args","sort","arraySum","toNumber","sum","parse","Number","separate","symbol","expand","insert","key","sym","clone","each","isConstant","fname","fillHoles","isVector","Vector","isMatrix","Matrix","isSet","Set","isNumericSymbol","isVariableSymbol","isArray","isInt","toString","isNegative","lessThan","stringify","inBrackets","str","stringReplace","from","to","with_str","substr","customType","custom","sameSign","a","b","format","call","arguments","shift","new_str","replace","match","index","arg","range","start","end","step","keys","both","compare","sym1","sym2","comparison","scope","random","block","setFunction","params_array","body","functions","mapped_function","params","arrayMax","max","apply","arrayMin","min","arrayEqual","arr1","arr2","arrayClone","new_array","arrayAddSlices","slices","delta","retval","nroots","unwrapPARENS","toLinear","_roots","toPolarFormArray","evaluate","r","den","p","formula","t","fromArray","root","negate","map","multiply","imaginary","comboSort","combined","na","nb","decompose_fn","fn","wrt","as_obj","ax","stripVar","subtract","divide","nround","s","MAX_VALUE","round","getU","u","v","clearU","indx","hasOwnProperty","even","evenFraction","arrayUnique","item","arrayGetVariables","concat","removeDuplicates","condition","conditionType","seen","temp","reserveNames","remove","indexOrKey","result","splice","setting","f","opt","current_setting","importFunctions","arguments2Array","getCoeffs","info","coeffs","term","contains","coeff","convertToVector","vector","elements","generatePrimes","upto","last_prime","allNumbers","allConstants","isPi","isE","mix","isComposite","isLinear","expanded","DivisionByZero","ParseError","UndefinedError","OutOfFunctionDomainError","MaximumIterationsReached","NerdamerTypeError","ParityError","OperatorError","OutOfRangeError","DimensionError","ValueLimitExceededError","NerdamerValueError","SolveError","InfiniteLoopError","UnexpectedTokenError","exceptions","Math2","csc","sin","sec","cos","cot","tan","acsc","asin","asec","acos","acot","atan","erf","exp","diff","h","derivative","median","values","half","fromContinued","contd","fractions","whole","continuedFraction","w","absn","ni","done","epsilon","d","EPSILON","idx","bigpow","Frac","isInteger","nthroot","gamma","z","g","C","bigfactorial","times","bigLog","quick","k","invert","factorial","is_int","NaN","dfactorial","GCD","QGCD","gcd","LCM","factor","ifactors","ifactor","factors","updateHash","sfactor","lcprime","prime","input","lt","safety","rho","xf","cz","mod","minus","sm","boxfactor","fib","integer_part","simpson","get_value","side","dx","xi","num_integrate","tol","maxdepth","adsimp","fa","fm","fb","V0","depth","state","nanEncountered","f1","f2","sl","sr","s2","m","V1","V2","maxDepthCount","integrate","Ci","n2","log","Si","Ei","Infinity","Shi","Chi","cosh","Li","gamma_incomplete","rect","sinc","tri","A","dk","dk0","d0","xk","powb","dk_dec","gte","xn","ld","same_delta","decimal","text","option","useGroup","decp","asHash","wrapCondition","asDecimal","valueOf","frac","exec","negative","quotient","digits","passed","prefix","cycle","numer","denom","divmod","remainder","operator","Scientific","om","collectSymbols","txt","pg","pwg","E_TO_EXP","charAt","cv","parens","primeFactors","startsWith","isScientific","fromScientific","convert","simple","Fraction","quickConversion","isInfinity","bin","preprocessors","names","actions","Slice","upper","lower","Collection","Token","node","node_type","column","type","OPERATOR","operators","FUNCTION","precedence","MAX_PRECEDENCE","leftAssoc","append","getItems","pretty_print","collection","is_prefix","VARIABLE_OR_LITERAL","UNIT","KEYWORD","classes","complex","prec","re","im","sinh","removeDen","sq","squared","infinity","tanh","sech","csch","coth","acosh","asinh","atanh","asech","acsch","acoth","realpart","imagpart","hyp","phi","USE_BIG","atan2","symfunction","greaterThan","trig","isImaginary","getQuadrant","dividedBy","gt","trigh","units","action","postfix","operation","overloaded","overloadAction","overloadLeftAssoc","vectorFn","brackets","id","is_open","is_close","maps_to","radians","degrees","continued_fraction","scientific","pfactor","matrix","imatrix","cbrt","expandall","determinant","size","transpose","dot","cross","vecget","vecset","vectrim","matget","matset","matgetrow","matsetrow","matgetcol","matsetcol","rationalize","IF","is_in","conjugate","polarform","rectform","union","intersection","difference","intersects","is_subset","print","findFunction","fmodules","fmodule","override","which","with_what","restore","what","extend","force_call","extended","fn_name","callfunction","allowed_args","fn_settings","num_allowed_args","is_array","min_args","max_args","num_args","error_msg","numericArgs","bigConvert","operator_filter_regex","ostr","filter","RegExp","setOperator","postif","getOperator","aliasOperator","getOperators","getBrackets","prepare_expression","group1","group2","first","before","e_org","g1","g2","Node","token","left","right","initConstants","CONSTANTS","peekers","pre_operator","post_operator","pre_function","post_function","tokenize","trim","col","L","lpos","tokens","scopes","target","open_brackets","has_space","SPACE","EMPTY_STRING","COMMA","MINUS","MULT","addScope","scope_type","new_scope","goUp","get_operator_str","start_at","substring","chunkify","operator_str","_operators","ch","add_token","at","add_function","set_last_position","position","adjust_column_position","last_token_is_numeric","is_multiplication","bracket","pair","prev","nxt","is_operator","toRPN","output","prefixes","collapse","destination","next","previous","next_is_operator","last_on_stack","parseRPN","rpn","substitutions","pi","Q","is_comma","fromSet","ans","parent","fn_args","ret","next_is_comma","getter","il","element","subbed","isUnit","rethrowErrors","forEach","toHTML","indent","tab","repeat","html","tree","location","toObject","expression_string","objectify","isConversion","chunkAtCommas","chunks","rem_brackets","remove_redundant_powers","narr","next_is_array","next_is_minus","unshift","before_last","ms","distributeMultiplier","toUnitMultiplier","V","M","getDenom","getNum","_symbol","cf","symbol1","symbol2","rows","l2","cols","retnum","retden","is_negative","img","setPower","qa","tw","nn","rem","isOne","sigfigs","asbig","theta","original","symMinMax","numVal","SYMBOLIC_MIN_MAX","getval","aval","bval","base","log_sym","log_base","img_part","sIsConstant","toExponential","quadrant","isFinite","clean","new_num","new_den","expand_denominator","expand_functions","rank","identity","tolerance","col_index","vec1","vec2","mat","set1","set2","testSQRT","absEquals","testPow","fct","toTeX","expression_or_obj","decimals","TeX","cdot","nobj","LaTeX","braces","expr","lb","ub","argSplit","latex","getFunction","addPreprocessor","order","shift_cells","PreprocessorError","getPreprocessors","removePreprocessor","subs","aIsSymbol","bIsSymbol","unit","Unit","aneg","bneg","inf","ap","bp","h1","h2","powEQ","v1","v2","aIsComposite","bIsComposite","PN","PNEQ","valEQ","attach","shell","canIterate","bothPL","bIsMatrix","eachElement","row","dimensions","toFixed","bnum","bden","a_pow","a_multiplier","ONN","distributeExponent","combine","bm","p1","p2","isSymbolP1","isSymbolP2","toEX","isEven","logV","n1","ndiv","ddiv","ps","isMatrixB","isMatrixA","isVectorA","isVectorB","raised","aIsZero","bIsZero","nre","nim","bIsConstant","aIsConstant","bIsInt","multiplyPower","abs_b","sgn","aa","_a","_b","a1","log_a","b1","c1","neg_num","nr","tn","evenr","evenp","evennp","_result","isEX","pt","IGNORE_E","comma","percent","assign","function_assign","bool2Symbol","eq","lte","log10","LOG10E","trunc","ceil","getExpression","expression_number","asType","expression","text_","first_arg","buildFunction","Build","build","isPolynomial","isPoly","sub","for_symbol","otype","callback","numerator","denominator","hasFunction","containsFunction","exponent","removeLeadingZeroes","removeTrailingZeroes","dot_location","zeroes","leadingZeroes","copy","rounded","next_two","ed","SCIENTIFIC_IGNORE_INTS","wholes","is_neg","isFrac","nstr","m_dc","simplify","neg","qcompare","isnegative","lcm","div","unwrapSQRT","all","getNth","isToNth","nthPower","nthMultiplier","isNth","isSquare","isCube","isSimple","powSimp","powers","mfactors","out_","in_","xt","multivariate","exclude_x","toArray","hasFunc","fn_group","same_pow","a_is_unit_multiplier","find","needle","nargs","isMonomial","isSQRT","check_all","check_symbols","retainSign","isSymbolic","isInverse","properties","keepSign","deep","power_only","is_one","cp","isImgSymbol","keyForGroup","existing","hash","contents","is_parens","sort_fn","expand_symbol","collected","isCombination","opts","qc","fullConversion","stripSign","nparts","cparts","d1","d2","parser","keep","space","LaTeXArray","rowTeX","m_array","v_array","formatFrac","p_array","greek","alpha","beta","zeta","eta","iota","kappa","lambda","mu","nu","omnikron","sigma","tau","upsilon","chi","psi","omega","Gamma","Delta","Epsilon","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega","arccos","ker","limsup","arcsin","deg","lg","ln","Pr","sup","arctan","det","hom","lim","LN","dim","liminf","inverted","formatSubscripts","t_varray","den_map","num_map","num_c","den_c","setBrackets","container","counter","laTex","isDenom","combine_power","isBracketed","formatP","tp","merge","mn","md","vn","vd","top","bottom","glue","is_pow","bracketTypes","square","brace","angle","filterTokens","filtered","next_token","raw_tokens","parse_next","get","items","lw","rl","el","arrayPrefill","val","modulus","eql","toUnitVector","angleFrom","mod1","mod2","product","theta_val","isParallelTo","isAntiparallelTo","isPerpendicularTo","B","magnitude","tex","F","zeroMatrix","raw_values","raw","nc","toRightTriangular","isSingular","augment","rr","np","els","divisor","new_element","ki","kp","inverse_elements","nel","fel","nj","canMultiplyFromLeft","sameSize","MM","kj","toVector","newline","to_decimal","row_tex","_union","_intersection","dependencies","_rename","reformat","deps","getProperName","compileDependencies","dep_string","replacements","components","getArgsDeps","arg_array","supplements","ftext","xports","ftext_complex","cc","ft","ftext_function","bn","f_array","alias","Function","LOG_FNS","Utils","groups","PARSER","libExports","fndec","convertToLaTeX","convertFromLaTeX","add_on","getWarnings","setConstant","constant","getConstant","getCore","getEquation","reserved","asArray","clear","equation_number","keep_EXPRESSIONS_fixed","flush","expressions","asObject","asLaTeX","register","core","parent_obj","ref_obj","visible","numargs","validVarName","varname","supported","numEquations","numExpressions","setVar","getVar","clearVars","load","loader","getVars","disallowed","api","linker","replaceFunction","new_num_args","withOperator","htmlTree","addPeeker","removePeeker","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Integer","radix","parseValue","parseBase","BigInteger","isSmall","SmallInteger","isPrecise","arrayToSmall","compareAbs","createArray","truncate","l_a","l_b","carry","addAny","addSmall","a_l","b_l","borrow","subtractAny","subtractSmall","multiplyLong","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","useKaratsuba","l1","multiplySmallAndArray","a_j","divMod1","quotientDigit","divisorMostSignificantDigit","divModSmall","divMod2","guess","xlen","highx","highy","check","part","reverse","divModAny","self","qSign","mSign","isBasicPrime","isDivisibleBy","lesser","millerRabinTest","nPrev","modPow","plus","small","_multiplyBySmall","over","isZero","isPositive","isOdd","compareTo","notEquals","neq","greater","greaterOrEquals","geq","lesserOrEquals","leq","strict","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","shiftRight","remQuo","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","low","high","restricted","digit","absBase","charCodeAt","parseInt","charCode","parseBaseFromArray","toBase","out","toBaseString","parseStringValue","decimalPlace","isValid","parseNumberValue","zeros","toJSON","minusOne","isInstance","module","exports","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","O","D","absoluteValue","constructor","comparedTo","cmp","cosine","sd","J","G","cubeRoot","Z","decimalPlaces","dp","dividedToIntegerBy","divToInt","greaterThanOrEqualTo","hyperbolicCosine","hyperbolicSine","hyperbolicTangent","inverseCosine","isNeg","U","inverseHyperbolicCosine","inverseHyperbolicSine","inverseHyperbolicTangent","inverseSine","inverseTangent","isPos","lessThanOrEqualTo","logarithm","T","naturalExponential","naturalLogarithm","negated","sine","squareRoot","tangent","mul","toBinary","K","toDecimalPlaces","toDP","R","toFraction","toHexadecimal","toHex","toNearest","toOctal","toPower","LN10","toPrecision","toSignificantDigits","toSD","truncated","I","H","$","search","W","X","Y","en","rn","sn","on","un","cn","an","defaults","getRandomValues","randomBytes","hn","dn","pn","gn","wn","Nn","En","yn","Mn","qn","On","Dn","Uint32Array","Fn","An","Sn","Zn","Pn","Rn","Ln","Tn","Un","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimal","hypot","log2","default","Decimal","IonPage","IonContent","IonButton","IonInput","IonItem","IonLabel","Help","Header","Exit","IonSelect","IonSelectOption","IonList","eqn","flow","computed","parseFloat","eval","$store","solveEquations","methods","watch","EXP","SIN","COS","TAN","SEC","CSC","COT","ASIN","ACOS","ATAN","ASEC","ACSC","ACOT","SINH","COSH","TANH","CSCH","SECH","COTH","ASECH","ACSCH","ACOTH","NoIntegralFound","hasIntegral","fnTransform","double_angle","transformed","hasTrig","in_trig","in_inverse_trig","toCommonDenominator","Algebra","inv_trig_fns","trig_fns","in_htrig","jacobian","eqns","Calculus","cMatrix","all_functions","cosAsinBtransform","cosAsinBtranform","cosAsinAtransform","cosAsinAtranform","sinAsinBtransform","trigTransform","integration_depth","max_lim_depth","__","modifier","nth","sp","derive","polydiff","product_rule","qdiff","x_","y_","altVal","df","integration","u_substitution","try_combo","do_fn_sub","poly_integrate","dc","decompose_arg","xp","dc2","new_val","by_parts","integrated","Factor","stop","partial_fraction","partial_fractions","PartFrac","partfrac","get_udv","setSymbol","dv","trig_sub","du","integral","udv","vdu","uv","integral_vdu","vdu_s","is_cyclic","original_symbol","dt","decomp","b_is_positive","unwrapAbs","L1","L2","br","sqrt_a","sqrt_ax","sqa","sqb","aob","bsqi","factored","was_factored","degree","fx","sqComplete","u_du","ag","decomposed","a_","b_","rd","rd2","parse_str","cfsymbol","unwrapped","fn1","fn2","arg1","arg2","new_sym","p1_even","p2_even","trans","bx","sym1_is_linear","pd","pc","f_is_linear","dummy","bksub","u_transform","U2","Classes","Factors","coeffFactor","cosn","sym2_clone","sa","sb","nq","syma","symb","intg","defint","point","Limit","limit","interval","diverges","gin","lim_sign","gm","lim1","lim2","indeterminate","t_symbol","den_is_zero","rewriteToLog","getSubbed","isInterval","isConvergent","Simplify","_num","_den","symbol_","lim_base","lim_pow","evaluates","trial","s_arg","divergent","_lim","_symbols","fns","Fresnel","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","class","src","style","title","fullscreen","placeholder","interface","fShow","readonly","fTurbShow","fTurbShowH","color","render","__scopeId","math","Polynomial","fill","MVTerm","terms","image","fit","c2","equalsZero","modP","up_one","dividend","mp","x1","x2","lc","monic","mp1","mp2","gcf","toPolynomial","fnz","ca","parr","quad","incl_img","dsc","squareFree","equalsNumber","toSymbol","with_order","tBase","nterm","updateCount","altVar","sameVars","groupTerms","egrouped","grouped","collectFactors","getNumberSymbolics","fo","preAdd","pFactor","is_constant","count","getRevMap","rev_map","len","mapped","generateImage","getImg","mvterm","new_mvterm","toMapObj","filledArray","clss","arrSum","haveIntersection","some","subFunctions","tvar","getFunctionsSubs","proots","known_roots","get_roots","rarr","calcroots","lowest_pow","lowest_symbol","minpower","last_power","MAXDEGREE","zeroi","degreePar","Degree","zeror","QuadSD_ak1","NN","iPar","calcSC_ak1","DBL_EPSILON","qk","sdPar","dumFlag","a3","a7","nextK_ak1","tFlag","qp","newest_ak1","a4","a5","b2","c3","c4","Quad_ak1","si","lr","li","QuadIT_ak1","uu","vv","calcPar","ee","omp","relstp","ui","vi","zm","qPar","triedFlag","NZ","szr","szi","lzr","lzi","RealIT_ak1","kv","pv","nm1","Fxshfr_ak1","MDP1","betas","betav","oss","ots","otv","ovv","ss","ts","tss","tv","tvv","fflag","spass","stry","vpass","vtry","svk","iFlag","rpSolve","degPar","bnd","ff","moduli_max","moduli_min","sc","xm","bb","xxx","jj","NM1","zerok","RADFAC","LB2","LN2","Fxshfr_Par","LO","MIN_VALUE","cosr","sinr","xx","yy","real","froot","newtonraph","mesh","sumProd","polyPowers","for_variable","include_negatives","ll","common","exit","n_terms","n_zeroes","_factor","_factored","quadFactor","root1","root2","cubeFactor","sign_a","sign_b","m_root_a","m_root_b","untouched","den_array","num_array","dfact","nfact","strip","unstrip","multiVar","all_S","all_unit","coeff_factors","power_factors","powerFactor","mfactor","t_factors","trialAndError","tf_symbol","t_factor","reduce","sqfr","LT","factor_array","cnst","cfactors","candidate","ltfactors","isubbed","nfactors","lc_is_neg","cnst_is_neg","factor_found","mSqfrFactor","can_divide","is_factor","sqdiff","remove_square","separated","obj_array","constants","factors2","sorted","maxes","new_factor","divided","has_fractions","neg_numeric_factor","allLinear","status","sg","appeared","every","aggregate","gcd_","gcd_m","gcd_v","gcd_p","vars_a","vars_b","multipliers","curr","denom_args","mask","results","total","fail","symbol1_has_func","symbol2_has_func","parse_funcs","quot","reconvert","get_unique_max","any","get_det","lookat","umax","is_equal","max1","max2","idx1","idx2","item1","item2","cterm","t_map","init_sort","is_larger","s1","lead_var","try_better_lead_var","checked","tt","sf","blv","alv","fdt","fnt","nd","dividend_larger","cur","line","dy","createTemplate","denom_factors","factors_vec","efactor","as_array","ofactors","nterms","dterms","ks","template","tfactors","partials","denominators","e2","complexSimp","bc","ad","cd","r1","r2","i1","i2","trigSimp","sym_array","tr","fracSimp","ratSimp","sqrtSimp","simp","patternSub","patterns","has_CP","found","collect","simplified","useAlgebraDiv","divideFn","calls","useParserDiv","ne","ae","te","De","pe","Ve","ie","He","se","je","oe","ue","le","ce","fe","he","me","ge","de","ve","we","ye","be","Se","Me","Ne","Ee","qe","xe","Ae","Ce","Le","Ie","Ue","_e","Re","Oe","Te","Fe","0","Pe","ke","Be","fact","Ge","Ze","infty","Xe","$e","ct","ht","mt","vt","wt","yt","bt","St","Mt","Nt","Et","qt","At","Ct","Lt","It","Ut","_t","Rt","Ot","Tt","Pt","kt","Ft","Dt","Bt","Gt","Vt","ot","ut","We","Je","nt","ze","Qe","Ye","Ke","et","st","rt","it","LHS","RHS","SOLVE_RADIUS","ROOTS_PER_SIDE","make_pi_conversions","STEP_SIZE","MAX_NEWTON_ITERATIONS","MAX_NON_LINEAR_TRIES","NON_LINEAR_JUMP_AT","NON_LINEAR_JUMP_SIZE","NON_LINEAR_START","NEWTON_SLICES","NEWTON_EPSILON","SOLUTION_PROXIMITY","FILTER_SOLUTIONS","MAX_SOLVE_DEPTH","ZERO_EPSILON","MAX_BISECTION_ITER","BI_SECTION_EPSILON","hasNegativeTerms","toLHS","removeDenom","solveFor","Equation","checkAll","Solve","solutions","solve","solveCircle","SOLUTIONS_AS_OBJECT","solveNonLinearSystem","systemSolutions","solveSystemBySubstitution","solveSystem","cubic","quartic","divideAndConquer","csolve","getPoints","bisection","Newton","rewrite","sqrtSolve","PRE_ADD_SOLUTION","inverseFunctionSolve","Laplace_integration_depth","Extra","LaPlace","transform","inverse","Statistics","frequencyMap","mean","mode","gVariance","variance","sampleVariance","standardDeviation","sampleStandardDeviation","zScore","Units","table","foot","meter","decimeter"],"mappings":"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","file":"js/chunk-3ef81cb0.d1c85f99.js","sourcesContent":["/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\r\n//externals ====================================================================\r\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\r\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\r\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\r\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\r\n\r\nvar nerdamer = (function (imports) {\r\n    \"use strict\";\r\n\r\n//version ======================================================================\r\n    var version = '1.1.12';\r\n\r\n//inits ========================================================================\r\n    var _ = new Parser(); //nerdamer's parser\r\n\r\n    //import bigInt\r\n    var bigInt = imports.bigInt;\r\n    var bigDec = imports.bigDec;\r\n\r\n    //set the precision to js precision\r\n    bigDec.set({\r\n        precision: 250\r\n    });\r\n\r\n    var Groups = {};\r\n\r\n    //container of pregenerated primes\r\n    var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113\r\n                , 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\r\n        257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\r\n        401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\r\n        563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\r\n        709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\r\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,\r\n        1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\r\n        1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303,\r\n        1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471,\r\n        1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607,\r\n        1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753,\r\n        1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931,\r\n        1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083];\r\n\r\n//Settings =====================================================================\r\n    var CUSTOM_OPERATORS = {};\r\n\r\n    var Settings = {\r\n        //Enables/Disables call peekers. False means callPeekers are disabled and true means callPeekers are enabled.\r\n        callPeekers: false,\r\n\r\n        //the max number up to which to cache primes. Making this too high causes performance issues\r\n        init_primes: 1000,\r\n\r\n        exclude: [],\r\n        //If you don't care about division by zero for example then this can be set to true.\r\n        //Has some nasty side effects so choose carefully.\r\n        suppress_errors: false,\r\n        //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\r\n        //cos(9) for convenience but parse to number will always try to return a number if set to true.\r\n        PARSE2NUMBER: false,\r\n        //this flag forces the a clone to be returned when add, subtract, etc... is called\r\n        SAFE: false,\r\n        //the symbol to use for imaginary symbols\r\n        IMAGINARY: 'i',\r\n        //the modules used to link numeric function holders\r\n        FUNCTION_MODULES: [Math],\r\n        //Allow certain characters\r\n        ALLOW_CHARS: ['π'],\r\n        //Allow nerdamer to convert multi-character variables\r\n        USE_MULTICHARACTER_VARS: true,\r\n        //Allow changing of power operator\r\n        POWER_OPERATOR: '^',\r\n        //The variable validation regex\r\n        //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\r\n        VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\r\n        // The regex used to determine which characters should be included in implied multiplication\r\n        IMPLIED_MULTIPLICATION_REGEX: /([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,\r\n        //Aliases\r\n        ALIASES: {\r\n            'π': 'pi',\r\n            '∞': 'Infinity'\r\n        },\r\n        POSITIVE_MULTIPLIERS: false,\r\n        //Cached items\r\n        CACHE: {},\r\n        //Print out warnings or not\r\n        SILENCE_WARNINGS: false,\r\n        //Precision\r\n        PRECISION: 21,\r\n        //function mappings\r\n        VECTOR: 'vector',\r\n        PARENTHESIS: 'parens',\r\n        SQRT: 'sqrt',\r\n        ABS: 'abs',\r\n        FACTORIAL: 'factorial',\r\n        DOUBLEFACTORIAL: 'dfactorial',\r\n        //reference pi and e\r\n        LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' +\r\n                '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\r\n        LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' +\r\n                '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\r\n        PI: Math.PI,\r\n        E: Math.E,\r\n        LOG: 'log',\r\n        LOG10: 'log10',\r\n        LOG10_LATEX: 'log_{10}',\r\n        MAX_EXP: 200000,\r\n        //The number of scientific place to round to\r\n        SCIENTIFIC_MAX_DECIMAL_PLACES: 14,\r\n        //True if ints should not be converted to\r\n        SCIENTIFIC_IGNORE_ZERO_EXPONENTS: true\r\n    };\r\n\r\n    (function () {\r\n        Settings.CACHE.roots = {};\r\n        var x = 40,\r\n                y = 40;\r\n        for(var i = 2; i <= x; i++) {\r\n            for(var j = 2; j <= y; j++) {\r\n                var nthpow = bigInt(i).pow(j);\r\n                Settings.CACHE.roots[nthpow + '-' + j] = i;\r\n            }\r\n        }\r\n    })();\r\n\r\n    //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\r\n    //The groups that help with organizing during parsing. Note that for FN is still a function even\r\n    //when it's raised to a symbol, which typically results in an EX\r\n    var N = Groups.N = 1, // A number\r\n            P = Groups.P = 2, // A number with a rational power e.g. 2^(3/5).\r\n            S = Groups.S = 3, // A single variable e.g. x.\r\n            EX = Groups.EX = 4, // An exponential\r\n            FN = Groups.FN = 5, // A function\r\n            PL = Groups.PL = 6, // A symbol/expression having same name with different powers e.g. 1/x + x^2\r\n            CB = Groups.CB = 7, // A symbol/expression composed of one or more variables through multiplication e.g. x*y\r\n            CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\r\n\r\n    var CONST_HASH = Settings.CONST_HASH = '#';\r\n\r\n    var PARENTHESIS = Settings.PARENTHESIS;\r\n\r\n    var SQRT = Settings.SQRT;\r\n\r\n    var ABS = Settings.ABS;\r\n\r\n    var FACTORIAL = Settings.FACTORIAL;\r\n\r\n    var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL;\r\n\r\n    //the storage container \"memory\" for parsed expressions\r\n    var EXPRESSIONS = [];\r\n\r\n    //variables\r\n    var VARS = {};\r\n\r\n    //the container used to store all the reserved functions\r\n    var RESERVED = [];\r\n\r\n    var WARNINGS = [];\r\n\r\n    /**\r\n     * Use this when errors are suppressible\r\n     * @param {String} msg\r\n     * @param {object} ErrorObj\r\n     */\r\n    var err = function (msg, ErrorObj) {\r\n        if(!Settings.suppress_errors) {\r\n            if(ErrorObj)\r\n                throw new ErrorObj(msg);\r\n            else\r\n                throw new Error(msg);\r\n        }\r\n    };\r\n\r\n//Utils ========================================================================\r\n    var customError = function (name) {\r\n        var E = function (message) {\r\n            this.name = name;\r\n            this.message = message !== undefined ? message : '';\r\n            var error = new Error(this.message);\r\n            error.name = this.name;\r\n            this.stack = error.stack;\r\n        }; //create an empty error\r\n        E.prototype = Object.create(Error.prototype);\r\n        return E;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if value is one of nerdamer's reserved names\r\n     * @param {String} value\r\n     * @return boolean\r\n     */\r\n    var isReserved = function (value) {\r\n        return RESERVED.indexOf(value) !== -1;\r\n    };\r\n\r\n    /**\r\n     * Checks to see that all symbols in array are the same\r\n     * @param {Symbol[]} arr\r\n     * @returns {bool}\r\n     */\r\n    var allSame = function (arr) {\r\n        var last = arr[0];\r\n        for(var i = 1, l = arr.length; i < l; i++)\r\n            if(!arr[i].equals(last))\r\n                return false;\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Used to pass warnings or low severity errors about the library\r\n     * @param msg\r\n     */\r\n    var warn = function (msg) {\r\n        WARNINGS.push(msg);\r\n        if(Settings.SHOW_WARNINGS && console && console.warn) {\r\n            console.warn(msg);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Enforces rule: \"must start with a letter or underscore and\r\n     * can have any number of underscores, letters, and numbers thereafter.\"\r\n     * @param name The name of the symbol being checked\r\n     * @param {String} typ - The type of symbols that's being validated\r\n     * @throws {Exception}  - Throws an exception on fail\r\n     */\r\n    var validateName = function (name, typ) {\r\n        typ = typ || 'variable';\r\n        if(Settings.ALLOW_CHARS.indexOf(name) !== -1)\r\n            return;\r\n        var regex = Settings.VALIDATION_REGEX;\r\n        if(!(regex.test(name))) {\r\n            throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Convert number from scientific format to decimal format\r\n     * @param {Number} num\r\n     */\r\n    var scientificToDecimal = function (num) {\r\n        var nsign = Math.sign(num);\r\n        //remove the sign\r\n        num = Math.abs(num);\r\n        //if the number is in scientific notation remove it\r\n        if(/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\r\n            var zero = '0',\r\n                    parts = String(num).toLowerCase().split('e'), //split into coeff and exponent\r\n                    e = parts.pop(), //store the exponential part\r\n                    l = Math.abs(e), //get the number of zeros\r\n                    sign = e / l,\r\n                    coeff_array = parts[0].split('.');\r\n            if(sign === -1) {\r\n                l = l - coeff_array[0].length;\r\n                if(l < 0) {\r\n                    num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\r\n                }\r\n                else {\r\n                    num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\r\n                }\r\n            }\r\n            else {\r\n                var dec = coeff_array[1];\r\n                if(dec)\r\n                    l = l - dec.length;\r\n                if(l < 0) {\r\n                    num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\r\n                }\r\n                else {\r\n                    num = coeff_array.join('') + new Array(l + 1).join(zero);\r\n                }\r\n            }\r\n        }\r\n\r\n        return nsign < 0 ? '-' + num : num;\r\n    };\r\n    /**\r\n     * Checks if number is a prime number\r\n     * @param {Number} n - the number to be checked\r\n     */\r\n    var isPrime = function (n) {\r\n        var q = Math.floor(Math.sqrt(n));\r\n        for(var i = 2; i <= q; i++) {\r\n            if(n % i === 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Generates an object with known variable value for evaluation\r\n     * @param {String} variable\r\n     * @param {any} value Any stringifyable object\r\n     * @returns {Object} \r\n     */\r\n    var knownVariable = function (variable, value) {\r\n        var o = {};\r\n        o[variable] = value;\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Checks if n is a number\r\n     * @param {any} n\r\n     */\r\n    var isNumber = function (n) {\r\n        return /^\\d+\\.?\\d*$/.test(n);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if an array contains only numeric values\r\n     * @param {Array} arr\r\n     */\r\n    var allNumeric = function (arr) {\r\n        for(var i = 0; i < arr.length; i++)\r\n            if(!isNumber(arr[i]))\r\n                return false;\r\n        return true;\r\n    };\r\n    /**\r\n     * Checks to see if a number or Symbol is a fraction\r\n     * @param {Number|Symbol} num\r\n     * @returns {boolean}\r\n     */\r\n    var isFraction = function (num) {\r\n        if(isSymbol(num))\r\n            return isFraction(num.multiplier.toDecimal());\r\n        return (num % 1 !== 0);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is a Symbol\r\n     * @param {Object} obj\r\n     */\r\n    var isSymbol = function (obj) {\r\n        return (obj instanceof Symbol);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is an Expression\r\n     * @param {Object} obj\r\n     */\r\n    var isExpression = function (obj) {\r\n        return (obj instanceof Expression);\r\n    };\r\n\r\n    /**\r\n     * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\r\n     * names are then returned in alphabetical order.\r\n     * @param {Symbol} obj\r\n     * @param {Boolean} poly\r\n     * @param {Object} vars - An object containing the variables. Do not pass this in as it generated\r\n     * automatically. In the future this will be a Collector object.\r\n     * @returns {String[]} - An array containing variable names\r\n     */\r\n    var variables = function (obj, poly, vars) {\r\n        vars = vars || {\r\n            c: [],\r\n            add: function (value) {\r\n                if(this.c.indexOf(value) === -1 && isNaN(value))\r\n                    this.c.push(value);\r\n            }\r\n        };\r\n\r\n        if(isSymbol(obj)) {\r\n            var group = obj.group,\r\n                    prevgroup = obj.previousGroup;\r\n            if(group === EX)\r\n                variables(obj.power, poly, vars);\r\n\r\n            if(group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\r\n                for(var x in obj.symbols) {\r\n                    variables(obj.symbols[x], poly, vars);\r\n                }\r\n            }\r\n            else if(group === S || prevgroup === S) {\r\n                //very crude needs fixing. TODO\r\n                if(!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY))\r\n                    vars.add(obj.value);\r\n            }\r\n            else if(group === PL || prevgroup === PL) {\r\n                variables(firstObject(obj.symbols), poly, vars);\r\n            }\r\n            else if(group === EX) {\r\n                if(!isNaN(obj.value))\r\n                    vars.add(obj.value);\r\n                variables(obj.power, poly, vars);\r\n            }\r\n            else if(group === FN && !poly) {\r\n                for(var i = 0; i < obj.args.length; i++) {\r\n                    variables(obj.args[i], poly, vars);\r\n                }\r\n            }\r\n        }\r\n\r\n        return vars.c.sort();\r\n    };\r\n\r\n    /**\r\n     * Returns the sum of an array\r\n     * @param {Array} arr\r\n     * @param {boolean} toNumber\r\n     * @returns {Symbol}\r\n     */\r\n    var arraySum = function (arr, toNumber) {\r\n        var sum = new Symbol(0);\r\n        for(var i = 0; i < arr.length; i++) {\r\n            var x = arr[i];\r\n            // Convert to symbol if not\r\n            sum = _.add(sum, !isSymbol(x) ? _.parse(x) : x);\r\n        }\r\n\r\n        return toNumber ? Number(sum) : sum;\r\n    };\r\n\r\n    /**\r\n     * Separates out the variables into terms of variabls.\r\n     * e.g. x+y+x*y+sqrt(2)+pi returns\r\n     * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\r\n     * @param {type} symbol\r\n     * @param {type} o\r\n     * @returns {undefined}\r\n     * @throws {Error} for expontentials\r\n     */\r\n    var separate = function (symbol, o) {\r\n        symbol = _.expand(symbol);\r\n        o = o || {};\r\n        var insert = function (key, sym) {\r\n            if(!o[key])\r\n                o[key] = new Symbol(0);\r\n            o[key] = _.add(o[key], sym.clone());\r\n        };\r\n        symbol.each(function (x) {\r\n            if(x.isConstant('all')) {\r\n                insert('constants', x);\r\n            }\r\n            else if(x.group === S) {\r\n                insert(x.value, x);\r\n            }\r\n            else if(x.group === FN && (x.fname === ABS || x.fname === '')) {\r\n                separate(x.args[0]);\r\n            }\r\n            else if(x.group === EX || x.group === FN) {\r\n                throw new Error('Unable to separate. Term cannot be a function!');\r\n            }\r\n            else {\r\n                insert(variables(x).join(' '), x);\r\n            }\r\n        });\r\n\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Fills holes in an array with zero symbol or generates one with n zeroes\r\n     * @param {Array} arr\r\n     * @param {Number} n\r\n     */\r\n    var fillHoles = function (arr, n) {\r\n        n = n || arr.length;\r\n        for(var i = 0; i < n; i++) {\r\n            var sym = arr[i];\r\n            if(!sym)\r\n                arr[i] = new Symbol(0);\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Checks to see if the object provided is a Vector\r\n     * @param {Object} obj\r\n     */\r\n    var isVector = function (obj) {\r\n        return (obj instanceof Vector);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is a Matrix\r\n     * @param {Object} obj\r\n     */\r\n    var isMatrix = function (obj) {\r\n        return (obj instanceof Matrix);\r\n    };\r\n\r\n    var isSet = function (obj) {\r\n        return (obj instanceof Set);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a symbol is in group N\r\n     * @param {Symbol} symbol\r\n     */\r\n    var isNumericSymbol = function (symbol) {\r\n        return symbol.group === N || symbol.group === P;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a symbol is a variable with no multiplier nor power\r\n     * @param {Symbol} symbol\r\n     */\r\n    var isVariableSymbol = function (symbol) {\r\n        return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is an Array\r\n     * @param {Object} arr\r\n     */\r\n    var isArray = function (arr) {\r\n        return Array.isArray(arr);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a number is an integer\r\n     * @param {Number} num\r\n     */\r\n    var isInt = function (num) {\r\n        return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\r\n    };\r\n\r\n    /**\r\n     * @param {Number|Symbol} obj\r\n     * @returns {boolean}\r\n     */\r\n    var isNegative = function (obj) {\r\n        if(isSymbol(obj)) {\r\n            obj = obj.multiplier;\r\n        }\r\n        return obj.lessThan(0);\r\n    };\r\n    /**\r\n     * Safely stringify object\r\n     * @param o\r\n     */\r\n    var stringify = function (o) {\r\n        if(!o)\r\n            return o;\r\n        return String(o);\r\n    };\r\n\r\n    /**\r\n     * @param {String} str\r\n     * @returns {String} - returns a formatted string surrounded by brackets\r\n     */\r\n    var inBrackets = function (str) {\r\n        return '(' + str + ')';\r\n    };\r\n\r\n    /**\r\n     * A helper function to replace parts of string\r\n     * @param {String} str - The original string\r\n     * @param {Integer} from - The starting index\r\n     * @param {Integer} to - The ending index\r\n     * @param {String} with_str - The replacement string\r\n     * @returns {String} - A formatted string\r\n     */\r\n    var stringReplace = function (str, from, to, with_str) {\r\n        return str.substr(0, from) + with_str + str.substr(to, str.length);\r\n    };\r\n\r\n    /**\r\n     * the Parser uses this to check if it's allowed to convert the obj to type Symbol\r\n     * @param {Object} obj\r\n     * @returns {boolean}\r\n     */\r\n    var customType = function (obj) {\r\n        return obj !== undefined && obj.custom;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if numbers are both negative or are both positive\r\n     * @param {Number} a\r\n     * @param {Number} b\r\n     * @returns {boolean}\r\n     */\r\n    var sameSign = function (a, b) {\r\n        return (a < 0) === (b < 0);\r\n    };\r\n\r\n    /**\r\n     * A helper function to replace multiple occurences in a string. Takes multiple arguments\r\n     * @example format('{0} nice, {0} sweet', 'something')\r\n     * //returns 'something nice, something sweet'\r\n     */\r\n    var format = function () {\r\n        var args = [].slice.call(arguments),\r\n                str = args.shift();\r\n        var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\r\n            var arg = args[index];\r\n            return typeof arg === 'function' ? arg() : arg;\r\n        });\r\n\r\n        return new_str;\r\n    };\r\n\r\n    /**\r\n     * Generates an array with values within a range. Multiplies by a step if provided\r\n     * @param {Number} start\r\n     * @param {Number} end\r\n     * @param {Number} step\r\n     */\r\n    var range = function (start, end, step) {\r\n        var arr = [];\r\n        step = step || 1;\r\n        for(var i = start; i <= end; i++)\r\n            arr.push(i * step);\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     * Returns an array of all the keys in an array\r\n     * @param {Object} obj\r\n     * @returns {Array}\r\n     */\r\n    var keys = Object.keys;\r\n\r\n    /**\r\n     * Returns the first encountered item in an object. Items do not have a fixed order in objects\r\n     * so only use if you need any first random or if there's only one item in the object\r\n     * @param {Object} obj\r\n     * @param {String} key Return this key as first object\r\n     * @param {Boolean} both\r\n     * @returns {*}\r\n     */\r\n    var firstObject = function (obj, key, both) {\r\n        for(var x in obj)\r\n            break;\r\n        if(key)\r\n            return x;\r\n        if(both)\r\n            return {\r\n                key: x,\r\n                obj: obj[x]\r\n            };\r\n        return obj[x];\r\n    };\r\n\r\n    /**\r\n     * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\r\n     * @param {Symbol} sym1\r\n     * @param {Symbol} sym2\r\n     * @param {String[]} vars - an optional array of variables to use\r\n     * @returns {bool}\r\n     */\r\n    var compare = function (sym1, sym2, vars) {\r\n        var n = 5; //a random number between 1 and 5 is good enough\r\n        var scope = {}; // scope object with random numbers generated using vars\r\n        var comparison;\r\n        for(var i = 0; i < vars.length; i++)\r\n            scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\r\n        block('PARSE2NUMBER', function () {\r\n            comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\r\n        });\r\n        return comparison;\r\n    };\r\n\r\n    /**\r\n     * Is used to set a user defined function using the function assign operator\r\n     * @param {String} name\r\n     * @param {String[]} params_array\r\n     * @param {String} body\r\n     * @returns {Boolean}\r\n     */\r\n    var setFunction = function (name, params_array, body) {\r\n        validateName(name);\r\n        if(!isReserved(name)) {\r\n            params_array = params_array || variables(_.parse(body));\r\n            // The function gets set to PARSER.mapped function which is just\r\n            // a generic function call.\r\n            _.functions[name] = [_.mapped_function, params_array.length, {\r\n                    name: name,\r\n                    params: params_array,\r\n                    body: body\r\n                }];\r\n\r\n            return body;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Returns the minimum number in an array\r\n     * @param {Array} arr\r\n     * @returns {Number}\r\n     */\r\n    var arrayMax = function (arr) {\r\n        return Math.max.apply(undefined, arr);\r\n    };\r\n\r\n    /**\r\n     * Returns the maximum number in an array\r\n     * @param {Array} arr\r\n     * @returns {Number}\r\n     */\r\n    var arrayMin = function (arr) {\r\n        return Math.min.apply(undefined, arr);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if two arrays are equal\r\n     * @param {Array} arr1 \r\n     * @param {Array} arr2 \r\n     */\r\n    var arrayEqual = function (arr1, arr2) {\r\n        arr1.sort();\r\n        arr2.sort();\r\n\r\n        // The must be of the same length\r\n        if(arr1.length === arr2.length) {\r\n            for(var i = 0; i < arr1.length; i++) {\r\n                // If any two items don't match we're done\r\n                if(arr1[i] !== arr2[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Otherwise they're equal\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Clones array with clonable items\r\n     * @param {Array} arr\r\n     * @returns {Array}\r\n     */\r\n    var arrayClone = function (arr) {\r\n        var new_array = [], l = arr.length;\r\n        for(var i = 0; i < l; i++)\r\n            new_array[i] = arr[i].clone();\r\n        return new_array;\r\n    };\r\n\r\n    /**\r\n     * Fills numbers between array values\r\n     * @param {Numbers[]} arr\r\n     * @param {Integer} slices\r\n     */\r\n    var arrayAddSlices = function (arr, slices) {\r\n        slices = slices || 20;\r\n        var retval = [];\r\n        var c, delta, e;\r\n        retval.push(arr[0]); //push the beginning\r\n        for(var i = 0; i < arr.length - 1; i++) {\r\n            c = arr[i];\r\n            delta = arr[i + 1] - c; //get the difference\r\n            e = delta / slices; //chop it up in the desired number of slices\r\n            for(var j = 0; j < slices; j++) {\r\n                c += e; //add the mesh to the last slice\r\n                retval.push(c);\r\n            }\r\n        }\r\n\r\n        return retval;\r\n    };\r\n\r\n    /**\r\n     * Gets nth roots of a number\r\n     * @param {Symbol} symbol\r\n     * @returns {Vector}\r\n     */\r\n    var nroots = function (symbol) {\r\n        var a, b;\r\n\r\n        if(symbol.group === FN && symbol.fname === '') {\r\n            a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\r\n            b = _.parse(symbol.power);\r\n        }\r\n        else if(symbol.group === P) {\r\n            a = _.parse(symbol.value);\r\n            b = _.parse(symbol.power);\r\n        }\r\n\r\n        if(a && b && (a.group === N) && b.group === N && a.multiplier.isNegative()) {\r\n            var _roots = [];\r\n\r\n            var parts = Symbol.toPolarFormArray(evaluate(symbol));\r\n            var r = parts[0];\r\n\r\n            //var r = _.parse(a).abs().toString();\r\n\r\n            //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\r\n            var x = _.arg(a);\r\n            var n = b.multiplier.den.toString();\r\n            var p = b.multiplier.num.toString();\r\n\r\n            var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\r\n\r\n            for(var i = 0; i < n; i++) {\r\n                var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\r\n                _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\r\n            }\r\n            return Vector.fromArray(_roots);\r\n        }\r\n        else if(symbol.isConstant(true, true)) {\r\n            var sign = symbol.sign();\r\n            var x = evaluate(symbol.abs());\r\n            var root = _.sqrt(x);\r\n\r\n            var _roots = [root.clone(), root.negate()];\r\n\r\n            if(sign < 0)\r\n                _roots = _roots.map(function (x) {\r\n                    return _.multiply(x, Symbol.imaginary());\r\n                });\r\n\r\n        }\r\n        else {\r\n            _roots = [_.parse(symbol)];\r\n        }\r\n\r\n        return Vector.fromArray(_roots);\r\n    };\r\n\r\n    /**\r\n     * Sorts and array given 2 parameters\r\n     * @param {String} a\r\n     * @param {String} b\r\n     */\r\n    var comboSort = function (a, b) {\r\n        var l = a.length,\r\n                combined = []; //the linker\r\n        for(var i = 0; i < a.length; i++) {\r\n            combined.push([a[i], b[i]]); //create the map\r\n        }\r\n\r\n        combined.sort(function (x, y) {\r\n            return x[0] - y[0];\r\n        });\r\n\r\n        var na = [], nb = [];\r\n\r\n        for(i = 0; i < l; i++) {\r\n            na.push(combined[i][0]);\r\n            nb.push(combined[i][1]);\r\n        }\r\n\r\n        return [na, nb];\r\n    };\r\n    /**\r\n     * TODO: Pick a more descriptive name and better description\r\n     * Breaks a function down into it's parts wrt to a variable, mainly coefficients\r\n     * Example a*x^2+b wrt x\r\n     * @param {Symbol} fn\r\n     * @param {String} wrt\r\n     * @param {bool} as_obj\r\n     */\r\n    var decompose_fn = function (fn, wrt, as_obj) {\r\n        wrt = String(wrt); //convert to string\r\n        var ax, a, x, b;\r\n        if(fn.group === CP) {\r\n            var t = _.expand(fn.clone()).stripVar(wrt);\r\n            ax = _.subtract(fn.clone(), t.clone());\r\n            b = t;\r\n        }\r\n        else\r\n            ax = fn.clone();\r\n        a = ax.stripVar(wrt);\r\n        x = _.divide(ax.clone(), a.clone());\r\n        b = b || new Symbol(0);\r\n        if(as_obj)\r\n            return {\r\n                a: a,\r\n                x: x,\r\n                ax: ax,\r\n                b: b\r\n            };\r\n        return [a, x, ax, b];\r\n    };\r\n    /**\r\n     * Rounds a number up to x decimal places\r\n     * @param {Number} x\r\n     * @param {Number} s\r\n     */\r\n    var nround = function (x, s) {\r\n        if(isInt(x)) {\r\n            if(x >= Number.MAX_VALUE)\r\n                return x.toString();\r\n            return Number(x);\r\n        }\r\n\r\n        s = typeof s === 'undefined' ? 14 : s;\r\n        return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\r\n    };\r\n\r\n    /**\r\n     * Is used for u-substitution. Gets a suitable u for substitution. If for\r\n     * instance a is used in the symbol then it keeps going down the line until\r\n     * one is found that's not in use. If all letters are taken then it\r\n     * starts appending numbers.\r\n     * IMPORTANT! It assumes that the substitution will be undone\r\n     * beore the user gets to interact with the object again.\r\n     * @param {Symbol} symbol\r\n     */\r\n    var getU = function (symbol) {\r\n        //start with u\r\n        var u = 'u', //start with u\r\n                v = u, //init with u\r\n                c = 0, //postfix number\r\n                vars = variables(symbol);\r\n        //make sure this variable isn't reserved and isn't in the variable list\r\n        while(!(RESERVED.indexOf(v) === - 1 && vars.indexOf(v) === - 1))\r\n            v = u + c++;\r\n        //get an empty slot. It seems easier to just push but the\r\n        //problem is that we may have some which are created by clearU\r\n        for(var i = 0, l = RESERVED.length; i <= l; i++)\r\n            //reserved cannot equals false or 0 so we can safely check for a falsy type\r\n            if(!RESERVED[i]) {\r\n                RESERVED[i] = v; //reserve the variable\r\n                break;\r\n            }\r\n        return v;\r\n    };\r\n\r\n    /**\r\n     * Clears the u variable so it's no longer reserved\r\n     * @param {String} u\r\n     */\r\n    var clearU = function (u) {\r\n        var indx = RESERVED.indexOf(u);\r\n        if(indx !== -1)\r\n            RESERVED[indx] = undefined;\r\n    };\r\n\r\n    /**\r\n     * Loops through each item in object and calls function with item as param\r\n     * @param {Object|Array} obj\r\n     * @param {Function} fn\r\n     */\r\n    var each = function (obj, fn) {\r\n        if(isArray(obj)) {\r\n            var l = obj.length;\r\n            for(var i = 0; i < l; i++)\r\n                fn.call(obj, i);\r\n        }\r\n        else {\r\n            for(var x in obj)\r\n                if(obj.hasOwnProperty(x))\r\n                    fn.call(obj, x);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a number is an even number\r\n     * @param {Number} num\r\n     * @returns {boolean}\r\n     */\r\n    var even = function (num) {\r\n        return num % 2 === 0;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a fraction is divisible by 2\r\n     * @param {Number} num\r\n     * @returns {boolean}\r\n     */\r\n    var evenFraction = function (num) {\r\n        return 1 / (num % 1) % 2 === 0;\r\n    };\r\n\r\n    /**\r\n     * Strips duplicates out of an array\r\n     * @param {Array} arr\r\n     */\r\n    var arrayUnique = function (arr) {\r\n        var l = arr.length, a = [];\r\n        for(var i = 0; i < l; i++) {\r\n            var item = arr[i];\r\n            if(a.indexOf(item) === -1)\r\n                a.push(item);\r\n        }\r\n        return a;\r\n    };\r\n\r\n    /**\r\n     * Gets all the variables in an array of Symbols\r\n     * @param {Symbol[]} arr \r\n     */\r\n    var arrayGetVariables = function (arr) {\r\n        var vars = variables(arr[0], null, null, true);\r\n\r\n        //get all variables\r\n        for(var i = 1, l = arr.length; i < l; i++)\r\n            vars = vars.concat(variables(arr[i]));\r\n        //remove duplicates\r\n        vars = arrayUnique(vars).sort();\r\n\r\n        //done\r\n        return vars;\r\n    };\r\n\r\n    /**\r\n     * Removes duplicates from an array. Returns a new array\r\n     * @param {Array} arr\r\n     * @param {Function} condition\r\n     */\r\n    var removeDuplicates = function (arr, condition) {\r\n        var conditionType = typeof condition;\r\n\r\n        if(conditionType !== 'function' || conditionType === 'undefined') {\r\n            condition = function (a, b) {\r\n                return a === b;\r\n            };\r\n        }\r\n\r\n        var seen = [];\r\n\r\n        while(arr.length) {\r\n            var a = arr[0];\r\n            //only one element left so we're done\r\n            if(arr.length === 1) {\r\n                seen.push(a);\r\n                break;\r\n            }\r\n            var temp = [];\r\n            seen.push(a); //we already scanned these\r\n            for(var i = 1; i < arr.length; i++) {\r\n                var b = arr[i];\r\n                //if the number is outside the specified tolerance\r\n                if(!condition(a, b))\r\n                    temp.push(b);\r\n            }\r\n            //start over with the remainder\r\n            arr = temp;\r\n        }\r\n\r\n        return seen;\r\n    };\r\n\r\n    /**\r\n     * Reserves the names in an object so they cannot be used as function names\r\n     * @param {Object} obj\r\n     */\r\n    var reserveNames = function (obj) {\r\n        var add = function (item) {\r\n            if(RESERVED.indexOf(item) === -1)\r\n                RESERVED.push(item);\r\n        };\r\n\r\n        if(typeof obj === 'string')\r\n            add(obj);\r\n        else {\r\n            each(obj, function (x) {\r\n                add(x);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Removes an item from either an array or an object. If the object is an array, the index must be\r\n     * specified after the array. If it's an object then the key must be specified\r\n     * @param {Object|Array} obj\r\n     * @param {Integer} indexOrKey\r\n     */\r\n    var remove = function (obj, indexOrKey) {\r\n        var result;\r\n        if(isArray(obj)) {\r\n            result = obj.splice(indexOrKey, 1)[0];\r\n        }\r\n        else {\r\n            result = obj[indexOrKey];\r\n            delete obj[indexOrKey];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a temporary block in which one of the global settings is temporarily modified while\r\n     * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\r\n     * answer for a period you would set PARSE2NUMBER to true in the block.\r\n     * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\r\n     * @param {String} setting - The setting being accessed\r\n     * @param {Function} f\r\n     * @param {boolean} opt - The value of the setting in the block\r\n     * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\r\n     */\r\n    var block = function (setting, f, opt, obj) {\r\n        var current_setting = Settings[setting];\r\n        Settings[setting] = opt === undefined ? true : !!opt;\r\n        var retval = f.call(obj);\r\n        Settings[setting] = current_setting;\r\n        return retval;\r\n    };\r\n\r\n    /**\r\n     * provide a mechanism for accessing functions directly. Not yet complete!!!\r\n     * Some functions will return undefined. This can maybe just remove the\r\n     * function object at some point when all functions are eventually\r\n     * housed in the global function object. Returns ALL parser available\r\n     * functions. Parser.functions may not contain all functions\r\n     */\r\n    var importFunctions = function () {\r\n        var o = {};\r\n        for(var x in _.functions)\r\n            o[x] = _.functions[x][0];\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\r\n     * @param {Array|object} obj\r\n     */\r\n    var arguments2Array = function (obj) {\r\n        return [].slice.call(obj);\r\n    };\r\n\r\n    /**\r\n     * Returns the coefficients of a symbol given a variable. Given ax^2+b^x+c, it divides\r\n     * each nth term by x^n.\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} wrt\r\n     */\r\n    var getCoeffs = function (symbol, wrt, info) {\r\n        var coeffs = [];\r\n        //we loop through the symbols and stick them in their respective\r\n        //containers e.g. y*x^2 goes to index 2\r\n        symbol.each(function (term) {\r\n            if(term.contains(wrt)) {\r\n                //we want only the coefficient which in this case will be everything but the variable\r\n                //e.g. a*b*x -> a*b if the variable to solve for is x\r\n                var coeff = term.stripVar(wrt),\r\n                        x = _.divide(term.clone(), coeff.clone()),\r\n                        p = x.power.toDecimal();\r\n            }\r\n            else {\r\n                coeff = term;\r\n                p = 0;\r\n            }\r\n            var e = coeffs[p];\r\n            //if it exists just add it to it\r\n            coeffs[p] = e ? _.add(e, coeff) : coeff;\r\n\r\n        }, true);\r\n\r\n        for(var i = 0; i < coeffs.length; i++)\r\n            if(!coeffs[i])\r\n                coeffs[i] = new Symbol(0);\r\n        //fill the holes\r\n        return coeffs;\r\n    };\r\n\r\n    /**\r\n     * As the name states. It forces evaluation of the expression\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} o\r\n     */\r\n    var evaluate = function (symbol, o) {\r\n        return block('PARSE2NUMBER', function () {\r\n            return _.parse(symbol, o);\r\n        }, true);\r\n    };\r\n\r\n    /**\r\n     * Converts an array to a vector. Consider moving this to Vector.fromArray\r\n     * @param {String[]|String|Symbol|Number|Number[]} x\r\n     */\r\n    var convertToVector = function (x) {\r\n        if(isArray(x)) {\r\n            var vector = new Vector([]);\r\n            for(var i = 0; i < x.length; i++)\r\n                vector.elements.push(convertToVector(x[i]));\r\n            return vector;\r\n        }\r\n        //Ensure that a nerdamer ready object is returned\r\n        if(!isSymbol(x))\r\n            return _.parse(x);\r\n        return x;\r\n    };\r\n\r\n    /**\r\n     * Generates prime numbers up to a specified number\r\n     * @param {Number} upto\r\n     */\r\n    var generatePrimes = function (upto) {\r\n        //get the last prime in the array\r\n        var last_prime = PRIMES[PRIMES.length - 1] || 2;\r\n        //no need to check if we've already encountered the number. Just check the cache.\r\n        for(var i = last_prime; i < upto; i++) {\r\n            if(isPrime(i))\r\n                PRIMES.push(i);\r\n        }\r\n    };\r\n    /**\r\n     * Checks to see if all arguments are numbers\r\n     * @param {object} args\r\n     */\r\n    var allNumbers = function (args) {\r\n        for(var i = 0; i < args.length; i++)\r\n            if(args[i].group !== N)\r\n                return false;\r\n        return true;\r\n    };\r\n    /*\r\n     * Checks if all arguments aren't just all number but if they\r\n     * are constants as well e.g. pi, e.\r\n     * @param {object} args\r\n     */\r\n    var allConstants = function (args) {\r\n        for(var i = 0; i < args.length; i++) {\r\n            if(args[i].isPi() || args[i].isE())\r\n                continue;\r\n            if(!args[i].isConstant(true))\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Used to multiply two expression in expanded form\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     */\r\n    var mix = function (a, b, opt) {\r\n        // Flip them if b is a CP or PL and a is not\r\n        if(b.isComposite() && !a.isComposite() || b.isLinear() && !a.isLinear()) {\r\n            [a, b] = [b, a];\r\n        }\r\n        // A temporary variable to hold the expanded terms\r\n        var t = new Symbol(0);\r\n        if(a.isLinear()) {\r\n            a.each(function (x) {\r\n                // If b is not a PL or a CP then simply multiply it\r\n                if(!b.isComposite()) {\r\n                    var term = _.multiply(_.parse(x), _.parse(b));\r\n                    t = _.add(t, _.expand(term, opt));\r\n                }\r\n                // Otherwise multiply out each term.\r\n                else if(b.isLinear()) {\r\n                    b.each(function (y) {\r\n                        var term = _.multiply(_.parse(x), _.parse(y));\r\n                        var expanded = _.expand(_.parse(term), opt);\r\n                        t = _.add(t, expanded);\r\n                    }, true);\r\n                }\r\n                else {\r\n                    t = _.add(t, _.multiply(x, _.parse(b)));\r\n                }\r\n            }, true);\r\n        }\r\n        else {\r\n            // Just multiply them together\r\n            t = _.multiply(a, b);\r\n        }\r\n\r\n        // The expanded function is now t\r\n        return t;\r\n    };\r\n\r\n//Exceptions ===================================================================\r\n    //Is thrown for division by zero\r\n    var DivisionByZero = customError('DivisionByZero');\r\n    // Is throw if an error occured during parsing\r\n    var ParseError = customError('ParseError');\r\n    // Is thrown if the expression results in undefined\r\n    var UndefinedError = customError('UndefinedError');\r\n    // Is throw input is out of the function domain\r\n    var OutOfFunctionDomainError = customError('OutOfFunctionDomainError');\r\n    // Is throw if a function exceeds x amount of iterations\r\n    var MaximumIterationsReached = customError('MaximumIterationsReached');\r\n    // Is thrown if the parser receives an incorrect type\r\n    var NerdamerTypeError = customError('NerdamerTypeError');\r\n    // Is thrown if bracket parity is not correct\r\n    var ParityError = customError('ParityError');\r\n    // Is thrown if an unexpectd or incorrect operator is encountered\r\n    var OperatorError = customError('OperatorError');\r\n    // Is thrown if an index is out of range.\r\n    var OutOfRangeError = customError('OutOfRangeError');\r\n    // Is thrown if dimensions are incorrect. Mostly for matrices\r\n    var DimensionError = customError('DimensionError');\r\n    // Is thrown if variable name violates naming rule\r\n    var InvalidVariableNameError = customError('InvalidVariableNameError');\r\n    // Is thrown if the limits of the library are exceeded for a function\r\n    // This can be that the function become unstable passed a value\r\n    var ValueLimitExceededError = customError('ValueLimitExceededError');\r\n    // Is throw if the value is an incorrect LH or RH value\r\n    var NerdamerValueError = customError('NerdamerValueError');\r\n    // Is thrown if the value is an incorrect LH or RH value\r\n    var SolveError = customError('SolveError');\r\n    // Is thrown for an infinite loop\r\n    var InfiniteLoopError = customError('InfiniteLoopError');\r\n    // Is thrown if an operator is found when there shouldn't be one\r\n    var UnexpectedTokenError = customError('UnexpectedTokenError');\r\n\r\n    var exceptions = {\r\n        DivisionByZero: DivisionByZero,\r\n        ParseError: ParseError,\r\n        OutOfFunctionDomainError: OutOfFunctionDomainError,\r\n        UndefinedError: UndefinedError,\r\n        MaximumIterationsReached: MaximumIterationsReached,\r\n        NerdamerTypeError: NerdamerTypeError,\r\n        ParityError: ParityError,\r\n        OperatorError: OperatorError,\r\n        OutOfRangeError: OutOfRangeError,\r\n        DimensionError: DimensionError,\r\n        InvalidVariableNameError: InvalidVariableNameError,\r\n        ValueLimitExceededError: ValueLimitExceededError,\r\n        NerdamerValueError: NerdamerValueError,\r\n        SolveError: SolveError,\r\n        InfiniteLoopError: InfiniteLoopError,\r\n        UnexpectedTokenError: UnexpectedTokenError\r\n    };\r\n//Math2 ========================================================================\r\n    //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\r\n    //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the\r\n    //functions within are pretty self-explanatory.\r\n    //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\r\n    var Math2 = {\r\n        csc: function (x) {\r\n            return 1 / Math.sin(x);\r\n        },\r\n        sec: function (x) {\r\n            return 1 / Math.cos(x);\r\n        },\r\n        cot: function (x) {\r\n            return 1 / Math.tan(x);\r\n        },\r\n        acsc: function (x) {\r\n            return Math.asin(1 / x);\r\n        },\r\n        asec: function (x) {\r\n            return Math.acos(1 / x);\r\n        },\r\n        acot: function (x) {\r\n            return (Math.PI / 2) - Math.atan(x);\r\n        },\r\n        // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\r\n        erf: function (x) {\r\n            var t = 1 / (1 + 0.5 * Math.abs(x));\r\n            var result = 1 - t * Math.exp(-x * x - 1.26551223 +\r\n                    t * (1.00002368 +\r\n                            t * (0.37409196 +\r\n                                    t * (0.09678418 +\r\n                                            t * (-0.18628806 +\r\n                                                    t * (0.27886807 +\r\n                                                            t * (-1.13520398 +\r\n                                                                    t * (1.48851587 +\r\n                                                                            t * (-0.82215223 +\r\n                                                                                    t * (0.17087277)))))))))\r\n                    );\r\n            return x >= 0 ? result : -result;\r\n        },\r\n        diff: function (f) {\r\n            var h = 0.001;\r\n\r\n            var derivative = function (x) {\r\n                return (f(x + h) - f(x - h)) / (2 * h);\r\n            };\r\n\r\n            return derivative;\r\n        },\r\n        median: function (...values) {\r\n            values.sort(function (a, b) {\r\n                return a - b;\r\n            });\r\n\r\n            var half = Math.floor(values.length / 2);\r\n\r\n            if(values.length % 2)\r\n                return values[half];\r\n\r\n            return (values[half - 1] + values[half]) / 2.0;\r\n        },\r\n        /*\r\n         * Reverses continued fraction calculation\r\n         * @param {obj} contd\r\n         * @returns {Number}\r\n         */\r\n        fromContinued: function (contd) {\r\n            var arr = contd.fractions.slice();\r\n            var e = 1 / arr.pop();\r\n            for(var i = 0, l = arr.length; i < l; i++) {\r\n                e = 1 / (arr.pop() + e);\r\n            }\r\n            return contd.sign * (contd.whole + e);\r\n        },\r\n        /*\r\n         * Calculates continued fractions\r\n         * @param {Number} n\r\n         * @param {Number} x The number of places\r\n         * @returns {Number}\r\n         */\r\n        continuedFraction: function (n, x) {\r\n            x = x || 20;\r\n            var sign = Math.sign(n); /*store the sign*/\r\n            var absn = Math.abs(n); /*get the absolute value of the number*/\r\n            var whole = Math.floor(absn); /*get the whole*/\r\n            var ni = absn - whole; /*subtract the whole*/\r\n            var c = 0; /*the counter to keep track of iterations*/\r\n            var done = false;\r\n            var epsilon = 1e-14;\r\n            var max = 1e7;\r\n            var e, w;\r\n            var retval = {\r\n                whole: whole,\r\n                sign: sign,\r\n                fractions: []\r\n            };\r\n            /*start calculating*/\r\n            while(!done && ni !== 0) {\r\n                /*invert and get the whole*/\r\n                e = 1 / ni;\r\n                w = Math.floor(e);\r\n                if(w > max) {\r\n                    /*this signals that we may have already gone too far*/\r\n                    var d = Math2.fromContinued(retval) - n;\r\n                    if(d <= Number.EPSILON)\r\n                        break;\r\n                }\r\n                /*add to result*/\r\n                retval.fractions.push(w);\r\n                /*move the ni to the decimal*/\r\n                ni = e - w;\r\n                /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\r\n                if(ni <= epsilon || c >= x - 1)\r\n                    done = true;\r\n                c++;\r\n            }\r\n            /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\r\n            var idx = retval.fractions.length - 1;\r\n            if(retval.fractions[idx] === 1) {\r\n                retval.fractions.pop();\r\n                /*increase the last one by one*/\r\n                retval.fractions[--idx]++;\r\n            }\r\n            return retval;\r\n        },\r\n        bigpow: function (n, p) {\r\n            if(!(n instanceof Frac))\r\n                n = Frac.create(n);\r\n            if(!(p instanceof Frac))\r\n                p = Frac.create(p);\r\n            var retval = new Frac(0);\r\n            if(p.isInteger()) {\r\n                retval.num = n.num.pow(p.toString());\r\n                retval.den = n.den.pow(p.toString());\r\n            }\r\n            else {\r\n                var num = Frac.create(Math.pow(n.num, p.num));\r\n                var den = Frac.create(Math.pow(n.den, p.num));\r\n\r\n                retval.num = Math2.nthroot(num, p.den.toString());\r\n                retval.den = Math2.nthroot(den, p.den);\r\n            }\r\n            return retval;\r\n        },\r\n        //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\r\n        gamma: function (z) {\r\n            var g = 7;\r\n            var C = [\r\n                0.99999999999980993,\r\n                676.5203681218851,\r\n                -1259.1392167224028,\r\n                771.32342877765313,\r\n                -176.61502916214059,\r\n                12.507343278686905,\r\n                -0.13857109526572012,\r\n                9.9843695780195716e-6,\r\n                1.5056327351493116e-7]\r\n                    ;\r\n\r\n            if(z < 0.5)\r\n                return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));\r\n            else {\r\n                z -= 1;\r\n\r\n                var x = C[0];\r\n                for(var i = 1; i < g + 2; i++)\r\n                    x += C[i] / (z + i);\r\n\r\n                var t = z + g + 0.5;\r\n                return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;\r\n            }\r\n        },\r\n        //factorial\r\n        bigfactorial: function (x) {\r\n            var retval = new bigInt(1);\r\n            for(var i = 2; i <= x; i++)\r\n                retval = retval.times(i);\r\n            return new Frac(retval);\r\n        },\r\n        //https://en.wikipedia.org/wiki/Logarithm#Calculation\r\n        bigLog: function (x) {\r\n            varr\n            if(CACHE[x]) {\r\n                return Frac.quick.apply(null, CACHE[x].split('/'));\r\n            }\r\n            x = new Frac(x);\r\n            var n = 80;\r\n            var retval = new Frac(0);\r\n            var a = x.subtract(new Frac(1));\r\n            var b = x.add(new Frac(1));\r\n            for(var i = 0; i < n; i++) {\r\n                var t = new Frac(2 * i + 1);\r\n                var k = Math2.bigpow(a.divide(b), t);\r\n                var r = t.clone().invert().multiply(k);\r\n                retval = retval.add(r);\r\n\r\n            }\r\n            return retval.multiply(new Frac(2));\r\n        },\r\n        //the factorial function but using the big library instead\r\n        factorial: function (x) {\r\n            var is_int = x % 1 === 0;\r\n\r\n            /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\r\n            if(is_int && x < 0)\r\n                return NaN;\r\n\r\n            if(!is_int)\r\n                return Math2.gamma(x + 1);\r\n\r\n            var retval = 1;\r\n            for(var i = 2; i <= x; i++)\r\n                retval = retval * i;\r\n            return retval;\r\n        },\r\n        //double factorial\r\n        //http://mathworld.wolfram.com/DoubleFactorial.html\r\n        dfactorial: function (x) {\r\n            if(isInt(x)) {\r\n                var even = x % 2 === 0;\r\n                /* If x = even then n = x/2 else n = (x-1)/2*/\r\n                var n = even ? x / 2 : (x + 1) / 2;\r\n                /*the return value*/\r\n                var r = new Frac(1);\r\n                /*start the loop*/\r\n                if(even)\r\n                    for(var i = 1; i <= n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)));\r\n                else\r\n                    for(var i = 1; i <= n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\r\n            }\r\n            else {\r\n                /*Not yet extended to bigNum*/\r\n                r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\r\n            }\r\n\r\n            /*done*/\r\n            return r;\r\n        },\r\n        GCD: function () {\r\n            var args = arrayUnique([].slice.call(arguments)\r\n                    .map(function (x) {\r\n                        return Math.abs(x);\r\n                    })).sort(),\r\n                    a = Math.abs(args.shift()),\r\n                    n = args.length;\r\n\r\n            while(n-- > 0) {\r\n                var b = Math.abs(args.shift());\r\n                while(true) {\r\n                    a %= b;\r\n                    if(a === 0) {\r\n                        a = b;\r\n                        break;\r\n                    }\r\n                    b %= a;\r\n                    if(b === 0)\r\n                        break;\r\n                    ;\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        QGCD: function () {\r\n            var args = [].slice.call(arguments);\r\n            var a = args[0];\r\n            for(var i = 1; i < args.length; i++) {\r\n                var b = args[i];\r\n                var sign = a.isNegative() && b.isNegative() ? -1 : 1;\r\n                a = b.gcd(a);\r\n                if(sign < 0)\r\n                    a.negate();\r\n            }\r\n            return a;\r\n        },\r\n        LCM: function (a, b) {\r\n            return (a * b) / Math2.GCD(a, b);\r\n        },\r\n        //pow but with the handling of negative numbers\r\n        //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\r\n        pow: function (b, e) {\r\n            if(b < 0) {\r\n                if(Math.abs(e) < 1) {\r\n                    /*nth root of a negative number is imaginary when n is even*/\r\n                    if(1 / e % 2 === 0)\r\n                        return NaN;\r\n                    return -Math.pow(Math.abs(b), e);\r\n                }\r\n            }\r\n            return Math.pow(b, e);\r\n        },\r\n        factor: function (n) {\r\n            n = Number(n);\r\n            var sign = Math.sign(n); /*store the sign*/\r\n            /*move the number to absolute value*/\r\n            n = Math.abs(n);\r\n            var ifactors = Math2.ifactor(n);\r\n            var factors = new Symbol();\r\n            factors.symbols = {};\r\n            factors.group = CB;\r\n            for(var x in ifactors) {\r\n                var factor = new Symbol(1);\r\n                factor.group = P; /*cheat a little*/\r\n                factor.value = x;\r\n                factor.power = new Symbol(ifactors[x]);\r\n                factors.symbols[x] = factor;\r\n            }\r\n            factors.updateHash();\r\n\r\n            if(n === 1) {\r\n                factors = new Symbol(n);\r\n            }\r\n\r\n            /*put back the sign*/\r\n            if(sign < 0)\r\n                factors.negate();\r\n\r\n            return factors;\r\n        },\r\n        /**\r\n         * Uses trial division\r\n         * @param {Integer} n - the number being factored\r\n         * @param {object} factors -  the factors object\r\n         * @returns {object}\r\n         */\r\n        sfactor: function (n, factors) {\r\n            factors = factors || {};\r\n            var r = Math.floor(Math.sqrt(n));\r\n            var lcprime = PRIMES[PRIMES.length - 1];\r\n            /*a one-time cost... Hopefully ... And don't bother for more than a million*/\r\n            /*takes too long*/\r\n            if(r > lcprime && n < 1e6)\r\n                generatePrimes(r);\r\n            var l = PRIMES.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var prime = PRIMES[i];\r\n                /*trial division*/\r\n                while(n % prime === 0) {\r\n                    n = n / prime;\r\n                    factors[prime] = (factors[prime] || 0) + 1;\r\n                }\r\n            }\r\n            if(n > 1)\r\n                factors[n] = 1;\r\n            return factors;\r\n        },\r\n        /**\r\n         * Pollard's rho\r\n         * @param {Integer} n\r\n         * @returns {object}\r\n         */\r\n        ifactor: function (n) {\r\n            var input = new bigInt(n);\r\n\r\n            n = String(n);\r\n\r\n            if(n === '0')\r\n                return {'0': 1};\r\n            n = new bigInt(n); /*convert to bigInt for safety*/\r\n            var sign = n.sign ? -1 : 1;\r\n            n = n.abs();\r\n            var factors = {}; /*factor object being returned.*/\r\n            if(n.lt('65536')) { /*less than 2^16 just use trial division*/\r\n                factors = Math2.sfactor(n, factors);\r\n            }\r\n            else {\r\n                var add = function (e) {\r\n                    if(!e.isPrime()) {\r\n                        factors = Math2.sfactor(e, factors);\r\n                    }\r\n                    else\r\n                        factors[e] = (factors[e] || 0) + 1;\r\n                };\r\n\r\n                try {\r\n                    //set a safety\r\n                    var max = 1e3;\r\n                    var safety = 0;\r\n\r\n                    while(!n.abs().equals(1)) {\r\n                        if(n.isPrime()) {\r\n                            add(n);\r\n                            break;\r\n                        }\r\n                        else {\r\n                            function rho(c) {\r\n                                var xf = new bigInt(c),\r\n                                        cz = 2,\r\n                                        x = new bigInt(c),\r\n                                        factor = new bigInt(1);\r\n\r\n                                while(factor.equals(1)) {\r\n                                    for(var i = 0; i <= cz && factor.equals(1); i++) {\r\n                                        //trigger the safety\r\n                                        if(safety++ > max)\r\n                                            throw new Error('stopping');\r\n\r\n                                        x = x.pow(2).add(1).mod(n);\r\n                                        factor = bigInt.gcd(x.minus(xf).abs(), n);\r\n                                    }\r\n\r\n                                    cz = cz * 2;\r\n                                    xf = x;\r\n                                }\r\n                                if(factor.equals(n)) {\r\n                                    return rho(c + 1);\r\n                                }\r\n                                return factor;\r\n                            }\r\n                            var factor = rho(2);\r\n                            add(factor);\r\n                            /*divide out the factor*/\r\n                            n = n.divide(factor);\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    //reset factors\r\n                    factors = {};\r\n                    add(input);\r\n                }\r\n\r\n            }\r\n\r\n            /*put the sign back*/\r\n            if(sign === -1) {\r\n                var sm = arrayMin(keys(factors)); /*/get the smallest number*/\r\n                factors['-' + sm] = factors[sm];\r\n                delete factors[sm];\r\n            }\r\n\r\n            return factors;\r\n        },\r\n        //factors a number into rectangular box. If sides are primes that this will be\r\n        //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\r\n        boxfactor: function (n, max) {\r\n            max = max || 200; //stop after this number of iterations\r\n            var c, r,\r\n                    d = Math.floor((5 / 12) * n), //the divisor\r\n                    i = 0, //number of iterations\r\n                    safety = false;\r\n            while(true) {\r\n                c = Math.floor(n / d);\r\n                r = n % d;\r\n                if(r === 0)\r\n                    break; //we're done\r\n                if(safety)\r\n                    return [n, 1];\r\n                d = Math.max(r, d - r);\r\n                i++;\r\n                safety = i > max;\r\n            }\r\n            return [c, d, i];\r\n        },\r\n        fib: function (n) {\r\n            var sign = Math.sign(n);\r\n            n = Math.abs(n);\r\n            sign = even(n) ? sign : Math.abs(sign);\r\n            var a = 0, b = 1, f = 1;\r\n            for(var i = 2; i <= n; i++) {\r\n                f = a + b;\r\n                a = b;\r\n                b = f;\r\n            }\r\n            return f * sign;\r\n        },\r\n        mod: function (x, y) {\r\n            return x % y;\r\n        },\r\n        //http://mathworld.wolfram.com/IntegerPart.html\r\n        integer_part: function (x) {\r\n            var sign = Math.sign(x);\r\n            return sign * Math.floor(Math.abs(x));\r\n        },\r\n        simpson: function (f, a, b, step) {\r\n            var get_value = function (f, x, side) {\r\n                var v = f(x);\r\n                var d = 0.000000000001;\r\n                if(isNaN(v)) {\r\n                    v = f(side === 1 ? x + d : x - d);\r\n                }\r\n                return v;\r\n            };\r\n\r\n            step = step || 0.0001;\r\n            //calculate the number of intervals\r\n            var n = Math.abs(Math.floor((b - a) / step));\r\n            //simpson's rule requires an even number of intervals. If it's not then add 1\r\n            if(n % 2 !== 0)\r\n                n++;\r\n            //get the interval size\r\n            var dx = (b - a) / n;\r\n            //get x0\r\n            var retval = get_value(f, a, 1);\r\n\r\n            //get the middle part 4x1+2x2+4x3 ...\r\n            //but first set a flag to see if it's even or odd.\r\n            //The first one is odd so we start there\r\n            var even = false;\r\n            //get x1\r\n            var xi = a + dx;\r\n            //the coefficient\r\n            var c, k;\r\n            //https://en.wikipedia.org/wiki/Simpson%27s_rule\r\n            for(var i = 1; i < n; i++) {\r\n                c = even ? 2 : 4;\r\n                k = c * get_value(f, xi, 1);\r\n                retval += k;\r\n                //flip the even flag\r\n                even = !even;\r\n                //increment xi\r\n                xi += dx;\r\n            }\r\n\r\n            //add xn\r\n            return (retval + get_value(f, xi, 2)) * (dx / 3);\r\n\r\n        },\r\n        /**\r\n         * https://github.com/scijs/integrate-adaptive-simpson\r\n         * @param {Function} f - the function being integrated\r\n         * @param {Number} a - lower bound\r\n         * @param {Number} b - upper bound\r\n         * @param {Number} tol - step width\r\n         * @param {Number} maxdepth\r\n         * @returns {Number}\r\n         */\r\n        num_integrate: function (f, a, b, tol, maxdepth) {\r\n            if(maxdepth < 0)\r\n                throw new Error('max depth cannot be negative');\r\n\r\n            /* This algorithm adapted from pseudocode in:*/\r\n            /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\r\n            function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\r\n                if(state.nanEncountered) {\r\n                    return NaN;\r\n                }\r\n                var h, f1, f2, sl, sr, s2, m, V1, V2, err;\r\n                h = b - a;\r\n                f1 = f(a + h * 0.25);\r\n                f2 = f(b - h * 0.25);\r\n                /* Simple check for NaN:*/\r\n                if(isNaN(f1)) {\r\n                    state.nanEncountered = true;\r\n                    return;\r\n                }\r\n                /* Simple check for NaN:*/\r\n                if(isNaN(f2)) {\r\n                    state.nanEncountered = true;\r\n                    return;\r\n                }\r\n\r\n                sl = h * (fa + 4 * f1 + fm) / 12;\r\n                sr = h * (fm + 4 * f2 + fb) / 12;\r\n                s2 = sl + sr;\r\n                err = (s2 - V0) / 15;\r\n\r\n                if(state.maxDepthCount > 1000 * maxdepth) {\r\n                    return;\r\n                }\r\n\r\n\r\n                if(depth > maxdepth) {\r\n                    state.maxDepthCount++;\r\n                    return s2 + err;\r\n                }\r\n                else if(Math.abs(err) < tol) {\r\n                    return s2 + err;\r\n                }\r\n                else {\r\n                    m = a + h * 0.5;\r\n                    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\r\n                    if(isNaN(V1)) {\r\n                        state.nanEncountered = true;\r\n                        return NaN;\r\n                    }\r\n                    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\r\n\r\n                    if(isNaN(V2)) {\r\n                        state.nanEncountered = true;\r\n                        return NaN;\r\n                    }\r\n\r\n                    return V1 + V2;\r\n                }\r\n            }\r\n\r\n            function integrate(f, a, b, tol, maxdepth) {\r\n                var state = {\r\n                    maxDepthCount: 0,\r\n                    nanEncountered: false\r\n                };\r\n\r\n                if(tol === undefined) {\r\n                    tol = 1e-9;\r\n                }\r\n                if(maxdepth === undefined) {\r\n                    /*Issue #458 - This was lowered because of performance issues. */\r\n                    /*This was suspected from before but is now confirmed with this issue*/\r\n                    maxdepth = 45;\r\n                }\r\n\r\n                var fa = f(a);\r\n                var fm = f(0.5 * (a + b));\r\n                var fb = f(b);\r\n\r\n                var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\r\n\r\n                var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\r\n\r\n                if(state.maxDepthCount > 0) {\r\n                    warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\r\n                }\r\n\r\n                if(state.nanEncountered) {\r\n                    throw new Error('Function does not converge over interval!');\r\n                }\r\n\r\n                return result;\r\n            }\r\n            var retval;\r\n\r\n            try {\r\n                retval = integrate(f, a, b, tol, maxdepth);\r\n            }\r\n            catch(e) {\r\n                /*fallback to non-adaptive*/\r\n                return Math2.simpson(f, a, b);\r\n            }\r\n            return nround(retval, 12);\r\n        },\r\n        //https://en.wikipedia.org/wiki/Trigonometric_integral\r\n        //CosineIntegral\r\n        Ci: function (x) {\r\n            var n = 20,\r\n                    /*roughly Euler–Mascheroni*/\r\n                    g = 0.5772156649015329,\r\n                    sum = 0;\r\n            for(var i = 1; i < n; i++) {\r\n                /*cache 2n*/\r\n                var n2 = 2 * i;\r\n                sum += (Math.pow(-1, i) * Math.pow(x, n2)) / (n2 * Math2.factorial(n2));\r\n            }\r\n            return Math.log(x) + g + sum;\r\n        },\r\n        /*SineIntegral*/\r\n        Si: function (x) {\r\n            var n = 20,\r\n                    sum = 0;\r\n            for(var i = 0; i < n; i++) {\r\n                var n2 = 2 * i;\r\n                sum += (Math.pow(-1, i) * Math.pow(x, n2 + 1)) / ((n2 + 1) * Math2.factorial(n2 + 1));\r\n            }\r\n            return sum;\r\n        },\r\n        /*ExponentialIntegral*/\r\n        Ei: function (x) {\r\n            if(Number(x) === 0)\r\n                return -Infinity;\r\n            var n = 30,\r\n                    g = 0.5772156649015328606, /*roughly Euler–Mascheroni*/\r\n                    sum = 0;\r\n            for(var i = 1; i < n; i++) {\r\n                sum += Math.pow(x, i) / (i * Math2.factorial(i));\r\n            }\r\n            return g + Math.abs(Math.log(x)) + sum;\r\n        },\r\n        /*Hyperbolic Sine Integral*/\r\n        /*http://mathworld.wolfram.com/Shi.html*/\r\n        Shi: function (x) {\r\n            var n = 30,\r\n                    sum = 0,\r\n                    k, t;\r\n            for(var i = 0; i < n; i++) {\r\n                k = 2 * i;\r\n                t = k + 1;\r\n                sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\r\n            }\r\n            return sum;\r\n        },\r\n        /*the cosine integral function*/\r\n        Chi: function (x) {\r\n            var dx, g, f;\r\n            dx = 0.001;\r\n            g = 0.5772156649015328606;\r\n            f = function (t) {\r\n                return (Math.cosh(t) - 1) / t;\r\n            };\r\n            return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\r\n        },\r\n        /*the log integral*/\r\n        Li: function (x) {\r\n            return Math2.Ei(Math2.bigLog(x));\r\n        },\r\n        /*the gamma incomplete function*/\r\n        gamma_incomplete: function (n, x) {\r\n            var t = n - 1,\r\n                    sum = 0,\r\n                    x = x || 0;\r\n            for(var i = 0; i < t; i++) {\r\n                sum += Math.pow(x, i) / Math2.factorial(i);\r\n            }\r\n            return Math2.factorial(t) * Math.exp(-x) * sum;\r\n        },\r\n        /*\r\n         * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\r\n         * if x > 0 then 1\r\n         * if x == 0 then 1/2\r\n         * if x < 0 then 0\r\n         */\r\n        step: function (x) {\r\n            if(x > 0)\r\n                return 1;\r\n            if(x < 0)\r\n                return 0;\r\n            return 0.5;\r\n        },\r\n        /*\r\n         * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/RectangleFunction.html\r\n         * if |x| > 1/2 then 0\r\n         * if |x| == 1/2 then 1/2\r\n         * if |x| < 1/2 then 1\r\n         */\r\n        rect: function (x) {\r\n            var x = Math.abs(x);\r\n            if(x === 0.5)\r\n                return x;\r\n            if(x > 0.5)\r\n                return 0;\r\n            return 1;\r\n        },\r\n        /*\r\n         * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/SincFunction.html\r\n         * if x == 0 then 1\r\n         * otherwise sin(x)/x\r\n         */\r\n        sinc: function (x) {\r\n            if(x.equals(0))\r\n                return 1;\r\n            return Math.sin(x) / x;\r\n        },\r\n        /*\r\n         * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/TriangleFunction.html\r\n         * if |x| >= 1 then 0\r\n         * if |x| < then 1-|x|\r\n         */\r\n        tri: function (x) {\r\n            x = Math.abs(x);\r\n            if(x >= 1)\r\n                return 0;\r\n            return 1 - x;\r\n        },\r\n        //https://en.wikipedia.org/wiki/Nth_root_algorithm\r\n        nthroot: function (A, n) {\r\n            /*make sure the input is of type Frac*/\r\n            if(!(A instanceof Frac))\r\n                A = new Frac(A.toString());\r\n            if(!(n instanceof Frac))\r\n                n = new Frac(n.toString());\r\n            if(n.equals(1))\r\n                return A;\r\n            /*begin algorithm*/\r\n            var xk = A.divide(new Frac(2)); /*x0*/\r\n            var e = new Frac(1e-15);\r\n            var dk, dk0, d0;\r\n            var a = n.clone().invert(),\r\n                    b = n.subtract(new Frac(1));\r\n            do {\r\n                var powb = Math2.bigpow(xk, b);\r\n                var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\r\n                dk = Frac.create(dk_dec);\r\n                if(d0)\r\n                    break;\r\n\r\n                xk = xk.add(dk);\r\n                /*check to see if there's no change from the last xk*/\r\n                var dk_dec = dk.toDecimal();\r\n                d0 = dk0 ? dk0 === dk_dec : false;\r\n                dk0 = dk_dec;\r\n            }\r\n            while(dk.abs().gte(e))\r\n\r\n            return xk;\r\n        },\r\n        /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\r\n        /*Just the square root function but big :)*/\r\n        sqrt: function (n) {\r\n            if(!(n instanceof Frac))\r\n                n = new Frac(n);\r\n            var xn, d, ld, same_delta;\r\n            var c = 0; /*counter*/\r\n            var done = false;\r\n            var delta = new Frac(1e-20);\r\n            xn = n.divide(new Frac(2));\r\n            var safety = 1000;\r\n            do {\r\n                /*break if we're not converging*/\r\n                if(c > safety)\r\n                    throw new Error('Unable to calculate square root for ' + n);\r\n                xn = xn.add(n.divide(xn)).divide(new Frac(2));\r\n                xn = new Frac(xn.decimal(30));\r\n                /*get the difference from the true square*/\r\n                d = n.subtract(xn.multiply(xn));\r\n                /*if the square of the calculated number is close enough to the number*/\r\n                /*we're getting the square root or the last delta was the same as the new delta*/\r\n                /*then we're done*/\r\n                same_delta = ld ? ld.equals(d) : false;\r\n                if(d.clone().abs().lessThan(delta) || same_delta)\r\n                    done = true;\r\n                /*store the calculated delta*/\r\n                ld = d;\r\n                c++; /*increase the counter*/\r\n            }\r\n            while(!done)\r\n\r\n            return xn;\r\n        }\r\n    };\r\n    //link the Math2 object to Settings.FUNCTION_MODULES\r\n    Settings.FUNCTION_MODULES.push(Math2);\r\n    reserveNames(Math2); //reserve the names in Math2\r\n\r\n\r\n//Polyfills ====================================================================\r\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\r\n    Math.sign = Math.sign || function (x) {\r\n        x = +x; // convert to a number\r\n        if(x === 0 || isNaN(x)) {\r\n            return x;\r\n        }\r\n        return x > 0 ? 1 : -1;\r\n    };\r\n\r\n    Math.cosh = Math.cosh || function (x) {\r\n        var y = Math.exp(x);\r\n        return (y + 1 / y) / 2;\r\n    };\r\n\r\n    Math.sech = Math.sech || function (x) {\r\n        return 1 / Math.cosh(x);\r\n    };\r\n\r\n    Math.csch = Math.csch || function (x) {\r\n        return 1 / Math.sinh(x);\r\n    };\r\n\r\n    Math.coth = Math.coth || function (x) {\r\n        return 1 / Math.tanh(x);\r\n    };\r\n\r\n    Math.sinh = Math.sinh || function (x) {\r\n        var y = Math.exp(x);\r\n        return (y - 1 / y) / 2;\r\n    };\r\n\r\n    Math.tanh = Math.tanh || function (x) {\r\n        if(x === Infinity) {\r\n            return 1;\r\n        }\r\n        else if(x === -Infinity) {\r\n            return -1;\r\n        }\r\n        else {\r\n            var y = Math.exp(2 * x);\r\n            return (y - 1) / (y + 1);\r\n        }\r\n    };\r\n\r\n    Math.asinh = Math.asinh || function (x) {\r\n        if(x === -Infinity) {\r\n            return x;\r\n        }\r\n        else {\r\n            return Math.log(x + Math.sqrt(x * x + 1));\r\n        }\r\n    };\r\n\r\n    Math.acosh = Math.acosh || function (x) {\r\n        return Math.log(x + Math.sqrt(x * x - 1));\r\n    };\r\n\r\n    Math.atanh = Math.atanh || function (x) {\r\n        return Math.log((1 + x) / (1 - x)) / 2;\r\n    };\r\n\r\n    Math.log10 = Math.log10 || function (x) {\r\n        return Math.log(x) * Math.LOG10E;\r\n    };\r\n\r\n    Math.trunc = Math.trunc || function (x) {\r\n        if(isNaN(x)) {\r\n            return NaN;\r\n        }\r\n        if(x > 0) {\r\n            return Math.floor(x);\r\n        }\r\n        return Math.ceil(x);\r\n    };\r\n\r\n//Global functions =============================================================\r\n    /**\r\n     * This method will return a hash or a text representation of a Symbol, Matrix, or Vector.\r\n     * If all else fails it *assumes* the object has a toString method and will call that.\r\n     *\r\n     * @param {Object} obj\r\n     * @param {String} option get is as a hash\r\n     * @param {int} useGroup\r\n     * @returns {String}\r\n     */\r\n    function text(obj, option, useGroup, decp) {\r\n        var asHash = option === 'hash',\r\n                //whether to wrap numbers in brackets\r\n                wrapCondition = undefined,\r\n                opt = asHash ? undefined : option,\r\n                asDecimal = opt === 'decimal' || opt === 'decimals';\r\n\r\n        if(asDecimal && typeof decp === 'undefined')\r\n            decp = 16;\r\n\r\n        function toString(obj) {\r\n            switch(option)\r\n            {\r\n                case 'decimals':\r\n                case 'decimal':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return false;\r\n                    };\r\n                    return obj.valueOf();\r\n                case 'recurring':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf(\"'\") !== -1;\r\n                    };\r\n\r\n                    var str = obj.toString();\r\n                    //verify that the string is actually a fraction\r\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\r\n                    if(frac.length === 0)\r\n                        return str;\r\n\r\n                    //split the fraction into the numerator and denominator\r\n                    var parts = frac[0].split('/');\r\n                    var negative = false;\r\n                    var m = Number(parts[0]);\r\n                    if(m < 0) {\r\n                        m = -m;\r\n                        negative = true;\r\n                    }\r\n                    var n = Number(parts[1]);\r\n                    if(!n)\r\n                        n = 1;\r\n\r\n                    //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\r\n                    var quotient = Math.floor(m / n), c = 10 * (m - quotient * n);\r\n                    quotient = quotient.toString() + \".\";\r\n                    while(c && c < n) {\r\n                        c *= 10;\r\n                        quotient += \"0\";\r\n                    }\r\n                    var digits = \"\", passed = [], i = 0;\r\n                    while(true) {\r\n                        if(typeof passed[c] !== 'undefined') {\r\n                            var prefix = digits.slice(0, passed[c]),\r\n                                    cycle = digits.slice(passed[c]),\r\n                                    result = quotient + prefix + \"'\" + cycle + \"'\";\r\n                            return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\r\n                        }\r\n                        var q = Math.floor(c / n), r = c - q * n;\r\n                        passed[c] = i;\r\n                        digits += q.toString();\r\n                        i += 1;\r\n                        c = 10 * r;\r\n                    }\r\n                case 'mixed':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf('/') !== -1;\r\n                    };\r\n\r\n                    var str = obj.toString();\r\n                    //verify that the string is actually a fraction\r\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\r\n                    if(frac.length === 0)\r\n                        return str;\r\n\r\n                    //split the fraction into the numerator and denominator\r\n                    var parts = frac[0].split('/');\r\n                    var numer = new bigInt(parts[0]);\r\n                    var denom = new bigInt(parts[1]);\r\n                    if(denom.equals(0))\r\n                        denom = new bigInt(1);\r\n\r\n                    //return the quotient plus the remainder\r\n                    var divmod = numer.divmod(denom);\r\n                    var quotient = divmod.quotient;\r\n                    var remainder = divmod.remainder;\r\n                    var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\r\n                    return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : (remainder.toString() + '/' + parts[1]));\r\n                case 'scientific':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return false;\r\n                    }\r\n                    return new Scientific(obj.valueOf()).toString(Settings.SCIENTIFIC_MAX_DECIMAL_PLACES);\r\n                default:\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf('/') !== -1;\r\n                    };\r\n\r\n                    return obj.toString();\r\n            }\r\n        }\r\n\r\n        //if the object is a symbol\r\n        if(isSymbol(obj)) {\r\n            var multiplier = '',\r\n                    power = '',\r\n                    sign = '',\r\n                    group = obj.group || useGroup,\r\n                    value = obj.value;\r\n\r\n            //if the value is to be used as a hash then the power and multiplier need to be suppressed\r\n            if(!asHash) {\r\n                //use asDecimal to get the object back as a decimal\r\n                var om = toString(obj.multiplier);\r\n                if(om == '-1' && String(obj.multiplier) === '-1') {\r\n                    sign = '-';\r\n                    om = '1';\r\n                }\r\n                //only add the multiplier if it's not 1\r\n                if(om != '1')\r\n                    multiplier = om;\r\n                //use asDecimal to get the object back as a decimal\r\n                var p = obj.power ? toString(obj.power) : '';\r\n                //only add the multiplier\r\n                if(p != '1') {\r\n                    //is it a symbol\r\n                    if(isSymbol(p)) {\r\n                        power = text(p, opt);\r\n                    }\r\n                    else {\r\n                        power = p;\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch(group) {\r\n                case N:\r\n                    multiplier = '';\r\n                    //round if requested\r\n                    var m = decp && asDecimal ? obj.multiplier.toDecimal(decp) : toString(obj.multiplier);\r\n                    //if it's numerical then all we need is the multiplier\r\n                    value = String(obj.multiplier) == '-1' ? '1' : m;\r\n                    power = '';\r\n                    break;\r\n                case PL:\r\n                    value = obj.collectSymbols().map(function (x) {\r\n                        var txt = text(x, opt, useGroup, decp);\r\n                        if(txt == '0')\r\n                            txt = '';\r\n                        return txt;\r\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CP:\r\n                    value = obj.collectSymbols().map(function (x) {\r\n                        var txt = text(x, opt, useGroup, decp);\r\n                        if(txt == '0')\r\n                            txt = '';\r\n                        return txt;\r\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CB:\r\n                    value = obj.collectSymbols(function (symbol) {\r\n                        var g = symbol.group;\r\n                        //both groups will already be in brackets if their power is greater than 1\r\n                        //so skip it.\r\n                        if((g === PL || g === CP) && (symbol.power.equals(1) && symbol.multiplier.equals(1))) {\r\n                            return inBrackets(text(symbol, opt));\r\n                        }\r\n                        return text(symbol, opt);\r\n                    }).join('*');\r\n                    break;\r\n                case EX:\r\n                    var pg = obj.previousGroup,\r\n                            pwg = obj.power.group;\r\n\r\n                    //PL are the exception. It's simpler to just collect and set the value\r\n                    if(pg === PL)\r\n                        value = obj.collectSymbols(text, opt).join('+').replace('+-', '-');\r\n                    if(!(pg === N || pg === S || pg === FN) && !asHash) {\r\n                        value = inBrackets(value);\r\n                    }\r\n\r\n                    if((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\r\n                        power = inBrackets(power);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if(group === FN) {\r\n                value = obj.fname + inBrackets(obj.args.map(function (symbol) {\r\n                    return text(symbol, opt);\r\n                }).join(','));\r\n            }\r\n            //TODO: Needs to be more efficient. Maybe.\r\n            if(group === FN && obj.fname in CUSTOM_OPERATORS) {\r\n                var a = text(obj.args[0]);\r\n                var b = text(obj.args[1]);\r\n                if(obj.args[0].isComposite()) //preserve the brackets\r\n                    a = inBrackets(a);\r\n                if(obj.args[1].isComposite()) //preserve the brackets\r\n                    b = inBrackets(b);\r\n                value = a + CUSTOM_OPERATORS[obj.fname] + b;\r\n            }\r\n            //wrap the power since / is less than ^\r\n            //TODO: introduce method call isSimple\r\n            if(power && group !== EX && wrapCondition(power)) {\r\n                power = inBrackets(power);\r\n            }\r\n\r\n            //the following groups are held together by plus or minus. They can be raised to a power or multiplied\r\n            //by a multiplier and have to be in brackets to preserve the order of precedence\r\n            if(((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-'))\r\n                    || ((group === CB || group === CP || group === PL) && (power && power != '1'))\r\n                    || !asHash && group === P && value == -1\r\n                    || obj.fname === PARENTHESIS) {\r\n\r\n                value = inBrackets(value);\r\n            }\r\n\r\n            if(decp && (option === 'decimal' || option === 'decimals' && multiplier)) {\r\n                multiplier = nround(multiplier, decp);\r\n            }\r\n\r\n\r\n            //add the sign back\r\n            var c = sign + multiplier;\r\n\r\n            if(multiplier && wrapCondition(multiplier))\r\n                c = inBrackets(c);\r\n\r\n            if(power < 0)\r\n                power = inBrackets(power);\r\n\r\n            //add the multiplication back\r\n            if(multiplier)\r\n                c = c + '*';\r\n\r\n            if(power) {\r\n                if(value === 'e' && Settings.E_TO_EXP) {\r\n                    return c + 'exp' + inBrackets(power);\r\n                }\r\n                power = Settings.POWER_OPERATOR + power;\r\n            }\r\n\r\n            //this needs serious rethinking. Must fix\r\n            if(group === EX && value.charAt(0) === '-') {\r\n                value = inBrackets(value);\r\n            }\r\n\r\n            var cv = c + value;\r\n\r\n            if(obj.parens) {\r\n                cv = inBrackets(cv);\r\n            }\r\n\r\n            return cv + power;\r\n        }\r\n        else if(isVector(obj)) {\r\n            var l = obj.elements.length,\r\n                    c = [];\r\n            for(var i = 0; i < l; i++)\r\n                c.push(obj.elements[i].text(option));\r\n            return '[' + c.join(',') + ']';\r\n        }\r\n        else {\r\n            try {\r\n                return obj.toString();\r\n            }\r\n            catch(e) {\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calculates prime factors for a number. It first checks if the number\r\n     * is a prime number. If it's not then it will calculate all the primes \r\n     * for that number.\r\n     * @param {int} num\r\n     * @returns {Array}\r\n     */\r\n\r\n    function primeFactors(num) {\r\n        if(isPrime(num)) {\r\n            return [num];\r\n        }\r\n\r\n        var l = num, i = 1, factors = [],\r\n                epsilon = 2.2204460492503130808472633361816E-16;\r\n        while(i < l) {\r\n            var quotient = num / i;\r\n            var whole = Math.floor(quotient);\r\n            var remainder = quotient - whole;\r\n\r\n            if(remainder <= epsilon && i > 1) {\r\n                // If the prime wasn't found but calculated then save it and\r\n                // add it as a factor.\r\n                if(isPrime(i)) {\r\n                    if(PRIMES.indexOf(i) === -1) {\r\n                        PRIMES.push(i);\r\n                    }\r\n                    factors.push(i);\r\n                }\r\n\r\n                // Check if the remainder is a prime\r\n                if(isPrime(whole)) {\r\n                    factors.push(whole);\r\n                    break;\r\n                }\r\n\r\n                l = whole;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        return factors.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n    }\r\n    ;\r\n    primeFactors(314146179365)\r\n//Expression ===================================================================\r\n    /**\r\n     * This is what nerdamer returns. It's sort of a wrapper around the symbol class and\r\n     * provides the user with some useful functions. If you want to provide the user with extra\r\n     * library functions then add them to this class's prototype.\r\n     * @param {Symbol} symbol\r\n     * @returns {Expression} wraps around the Symbol class\r\n     */\r\n    function Expression(symbol) {\r\n        //we don't want arrays wrapped\r\n        this.symbol = symbol;\r\n    }\r\n    /**\r\n     * Returns stored expression at index. For first index use 1 not 0.\r\n     * @param {bool} asType\r\n     * @param {Integer} expression_number\r\n     */\r\n    Expression.getExpression = function (expression_number, asType) {\r\n        if(expression_number === 'last' || !expression_number)\r\n            expression_number = EXPRESSIONS.length;\r\n        if(expression_number === 'first')\r\n            expression_number = 1;\r\n        var index = expression_number - 1,\r\n                expression = EXPRESSIONS[index],\r\n                retval = expression ? new Expression(expression) : expression;\r\n        return retval;\r\n    };\r\n    Expression.prototype = {\r\n        /**\r\n         * Returns the text representation of the expression\r\n         * @param {String} opt - option of formatting numbers\r\n         * @param {Number} n The number of significant figures\r\n         * @returns {String}\r\n         */\r\n        text: function (opt, n) {\r\n            n = n || 19;\r\n            opt = opt || 'decimals';\r\n            if(this.symbol.text_)\r\n                return this.symbol.text_(opt);\r\n\r\n            return text(this.symbol, opt, undefined, n);\r\n        },\r\n        /**\r\n         * Returns the latex representation of the expression\r\n         * @param {String} option - option for formatting numbers\r\n         * @returns {String}\r\n         */\r\n        latex: function (option) {\r\n            if(this.symbol.latex)\r\n                return this.symbol.latex(option);\r\n            return LaTeX.latex(this.symbol, option);\r\n        },\r\n        valueOf: function () {\r\n            return this.symbol.valueOf();\r\n        },\r\n\r\n        /**\r\n         * Evaluates the expression and tries to reduce it to a number if possible.\r\n         * If an argument is given in the form of %{integer} it will evaluate that expression.\r\n         * Other than that it will just use it's own text and reparse\r\n         * @returns {Expression}\r\n         */\r\n        evaluate: function () {\r\n\r\n            // Don't evaluate an empty vector\r\n            if(isVector(this.symbol) && this.symbol.dimensions() === 0) {\r\n                return this;\r\n            }\r\n\r\n            var first_arg = arguments[0], expression, idx = 1;\r\n\r\n            //Enable getting of expressions using the % so for example %1 should get the first expression\r\n            if(typeof first_arg === 'string') {\r\n                expression = (first_arg.charAt(0) === '%') ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\r\n            }\r\n            else if(first_arg instanceof Expression || isSymbol(first_arg)) {\r\n                expression = first_arg.text();\r\n            }\r\n            else {\r\n                expression = this.symbol.text();\r\n                idx--;\r\n            }\r\n\r\n            var subs = arguments[idx] || {};\r\n\r\n            var retval = new Expression(block('PARSE2NUMBER', function () {\r\n                return _.parse(expression, subs);\r\n            }, true));\r\n\r\n            return retval;\r\n        },\r\n        /**\r\n         * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of\r\n         * the default alphabetical order\r\n         * @param vars {Array}\r\n         */\r\n        buildFunction: function (vars) {\r\n            return Build.build(this.symbol, vars);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is just a plain old number\r\n         * @returns {boolean}\r\n         */\r\n        isNumber: function () {\r\n            return isNumericSymbol(this.symbol);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is infinity\r\n         * @returns {boolean}\r\n         */\r\n        isInfinity: function () {\r\n            return Math.abs(this.symbol.multiplier) === Infinity;\r\n        },\r\n        /**\r\n         * Checks to see if the expression contains imaginary numbers\r\n         * @returns {boolean}\r\n         */\r\n        isImaginary: function () {\r\n            return evaluate(_.parse(this.symbol)).isImaginary();\r\n        },\r\n        /**\r\n         * Returns all the variables in the expression\r\n         * @returns {Array}\r\n         */\r\n        variables: function () {\r\n            return variables(this.symbol);\r\n        },\r\n\r\n        toString: function () {\r\n            try {\r\n                if(isArray(this.symbol))\r\n                    return '[' + this.symbol.toString() + ']';\r\n                return this.symbol.toString();\r\n            }\r\n            catch(e) {\r\n                return '';\r\n            }\r\n        },\r\n        //forces the symbol to be returned as a decimal\r\n        toDecimal: function (prec) {\r\n            Settings.precision = prec;\r\n            var dec = text(this.symbol, 'decimals');\r\n            Settings.precision = undefined;\r\n            return dec;\r\n        },\r\n        //checks to see if the expression is a fraction\r\n        isFraction: function () {\r\n            return isFraction(this.symbol);\r\n        },\r\n        //checks to see if the symbol is a multivariate polynomial\r\n        isPolynomial: function () {\r\n            return this.symbol.isPoly();\r\n        },\r\n        //performs a substitution\r\n        sub: function (symbol, for_symbol) {\r\n            return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\r\n        },\r\n        operation: function (otype, symbol) {\r\n            if(isExpression(symbol))\r\n                symbol = symbol.symbol;\r\n            else if(!isSymbol(symbol))\r\n                symbol = _.parse(symbol);\r\n            return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\r\n        },\r\n        add: function (symbol) {\r\n            return this.operation('add', symbol);\r\n        },\r\n        subtract: function (symbol) {\r\n            return this.operation('subtract', symbol);\r\n        },\r\n        multiply: function (symbol) {\r\n            return this.operation('multiply', symbol);\r\n        },\r\n        divide: function (symbol) {\r\n            return this.operation('divide', symbol);\r\n        },\r\n        pow: function (symbol) {\r\n            return this.operation('pow', symbol);\r\n        },\r\n        expand: function () {\r\n            return new Expression(_.expand(this.symbol));\r\n        },\r\n        each: function (callback, i) {\r\n            if(this.symbol.each)\r\n                this.symbol.each(callback, i);\r\n            else if(isArray(this.symbol)) {\r\n                for(var i = 0; i < this.symbol.length; i++)\r\n                    callback.call(this.symbol, this.symbol[i], i);\r\n            }\r\n            else\r\n                callback.call(this.symbol);\r\n        },\r\n        eq: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = _.subtract(this.symbol.clone(), value);\r\n                return d.equals(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n            ;\r\n        },\r\n        lt: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.lessThan(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n            ;\r\n        },\r\n        gt: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.greaterThan(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n        },\r\n        gte: function (value) {\r\n            return this.gt(value) || this.eq(value);\r\n        },\r\n        lte: function (value) {\r\n            return this.lt(value) || this.eq(value);\r\n        },\r\n\r\n        numerator: function () {\r\n            return new Expression(this.symbol.getNum());\r\n        },\r\n        denominator: function () {\r\n            return new Expression(this.symbol.getDenom());\r\n        },\r\n        hasFunction: function (f) {\r\n            return this.symbol.containsFunction(f);\r\n        },\r\n        contains: function (variable) {\r\n            return this.symbol.contains(variable);\r\n        }\r\n    };\r\n    //Aliases\r\n    Expression.prototype.toTeX = Expression.prototype.latex;\r\n\r\n//Scientific ===================================================================\r\n    function Scientific(num) {\r\n        if(!(this instanceof Scientific))\r\n            return new Scientific(num);\r\n\r\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\r\n\r\n        //remove the sign\r\n        if(num.startsWith('-')) {\r\n            this.sign = -1;\r\n            //remove the sign\r\n            num = num.substr(1, num.length);\r\n        }\r\n        else {\r\n            this.sign = 1;\r\n        }\r\n\r\n        if(Scientific.isScientific(num)) {\r\n            this.fromScientific(num);\r\n        }\r\n        else {\r\n            this.convert(num);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    Scientific.prototype = {\r\n        fromScientific: function (num) {\r\n            var parts = String(num).toLowerCase().split('e');\r\n            this.coeff = parts[0];\r\n            this.exponent = parts[1];\r\n\r\n            return this;\r\n        },\r\n        convert: function (num) {\r\n            //get wholes and decimals\r\n            var parts = num.split('.');\r\n            //make zero go away\r\n            var w = parts[0] || '';\r\n            var d = parts[1] || '';\r\n            //convert zero to blank strings\r\n            w = Scientific.removeLeadingZeroes(w);\r\n            d = Scientific.removeTrailingZeroes(d);\r\n            //find the location of the decimal place which is right after the wholes\r\n            var dot_location = w.length;\r\n            //add them together so we can move the dot\r\n            var n = w + d;\r\n            //find the next number\r\n            var zeroes = Scientific.leadingZeroes(n).length;\r\n            //set the exponent\r\n            this.exponent = dot_location - (zeroes + 1);\r\n            //set the coeff but first remove leading zeroes\r\n            var coeff = Scientific.removeLeadingZeroes(n);\r\n            this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\r\n\r\n            return this;\r\n        },\r\n        round: function (num) {\r\n            var n = this.copy();\r\n\r\n            num = Number(num); //cast to number for safety\r\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\r\n            //we can round based on this\r\n            if(num === 0)\r\n                n.coeff = n.coeff.charAt(0);\r\n            else {\r\n                //get up to n-1 digits\r\n                var rounded = this.coeff.substring(0, num + 1);\r\n                //get the next two\r\n                var next_two = this.coeff.substring(num + 1, num + 3);\r\n                //the extra digit\r\n                var ed = next_two.charAt(0);\r\n\r\n                if(next_two.charAt(1) > 4)\r\n                    ed++;\r\n\r\n                n.coeff = rounded + ed;\r\n            }\r\n\r\n            return n;\r\n        },\r\n        copy: function () {\r\n            var n = new Scientific(0);\r\n            n.coeff = this.coeff;\r\n            n.exponent = this.exponent;\r\n            n.sign = this.sign;\r\n            return n;\r\n        },\r\n        toString: function (n) {\r\n            var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, n);\r\n\r\n            var c;\r\n            if(this.exponent === 0 && Settings.SCIENTIFIC_IGNORE_INTS) {\r\n                c = this.coeff;\r\n            }\r\n            else {\r\n                c = coeff + 'e' + this.exponent;\r\n            }\r\n            return (this.sign === -1 ? '-' : '') + c;\r\n        }\r\n    };\r\n\r\n    Scientific.isScientific = function (num) {\r\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\r\n    };\r\n    Scientific.leadingZeroes = function (num) {\r\n        var match = num.match(/^(0*).*$/);\r\n        return match ? match[1] : '';\r\n    };\r\n    Scientific.removeLeadingZeroes = function (num) {\r\n        var match = num.match(/^0*(.*)$/);\r\n        return match ? match[1] : '';\r\n    };\r\n\r\n    Scientific.removeTrailingZeroes = function (num) {\r\n        var match = num.match(/0*$/);\r\n        return match ? num.substring(0, num.length - match[0].length) : '';\r\n    };\r\n    Scientific.round = function (c, n) {\r\n        var coeff = nround(c, n);\r\n        var m = String(coeff).split('.').pop();\r\n        var d = n - m.length;\r\n        //if we're asking for more significant figures\r\n        if(d > 0) {\r\n            coeff = coeff + (new Array(d + 1).join(0));\r\n        }\r\n        return coeff;\r\n    };\r\n\r\n//Scientific ===================================================================\r\n    /*\r\n     * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\r\n     * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\r\n     */\r\n\r\n    function Scientific(num) {\r\n        if(!(this instanceof Scientific))\r\n            return new Scientific(num);\r\n\r\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\r\n\r\n        //remove the sign\r\n        if(num.startsWith('-')) {\r\n            this.sign = -1;\r\n            //remove the sign\r\n            num = num.substr(1, num.length);\r\n        }\r\n        else {\r\n            this.sign = 1;\r\n        }\r\n\r\n        if(Scientific.isScientific(num)) {\r\n            this.fromScientific(num);\r\n        }\r\n        else {\r\n            this.convert(num);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    Scientific.prototype = {\r\n        fromScientific: function (num) {\r\n            var parts = String(num).toLowerCase().split('e');\r\n            this.coeff = parts[0];\r\n            this.exponent = parts[1];\r\n\r\n            return this;\r\n        },\r\n        convert: function (num) {\r\n            //get wholes and decimals\r\n            var parts = num.split('.');\r\n            //make zero go away\r\n            var w = parts[0] || '';\r\n            var d = parts[1] || '';\r\n            //convert zero to blank strings\r\n            w = Scientific.removeLeadingZeroes(w);\r\n            d = Scientific.removeTrailingZeroes(d);\r\n            //find the location of the decimal place which is right after the wholes\r\n            var dot_location = w.length;\r\n            //add them together so we can move the dot\r\n            var n = w + d;\r\n            //find the next number\r\n            var zeroes = Scientific.leadingZeroes(n).length;\r\n            //set the exponent\r\n            this.exponent = dot_location - (zeroes + 1);\r\n            //set the coeff but first remove leading zeroes\r\n            var coeff = Scientific.removeLeadingZeroes(n);\r\n            this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\r\n\r\n            //the coeff decimal places\r\n            var dec = this.coeff.split('.')[1] || ''; //if it's undefined or zero it's going to blank\r\n\r\n            this.decp = dec === '0' ? 0 : dec.length;\r\n            //decimals\r\n            this.dec = d;\r\n            //wholes\r\n            this.wholes = w;\r\n\r\n            return this;\r\n        },\r\n        round: function (num) {\r\n            var n = this.copy();\r\n\r\n            num = Number(num); //cast to number for safety\r\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\r\n            //we can round based on this\r\n            if(num === 0)\r\n                n.coeff = n.coeff.charAt(0);\r\n            else {\r\n                //get up to n-1 digits\r\n                var rounded = this.coeff.substring(0, num + 1);\r\n                //get the next two\r\n                var next_two = this.coeff.substring(num + 1, num + 3);\r\n                //the extra digit\r\n                var ed = next_two.charAt(0);\r\n\r\n                if(next_two.charAt(1) > 4)\r\n                    ed++;\r\n\r\n                n.coeff = rounded + ed;\r\n            }\r\n\r\n            return n;\r\n        },\r\n        copy: function () {\r\n            var n = new Scientific(0);\r\n            n.coeff = this.coeff;\r\n            n.exponent = this.exponent;\r\n            n.sign = this.sign;\r\n            return n;\r\n        },\r\n        toString: function (n) {\r\n            var retval;\r\n\r\n            if(Settings.SCIENTIFIC_IGNORE_ZERO_EXPONENTS && this.exponent === 0 && this.decp < n) {\r\n                if(this.decp === 0)\r\n                    retval = this.wholes;\r\n                else\r\n                    retval = this.coeff;\r\n            }\r\n            else {\r\n                var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, Math.min(n, this.decp || 1));\r\n                retval = this.exponent === 0 ? coeff : coeff + 'e' + this.exponent;\r\n            }\r\n\r\n            return (this.sign === -1 ? '-' : '') + retval;\r\n        }\r\n    };\r\n\r\n    Scientific.isScientific = function (num) {\r\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\r\n    };\r\n    Scientific.leadingZeroes = function (num) {\r\n        var match = num.match(/^(0*).*$/);\r\n        return match ? match[1] : '';\r\n    };\r\n    Scientific.removeLeadingZeroes = function (num) {\r\n        var match = num.match(/^0*(.*)$/);\r\n        return match ? match[1] : '';\r\n    };\r\n\r\n    Scientific.removeTrailingZeroes = function (num) {\r\n        var match = num.match(/0*$/);\r\n        return match ? num.substring(0, num.length - match[0].length) : '';\r\n    };\r\n\r\n\r\n//Frac =========================================================================\r\n    function Frac(n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        if(n === undefined)\r\n            return this;\r\n        try {\r\n            if(isInt(n)) {\r\n                try {\r\n                    this.num = bigInt(n);\r\n                    this.den = bigInt(1);\r\n                }\r\n                catch(e) {\r\n                    return Frac.simple(n);\r\n                }\r\n            }\r\n            else {\r\n                var frac = n instanceof bigDec ? Fraction.quickConversion(n) : Fraction.convert(n);\r\n                this.num = new bigInt(frac[0]);\r\n                this.den = new bigInt(frac[1]);\r\n            }\r\n        }\r\n        catch(e) {\r\n            return Frac.simple(n);\r\n        }\r\n\r\n    }\r\n    //safe to use with negative numbers or other types\r\n    Frac.create = function (n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        n = n.toString();\r\n        var is_neg = n.charAt(0) === '-'; //check if it's negative\r\n        if(is_neg)\r\n            n = n.substr(1, n.length - 1); //remove the sign\r\n        var frac = new Frac(n);\r\n        //put the sign back\r\n        if(is_neg)\r\n            frac.negate();\r\n        return frac;\r\n    };\r\n    Frac.isFrac = function (o) {\r\n        return (o instanceof Frac);\r\n    };\r\n    Frac.quick = function (n, d) {\r\n        var frac = new Frac();\r\n        frac.num = new bigInt(n);\r\n        frac.den = new bigInt(d);\r\n        return frac;\r\n    };\r\n    Frac.simple = function (n) {\r\n        var nstr = String(scientificToDecimal(n)),\r\n                m_dc = nstr.split('.'),\r\n                num = m_dc.join(''),\r\n                den = 1,\r\n                l = (m_dc[1] || '').length;\r\n        for(var i = 0; i < l; i++)\r\n            den += '0';\r\n        var frac = Frac.quick(num, den);\r\n        return frac.simplify();\r\n    };\r\n    Frac.prototype = {\r\n        multiply: function (m) {\r\n            if(this.isOne()) {\r\n                return m.clone();\r\n            }\r\n            if(m.isOne()) {\r\n                return this.clone();\r\n            }\r\n\r\n            var c = this.clone();\r\n            c.num = c.num.multiply(m.num);\r\n            c.den = c.den.multiply(m.den);\r\n\r\n            return c.simplify();\r\n        },\r\n        divide: function (m) {\r\n            if(m.equals(0))\r\n                throw new DivisionByZero('Division by zero not allowed!');\r\n            return this.clone().multiply(m.clone().invert()).simplify();\r\n        },\r\n        subtract: function (m) {\r\n            return this.clone().add(m.clone().neg());\r\n        },\r\n        neg: function () {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        add: function (m) {\r\n            var n1 = this.den, n2 = m.den, c = this.clone();\r\n            var a = c.num, b = m.num;\r\n            if(n1.equals(n2)) {\r\n                c.num = a.add(b);\r\n            }\r\n            else {\r\n                c.num = a.multiply(n2).add(b.multiply(n1));\r\n                c.den = n1.multiply(n2);\r\n            }\r\n\r\n            return c.simplify();\r\n        },\r\n        mod: function (m) {\r\n            var a = this.clone(),\r\n                    b = m.clone();\r\n            //make their denominators even and return the mod of their numerators\r\n            a.num = a.num.multiply(b.den);\r\n            a.den = a.den.multiply(b.den);\r\n            b.num = b.num.multiply(this.den);\r\n            b.den = b.den.multiply(this.den);\r\n            a.num = a.num.mod(b.num);\r\n            return a.simplify();\r\n        },\r\n        simplify: function () {\r\n            var gcd = bigInt.gcd(this.num, this.den);\r\n\r\n            this.num = this.num.divide(gcd);\r\n            this.den = this.den.divide(gcd);\r\n            return this;\r\n        },\r\n        clone: function () {\r\n            var m = new Frac();\r\n            m.num = new bigInt(this.num);\r\n            m.den = new bigInt(this.den);\r\n            return m;\r\n        },\r\n        decimal: function (prec) {\r\n            var sign = this.num.isNegative() ? '-' : '';\r\n            if(this.num.equals(this.den)) {\r\n                return '1';\r\n            }\r\n            //go plus one for rounding\r\n            prec = prec || Settings.PRECISION;\r\n            prec++;\r\n            var narr = [],\r\n                    n = this.num.abs(),\r\n                    d = this.den;\r\n            for(var i = 0; i < prec; i++) {\r\n                var w = n.divide(d), //divide out whole\r\n                        r = n.subtract(w.multiply(d)); //get remainder\r\n\r\n                narr.push(w);\r\n                if(r.equals(0))\r\n                    break;\r\n                n = r.times(10); //shift one dec place\r\n            }\r\n            var whole = narr.shift();\r\n            if(narr.length === 0) {\r\n                return sign + whole.toString();\r\n            }\r\n\r\n            if(i === prec) {\r\n                var lt = [];\r\n                //get the last two so we can round it\r\n                for(var i = 0; i < 2; i++)\r\n                    lt.unshift(narr.pop());\r\n                //put the last digit back by rounding the last two\r\n                narr.push(Math.round(lt.join('.')));\r\n            }\r\n\r\n            var dec = whole.toString() + '.' + narr.join('');\r\n            return sign + dec;\r\n        },\r\n        toDecimal: function (prec) {\r\n            prec = prec || Settings.PRECISION;\r\n            if(prec) {\r\n                return this.decimal(prec);\r\n            }\r\n            else\r\n                return this.num / this.den;\r\n        },\r\n        qcompare: function (n) {\r\n            return [this.num.multiply(n.den), n.num.multiply(this.den)];\r\n        },\r\n        equals: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].equals(q[1]);\r\n        },\r\n        absEquals: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].abs().equals(q[1]);\r\n        },\r\n        //lazy check to be fixed. Sufficient for now but will cause future problems\r\n        greaterThan: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].gt(q[1]);\r\n        },\r\n        gte: function (n) {\r\n            return this.greaterThan(n) || this.equals(n);\r\n        },\r\n        lte: function (n) {\r\n            return this.lessThan(n) || this.equals(n);\r\n        },\r\n        lessThan: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].lt(q[1]);\r\n        },\r\n        isInteger: function () {\r\n            return this.den.equals(1);\r\n        },\r\n        negate: function () {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        invert: function () {\r\n            var t = this.den;\r\n            //why invert 0/1? It'll become 1/0 and that's a lie.\r\n            if(!this.num.equals(0)) {\r\n                var isnegative = this.num.isNegative();\r\n                this.den = this.num.abs();\r\n                this.num = t;\r\n                if(isnegative)\r\n                    this.num = this.num.multiply(-1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        isOne: function () {\r\n            return this.num.equals(1) && this.den.equals(1);\r\n        },\r\n        sign: function () {\r\n            return this.num.isNegative() ? -1 : 1;\r\n        },\r\n        abs: function () {\r\n            this.num = this.num.abs();\r\n            return this;\r\n        },\r\n        gcd: function (f) {\r\n            return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\r\n        },\r\n        toString: function () {\r\n            return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\r\n        },\r\n        valueOf: function () {\r\n//            if(this.num == 24) throw new Error(999)\r\n            if(Settings.USE_BIG)\r\n                return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\r\n            return this.num / this.den;\r\n        },\r\n        isNegative: function () {\r\n            return this.toDecimal() < 0;\r\n        }\r\n    };\r\n\r\n//Symbol =======================================================================\r\n    /**\r\n     * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group.\r\n     * All symbols except for \"numbers (group N)\" have a power.\r\n     * @class Primary data type for the Parser.\r\n     * @param {String} obj\r\n     * @returns {Symbol}\r\n     */\r\n    function Symbol(obj) {\r\n        var isInfinity = obj === 'Infinity';\r\n        // This enables the class to be instantiated without the new operator\r\n        if(!(this instanceof Symbol)) {\r\n            return new Symbol(obj);\r\n        }\r\n        // Convert big numbers to a string\r\n        if(obj instanceof bigDec) {\r\n            obj = obj.toString();\r\n        }\r\n        //define numeric symbols\r\n        if(/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj) || obj instanceof bigDec) {\r\n            this.group = N;\r\n            this.value = CONST_HASH;\r\n            this.multiplier = new Frac(obj);\r\n        }\r\n        //define symbolic symbols\r\n        else {\r\n            this.group = S;\r\n            validateName(obj);\r\n            this.value = obj;\r\n            this.multiplier = new Frac(1);\r\n            this.imaginary = obj === Settings.IMAGINARY;\r\n            this.isInfinity = isInfinity;\r\n        }\r\n\r\n        //As of 6.0.0 we switched to infinite precision so all objects have a power\r\n        //Although this is still redundant in constants, it simplifies the logic in\r\n        //other parts so we'll keep it\r\n        this.power = new Frac(1);\r\n\r\n        // Added to silence the strict warning.\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns vanilla imaginary symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.imaginary = function () {\r\n        var s = new Symbol(Settings.IMAGINARY);\r\n        s.imaginary = true;\r\n        return s;\r\n    };\r\n    /**\r\n     * Return nerdamer's representation of Infinity\r\n     * @param {int} negative -1 to return negative infinity\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.infinity = function (negative) {\r\n        var v = new Symbol('Infinity');\r\n        if(negative === -1)\r\n            v.negate();\r\n        return v;\r\n    };\r\n    Symbol.shell = function (group, value) {\r\n        var symbol = new Symbol(value);\r\n        symbol.group = group;\r\n        symbol.symbols = {};\r\n        symbol.length = 0;\r\n        return symbol;\r\n    };\r\n    //sqrt(x) -> x^(1/2)\r\n    Symbol.unwrapSQRT = function (symbol, all) {\r\n        var p = symbol.power;\r\n        if(symbol.fname === SQRT && (symbol.isLinear() || all)) {\r\n            var t = symbol.args[0].clone();\r\n            t.power = t.power.multiply(new Frac(1 / 2));\r\n            t.multiplier = t.multiplier.multiply(symbol.multiplier);\r\n            symbol = t;\r\n            if(all)\r\n                symbol.power = p.multiply(new Frac(1 / 2));\r\n        }\r\n\r\n        return symbol;\r\n    };\r\n    Symbol.hyp = function (a, b) {\r\n        a = a || new Symbol(0);\r\n        b = b || new Symbol(0);\r\n        return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\r\n    };\r\n    //converts to polar form array\r\n    Symbol.toPolarFormArray = function (symbol) {\r\n        var re, im, r, theta;\r\n        re = symbol.realpart();\r\n        im = symbol.imagpart();\r\n        r = Symbol.hyp(re, im);\r\n        theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\r\n        return [r, theta];\r\n    };\r\n    //removes parentheses\r\n    Symbol.unwrapPARENS = function (symbol) {\r\n        if(symbol.fname === '') {\r\n            var r = symbol.args[0];\r\n            r.power = r.power.multiply(symbol.power);\r\n            r.multiplier = r.multiplier.multiply(symbol.multiplier);\r\n            if(symbol.fname === '')\r\n                return Symbol.unwrapPARENS(r);\r\n            return r;\r\n        }\r\n        return symbol;\r\n    };\r\n    //quickly creates a Symbol\r\n    Symbol.create = function (value, power) {\r\n        power = power === undefined ? 1 : power;\r\n        return _.parse('(' + value + ')^(' + power + ')');\r\n    };\r\n    Symbol.prototype = {\r\n        /**\r\n         * Gets nth root accounting for rounding errors\r\n         * @param {Number} n\r\n         * @return {Number}\r\n         */\r\n        getNth: function (n) {\r\n            // First calculate the root\r\n            var root = evaluate(_.pow(_.parse(this.multiplier), _.parse(n).invert()));\r\n            // Round of any errors\r\n            var rounded = _.parse(nround(root));\r\n            // Reverse the root\r\n            var e = evaluate(_.pow(rounded, _.parse(n)));\r\n            // If the rounded root equals the original number then we're good \r\n            if(e.equals(_.parse(this.multiplier))) {\r\n                return rounded;\r\n            }\r\n            // Otherwise return the unrounded version\r\n            return root;\r\n        },\r\n        /**\r\n         * Checks if symbol is to the nth power\r\n         * @returns {Boolean}\r\n         */\r\n        isToNth: function (n) {\r\n            // Start by check in the multiplier for squareness\r\n            // First get the root but round it because currently we still depend \r\n            var root = this.getNth(n);\r\n            var nthMultiplier = isInt(root);\r\n            var nthPower;\r\n\r\n            if(this.group === CB) {\r\n                // Start by assuming that all will be square.\r\n                nthPower = true;\r\n                // All it takes is for one of the symbols to not have an even power\r\n                // e.g. x^n1*y^n2 requires that both n1 and n2 are even\r\n                this.each(function (x) {\r\n                    var isNth = x.isToNth(n);\r\n\r\n                    if(!isNth) {\r\n                        nthPower = false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                // Check if the power is divisible by n if it's not a number.\r\n                nthPower = this.group === N ? true : isInt(_.divide(_.parse(this.power), _.parse(n)));\r\n            }\r\n\r\n            return nthMultiplier && nthPower;\r\n        },\r\n        /**\r\n         * Checks if a symbol is square\r\n         * @return {Boolean}\r\n         */\r\n        isSquare: function () {\r\n            return this.isToNth(2);\r\n        },\r\n        /**\r\n         * Checks if a symbol is cube\r\n         * @return {Boolean}\r\n         */\r\n        isCube: function () {\r\n            return this.isToNth(3);\r\n        },\r\n        /**\r\n         * Checks if a symbol is a bare variable\r\n         * @return {Boolean}\r\n         */\r\n        isSimple: function () {\r\n            return this.power.equals(1) && this.multiplier.equals(1);\r\n        },\r\n        /**\r\n         * Simplifies the power of the symbol\r\n         * @returns {Symbol} a clone of the symbol\r\n         */\r\n        powSimp: function () {\r\n            if(this.group === CB) {\r\n                var powers = [],\r\n                        sign = this.multiplier.sign();\r\n                this.each(function (x) {\r\n                    var p = x.power;\r\n                    //why waste time if I can't do anything anyway\r\n                    if(isSymbol(p) || p.equals(1))\r\n                        return this.clone();\r\n                    powers.push(p);\r\n                });\r\n                var min = new Frac(arrayMin(powers));\r\n\r\n                //handle the coefficient\r\n                //handle the multiplier\r\n                var sign = this.multiplier.sign(),\r\n                        m = this.multiplier.clone().abs(),\r\n                        mfactors = Math2.ifactor(m);\r\n                //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\r\n                //we can then reduce it to 2*3*5*(15)^2\r\n                var out_ = new Frac(1);\r\n                var in_ = new Frac(1);\r\n\r\n                for(var x in mfactors) {\r\n                    var n = new Frac(mfactors[x]);\r\n                    if(!n.lessThan(min)) {\r\n                        n = n.divide(min).subtract(new Frac(1));\r\n                        in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\r\n                    }\r\n\r\n                    out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\r\n                }\r\n                var t = new Symbol(in_);\r\n                this.each(function (x) {\r\n                    x = x.clone();\r\n                    x.power = x.power.divide(min);\r\n                    t = _.multiply(t, x);\r\n                });\r\n\r\n                var xt = _.symfunction(PARENTHESIS, [t]);\r\n                xt.power = min;\r\n                xt.multiplier = sign < 0 ? out_.negate() : out_;\r\n\r\n                return xt;\r\n            }\r\n            return this.clone();\r\n        },\r\n        /**\r\n         * Checks to see if two functions are of equal value\r\n         * @param {Symbol} symbol\r\n         */\r\n        equals: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.value === symbol.value && this.power.equals(symbol.power)\r\n                    && this.multiplier.equals(symbol.multiplier)\r\n                    && this.group === symbol.group;\r\n        },\r\n        abs: function () {\r\n            var e = this.clone();\r\n            e.multiplier.abs();\r\n            return e;\r\n        },\r\n        // Greater than\r\n        gt: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Greater than\r\n        gte: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lt: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lte: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        /**\r\n         * Because nerdamer doesn't group symbols by polynomials but\r\n         * rather a custom grouping method, this has to be\r\n         * reinserted in order to make use of most algorithms. This function\r\n         * checks if the symbol meets the criteria of a polynomial.\r\n         * @param {bool} multivariate\r\n         * @returns {boolean}\r\n         */\r\n        isPoly: function (multivariate) {\r\n            var g = this.group,\r\n                    p = this.power;\r\n            //the power must be a integer so fail if it's not\r\n            if(!isInt(p) || p < 0)\r\n                return false;\r\n            //constants and first orders\r\n            if(g === N || g === S || this.isConstant(true))\r\n                return true;\r\n            var vars = variables(this);\r\n            if(g === CB && vars.length === 1) {\r\n                //the variable is assumed the only one that was found\r\n                var v = vars[0];\r\n                //if no variable then guess what!?!? We're done!!! We have a polynomial.\r\n                if(!v)\r\n                    return true;\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    //sqrt(x)\r\n                    if(sym.group === FN && !sym.args[0].isConstant())\r\n                        return false;\r\n                    if(!sym.contains(v) && !sym.isConstant(true))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            //PL groups. These only fail if a power is not an int\r\n            //this should handle cases such as x^2*t\r\n            if(this.isComposite() || g === CB && multivariate) {\r\n                //fail if we're not checking for multivariate polynomials\r\n                if(!multivariate && vars.length > 1)\r\n                    return false;\r\n                //loop though the symbols and check if they qualify\r\n                for(var x in this.symbols) {\r\n                    //we've already the symbols if we're not checking for multivariates at this point\r\n                    //so we check the sub-symbols\r\n                    if(!this.symbols[x].isPoly(multivariate))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n\r\n            /*\r\n             //all tests must have passed so we must be dealing with a polynomial\r\n             return true;\r\n             */\r\n        },\r\n        //removes the requested variable from the symbol and returns the remainder\r\n        stripVar: function (x, exclude_x) {\r\n            var retval;\r\n            if((this.group === PL || this.group === S) && this.value === x)\r\n                retval = new Symbol(exclude_x ? 0 : this.multiplier);\r\n            else if(this.group === CB && this.isLinear()) {\r\n                retval = new Symbol(1);\r\n                this.each(function (s) {\r\n                    if(!s.contains(x, true))\r\n                        retval = _.multiply(retval, s.clone());\r\n                });\r\n                retval.multiplier = retval.multiplier.multiply(this.multiplier);\r\n            }\r\n            else if(this.group === CP && !this.isLinear()) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === CP && this.isLinear()) {\r\n                retval = new Symbol(0);\r\n                this.each(function (s) {\r\n                    if(!s.contains(x)) {\r\n                        var t = s.clone();\r\n                        t.multiplier = t.multiplier.multiply(this.multiplier);\r\n                        retval = _.add(retval, t);\r\n                    }\r\n                });\r\n                //BIG TODO!!! It doesn't make much sense\r\n                if(retval.equals(0))\r\n                    retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === EX && this.power.contains(x, true)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === FN && this.contains(x)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else\r\n                //wth? This should technically be the multiplier.\r\n                //Unfortunately this method wasn't very well thought out :`(.\r\n                //should be: retval = new Symbol(this.multiplier);\r\n                //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\r\n                //this will break a bunch of unit tests so be ready to for the long haul\r\n                retval = this.clone();\r\n\r\n\r\n            return retval;\r\n        },\r\n        //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a].\r\n        toArray: function (v, arr) {\r\n            arr = arr || {\r\n                arr: [],\r\n                add: function (x, idx) {\r\n                    var e = this.arr[idx];\r\n                    this.arr[idx] = e ? _.add(e, x) : x;\r\n                }\r\n            };\r\n            var g = this.group;\r\n\r\n            if(g === S && this.contains(v)) {\r\n                arr.add(new Symbol(this.multiplier), this.power);\r\n            }\r\n            else if(g === CB) {\r\n                var a = this.stripVar(v),\r\n                        x = _.divide(this.clone(), a.clone());\r\n                var p = x.isConstant() ? 0 : x.power;\r\n                arr.add(a, p);\r\n            }\r\n            else if(g === PL && this.value === v) {\r\n                this.each(function (x, p) {\r\n                    arr.add(x.stripVar(v), p);\r\n                });\r\n            }\r\n            else if(g === CP) {\r\n                //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\r\n                //each case is handled above\r\n                this.each(function (x) {\r\n                    x.toArray(v, arr);\r\n                });\r\n            }\r\n            else if(this.contains(v)) {\r\n                throw new NerdamerTypeError('Cannot convert to array! Exiting');\r\n            }\r\n            else {\r\n                arr.add(this.clone(), 0); //it's just a constant wrt to v\r\n            }\r\n            //fill the holes\r\n            arr = arr.arr; //keep only the array since we don't need the object anymore\r\n            for(var i = 0; i < arr.length; i++)\r\n                if(!arr[i])\r\n                    arr[i] = new Symbol(0);\r\n            return arr;\r\n        },\r\n        //checks to see if a symbol contans a function\r\n        hasFunc: function (v) {\r\n            var fn_group = this.group === FN || this.group === EX;\r\n            if(fn_group && !v || fn_group && this.contains(v))\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].hasFunc(v))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        sub: function (a, b) {\r\n            a = !isSymbol(a) ? _.parse(a) : a.clone();\r\n            b = !isSymbol(b) ? _.parse(b) : b.clone();\r\n            if(a.group === N || a.group === P)\r\n                err('Cannot substitute a number. Must be a variable');\r\n            var same_pow = false,\r\n                    a_is_unit_multiplier = a.multiplier.equals(1),\r\n                    m = this.multiplier.clone(),\r\n                    retval;\r\n            /*\r\n             * In order to make the substitution the bases have to first match take\r\n             * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\r\n             * In both cases the first condition is that the bases match so we begin there\r\n             * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\r\n             */\r\n            if(this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\r\n                //we cleared the first hurdle but a subsitution may not be possible just yet\r\n                if(a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\r\n                    if(a.isLinear()) {\r\n                        retval = b;\r\n                    }\r\n                    else if(a.power.equals(this.power)) {\r\n                        retval = b;\r\n                        same_pow = true;\r\n                    }\r\n                    if(a.multiplier.equals(this.multiplier))\r\n                        m = new Frac(1);\r\n                }\r\n            }\r\n            //the next thing is to handle CB\r\n            else if(this.group === CB || this.previousGroup === CB) {\r\n                retval = new Symbol(1);\r\n                this.each(function (x) {\r\n                    var subbed = _.parse(x.sub(a, b)); //parse it again for safety\r\n                    retval = _.multiply(retval, subbed);\r\n\r\n                });\r\n            }\r\n            else if(this.isComposite()) {\r\n                var symbol = this.clone();\r\n\r\n                if(a.isComposite() && symbol.isComposite() && symbol.isLinear() && a.isLinear()) {\r\n                    var find = function (stack, needle) {\r\n                        for(var x in stack.symbols) {\r\n                            var sym = stack.symbols[x];\r\n                            //if the symbol equals the needle or it's within the sub-symbols we're done\r\n                            if(sym.isComposite() && find(sym, needle) || sym.equals(needle))\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n                    //go fish\r\n                    for(var x in a.symbols) {\r\n                        if(!find(symbol, a.symbols[x]))\r\n                            return symbol.clone();\r\n                    }\r\n                    retval = _.add(_.subtract(symbol.clone(), a), b);\r\n                }\r\n                else {\r\n                    retval = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        retval = _.add(retval, x.sub(a, b));\r\n                    });\r\n                }\r\n            }\r\n            else if(this.group === EX) {\r\n                // the parsed value could be a function so parse and sub\r\n                retval = _.parse(this.value).sub(a, b);\r\n            }\r\n            else if(this.group === FN) {\r\n                var nargs = [];\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    var arg = this.args[i];\r\n                    if(!isSymbol(arg))\r\n                        arg = _.parse(arg);\r\n                    nargs.push(arg.sub(a, b));\r\n                }\r\n                retval = _.symfunction(this.fname, nargs);\r\n            }\r\n            //if we did manage a substitution\r\n            if(retval) {\r\n                if(!same_pow) {\r\n                    //substitute the power\r\n                    var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power);\r\n                    //now raise the symbol to that power\r\n                    retval = _.pow(retval, p);\r\n                }\r\n\r\n                //transfer the multiplier\r\n                retval.multiplier = retval.multiplier.multiply(m);\r\n\r\n                //done\r\n                return retval;\r\n            }\r\n            //if all else fails\r\n            return this.clone();\r\n        },\r\n        isMonomial: function () {\r\n            if(this.group === S)\r\n                return true;\r\n            if(this.group === CB) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].group !== S)\r\n                        return false;\r\n            }\r\n            else\r\n                return false;\r\n            return true;\r\n        },\r\n        isPi: function () {\r\n            return this.group === S && this.value === 'pi';\r\n        },\r\n        sign: function () {\r\n            return this.multiplier.sign();\r\n        },\r\n        isE: function () {\r\n            return this.value === 'e';\r\n        },\r\n        isSQRT: function () {\r\n            return this.fname === SQRT;\r\n        },\r\n        isConstant: function (check_all, check_symbols) {\r\n            if(check_symbols && this.group === CB) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].isConstant(true))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if(check_all === 'functions' && this.isComposite()) {\r\n                var isConstant = true;\r\n\r\n                this.each(function (x) {\r\n                    if(!x.isConstant(check_all, check_symbols)) {\r\n                        isConstant = false;\r\n                    }\r\n                }, true);\r\n\r\n                return isConstant;\r\n            }\r\n\r\n            if(check_all === 'all' && (this.isPi() || this.isE())) {\r\n                return true;\r\n            }\r\n\r\n            if(check_all && this.group === FN) {\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    if(!this.args[i].isConstant(check_all))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            if(check_all)\r\n                return isNumericSymbol(this);\r\n            return this.value === CONST_HASH;\r\n        },\r\n        //the symbols is imaginary if\r\n        //1. n*i\r\n        //2. a+b*i\r\n        //3. a*i\r\n        isImaginary: function () {\r\n            if(this.imaginary)\r\n                return true;\r\n            else if(this.symbols) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].isImaginary())\r\n                        return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Returns the real part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        realpart: function () {\r\n            if(this.isConstant()) {\r\n                return this.clone();\r\n            }\r\n            else if(this.imaginary)\r\n                return new Symbol(0);\r\n            else if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function (x) {\r\n                    retval = _.add(retval, x.realpart());\r\n                });\r\n                return retval;\r\n            }\r\n            else if(this.isImaginary())\r\n                return new Symbol(0);\r\n            return this.clone();\r\n        },\r\n        /*\r\n         * Return imaginary part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        imagpart: function () {\r\n            if(this.group === S && this.isImaginary())\r\n                return new Symbol(this.multiplier);\r\n            if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function (x) {\r\n                    retval = _.add(retval, x.imagpart());\r\n                });\r\n                return retval;\r\n            }\r\n            if(this.group === CB)\r\n                return this.stripVar(Settings.IMAGINARY);\r\n            return new Symbol(0);\r\n        },\r\n        isInteger: function () {\r\n            return this.isConstant() && this.multiplier.isInteger();\r\n        },\r\n        isLinear: function (wrt) {\r\n            if(wrt) {\r\n                if(this.isConstant())\r\n                    return true;\r\n                if(this.group === S) {\r\n                    if(this.value === wrt)\r\n                        return this.power.equals(1);\r\n                    else\r\n                        return true;\r\n                }\r\n\r\n                if(this.isComposite() && this.power.equals(1)) {\r\n                    for(var x in this.symbols) {\r\n                        if(!this.symbols[x].isLinear(wrt))\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                if(this.group === CB && this.symbols[wrt])\r\n                    return this.symbols[wrt].isLinear(wrt);\r\n                return false;\r\n            }\r\n            else\r\n                return this.power.equals(1);\r\n        },\r\n        /**\r\n         * Checks to see if a symbol has a function by a specified name or within a specified list\r\n         * @param {String|String[]} names\r\n         * @returns {Boolean}\r\n         */\r\n        containsFunction: function (names) {\r\n            if(typeof names === 'string')\r\n                names = [names];\r\n            if(this.group === FN && names.indexOf(this.fname) !== -1)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].containsFunction(names))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        multiplyPower: function (p2) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1))\r\n                return this;\r\n\r\n            var p1 = this.power;\r\n\r\n            if(this.group !== EX && p2.group === N) {\r\n                var p = p2.multiplier;\r\n                if(this.group === N && !p.isInteger()) {\r\n                    this.convert(P);\r\n                }\r\n\r\n                this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\r\n\r\n                if(this.group === P && isInt(this.power)) {\r\n                    //bring it back to an N\r\n                    this.value = Math.pow(this.value, this.power);\r\n                    this.toLinear();\r\n                    this.convert(N);\r\n                }\r\n            }\r\n            else {\r\n                if(this.group !== EX) {\r\n                    p1 = new Symbol(p1);\r\n                    this.convert(EX);\r\n                }\r\n                this.power = _.multiply(p1, p2);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        setPower: function (p, retainSign) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1)) {\r\n                return this;\r\n            }\r\n            if(this.group === EX && !isSymbol(p)) {\r\n                this.group = this.previousGroup;\r\n                delete this.previousGroup;\r\n                if(this.group === N) {\r\n                    this.multiplier = new Frac(this.value);\r\n                    this.value = CONST_HASH;\r\n                }\r\n                else\r\n                    this.power = p;\r\n            }\r\n            else {\r\n                var isSymbolic = false;\r\n                if(isSymbol(p)) {\r\n                    if(p.group === N) {\r\n                        //p should be the multiplier instead\r\n                        p = p.multiplier;\r\n\r\n                    }\r\n                    else {\r\n                        isSymbolic = true;\r\n                    }\r\n                }\r\n                var group = isSymbolic ? EX : P;\r\n                this.power = p;\r\n                if(this.group === N && group)\r\n                    this.convert(group, retainSign);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks to see if symbol is located in the denominator\r\n         * @returns {boolean}\r\n         */\r\n        isInverse: function () {\r\n            if(this.group === EX)\r\n                return (this.power.multiplier.lessThan(0));\r\n            return this.power < 0;\r\n        },\r\n        /**\r\n         * Make a duplicate of a symbol by copying a predefined list of items.\r\n         * The name 'copy' would probably be a more appropriate name.\r\n         * to a new symbol\r\n         * @param {Symbol} c\r\n         * @returns {Symbol}\r\n         */\r\n        clone: function (c) {\r\n            var clone = c || new Symbol(0),\r\n                    //list of properties excluding power as this may be a symbol and would also need to be a clone.\r\n                    properties = [\r\n                        'value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\r\n                    l = properties.length, i;\r\n            if(this.symbols) {\r\n                clone.symbols = {};\r\n                for(var x in this.symbols) {\r\n                    clone.symbols[x] = this.symbols[x].clone();\r\n                }\r\n            }\r\n\r\n            for(i = 0; i < l; i++) {\r\n                if(this[properties[i]] !== undefined) {\r\n                    clone[properties[i]] = this[properties[i]];\r\n                }\r\n            }\r\n\r\n            clone.power = this.power.clone();\r\n            clone.multiplier = this.multiplier.clone();\r\n            //add back the flag to track if this symbol is a conversion symbol\r\n            if(this.isConversion)\r\n                clone.isConversion = this.isConversion;\r\n\r\n            if(this.isUnit)\r\n                clone.isUnit = this.isUnit;\r\n\r\n            return clone;\r\n        },\r\n        /**\r\n         * Converts a symbol multiplier to one.\r\n         * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\r\n         * @returns {Symbol}\r\n         */\r\n        toUnitMultiplier: function (keepSign) {\r\n            this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\r\n            this.multiplier.den = new bigInt(1);\r\n            return this;\r\n        },\r\n        /**\r\n         * Converts a Symbol's power to one.\r\n         * @returns {Symbol}\r\n         */\r\n        toLinear: function () {\r\n            // Do nothing if it's already linear\r\n            if(this.power.equals(1)) {\r\n                return this;\r\n            }\r\n            this.setPower(new Frac(1));\r\n            return this;\r\n        },\r\n        /**\r\n         * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\r\n         * @param {Function} fn\r\n         * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well\r\n         */\r\n        each: function (fn, deep) {\r\n            if(!this.symbols) {\r\n                fn.call(this, this, this.value);\r\n            }\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    if(sym.group === PL && deep) {\r\n                        for(var y in sym.symbols) {\r\n                            fn.call(x, sym.symbols[y], y);\r\n                        }\r\n                    }\r\n                    else\r\n                        fn.call(this, sym, x);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * A numeric value to be returned for Javascript. It will try to\r\n         * return a number as far a possible but in case of a pure symbolic\r\n         * symbol it will just return its text representation\r\n         * @returns {String|Number}\r\n         */\r\n        valueOf: function () {\r\n            if(this.group === N)\r\n                return this.multiplier.valueOf();\r\n            else if(this.power === 0) {\r\n                return 1;\r\n            }\r\n            else if(this.multiplier === 0) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return text(this, 'decimals');\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a symbols has a particular variable within it.\r\n         * Pass in true as second argument to include the power of exponentials\r\n         * which aren't check by default.\r\n         * @example var s = _.parse('x+y+z'); s.contains('y');\r\n         * //returns true\r\n         * @param {any} variable\r\n         * @param {boolean} all\r\n         * @returns {boolean}\r\n         */\r\n        contains: function (variable, all) {\r\n            //contains expects a string\r\n            variable = String(variable);\r\n            var g = this.group;\r\n            if(this.value === variable)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].contains(variable, all))\r\n                        return true;\r\n                }\r\n            }\r\n            if(g === FN || this.previousGroup === FN) {\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    if(this.args[i].contains(variable, all))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if(g === EX) {\r\n                //exit only if it does\r\n                if(all && this.power.contains(variable, all)) {\r\n                    return true;\r\n                }\r\n                if(this.value === variable)\r\n                    return true;\r\n\r\n            }\r\n\r\n            return this.value === variable;\r\n        },\r\n        /**\r\n         * Negates a symbols\r\n         * @returns {boolean}\r\n         */\r\n        negate: function () {\r\n            this.multiplier.negate();\r\n            if(this.group === CP || this.group === PL)\r\n                this.distributeMultiplier();\r\n            return this;\r\n        },\r\n        /**\r\n         * Inverts a symbol\r\n         * @param {boolean} power_only\r\n         * @param {boolean} all\r\n         * @returns {boolean}\r\n         */\r\n        invert: function (power_only, all) {\r\n            //invert the multiplier\r\n            if(!power_only)\r\n                this.multiplier = this.multiplier.invert();\r\n            //invert the rest\r\n            if(isSymbol(this.power)) {\r\n                this.power.negate();\r\n            }\r\n            else if(this.group === CB && all) {\r\n                this.each(function (x) {\r\n                    return x.invert();\r\n                });\r\n            }\r\n            else {\r\n                if(this.power && this.group !== N)\r\n                    this.power.negate();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Symbols of group CP or PL may have the multiplier being carried by\r\n         * the top level symbol at any given time e.g. 2*(x+y+z). This is\r\n         * convenient in many cases, however in some cases the multiplier needs\r\n         * to be carried individually e.g. 2*x+2*y+2*z.\r\n         * This method distributes the multiplier over the entire symbol\r\n         * @param {boolean} all\r\n         * @returns {Symbol}\r\n         */\r\n        distributeMultiplier: function (all) {\r\n            var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\r\n            if(this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    s.multiplier = s.multiplier.multiply(this.multiplier);\r\n                    s.distributeMultiplier();\r\n                }\r\n                this.toUnitMultiplier();\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * This method expands the exponent over the entire symbol just like\r\n         * distributeMultiplier\r\n         * @returns {Symbol}\r\n         */\r\n        distributeExponent: function () {\r\n            if(!this.power.equals(1)) {\r\n                var p = this.power;\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    if(s.group === EX) {\r\n                        s.power = _.multiply(s.power, new Symbol(p));\r\n                    }\r\n                    else {\r\n                        this.symbols[x].power = this.symbols[x].power.multiply(p);\r\n                    }\r\n                }\r\n                this.toLinear();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method will attempt to up-convert or down-convert one symbol\r\n         * from one group to another. Not all symbols are convertible from one\r\n         * group to another however. In that case the symbol will remain\r\n         * unchanged.\r\n         * @param {int} group\r\n         * @param {string} imaginary\r\n         */\r\n        convert: function (group, imaginary) {\r\n            if(group > FN) {\r\n                //make a clone of this symbol;\r\n                var cp = this.clone();\r\n\r\n                //attach a symbols object and upgrade the group\r\n                this.symbols = {};\r\n\r\n                if(group === CB) {\r\n                    //symbol of group CB hold symbols bound together through multiplication\r\n                    //because of commutativity this multiplier can technically be anywhere within the group\r\n                    //to keep track of it however it's easier to always have the top level carry it\r\n                    cp.toUnitMultiplier();\r\n                }\r\n                else {\r\n                    //reset the symbol\r\n                    this.toUnitMultiplier();\r\n                }\r\n\r\n                if(this.group === FN) {\r\n                    cp.args = this.args;\r\n                    delete this.args;\r\n                    delete this.fname;\r\n                }\r\n\r\n                //the symbol may originate from the symbol i but this property no longer holds true\r\n                //after copying\r\n                if(this.isImgSymbol)\r\n                    delete this.isImgSymbol;\r\n\r\n                this.toLinear();\r\n                //attach a clone of this symbol to the symbols object using its proper key\r\n                this.symbols[cp.keyForGroup(group)] = cp;\r\n                this.group = group;\r\n                //objects by default don't have a length property. However, in order to keep track of the number\r\n                //of sub-symbols we have to impliment our own.\r\n                this.length = 1;\r\n            }\r\n            else if(group === EX) {\r\n                //1^x is just one so check and make sure\r\n                if(!(this.group === N && this.multiplier.equals(1))) {\r\n                    if(this.group !== EX)\r\n                        this.previousGroup = this.group;\r\n                    if(this.group === N) {\r\n                        this.value = this.multiplier.num.toString();\r\n                        this.toUnitMultiplier();\r\n                    }\r\n                    //update the hash to reflect the accurate hash\r\n                    else\r\n                        this.value = text(this, 'hash');\r\n\r\n                    this.group = EX;\r\n                }\r\n            }\r\n            else if(group === N) {\r\n                var m = this.multiplier.toDecimal();\r\n                if(this.symbols)\r\n                    this.symbols = undefined;\r\n                new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\r\n            }\r\n            else if(group === P && this.group === N) {\r\n                this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\r\n                this.toUnitMultiplier(!imaginary);\r\n                this.group = P;\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method is one of the principal methods to make it all possible.\r\n         * It performs cleanup and prep operations whenever a symbols is\r\n         * inserted. If the symbols results in a 1 in a CB (multiplication)\r\n         * group for instance it will remove the redundant symbol. Similarly\r\n         * in a symbol of group PL or CP (symbols glued by multiplication) it\r\n         * will remove any dangling zeroes from the symbol. It will also\r\n         * up-convert or down-convert a symbol if it detects that it's\r\n         * incorrectly grouped. It should be noted that this method is not\r\n         * called directly but rather by the 'attach' method for addition groups\r\n         * and the 'combine' method for multiplication groups.\r\n         * @param {Symbol} symbol\r\n         * @param {String} action\r\n         */\r\n        insert: function (symbol, action) {\r\n            //this check can be removed but saves a lot of aggravation when trying to hunt down\r\n            //a bug. If left, you will instantly know that the error can only be between 2 symbols.\r\n            if(!isSymbol(symbol))\r\n                err('Object ' + symbol + ' is not of type Symbol!');\r\n            if(this.symbols) {\r\n                var group = this.group;\r\n                if(group > FN) {\r\n                    var key = symbol.keyForGroup(group);\r\n                    var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\r\n                    if(action === 'add') {\r\n                        var hash = key;\r\n                        if(existing) {\r\n                            //add them together using the parser\r\n                            this.symbols[hash] = _.add(existing, symbol);\r\n                            //if the addition resulted in a zero multiplier remove it\r\n                            if(this.symbols[hash].multiplier.equals(0)) {\r\n                                delete this.symbols[hash];\r\n                                this.length--;\r\n\r\n                                if(this.length === 0) {\r\n                                    this.convert(N);\r\n                                    this.multiplier = new Frac(0);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //check if this is of group P and unwrap before inserting\r\n                        if(symbol.group === P && isInt(symbol.power)) {\r\n                            symbol.convert(N);\r\n                        }\r\n\r\n                        //transfer the multiplier to the upper symbol but only if the symbol numeric\r\n                        if(symbol.group !== EX) {\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                            symbol.toUnitMultiplier();\r\n                        }\r\n                        else {\r\n                            symbol.parens = symbol.multiplier.lessThan(0);\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\r\n                            symbol.toUnitMultiplier(true);\r\n                        }\r\n\r\n                        if(existing) {\r\n                            //remove because the symbol may have changed\r\n                            symbol = _.multiply(remove(this.symbols, key), symbol);\r\n                            if(symbol.isConstant()) {\r\n                                this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\r\n                            }\r\n\r\n                            this.length--;\r\n                            //clean up\r\n                        }\r\n\r\n                        //don't insert the symbol if it's 1\r\n                        if(!symbol.isOne(true)) {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                        else if(symbol.multiplier.lessThan(0)) {\r\n                            this.negate(); //put back the sign\r\n                        }\r\n                    }\r\n\r\n                    //clean up\r\n                    if(this.length === 0)\r\n                        this.convert(N);\r\n                    //update the hash\r\n                    if(this.group === CP || this.group === CB) {\r\n                        this.updateHash();\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        //the insert method for addition\r\n        attach: function (symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i = 0; i < symbol.length; i++)\r\n                    this.insert(symbol[i], 'add');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'add');\r\n        },\r\n        //the insert method for multiplication\r\n        combine: function (symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i = 0; i < symbol.length; i++)\r\n                    this.insert(symbol[i], 'multiply');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'multiply');\r\n        },\r\n        /**\r\n         * This method should be called after any major \"surgery\" on a symbol.\r\n         * It updates the hash of the symbol for example if the fname of a\r\n         * function has changed it will update the hash of the symbol.\r\n         */\r\n        updateHash: function () {\r\n            if(this.group === N)\r\n                return;\r\n\r\n            if(this.group === FN) {\r\n                var contents = '',\r\n                        args = this.args,\r\n                        is_parens = this.fname === PARENTHESIS;\r\n                for(var i = 0; i < args.length; i++)\r\n                    contents += (i === 0 ? '' : ',') + text(args[i]);\r\n                var fn_name = is_parens ? '' : this.fname;\r\n                this.value = fn_name + (is_parens ? contents : inBrackets(contents));\r\n            }\r\n            else if(!(this.group === S || this.group === PL)) {\r\n                this.value = text(this, 'hash');\r\n            }\r\n        },\r\n        /**\r\n         * this function defines how every group in stored within a group of\r\n         * higher order think of it as the switchboard for the library. It\r\n         * defines the hashes for symbols.\r\n         * @param {int} group\r\n         */\r\n        keyForGroup: function (group) {\r\n            var g = this.group;\r\n            var key;\r\n\r\n            if(g === N) {\r\n                key = this.value;\r\n            }\r\n            else if(g === S || g === P) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = this.value;\r\n            }\r\n            else if(g === FN) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n            else if(g === PL) {\r\n                //if the order is reversed then we'll assume multiplication\r\n                //TODO: possible future dilemma\r\n                if(group === CB)\r\n                    key = text(this, 'hash');\r\n                else if(group === CP) {\r\n                    if(this.power.equals(1))\r\n                        key = this.value;\r\n                    else\r\n                        key = inBrackets(text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\r\n                }\r\n                else if(group === PL)\r\n                    key = this.power.toString();\r\n                else\r\n                    key = this.value;\r\n                return key;\r\n            }\r\n            else if(g === CP) {\r\n                if(group === CP) {\r\n                    key = text(this, 'hash');\r\n                }\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = this.value;\r\n            }\r\n            else if(g === CB) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n            else if(g === EX) {\r\n                if(group === PL)\r\n                    key = text(this.power);\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n\r\n            return key;\r\n        },\r\n        /**\r\n         * Symbols are typically stored in an object which works fine for most\r\n         * cases but presents a problem when the order of the symbols makes\r\n         * a difference. This function simply collects all the symbols and\r\n         * returns them as an array. If a function is supplied then that\r\n         * function is called on every symbol contained within the object.\r\n         * @param {Function} fn\r\n         * @param {Object} opt\r\n         * @param {Function} sort_fn\r\n         * @@param {Boolean} expand_symbol\r\n         * @returns {Array}\r\n         */\r\n        collectSymbols: function (fn, opt, sort_fn, expand_symbol) {\r\n            var collected = [];\r\n            if(!this.symbols)\r\n                collected.push(this);\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var symbol = this.symbols[x];\r\n                    if(expand_symbol && (symbol.group === PL || symbol.group === CP)) {\r\n                        collected = collected.concat(symbol.collectSymbols());\r\n                    }\r\n                    else\r\n                        collected.push(fn ? fn(symbol, opt) : symbol);\r\n                }\r\n            }\r\n            if(sort_fn === null)\r\n                sort_fn = undefined; //WTF Firefox? Seriously?\r\n\r\n            return collected.sort(sort_fn);//sort hopefully gives us some sort of consistency\r\n        },\r\n        /**\r\n         * Returns the latex representation of the symbol\r\n         * @param {String} option\r\n         * @returns {String}\r\n         */\r\n        latex: function (option) {\r\n            return LaTeX.latex(this, option);\r\n        },\r\n        /**\r\n         * Returns the text representation of a symbol\r\n         * @param {String} option\r\n         * @returns {String}\r\n         */\r\n        text: function (option) {\r\n            return text(this, option);\r\n        },\r\n        /**\r\n         * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\r\n         * @@param {bool} abs Compares the absolute value\r\n         */\r\n        isOne: function (abs) {\r\n            var f = abs ? 'absEquals' : 'equals';\r\n            if(this.group === N)\r\n                return this.multiplier[f](1);\r\n            else\r\n                return this.power.equals(0);\r\n        },\r\n        isComposite: function () {\r\n            var g = this.group,\r\n                    pg = this.previousGroup;\r\n            return g === CP || g === PL || pg === PL || pg === CP;\r\n        },\r\n        isCombination: function () {\r\n            var g = this.group,\r\n                    pg = this.previousGroup;\r\n            return g === CB || pg === CB;\r\n        },\r\n        lessThan: function (n) {\r\n            return this.multiplier.lessThan(n);\r\n        },\r\n        greaterThan: function (n) {\r\n            if(!isSymbol(n)) {\r\n                n = new Symbol(n);\r\n            }\r\n\r\n            // We can't tell for sure if a is greater than be if they're not both numbers\r\n            if(!this.isConstant(true) || !n.isConstant(true)) {\r\n                return false;\r\n            }\r\n\r\n            return this.multiplier.greaterThan(n.multiplier);\r\n        },\r\n        /**\r\n         * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\r\n         * with other classes the symbol is either the denominator or not.\r\n         * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\r\n         * denominator and has to be found by looking at the actual symbols themselves.\r\n         */\r\n        getDenom: function () {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(this.group === CB && this.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.lessThan(0)) {\r\n                var d = _.parse(symbol.multiplier.den);\r\n                retval = symbol.toUnitMultiplier();\r\n                retval.power.negate();\r\n                retval = _.multiply(d, retval); //put back the coeff\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.den);\r\n                for(var x in symbol.symbols)\r\n                    if(symbol.symbols[x].power < 0)\r\n                        retval = _.multiply(retval, symbol.symbols[x].clone().invert());\r\n            }\r\n            else\r\n                retval = _.parse(symbol.multiplier.den);\r\n            return retval;\r\n        },\r\n        getNum: function () {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(symbol.group === CB && symbol.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.greaterThan(0) && symbol.group !== CB) {\r\n                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.num);\r\n                symbol.each(function (x) {\r\n                    if(x.power > 0 || x.group === EX && x.power.multiplier > 0) {\r\n                        retval = _.multiply(retval, x.clone());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                retval = _.parse(symbol.multiplier.num);\r\n            }\r\n            return retval;\r\n        },\r\n        toString: function () {\r\n            return this.text();\r\n        }\r\n    };\r\n\r\n//Parser =======================================================================\r\n    //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\r\n    function Parser() {\r\n        //Point to the local parser instead of the global one\r\n        var _ = this;\r\n        var bin = {};\r\n        var preprocessors = {names: [], actions: []};\r\n\r\n//Parser.classes ===============================================================\r\n        function Slice(upper, lower) {\r\n            this.start = upper;\r\n            this.end = lower;\r\n        }\r\n        ;\r\n        Slice.prototype.isConstant = function () {\r\n            return this.start.isConstant() && this.end.isConstant();\r\n        };\r\n        Slice.prototype.text = function () {\r\n            return text(this.start) + ':' + text(this.end);\r\n        };\r\n\r\n        /**\r\n         * Class used to collect arguments for functions\r\n         * @returns {Parser.Collection}\r\n         */\r\n        function Collection() {\r\n            this.elements = [];\r\n        }\r\n        Collection.prototype.append = function (e) {\r\n            this.elements.push(e);\r\n        };\r\n        Collection.prototype.getItems = function () {\r\n            return this.elements;\r\n        };\r\n        Collection.prototype.toString = function () {\r\n            return _.pretty_print(this.elements);\r\n        };\r\n        Collection.create = function (e) {\r\n            var collection = new Collection();\r\n            if(e)\r\n                collection.append(e);\r\n            return collection;\r\n        };\r\n\r\n        function Token(node, node_type, column) {\r\n            this.type = node_type;\r\n            this.value = node;\r\n            if(column !== undefined)\r\n                this.column = column + 1;\r\n            if(node_type === Token.OPERATOR) {\r\n                //copy everything over from the operator\r\n                var operator = operators[node];\r\n                for(var x in operator)\r\n                    this[x] = operator[x];\r\n\r\n            }\r\n            else if(node_type === Token.FUNCTION) {\r\n                this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\r\n                this.leftAssoc = false;\r\n            }\r\n        }\r\n        Token.prototype.toString = function () {\r\n            return this.value;\r\n        };\r\n        Token.prototype.toString = function () {\r\n            if(this.is_prefix)\r\n                return '`' + this.value;\r\n            return this.value;\r\n        };\r\n        //some constants\r\n        Token.OPERATOR = 'OPERATOR';\r\n        Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\r\n        Token.FUNCTION = 'FUNCTION';\r\n        Token.UNIT = 'UNIT';\r\n        Token.KEYWORD = 'KEYWORD';\r\n        Token.MAX_PRECEDENCE = 999;\r\n        //create link to classes\r\n        this.classes = {\r\n            Collection: Collection,\r\n            Slice: Slice,\r\n            Token: Token\r\n        };\r\n//Parser.modules ===============================================================\r\n        //object for functions which handle complex number\r\n        var complex = {\r\n            prec: undefined,\r\n            cos: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cos(r) * Math.cosh(i));\r\n                im = _.parse(Math.sin(r) * Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sin: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(r) * Math.cosh(i));\r\n                im = _.parse(Math.cos(r) * Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tan: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\r\n                im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sec: function (r, i) {\r\n                var t = this.removeDen(this.cos(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csc: function (r, i) {\r\n                var t = this.removeDen(this.sin(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            cot: function (r, i) {\r\n                var t = this.removeDen(this.tan(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acos: function (r, i) {\r\n                var symbol, sq, a, b, c, squared;\r\n                symbol = this.fromArray([r, i]);\r\n                squared = _.pow(symbol.clone(), new Symbol(2));\r\n                sq = _.expand(squared); //z*z\r\n                a = _.multiply(sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\r\n                b = _.expand(_.add(symbol.clone(), a));\r\n                c = log(b);\r\n                return _.expand(_.multiply(Symbol.imaginary().negate(), c));\r\n            },\r\n            asin: function (r, i) {\r\n                return _.subtract(_.parse('pi/2'), this.acos(r, i));\r\n            },\r\n            atan: function (r, i) {\r\n                // Handle i and -i\r\n                if(r.equals(0) && (i.equals(1) || i.equals(-1))) {\r\n                    // Just copy Wolfram Alpha for now. The parenthesis \r\n                    return _.parse(`${Symbol.infinity()}*${Settings.IMAGINARY}*${i}`);\r\n                }\r\n                var a, b, c, symbol;\r\n                symbol = complex.fromArray([r, i]);\r\n                a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\r\n                b = log(_.expand(_.subtract(new Symbol(1), a.clone())));\r\n                c = log(_.expand(_.add(new Symbol(1), a.clone())));\r\n                return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\r\n            },\r\n            asec: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.acos.apply(this, d);\r\n            },\r\n            acsc: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.asin.apply(this, d);\r\n            },\r\n            acot: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.atan.apply(this, d);\r\n            },\r\n            //Hyperbolic trig\r\n            cosh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cosh(r) * Math.cos(i));\r\n                im = _.parse(Math.sinh(r) * Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sinh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(r) * Math.cos(i));\r\n                im = _.parse(Math.cosh(r) * Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tanh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\r\n                im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sech: function (r, i) {\r\n                var t = this.removeDen(this.cosh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csch: function (r, i) {\r\n                var t = this.removeDen(this.sinh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            coth: function (r, i) {\r\n                var t = this.removeDen(this.tanh(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acosh: function (r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(z.clone(), new Symbol(1)));\r\n                b = sqrt(_.subtract(z.clone(), new Symbol(1)));\r\n                return _.expand(log(_.add(z, _.expand(_.multiply(a, b)))));\r\n            },\r\n            asinh: function (r, i) {\r\n                var a, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\r\n                return _.expand(log(_.add(z, a)));\r\n            },\r\n            atanh: function (r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = log(_.add(z.clone(), new Symbol(1)));\r\n                b = log(_.subtract(new Symbol(1), z));\r\n                return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\r\n            },\r\n            asech: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.acosh.apply(this, t);\r\n            },\r\n            acsch: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.asinh.apply(this, t);\r\n            },\r\n            acoth: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.atanh.apply(this, t);\r\n            },\r\n            sqrt: function (symbol) {\r\n                var re, im, h, a, d;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n                h = Symbol.hyp(re, im);\r\n                a = _.add(re.clone(), h);\r\n                d = sqrt(_.multiply(new Symbol(2), a.clone()));\r\n                return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\r\n            },\r\n            log: function (r, i) {\r\n                var re, im, phi;\r\n                re = log(Symbol.hyp(r, i));\r\n                phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal())) : Math.atan2(i, r);\r\n                im = _.parse(phi);\r\n                return _.add(re, _.multiply(Symbol.imaginary(), im));\r\n            },\r\n            erf(symbol, n) {\r\n                //Do nothing for now. Revisit this in the future.\r\n                return _.symfunction('erf', [symbol]);\r\n\r\n                n = n || 30;\r\n\r\n                var f = function (R, I) {\r\n                    return block('PARSE2NUMBER', function () {\r\n                        var retval = new Symbol(0);\r\n                        for(var i = 0; i < n; i++) {\r\n                            var a, b;\r\n                            a = _.parse(bigDec.exp(bigDec(i).toPower(2).neg().dividedBy(bigDec(n).pow(2).plus(bigDec(R).toPower(2).times(4)))));\r\n                            b = _.parse(format('2*({1})-e^(-(2*{0}*{1}*{2}))*(2*{1}*cosh({2}*{3})-{0}*{3}*sinh({3}*{2}))', Settings.IMAGINARY, R, I, i));\r\n                            retval = _.add(retval, _.multiply(a, b));\r\n                        }\r\n                        return _.multiply(retval, new Symbol(2));\r\n                    }, true);\r\n                };\r\n                var re, im, a, b, c, k;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n\r\n                k = _.parse(format('(e^(-{0}^2))/pi', re));\r\n                a = _.parse(format('(1-e^(-(2*{0}*{1}*{2})))/(2*{1})', Settings.IMAGINARY, re, im));\r\n                b = f(re.toString(), im.toString());\r\n\r\n                return _.add(_.parse(Math2.erf(re.toString())), _.multiply(k, _.add(a, b)));\r\n            },\r\n            removeDen: function (symbol) {\r\n                var den, r, i, re, im;\r\n                if(isArray(symbol)) {\r\n                    r = symbol[0];\r\n                    i = symbol[1];\r\n                }\r\n                else {\r\n                    r = symbol.realpart();\r\n                    i = symbol.imagpart();\r\n                }\r\n\r\n                den = Math.pow(r, 2) + Math.pow(i, 2);\r\n                re = _.parse(r / den);\r\n                im = _.parse(i / den);\r\n                return [re, im];\r\n            },\r\n            fromArray: function (arr) {\r\n                return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\r\n            },\r\n            evaluate: function (symbol, f) {\r\n                var re, im, sign;\r\n\r\n                sign = symbol.power.sign();\r\n                //remove it from under the denominator\r\n                symbol.power = symbol.power.abs();\r\n                //expand\r\n                if(symbol.power.greaterThan(1))\r\n                    symbol = _.expand(symbol);\r\n                //remove the denominator\r\n                if(sign < 0) {\r\n                    var d = this.removeDen(symbol);\r\n                    re = d[0];\r\n                    im = d[1];\r\n                }\r\n                else {\r\n                    re = symbol.realpart();\r\n                    im = symbol.imagpart();\r\n                }\r\n\r\n                if(re.isConstant('all') && im.isConstant('all'))\r\n                    return this[f].call(this, re, im);\r\n\r\n                return _.symfunction(f, [symbol]);\r\n            }\r\n        };\r\n        //object for functions which handle trig\r\n        var trig = this.trig = {\r\n            //container for trigonometric function\r\n            cos: function (symbol) {\r\n                if(symbol.equals('pi') && symbol.multiplier.den.equals(2))\r\n                    return new Symbol(0);\r\n\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(new Symbol(Settings.PI / 2)))\r\n                        return new Symbol(0);\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.cos(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.cos(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cos');\r\n                    }\r\n                }\r\n                if(symbol.equals(0))\r\n                    return new Symbol(1);\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(even(m) ? 1 : -1);\r\n                    }\r\n                    else {\r\n                        var n = Number(m.num), d = Number(m.den);\r\n                        if(d === 2)\r\n                            retval = new Symbol(0);\r\n                        else if(d === 3) {\r\n                            retval = _.parse('1/2');\r\n                            c = true;\r\n                        }\r\n                        else if(d === 4) {\r\n                            retval = _.parse('1/sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d === 6) {\r\n                            retval = _.parse('sqrt(3)/2');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('cos', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3))\r\n                    retval.negate();\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('cos', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            sin: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol % Math.PI === 0) {\r\n                            return new Symbol(0);\r\n                        }\r\n\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.sin(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.sin(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'sin');\r\n                }\r\n\r\n                if(symbol.equals(0))\r\n                    return new Symbol(0);\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        sign = symbol.multiplier.sign(),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n                if(symbol.equals('pi'))\r\n                    retval = new Symbol(0);\r\n                else if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(0);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)/2');\r\n                            c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('1/sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/2');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            tan: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol % Math.PI === 0 && symbol.isLinear()) {\r\n                        return new Symbol(0);\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.tan(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.tan(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'tan');\r\n                }\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(0);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            throw new UndefinedError('tan is undefined for ' + symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('tan', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('tan', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            sec: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.cos(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.sec(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'sec');\r\n                    return _.parse(format('1/cos({0})', symbol));\r\n                }\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(even(m) ? 1 : -1);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            throw new UndefinedError('sec is undefined for ' + symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = new Symbol(2);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('2/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('sec', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3))\r\n                    retval.negate();\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('sec', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            csc: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.sin(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.csc(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'csc');\r\n                    return _.parse(format('1/sin({0})', symbol));\r\n                }\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        sign = symbol.multiplier.sign(),\r\n                        m = symbol.multiplier.abs();\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('csc is undefined for ' + symbol.toString());\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('2/sqrt(3)');\r\n                            c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = new Symbol(2);\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            cot: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol % (Math.PI/2) === 0) {\r\n                        return new Symbol(0);\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.tan(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.cot(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'cot');\r\n                    return _.parse(format('1/tan({0})', symbol));\r\n                }\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('cot is undefined for ' + symbol.toString());\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            retval = new Symbol(0);\r\n                        else if(d == 3) {\r\n                            retval = _.parse('1/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('cot', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('cot', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            acos: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle values in the complex domain\r\n                        if(symbol.gt(1) || symbol.lt(-1)) {\r\n                            var x = symbol.toString();\r\n                            return expand(evaluate(`pi/2-asin(${x})`));\r\n                        }\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.acos(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.acos(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acos');\r\n                }\r\n                return _.symfunction('acos', arguments);\r\n            },\r\n            asin: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle values in the complex domain\r\n                        if(symbol.gt(1) || symbol.lt(-1)) {\r\n                            var i = Settings.IMAGINARY;\r\n                            var x = symbol.multiplier.toDecimal();\r\n                            return expand(evaluate(`${i}*log(sqrt(1-${x}^2)-${i}*${x})`));\r\n                        }\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.asin(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.asin(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'asin');\r\n                }\r\n                return _.symfunction('asin', arguments);\r\n            },\r\n            atan: function (symbol) {\r\n                var retval;\r\n                if(symbol.equals(0))\r\n                    retval = new Symbol(0);\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.atan(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.atan(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'atan');\r\n                    return _.symfunction('atan', arguments);\r\n                }\r\n                else if(symbol.equals(-1))\r\n                    retval = _.parse('-pi/4');\r\n                else\r\n                    retval = _.symfunction('atan', arguments);\r\n                return retval;\r\n            },\r\n            asec: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(0)) {\r\n                        throw new OutOfFunctionDomainError('Input is out of the domain of sec!');\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        return trig.acos(symbol.invert());\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'asec');\r\n                    }\r\n                }\r\n                return _.symfunction('asec', arguments);\r\n            },\r\n            acsc: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return trig.asin(symbol.invert());\r\n                    }\r\n\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acsc');\r\n                }\r\n                return _.symfunction('acsc', arguments);\r\n            },\r\n            acot: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\r\n                    }\r\n\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acot');\r\n                }\r\n                return _.symfunction('acot', arguments);\r\n            },\r\n            atan2: function (a, b) {\r\n                if(a.equals(0) && b.equals(0))\r\n                    throw new UndefinedError('atan2 is undefined for 0, 0');\r\n\r\n                if(Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\r\n                    return new Symbol(Math.atan2(a, b));\r\n                }\r\n                return _.symfunction('atan2', arguments);\r\n            }\r\n        };\r\n        //object for functions which handle hyperbolic trig\r\n        var trigh = this.trigh = {\r\n            //container for hyperbolic trig function\r\n            cosh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.cosh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cosh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('cosh', arguments);\r\n            },\r\n            sinh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.sinh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sinh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('sinh', arguments);\r\n            },\r\n            tanh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.tanh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'tanh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('tanh', arguments);\r\n            },\r\n            sech: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return new Symbol(Math.sech(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sech');\r\n                    }\r\n                    return _.parse(format('1/cosh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('sech', arguments);\r\n            },\r\n            csch: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.csch(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'csch');\r\n                    }\r\n                    return _.parse(format('1/sinh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('csch', arguments);\r\n            },\r\n            coth: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.coth(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'coth');\r\n                    }\r\n                    return _.parse(format('1/tanh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('coth', arguments);\r\n            },\r\n            acosh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acosh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2-1))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('acosh', arguments);\r\n                return retval;\r\n            },\r\n            asinh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asinh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2+1))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('asinh', arguments);\r\n                return retval;\r\n            },\r\n            atanh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'atanh');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    retval = evaluate(_.parse(format('(1/2)*' + Settings.LOG + '((1+({0}))/(1-({0})))', symbol.toString())));\r\n                }\r\n                else\r\n                    retval = _.symfunction('atanh', arguments);\r\n                return retval;\r\n            },\r\n            asech: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asech');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(log(_.add(symbol.clone().invert(), sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));\r\n                else\r\n                    retval = _.symfunction('asech', arguments);\r\n                return retval;\r\n            },\r\n            acsch: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acsch');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('acsch', arguments);\r\n                return retval;\r\n            },\r\n            acoth: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acoth');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(1))\r\n                        retval = Symbol.infinity();\r\n                    else\r\n                        retval = evaluate(\r\n                                _.divide(\r\n                                        log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))),\r\n                                        new Symbol(2)));\r\n                }\r\n                else\r\n                    retval = _.symfunction('acoth', arguments);\r\n                return retval;\r\n            }\r\n        };\r\n        //list of supported units\r\n        this.units = {};\r\n        //list all the supported operators\r\n        var operators = {\r\n            '\\\\': {\r\n                precedence: 8,\r\n                operator: '\\\\',\r\n                action: 'slash',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; //bypass the slash\r\n                }\r\n            },\r\n            '!!': {\r\n                precedence: 7,\r\n                operator: '!!',\r\n                action: 'dfactorial',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\r\n                }\r\n            },\r\n            '!': {\r\n                precedence: 7,\r\n                operator: '!',\r\n                action: 'factorial',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return factorial(e); //wrap it in a factorial function\r\n                }\r\n            },\r\n            '^': {\r\n                precedence: 6,\r\n                operator: '^',\r\n                action: 'pow',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            },\r\n            '**': {\r\n                precedence: 6,\r\n                operator: '**',\r\n                action: 'pow',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            },\r\n            '%': {\r\n                precedence: 4,\r\n                operator: '%',\r\n                action: 'percent',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                overloaded: true,\r\n                overloadAction: 'mod',\r\n                overloadLeftAssoc: false,\r\n                operation: function (x) {\r\n                    return _.divide(x, new Symbol(100));\r\n                }\r\n            },\r\n            '*': {\r\n                precedence: 4,\r\n                operator: '*',\r\n                action: 'multiply',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '/': {\r\n                precedence: 4,\r\n                operator: '/',\r\n                action: 'divide',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '+': {\r\n                precedence: 3,\r\n                operator: '+',\r\n                action: 'add',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x;\r\n                }\r\n            },\r\n            'plus': {\r\n                precedence: 3,\r\n                operator: 'plus',\r\n                action: 'add',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x;\r\n                }\r\n            },\r\n            '-': {\r\n                precedence: 3,\r\n                operator: '-',\r\n                action: 'subtract',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x.negate();\r\n                }\r\n            },\r\n            '=': {\r\n                precedence: 2,\r\n                operator: '=',\r\n                action: 'equals',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '==': {\r\n                precedence: 1,\r\n                operator: '==',\r\n                action: 'eq',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '<': {\r\n                precedence: 1,\r\n                operator: '<',\r\n                action: 'lt',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '<=': {\r\n                precedence: 1,\r\n                operator: '<=',\r\n                action: 'lte',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '>': {\r\n                precedence: 1,\r\n                operator: '>',\r\n                action: 'gt',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '=>': {\r\n                precedence: 1,\r\n                operator: '=>',\r\n                action: 'gte',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            ',': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'comma',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            ':': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'assign',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                vectorFn: 'slice'\r\n            },\r\n            ':=': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'function_assign',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            }\r\n        };\r\n        //brackets\r\n        var brackets = {\r\n            '(': {\r\n                type: 'round',\r\n                id: 1,\r\n                is_open: true,\r\n                is_close: false\r\n            },\r\n            ')': {\r\n                type: 'round',\r\n                id: 2,\r\n                is_open: false,\r\n                is_close: true\r\n            },\r\n            '[': {\r\n                type: 'square',\r\n                id: 3,\r\n                is_open: true,\r\n                is_close: false,\r\n                maps_to: 'vector'\r\n            },\r\n            ']': {\r\n                type: 'square',\r\n                id: 4,\r\n                is_open: false,\r\n                is_close: true\r\n            },\r\n            '{': {\r\n                type: 'curly',\r\n                id: 5,\r\n                is_open: true,\r\n                is_close: false,\r\n                maps_to: 'Set'\r\n            },\r\n            '}': {\r\n                type: 'curly',\r\n                id: 6,\r\n                is_open: false,\r\n                is_close: true\r\n            }\r\n        };\r\n        // Supported functions.\r\n        // Format: function_name: [mapped_function, number_of_parameters]\r\n        var functions = this.functions = {\r\n            'cos': [trig.cos, 1],\r\n            'sin': [trig.sin, 1],\r\n            'tan': [trig.tan, 1],\r\n            'sec': [trig.sec, 1],\r\n            'csc': [trig.csc, 1],\r\n            'cot': [trig.cot, 1],\r\n            'acos': [trig.acos, 1],\r\n            'asin': [trig.asin, 1],\r\n            'atan': [trig.atan, 1],\r\n            'arccos': [trig.acos, 1],\r\n            'arcsin': [trig.asin, 1],\r\n            'arctan': [trig.atan, 1],\r\n            'asec': [trig.asec, 1],\r\n            'acsc': [trig.acsc, 1],\r\n            'acot': [trig.acot, 1],\r\n            'atan2': [trig.atan2, 2],\r\n            'acoth': [trigh.acoth, 1],\r\n            'asech': [trigh.asech, 1],\r\n            'acsch': [trigh.acsch, 1],\r\n            'sinh': [trigh.sinh, 1],\r\n            'cosh': [trigh.cosh, 1],\r\n            'tanh': [trigh.tanh, 1],\r\n            'asinh': [trigh.asinh, 1],\r\n            'sech': [trigh.sech, 1],\r\n            'csch': [trigh.csch, 1],\r\n            'coth': [trigh.coth, 1],\r\n            'acosh': [trigh.acosh, 1],\r\n            'atanh': [trigh.atanh, 1],\r\n            'log10': [, 1],\r\n            'exp': [exp, 1],\r\n            'radians': [radians, 1],\r\n            'degrees': [degrees, 1],\r\n            'min': [min, -1],\r\n            'max': [max, -1],\r\n            'erf': [, 1],\r\n            'floor': [, 1],\r\n            'ceil': [, 1],\r\n            'trunc': [, 1],\r\n            'Si': [, 1],\r\n            'step': [, 1],\r\n            'rect': [, 1],\r\n            'sinc': [sinc, 1],\r\n            'tri': [, 1],\r\n            'sign': [sign, 1],\r\n            'Ci': [, 1],\r\n            'Ei': [, 1],\r\n            'Shi': [, 1],\r\n            'Chi': [, 1],\r\n            'Li': [, 1],\r\n            'fib': [, 1],\r\n            'fact': [factorial, 1],\r\n            'factorial': [factorial, 1],\r\n            'continued_fraction': [continued_fraction, [1, 2]],\r\n            'dfactorial': [, 1],\r\n            'gamma_incomplete': [, [1, 2]],\r\n            'round': [round, [1, 2]],\r\n            'scientific': [scientific, [1, 2]],\r\n            'mod': [mod, 2],\r\n            'pfactor': [pfactor, 1],\r\n            'vector': [vector, -1],\r\n            'matrix': [matrix, -1],\r\n            'Set': [set, -1],\r\n            'imatrix': [imatrix, -1],\r\n            'parens': [parens, -1],\r\n            'sqrt': [sqrt, 1],\r\n            'cbrt': [cbrt, 1],\r\n            'nthroot': [nthroot, 2],\r\n            'log': [log, [1, 2]],\r\n            'expand': [expandall, 1],\r\n            'abs': [abs, 1],\r\n            'invert': [invert, 1],\r\n            'determinant': [determinant, 1],\r\n            'size': [size, 1],\r\n            'transpose': [transpose, 1],\r\n            'dot': [dot, 2],\r\n            'cross': [cross, 2],\r\n            'vecget': [vecget, 2],\r\n            'vecset': [vecset, 3],\r\n            'vectrim': [vectrim, [1, 2]],\r\n            'matget': [matget, 3],\r\n            'matset': [matset, 4],\r\n            'matgetrow': [matgetrow, 2],\r\n            'matsetrow': [matsetrow, 3],\r\n            'matgetcol': [matgetcol, 2],\r\n            'matsetcol': [matsetcol, 3],\r\n            'rationalize': [rationalize, 1],\r\n            'IF': [IF, 3],\r\n            'is_in': [is_in, 2],\r\n            //imaginary support\r\n            'realpart': [realpart, 1],\r\n            'imagpart': [imagpart, 1],\r\n            'conjugate': [conjugate, 1],\r\n            'arg': [arg, 1],\r\n            'polarform': [polarform, 1],\r\n            'rectform': [rectform, 1],\r\n            'sort': [sort, [1, 2]],\r\n            'integer_part': [, 1],\r\n            'union': [union, 2],\r\n            'contains': [contains, 2],\r\n            'intersection': [intersection, 2],\r\n            'difference': [difference, 2],\r\n            'intersects': [intersects, 2],\r\n            'is_subset': [is_subset, 2],\r\n            //system support\r\n            'print': [print, -1]\r\n        };\r\n\r\n        //error handler\r\n        this.error = err;\r\n        //this function is used to comb through the function modules and find a function given its name\r\n        var findFunction = function (fname) {\r\n            var fmodules = Settings.FUNCTION_MODULES,\r\n                    l = fmodules.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var fmodule = fmodules[i];\r\n                if(fname in fmodule)\r\n                    return fmodule[fname];\r\n            }\r\n            err('The function ' + fname + ' is undefined!');\r\n        };\r\n\r\n        /**\r\n         * This method gives the ability to override operators with new methods.\r\n         * @param {String} which\r\n         * @param {Function} with_what\r\n         */\r\n        this.override = function (which, with_what) {\r\n            if(!bin[which])\r\n                bin[which] = [];\r\n            bin[which].push(this[which]);\r\n            this[which] = with_what;\r\n        };\r\n\r\n        /**\r\n         * Restores a previously overridden operator\r\n         * @param {String} what\r\n         */\r\n        this.restore = function (what) {\r\n            if(this[what])\r\n                this[what] = bin[what].pop();\r\n        };\r\n\r\n        /**\r\n         * This method is supposed to behave similarly to the override method but it does not override\r\n         * the existing function rather it only extends it\r\n         * @param {String} what\r\n         * @param {Function} with_what\r\n         * @param {boolean} force_call\r\n         */\r\n        this.extend = function (what, with_what, force_call) {\r\n            var _ = this,\r\n                    extended = this[what];\r\n            if(typeof extended === 'function' && typeof with_what === 'function') {\r\n                var f = this[what];\r\n                this[what] = function (a, b) {\r\n                    if(isSymbol(a) && isSymbol(b) && !force_call)\r\n                        return f.call(_, a, b);\r\n                    else\r\n                        return with_what.call(_, a, b, f);\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Generates library's representation of a function. It's a fancy way of saying a symbol with\r\n         * a few extras. The most important thing is that that it gives a fname and\r\n         * an args property to the symbols in addition to changing its group to FN\r\n         * @param {String} fn_name\r\n         * @param {Array} params\r\n         * @returns {Symbol}\r\n         */\r\n        this.symfunction = function (fn_name, params) {\r\n            //call the proper function and return the result;\r\n            var f = new Symbol(fn_name);\r\n            f.group = FN;\r\n            if(typeof params === 'object')\r\n                params = [].slice.call(params);//ensure an array\r\n            f.args = params;\r\n            f.fname = fn_name === PARENTHESIS ? '' : fn_name;\r\n            f.updateHash();\r\n            return f;\r\n        };\r\n\r\n        /**\r\n         * An internal function call for the Parser. This will either trigger a real\r\n         * function call if it can do so or just return a symbolic representation of the\r\n         * function using symfunction.\r\n         * @param {String} fn_name\r\n         * @param {Array} args\r\n         * @param {int} allowed_args\r\n         * @returns {Symbol}\r\n         */\r\n        this.callfunction = function (fn_name, args, allowed_args) {\r\n            var fn_settings = functions[fn_name];\r\n\r\n            if(!fn_settings)\r\n                err('Nerdamer currently does not support the function ' + fn_name);\r\n\r\n            var num_allowed_args = fn_settings[1] || allowed_args, //get the number of allowed arguments\r\n                    fn = fn_settings[0], //get the mapped function\r\n                    retval;\r\n            //We want to be able to call apply on the arguments or create a symfunction. Both require\r\n            //an array so make sure to wrap the argument in an array.\r\n            if(!(args instanceof Array))\r\n                args = args !== undefined ? [args] : [];\r\n\r\n            if(num_allowed_args !== -1) {\r\n                var is_array = isArray(num_allowed_args),\r\n                        min_args = is_array ? num_allowed_args[0] : num_allowed_args,\r\n                        max_args = is_array ? num_allowed_args[1] : num_allowed_args,\r\n                        num_args = args.length;\r\n\r\n                var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\r\n\r\n                if(num_args < min_args)\r\n                    err(format(error_msg, 'minimum', min_args, num_args));\r\n                if(num_args > max_args)\r\n                    err(format(error_msg, 'maximum', max_args, num_args));\r\n            }\r\n\r\n            /*\r\n             * The following are very important to the how nerdamer constructs functions!\r\n             * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\r\n             *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\r\n             * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\r\n             * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\r\n             *     they are expecting a symbolic output.\r\n             */\r\n            //check if arguments are all numers\r\n            var numericArgs = allNumbers(args);\r\n            //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\r\n//            if (Settings.USE_BIG && numericArgs) {\r\n//                retval = Big[fn_name].apply(undefined, args);\r\n//            }\r\n//            else {\r\n            if(!fn) {\r\n                //Remember assumption 1. No function defined so it MUST be numeric in nature\r\n                fn = findFunction(fn_name);\r\n                if(Settings.PARSE2NUMBER && numericArgs)\r\n                    retval = bigConvert(fn.apply(fn, args));\r\n                else\r\n                    retval = _.symfunction(fn_name, args);\r\n            }\r\n            else {\r\n                //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\r\n                retval = fn.apply(fn_settings[2], args);\r\n            }\r\n//            }\r\n\r\n            return retval;\r\n        };\r\n        /**\r\n         * Build a regex based on the operators currently loaded. These operators are to be ignored when\r\n         * substituting spaces for multiplication\r\n         */\r\n        this.operator_filter_regex = (function () {\r\n            //we only want the operators which are singular since those are the ones\r\n            //that nerdamer uses anyway\r\n            var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\r\n                if(x.length === 1)\r\n                    return x;\r\n            }).join('\\\\');\r\n            //create a regex which captures all spaces between characters except those\r\n            //have an operator on one end\r\n            return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\r\n        })();\r\n\r\n        /**\r\n         * Replaces nerdamer.setOperator\r\n         * @param {object} operator\r\n         * @param {boolean} shift\r\n         */\r\n        this.setOperator = function (operator, action, shift) {\r\n            var name = operator.operator; //take the name to be the symbol\r\n            operators[name] = operator;\r\n            if(action)\r\n                this[operator.action] = action;\r\n            //make the parser aware of the operator\r\n            _[name] = operator.operation;\r\n            //make the action available to the parser if infix\r\n            if(!operator.action && !(operator.prefix || operator.postif)) {\r\n                operator.action = name;\r\n            }\r\n            //if this operator is exclusive then all successive operators should be shifted\r\n            if(shift === 'over' || shift === 'under') {\r\n                var precedence = operator.precedence;\r\n\r\n                for(var x in operators) {\r\n                    var o = operators[x];\r\n                    var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\r\n                    if(condition)\r\n                        o.precedence++;\r\n                }\r\n                ;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Gets an opererator by its symbol\r\n         * @param {String} operator\r\n         * @returns {Object}\r\n         */\r\n        this.getOperator = function (operator) {\r\n            return operators[operator];\r\n        };\r\n\r\n        this.aliasOperator = function (o, n) {\r\n            var t = {};\r\n            var operator = operators[o];\r\n            //copy everything over to the new operator\r\n            for(var x in operator) {\r\n                t[x] = operator[x];\r\n            }\r\n            //update the symbol\r\n            t.operator = n;\r\n\r\n            this.setOperator(t);\r\n        };\r\n\r\n        /**\r\n         * Returns the list of operators. Caution! Can break parser!\r\n         * @returns {object}\r\n         */\r\n        this.getOperators = function () {\r\n            //will replace this with some cloning action in the future\r\n            return operators;\r\n        };\r\n\r\n        this.getBrackets = function () {\r\n            return brackets;\r\n        };\r\n        /*\r\n         * Preforms preprocessing on the string. Useful for making early modification before\r\n         * sending to the parser\r\n         * @param {String} e\r\n         */\r\n        var prepare_expression = function (e) {\r\n            /*\r\n             * Since variables cannot start with a number, the assumption is made that when this occurs the\r\n             * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for\r\n             * a side-by-side close and open parenthesis\r\n             */\r\n            e = String(e);\r\n            //apply preprocessors\r\n            for(var i = 0; i < preprocessors.actions.length; i++)\r\n                e = preprocessors.actions[i].call(this, e);\r\n\r\n            //e = e.split(' ').join('');//strip empty spaces\r\n            //replace multiple spaces with one space\r\n            e = e.replace(/\\s+/g, ' ');\r\n\r\n            //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\r\n            if(/e/gi.test(e)) {\r\n                e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) {\r\n                    return scientificToDecimal(x);\r\n                });\r\n            }\r\n            //replace scientific numbers\r\n\r\n            //allow omission of multiplication after coefficients\r\n            e = e.replace(Settings.IMPLIED_MULTIPLICATION_REGEX, function () {\r\n                var str = arguments[4],\r\n                        group1 = arguments[1],\r\n                        group2 = arguments[2],\r\n                        start = arguments[3],\r\n                        first = str.charAt(start),\r\n                        before = '',\r\n                        d = '*';\r\n                if(!first.match(/[\\+\\-\\/\\*]/))\r\n                    before = str.charAt(start - 1);\r\n                if(before.match(/[a-z]/i))\r\n                    d = '';\r\n                return group1 + d + group2;\r\n            })\r\n                    .replace(/([a-z0-9_]+)/gi, function (match, a) {\r\n                        if(Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\r\n                            if(!isNaN(a))\r\n                                return a;\r\n                            return a.split('').join('*');\r\n                        }\r\n                        return a;\r\n                    })\r\n                    //allow omission of multiplication sign between brackets\r\n                    .replace(/\\)\\(/g, ')*(') || '0';\r\n            //replace x(x+a) with x*(x+a)\r\n            while(true) {\r\n                var e_org = e; //store the original\r\n                e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\r\n                    var g1 = a || c,\r\n                            g2 = b || d;\r\n                    if(g1 in functions) //create a passthrough for functions\r\n                        return g1 + g2;\r\n                    return g1 + '*' + g2;\r\n                });\r\n                //if the original equals the replace we're done\r\n                if(e_org === e)\r\n                    break;\r\n            }\r\n            return e;\r\n        };\r\n        //delay setting of constants until Settings is ready\r\n        this.initConstants = function () {\r\n            this.CONSTANTS = {\r\n                E: new Symbol(Settings.E),\r\n                PI: new Symbol(Settings.PI)\r\n            };\r\n        };\r\n        /*\r\n         * Debugging method used to better visualize vector and arrays\r\n         * @param {object} o\r\n         * @returns {String}\r\n         */\r\n        this.pretty_print = function (o) {\r\n            if(Array.isArray(o)) {\r\n                var s = o.map(x => _.pretty_print(x)).join(', ');\r\n                if(o.type === 'vector')\r\n                    return 'vector<' + s + '>';\r\n                return '(' + s + ')';\r\n            }\r\n            return o.toString();\r\n        };\r\n        this.peekers = {\r\n            pre_operator: [],\r\n            post_operator: [],\r\n            pre_function: [],\r\n            post_function: []\r\n        };\r\n\r\n        this.callPeekers = function (name) {\r\n            if(Settings.callPeekers) {\r\n                var peekers = this.peekers[name];\r\n                //remove the first items and stringify\r\n                var args = arguments2Array(arguments).slice(1).map(stringify);\r\n                //call each one of the peekers\r\n                for(var i = 0; i < peekers.length; i++) {\r\n                    peekers[i].apply(null, args);\r\n                }\r\n            }\r\n        };\r\n        /*\r\n         * Tokenizes the string\r\n         * @param {String} e\r\n         * @returns {Token[]}\r\n         */\r\n        this.tokenize = function (e) {\r\n            //cast to String\r\n            e = String(e);\r\n            //remove multiple white spaces and spaces at beginning and end of string\r\n            e = e.trim().replace(/\\s+/g, ' ');\r\n            //remove spaces before and after brackets\r\n            for(var x in brackets) {\r\n                var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\r\n                e = e.replace(regex, x);\r\n            }\r\n\r\n            var col = 0; //the column position\r\n            var L = e.length; //expression length\r\n            var lpos = 0; //marks beginning of next token\r\n            var tokens = []; //the tokens container\r\n            var scopes = [tokens]; //initiate with the tokens as the highest scope\r\n            var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\r\n            var depth = 0;\r\n            var open_brackets = [];\r\n            var has_space = false; //marks if an open space character was found\r\n            var SPACE = ' ';\r\n            var EMPTY_STRING = '';\r\n            var COMMA = ',';\r\n            var MINUS = '-';\r\n            var MULT = '*';\r\n            //Possible source of bug. Review\r\n            /*\r\n             //gets the next space\r\n             var next_space = function(from) {\r\n             for(var i=from; i<L; i++) {\r\n             if(e.charAt(i) === ' ')\r\n             return i;\r\n             }\r\n             \r\n             return L; //assume the end of the string instead\r\n             };\r\n             */\r\n            /**\r\n             * Adds a scope to tokens\r\n             * @param {String} scope_type\r\n             * @param {int} column\r\n             * @returns {undefined}\r\n             */\r\n            var addScope = function (scope_type, column) {\r\n                var new_scope = []; //create a new scope\r\n                if(scope_type !== undefined) {\r\n                    new_scope.type = scope_type;\r\n                }\r\n                new_scope.column = column; //mark the column of the scope\r\n                scopes.push(new_scope); //add it to the list of scopes\r\n                target.push(new_scope); //add it to the tokens list since now it's a scope\r\n                target = new_scope; //point to it\r\n                depth++; //go down one in scope\r\n            };\r\n            /**\r\n             * Goes up in scope by one\r\n             * @returns {undefined}\r\n             */\r\n            var goUp = function () {\r\n                scopes.pop(); //remove the scope from the scopes stack\r\n                target = scopes[--depth]; //point the above scope\r\n            };\r\n            /**\r\n             * Extracts all the operators from the expression string starting at postion start_at\r\n             * @param {int} start_at\r\n             * @returns {String}\r\n             */\r\n            var get_operator_str = function (start_at) {\r\n                start_at = start_at !== undefined ? start_at : col;\r\n                //mark the end of the operator as the start since we're just going\r\n                //to be walking along the string\r\n                var end = start_at + 1;\r\n                //just keep moving along\r\n                while(e.charAt(end++) in operators) {\r\n                }\r\n                //remember that we started at one position ahead. The beginning operator is what triggered\r\n                //this function to be called in the first place. String.CharAt is zero based so we now\r\n                //have to correct two places. The initial increment + the extra++ at the end of end during\r\n                //the last iteration.\r\n                return e.substring(start_at, end - 1);\r\n            };\r\n            /**\r\n             * Breaks operator up in to several different operators as defined in operators\r\n             * @param {String} operator_str\r\n             * @returns {String[]}\r\n             */\r\n            var chunkify = function (operator_str) {\r\n                var start = col - operator_str.length; //start of operator\r\n                var _operators = [];\r\n                var operator = operator_str.charAt(0);\r\n                //grab the largest possible chunks but start at 2 since we already know\r\n                //that the first character is an operator\r\n\r\n                for(var i = 1, L = operator_str.length; i < L; i++) {\r\n                    var ch = operator_str.charAt(i);\r\n                    var o = operator + ch;\r\n                    //since the operator now is undefined then the last operator\r\n                    //was the largest possible combination.\r\n                    if(!(o in operators)) {\r\n                        _operators.push(new Token(operator, Token.OPERATOR, start + i));\r\n                        operator = ch;\r\n                    }\r\n                    else\r\n                        operator = o;//now the operator is the larger chunk\r\n                }\r\n                //add the last operator\r\n                _operators.push(new Token(operator, Token.OPERATOR, start + i));\r\n                return _operators;\r\n            };\r\n\r\n            /**\r\n             * Is used to add a token to the tokens array. Makes sure that no empty token is added\r\n             * @param {int} at\r\n             * @param {String} token\r\n             * @returns {undefined}\r\n             */\r\n            var add_token = function (at, token) {\r\n                //grab the token if we're not supplied one\r\n                if(token === undefined)\r\n                    token = e.substring(lpos, at);\r\n                //only add it if it's not an empty string\r\n                if(token in _.units)\r\n                    target.push(new Token(token, Token.UNIT, lpos));\r\n                else if(token !== '')\r\n                    target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\r\n            };\r\n            /**\r\n             * Adds a function to the output\r\n             * @param {String} f\r\n             * @returns {undefined}\r\n             */\r\n            var add_function = function (f) {\r\n                target.push(new Token(f, Token.FUNCTION, lpos));\r\n            };\r\n            /**\r\n             * Tokens are found between operators so this marks the location of where the last token was found\r\n             * @param {int} position\r\n             * @returns {undefined}\r\n             */\r\n            var set_last_position = function (position) {\r\n                lpos = position + 1;\r\n            };\r\n            /**\r\n             * When a operator is found and added, especially a combo operator, then the column location\r\n             * has to be adjusted to the end of the operator\r\n             * @returns {undefined}\r\n             */\r\n            var adjust_column_position = function () {\r\n                lpos = lpos + operator_str.length - 2;\r\n                col = lpos - 1;\r\n            };\r\n            for(; col < L; col++) {\r\n                var ch = e.charAt(col);\r\n                if(ch in operators) {\r\n                    add_token(col);\r\n                    //is the last token numeric?\r\n                    var last_token_is_numeric = target[0] && isNumber(target[0]);\r\n                    //is this character multiplication?\r\n                    var is_multiplication = last_token_is_numeric && ch === MULT;\r\n                    //if we're in a new scope then go up by one but if the space\r\n                    //is right befor an operator then it makes no sense to go up in scope\r\n                    //consider sin -x. The last position = current position at the minus sign\r\n                    //this means that we're going for sin(x) -x which is wrong\r\n                    //Ignore comma since comma is still part of the existing scope.\r\n                    if(has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\r\n                        has_space = false;\r\n                        goUp();\r\n                    }\r\n                    //mark the last position that a\r\n                    set_last_position(col + 1);\r\n                    var operator_str = get_operator_str(col);\r\n\r\n                    adjust_column_position();\r\n                    target.push.apply(target, chunkify(operator_str));\r\n                }\r\n                else if(ch in brackets) {\r\n                    var bracket = brackets[ch];\r\n\r\n                    if(bracket.is_open) {\r\n                        //mark the bracket\r\n                        open_brackets.push([bracket, lpos]);\r\n                        var f = e.substring(lpos, col);\r\n                        if(f in functions) {\r\n                            add_function(f);\r\n                        }\r\n                        else if(f !== '') {\r\n                            //assume multiplication\r\n                            //TODO: Add the multiplication to stack\r\n                            target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\r\n                        }\r\n                        //go down one in scope\r\n                        addScope(bracket.maps_to, col);\r\n                    }\r\n                    else if(bracket.is_close) {\r\n                        //get the matching bracket\r\n                        var pair = open_brackets.pop();\r\n                        //throw errors accordingly\r\n                        //missing open bracket\r\n                        if(!pair)\r\n                            throw new ParityError('Missing open bracket for bracket at: ' + (col + 1));\r\n                        //incorrect pair\r\n                        else if(pair[0].id !== bracket.id - 1)\r\n                            throw new ParityError('Parity error');\r\n\r\n                        add_token(col);\r\n                        goUp();\r\n                    }\r\n                    set_last_position(col);\r\n                }\r\n                else if(ch === SPACE) {\r\n                    var prev = e.substring(lpos, col); //look back\r\n                    var nxt = e.charAt(col + 1); //look forward\r\n                    if(has_space) {\r\n\r\n                        if(prev in operators) {\r\n                            target.push(new Token(prev, Token.OPERATOR, col));\r\n                        }\r\n                        else {\r\n                            add_token(undefined, prev);\r\n                            //we're at the closing space\r\n                            goUp(); //go up in scope if we're at a space\r\n\r\n                            //assume multiplication if it's not an operator except for minus\r\n                            var is_operator = nxt in operators;\r\n\r\n                            if((is_operator && operators[nxt].value === MINUS) || !is_operator) {\r\n                                target.push(new Token(MULT, Token.OPERATOR, col));\r\n                            }\r\n                        }\r\n                        has_space = false; //remove the space\r\n                    }\r\n                    else {\r\n                        //we're at the closing space\r\n                        //check if it's a function\r\n                        var f = e.substring(lpos, col);\r\n\r\n                        if(f in functions) {\r\n                            //there's no need to go up in scope if the next character is an operator\r\n                            has_space = true; //mark that a space was found\r\n                            add_function(f);\r\n                            addScope();\r\n                        }\r\n                        else if(f in operators) {\r\n                            target.push(new Token(f, Token.OPERATOR, col));\r\n                        }\r\n                        else {\r\n                            add_token(undefined, f);\r\n                            //peek ahead to the next character\r\n                            var nxt = e.charAt(col + 1);\r\n\r\n                            //If it's a number then add the multiplication operator to the stack but make sure that the next character\r\n                            //is not an operator\r\n\r\n                            if(prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators))\r\n                                target.push(new Token(MULT, Token.OPERATOR, col));\r\n                        }\r\n                        //Possible source of bug. Review\r\n                        /*\r\n                         //space can mean multiplication so add the symbol if the is encountered\r\n                         if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\r\n                         var next = e.charAt(col+1);\r\n                         var next_is_operator = next in operators;\r\n                         var ns = next_space(col+1);\r\n                         var next_word = e.substring(col+1, ns);\r\n                         //the next can either be a prefix operator or no operator\r\n                         if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\r\n                         target.push(new Token('*', Token.OPERATOR, col));\r\n                         }\r\n                         */\r\n                    }\r\n                    set_last_position(col); //mark this location\r\n                }\r\n            }\r\n            //check that all brackets were closed\r\n            if(open_brackets.length) {\r\n                var b = open_brackets.pop();\r\n                throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\r\n            }\r\n            //add the last token\r\n            add_token(col);\r\n\r\n            return tokens;\r\n        };\r\n        /*\r\n         * Puts token array in Reverse Polish Notation\r\n         * @param {Token[]} tokens\r\n         * @returns {Token[]}\r\n         */\r\n        this.toRPN = function (tokens) {\r\n            var fn = tokens.type;\r\n            var l = tokens.length, i;\r\n            var output = [];\r\n            var stack = [];\r\n            var prefixes = [];\r\n            var collapse = function (target, destination) {\r\n                while(target.length)\r\n                    destination.push(target.pop());\r\n            };\r\n            //mark all the prefixes and add them to the stack\r\n            for(i = 0; i < l; i++) {\r\n                var token = tokens[i];\r\n                if(token.type !== Token.OPERATOR)\r\n                    break;\r\n                if(!token.prefix)\r\n                    throw new OperatorError('Not a prefix operator');\r\n                token.is_prefix = true;\r\n                stack.push(token);\r\n            }\r\n            //begin with remaining tokens\r\n            for(; i < l; i++) {\r\n                var e = tokens[i];\r\n                if(e.type === Token.OPERATOR) {\r\n                    var operator = e;\r\n\r\n                    //create the option for the operator being overloaded\r\n                    if(operator.overloaded) {\r\n                        var next = tokens[i + 1];\r\n                        //if it's followed by a number or variable then we assume it's not a postfix operator\r\n                        if(next && next.type === Token.VARIABLE_OR_LITERAL) {\r\n                            operator.postfix = false;\r\n                            //override the original function with the overload function\r\n                            operator.action = operator.overloadAction;\r\n                            operator.leftAssoc = operator.overloadLeftAssoc;\r\n                        }\r\n                    }\r\n\r\n                    //if the stack is not empty\r\n                    while(stack.length) {\r\n                        var last = stack[stack.length - 1];\r\n                        //if (there is an operator at the top of the operator stack with greater precedence)\r\n                        //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\r\n                        //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\r\n                        if(!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence))\r\n                            break;\r\n                        output.push(stack.pop());\r\n                    }\r\n\r\n                    //change the behavior of the operator if it's a vector and we've been asked to do so\r\n                    if((fn === 'vector' || fn === 'set') && 'vectorFn' in operator)\r\n                        operator.action = operator.vectorFn;\r\n\r\n\r\n                    //if the operator is a postfix operator then we're ready to go since it belongs\r\n                    //to the preceding token. However the output cannot be empty. It must have either\r\n                    //an operator or a variable/literal\r\n                    if(operator.postfix) {\r\n                        var previous = tokens[i - 1];\r\n                        if(!previous)\r\n                            throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);\r\n                        else if(previous.type === Token.OPERATOR) {\r\n                            //a postfix can only be followed by a postfix\r\n                            if(!previous.postfix)\r\n                                throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //we must be at an infix so point the operator this\r\n                        do {\r\n                            //the first one is an infix operator all others have to be prefix operators so jump to the end\r\n                            var next = tokens[i + 1]; //take a look ahead\r\n                            var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\r\n                            if(next_is_operator) {\r\n                                //if it's not a prefix operator then it not in the right place\r\n                                if(!next.prefix) {\r\n                                    throw new OperatorError('A prefix operator was expected at ' + next.column);\r\n                                }\r\n                                //mark it as a confirmed prefix\r\n                                next.is_prefix = true;\r\n                                //add it to the prefixes\r\n                                prefixes.push(next);\r\n                                i++;\r\n                            }\r\n                        }\r\n                        while(next_is_operator)\r\n                    }\r\n\r\n                    //if it's a prefix it should be on a special stack called prefixes\r\n                    //we do this to hold on to prefixes because of left associative operators.\r\n                    //they belong to the variable/literal but if placed on either the stack\r\n                    //or output there's no way of knowing this. I might be wrong so I welcome\r\n                    //any discussion about this.\r\n\r\n                    if(operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\r\n                        prefixes.push(operator);\r\n                    else\r\n                        stack.push(operator);\r\n                    //move the prefixes to the stack\r\n                    while(prefixes.length) {\r\n                        if(operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\r\n                            stack.push(prefixes.pop());\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                else if(e.type === Token.VARIABLE_OR_LITERAL) {\r\n                    //move prefixes to stack at beginning of scope\r\n                    if(output.length === 0)\r\n                        collapse(prefixes, stack);\r\n                    //done with token\r\n                    output.push(e);\r\n                    var last_on_stack = stack[stack.length - 1];\r\n                    //then move all the prefixes to the output\r\n                    if(!last_on_stack || !last_on_stack.leftAssoc)\r\n                        collapse(prefixes, output);\r\n                }\r\n                else if(e.type === Token.FUNCTION) {\r\n                    stack.push(e);\r\n                }\r\n                else if(e.type === Token.UNIT) {\r\n                    //if it's a unit it belongs on the stack since it's tied to the previous token\r\n                    output.push(e);\r\n                }\r\n                //if it's an additonal scope then put that into RPN form\r\n                if(Array.isArray(e)) {\r\n                    output.push(this.toRPN(e));\r\n                    if(e.type)\r\n                        output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\r\n\r\n                }\r\n            }\r\n            //collapse the remainder of the stack and prefixes to output\r\n            collapse(stack, output);\r\n            collapse(prefixes, output);\r\n\r\n            return output;\r\n        };\r\n        /*\r\n         * Parses the tokens\r\n         * @param {Tokens[]} rpn\r\n         * @param {object} substitutions\r\n         * @returns {Symbol}\r\n         */\r\n        this.parseRPN = function (rpn, substitutions) {\r\n            try {\r\n                //default substitutions\r\n                substitutions = substitutions || {};\r\n                //prepare the substitutions.\r\n                //we first parse them out as-is\r\n                for(var x in substitutions)\r\n                    substitutions[x] = _.parse(substitutions[x], {});\r\n\r\n                //Although technically constants,\r\n                //pi and e are only available when evaluating the expression so add to the subs.\r\n                //Doing this avoids rounding errors\r\n                //link e and pi\r\n                if(Settings.PARSE2NUMBER) {\r\n                    //use the value provided if the individual for some strange reason prefers this.\r\n                    //one reason could be to sub e but not pi or vice versa\r\n                    if(!('e' in substitutions))\r\n                        substitutions.e = new Symbol(Settings.E);\r\n                    if((!('pi' in substitutions)))\r\n                        substitutions.pi = new Symbol(Settings.PI);\r\n                }\r\n\r\n                var Q = [];\r\n                for(var i = 0, l = rpn.length; i < l; i++) {\r\n                    var e = rpn[i];\r\n\r\n                    //Arrays indicate a new scope so parse that out\r\n                    if(Array.isArray(e)) {\r\n                        e = this.parseRPN(e, substitutions);\r\n                    }\r\n\r\n                    if(e) {\r\n                        if(e.type === Token.OPERATOR) {\r\n                            if(e.is_prefix || e.postfix)\r\n                                //resolve the operation assocated with the prefix\r\n                                Q.push(e.operation(Q.pop()));\r\n                            else {\r\n                                var b = Q.pop();\r\n                                var a = Q.pop();\r\n                                //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\r\n                                if(typeof a === 'undefined')\r\n                                    throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\r\n\r\n                                var is_comma = e.action === 'comma';\r\n                                //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\r\n                                if(a instanceof Set && !is_comma)\r\n                                    a = Vector.fromSet(a);\r\n\r\n                                if(b instanceof Set && !is_comma)\r\n                                    b = Vector.fromSet(b);\r\n\r\n                                //call all the pre-operators\r\n                                this.callPeekers('pre_operator', a, b, e);\r\n\r\n                                var ans = _[e.action](a, b);\r\n\r\n                                //call all the pre-operators\r\n                                this.callPeekers('post_operator', ans, a, b, e);\r\n\r\n                                Q.push(ans);\r\n                            }\r\n                        }\r\n                        else if(e.type === Token.FUNCTION) {\r\n                            var args = Q.pop();\r\n                            var parent = args.parent; //make a note of the parent\r\n                            if(!(args instanceof Collection))\r\n                                args = Collection.create(args);\r\n                            //the return value may be a vector. If it is then we check\r\n                            //Q to see if there's another vector on the stack. If it is then\r\n                            //we check if has elements. If it does then we know that we're dealing\r\n                            //with an \"getter\" object and return the requested values\r\n\r\n                            //call the function. This is the _.callfunction method in nerdamer\r\n                            //call the function. This is the _.callfunction method in nerdamer\r\n                            var fn_name = e.value;\r\n                            var fn_args = args.getItems();\r\n\r\n                            //call the pre-function peekers\r\n                            this.callPeekers('pre_function', fn_name, fn_args);\r\n\r\n                            var ret = _.callfunction(fn_name, fn_args);\r\n\r\n                            //call the post-function peekers\r\n                            this.callPeekers('post_function', ret, fn_name, fn_args);\r\n\r\n                            var last = Q[Q.length - 1];\r\n                            var next = rpn[i + 1];\r\n                            var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\r\n\r\n                            if(!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\r\n                                //remove the item from the queue\r\n                                var item = Q.pop();\r\n\r\n                                var getter = ret.elements[0];\r\n                                //check if it's symbolic. If so put it back and add the item to the stack\r\n                                if(!getter.isConstant()) {\r\n                                    item.getter = getter;\r\n                                    Q.push(item);\r\n                                    Q.push(ret);\r\n                                }\r\n                                else if(getter instanceof Slice) {\r\n                                    //if it's a Slice return the slice\r\n                                    Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\r\n                                }\r\n                                else {\r\n                                    var index = Number(getter);\r\n                                    var il = item.elements.length;\r\n                                    //support for negative indices\r\n                                    if(index < 0)\r\n                                        index = il + index;\r\n                                    //it it's still out of bounds\r\n                                    if(index < 0 || index >= il) //index should no longer be negative since it's been reset above\r\n                                        //range error\r\n                                        throw new OutOfRangeError('Index out of range ' + (e.column + 1));\r\n\r\n                                    var element = item.elements[index];\r\n                                    //cyclic but we need to mark this for future reference\r\n                                    item.getter = index;\r\n                                    element.parent = item;\r\n\r\n                                    Q.push(element);\r\n                                }\r\n                            }\r\n                            else {\r\n                                //extend the parent reference\r\n                                if(parent)\r\n                                    ret.parent = parent;\r\n                                Q.push(ret);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            var subbed;\r\n                            var v = e.value;\r\n\r\n                            if(v in Settings.ALIASES)\r\n                                e = _.parse(Settings.ALIASES[e]);\r\n                            //wrap it in a symbol if need be\r\n                            else if(e.type === Token.VARIABLE_OR_LITERAL)\r\n                                e = new Symbol(v);\r\n                            else if(e.type === Token.UNIT) {\r\n                                e = new Symbol(v);\r\n                                e.isUnit = true;\r\n                            }\r\n\r\n                            //make substitutions\r\n                            //Always constants first. This avoids the being overridden\r\n                            if(v in _.CONSTANTS) {\r\n                                subbed = e;\r\n                                e = new Symbol(_.CONSTANTS[v]);\r\n                            }\r\n                            //next substitutions. This allows declared variable to be overridden\r\n                            //check if the values match to avoid erasing the multiplier.\r\n                            //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\r\n                            else if(v in substitutions && v !== substitutions[v].toString()) {\r\n                                subbed = e;\r\n                                e = substitutions[v].clone();\r\n                            }\r\n                            //next declare variables\r\n                            else if(v in VARS) {\r\n                                subbed = e;\r\n                                e = VARS[v].clone();\r\n                            }\r\n                            //make notation of what it was before\r\n                            if(subbed)\r\n                                e.subbed = subbed;\r\n\r\n                            Q.push(e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var retval = Q[0];\r\n\r\n                if(['undefined', 'string', 'number'].indexOf(typeof retval) !== -1) {\r\n                    throw new UnexpectedTokenError('Unexpected token!');\r\n                }\r\n\r\n                return retval;\r\n            }\r\n            catch(error) {\r\n                var rethrowErrors = [OutOfFunctionDomainError];\r\n                // Rethrow certain errors in the same class to preserve them\r\n                rethrowErrors.forEach(function (E) {\r\n                    if(error instanceof E) {\r\n                        throw new E(error.message + ': ' + e.column);\r\n                    }\r\n                });\r\n\r\n                throw new ParseError(error.message + ': ' + e.column);\r\n            }\r\n        };\r\n        /**\r\n         * This is the method that triggers the parsing of the string. It generates a parse tree but processes\r\n         * it right away. The operator functions are called when their respective operators are reached. For instance\r\n         * + with cause this.add to be called with the left and right hand values. It works by walking along each\r\n         * character of the string and placing the operators on the stack and values on the output. When an operator\r\n         * having a lower order than the last is reached then the stack is processed from the last operator on the\r\n         * stack.\r\n         * @param {String} token\r\n         */\r\n\r\n        function Node(token) {\r\n            this.type = token.type;\r\n            this.value = token.value;\r\n            //the incoming token may already be a Node type\r\n            this.left = token.left;\r\n            this.right = token.right;\r\n        }\r\n\r\n        Node.prototype.toString = function () {\r\n            var left = this.left ? this.left.toString() + '---' : '';\r\n            var right = this.right ? '---' + this.right.toString() : '';\r\n            return left + '(' + this.value + ')' + right;\r\n        };\r\n\r\n        Node.prototype.toHTML = function (depth, indent) {\r\n            depth = depth || 0;\r\n            indent = typeof indent === 'undefined' ? 4 : indent;\r\n            var tab = function (n) {\r\n                return ' '.repeat(indent * n);\r\n            };\r\n            var html = '';\r\n            var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\r\n            var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\r\n            var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\r\n            if(left || right) {\r\n                html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\r\n            }\r\n            html += '';\r\n            return html;\r\n        };\r\n\r\n        this.tree = function (tokens) {\r\n            var Q = [];\r\n            for(var i = 0; i < tokens.length; i++) {\r\n                var e = tokens[i];\r\n                //Arrays indicate a new scope so parse that out\r\n                if(Array.isArray(e)) {\r\n                    e = this.tree(e);\r\n                    //if it's a comma then it's just arguments\r\n                    Q.push(e);\r\n                    continue;\r\n                }\r\n                if(e.type === Token.OPERATOR) {\r\n                    if(e.is_prefix || e.postfix) {\r\n                        //prefixes go to the left, postfix to the right\r\n                        var location = e.is_prefix ? 'left' : 'right';\r\n                        var last = Q.pop();\r\n                        e = new Node(e);\r\n                        e[location] = last;\r\n                        Q.push(e);\r\n                    }\r\n                    else {\r\n                        e = new Node(e);\r\n                        e.right = Q.pop();\r\n                        e.left = Q.pop();\r\n                        Q.push(e);\r\n                    }\r\n                }\r\n                else if(e.type === Token.FUNCTION) {\r\n                    e = new Node(e);\r\n                    var args = Q.pop();\r\n                    e.right = args;\r\n                    if(e.value === 'object') {\r\n                        //check if Q has a value\r\n                        var last = Q[Q.length - 1];\r\n                        if(last) {\r\n                            while(last.right) {\r\n                                last = last.right;\r\n                            }\r\n                            last.right = e;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    Q.push(e);\r\n                }\r\n                else {\r\n                    Q.push(new Node(e));\r\n                }\r\n            }\r\n\r\n            return Q[0];\r\n        };\r\n        this.parse = function (e, substitutions) {\r\n            e = prepare_expression(e);\r\n            substitutions = substitutions || {};\r\n            //three passes but easier to debug\r\n            var tokens = this.tokenize(e);\r\n            var rpn = this.toRPN(tokens);\r\n            return this.parseRPN(rpn, substitutions);\r\n        };\r\n        /**\r\n         * TODO: Switch to Parser.tokenize for this method\r\n         * Reads a string into an array of Symbols and operators\r\n         * @param {String} expression_string\r\n         * @returns {Array}\r\n         */\r\n        this.toObject = function (expression_string) {\r\n            var objectify = function (tokens) {\r\n                var output = [];\r\n                for(var i = 0, l = tokens.length; i < l; i++) {\r\n                    var token = tokens[i];\r\n                    var v = token.value;\r\n                    if(token.type === Token.VARIABLE_OR_LITERAL) {\r\n                        output.push(new Symbol(v));\r\n                    }\r\n                    else if(token.type === Token.FUNCTION) {\r\n                        //jump ahead since the next object are the arguments\r\n                        i++;\r\n                        //create a symbolic function and stick it on output\r\n                        var f = _.symfunction(v, objectify(tokens[i]));\r\n                        f.isConversion = true;\r\n                        output.push(f);\r\n                    }\r\n                    else if(token.type === Token.OPERATOR) {\r\n                        output.push(v);\r\n                    }\r\n                    else {\r\n                        output.push(objectify(token));\r\n                    }\r\n                }\r\n\r\n                return output;\r\n            };\r\n            return objectify(_.tokenize(expression_string));\r\n        };\r\n\r\n        // A helper method for toTeX\r\n        var chunkAtCommas = function (arr) {\r\n            var j, k = 0, chunks = [[]];\r\n            for(var j = 0, l = arr.length; j < l; j++) {\r\n                if(arr[j] === ',') {\r\n                    k++;\r\n                    chunks[k] = [];\r\n                }\r\n                else {\r\n                    chunks[k].push(arr[j]);\r\n                }\r\n            }\r\n            return chunks;\r\n        };\r\n\r\n        // Helper method for toTeX\r\n        var rem_brackets = function (str) {\r\n            return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\r\n                if(a)\r\n                    return a;\r\n                return str;\r\n            });\r\n        };\r\n\r\n        var remove_redundant_powers = function (arr) {\r\n            // The filtered array\r\n            var narr = [];\r\n\r\n            while(arr.length) {\r\n                // Remove the element from the front\r\n                var e = arr.shift();\r\n                var next = arr[0];\r\n                var next_is_array = isArray(next);\r\n                var next_is_minus = next === '-';\r\n\r\n                // Remove redundant plusses \r\n                if(e === '^') {\r\n                    if(next === '+') {\r\n                        arr.shift();\r\n                    }\r\n                    else if(next_is_array && next[0] === '+') {\r\n                        next.shift();\r\n                    }\r\n\r\n                    // Remove redundant parentheses\r\n                    if(next_is_array && next.length === 1) {\r\n                        arr.unshift(arr.shift()[0]);\r\n                    }\r\n                }\r\n\r\n                // Check if it's a negative power\r\n                if(e === '^' && (next_is_array && next[0] === '-' || next_is_minus)) {\r\n                    // If so:\r\n                    // - Remove it from the new array, place a one and a division sign in that array and put it back\r\n                    var last = narr.pop();\r\n                    // Check if it's something multiplied by\r\n                    var before = narr[narr.length - 1];\r\n                    var before_last = '1';\r\n\r\n                    if(before === '*') {\r\n                        narr.pop();\r\n                        // For simplicity we just pop it. \r\n                        before_last = narr.pop();\r\n                    }\r\n                    // Implied multiplication\r\n                    else if(isArray(before)) {\r\n                        before_last = narr.pop();\r\n                    }\r\n\r\n                    narr.push(before_last, '/', last, e);\r\n\r\n                    // Remove the negative sign from the power \r\n                    if(next_is_array) {\r\n                        next.shift();\r\n                    }\r\n                    else {\r\n                        arr.shift();\r\n                    }\r\n\r\n                    // Remove it from the array so we don't end up with redundant parentheses if we can\r\n                    if(next_is_array && next.length === 1) {\r\n                        narr.push(arr.shift()[0]);\r\n                    }\r\n                }\r\n                else {\r\n                    narr.push(e);\r\n                }\r\n            }\r\n\r\n            return narr;\r\n        };\r\n        /*\r\n         * Convert expression or object to LaTeX\r\n         * @param {String} expression_or_obj\r\n         * @param {object} opt\r\n         * @returns {String}\r\n         */\r\n        this.toTeX = function (expression_or_obj, opt) {\r\n            opt = opt || {};\r\n            // Add decimal option as per issue #579. Consider passing an object to Latex.latex as option instead of string\r\n            var decimals = opt.decimals === true ? 'decimals' : undefined;\r\n\r\n            var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\r\n                    TeX = [],\r\n                    cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\r\n\r\n            // Remove negative powers as per issue #570\r\n            obj = remove_redundant_powers(obj);\r\n\r\n            if(isArray(obj)) {\r\n                var nobj = [], a, b;\r\n                //first handle ^\r\n                for(var i = 0; i < obj.length; i++) {\r\n                    a = obj[i];\r\n\r\n                    if(obj[i + 1] === '^') {\r\n                        b = obj[i + 2];\r\n                        nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\r\n                        i += 2;\r\n                    }\r\n                    else {\r\n                        nobj.push(a);\r\n                    }\r\n                }\r\n                obj = nobj;\r\n            }\r\n\r\n            for(var i = 0, l = obj.length; i < l; i++) {\r\n                var e = obj[i];\r\n\r\n                // Convert * to cdot\r\n                if(e === '*') {\r\n                    e = cdot;\r\n                }\r\n\r\n                if(isSymbol(e)) {\r\n                    if(e.group === FN) {\r\n                        var fname = e.fname, f;\r\n\r\n                        if(fname === SQRT)\r\n                            f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));\r\n                        else if(fname === ABS)\r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'abs');\r\n                        else if(fname === PARENTHESIS)\r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        else if(fname === Settings.LOG10) {\r\n                            f = '\\\\' + Settings.LOG10_LATEX + '\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\r\n                        }\r\n                        else if(fname === 'integrate') {\r\n                            /* Retrive [Expression, x] */\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            /* Build TeX */\r\n                            var expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                    dx = this.toTeX(chunks[1]);\r\n                            f = '\\\\int ' + expr + '\\\\, d' + dx;\r\n                        }\r\n                        else if(fname === 'defint') {\r\n                            var chunks = chunkAtCommas(e.args),\r\n                                    expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                    dx = this.toTeX(chunks[3]),\r\n                                    lb = this.toTeX(chunks[1]),\r\n                                    ub = this.toTeX(chunks[2]);\r\n                            f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\r\n\r\n                        }\r\n                        else if(fname === 'diff') {\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            var dx = '', expr = LaTeX.braces(this.toTeX(chunks[0]));\r\n                            /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\r\n                            if(chunks.length === 1) {\r\n                                var vars = [];\r\n                                for(j = 0; j < chunks[0].length; j++) {\r\n                                    if(chunks[0][j].group === 3) {\r\n                                        vars.push(chunks[0][j].value);\r\n                                    }\r\n                                }\r\n                                vars.sort();\r\n                                dx = vars.length > 0 ? ('\\\\frac{d}{d ' + vars[0] + '}') : '\\\\frac{d}{d x}';\r\n                            }\r\n                            /* If two arguments, we have expression and variable, we assume n = 1 */\r\n                            else if(chunks.length === 2) {\r\n                                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\r\n                            }\r\n                            /* If we have more than 2 arguments, we assume we've got everything */\r\n                            else {\r\n                                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\r\n                            }\r\n\r\n                            f = dx + '\\\\left(' + expr + '\\\\right)';\r\n\r\n                        }\r\n                        else if(fname === 'sum' || fname === 'product') {\r\n                            // Split e.args into 4 parts based on locations of , symbols.\r\n                            var argSplit = [[], [], [], []], j = 0, i;\r\n                            for(i = 0; i < e.args.length; i++) {\r\n                                if(e.args[i] === ',') {\r\n                                    j++;\r\n                                    continue;\r\n                                }\r\n                                argSplit[j].push(e.args[i]);\r\n                            }\r\n                            // Then build TeX string.\r\n                            f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\r\n                            f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\r\n                        }\r\n                        else if(fname === 'limit') {\r\n                            var args = chunkAtCommas(e.args).map(function (x) {\r\n                                if(Array.isArray(x))\r\n                                    return _.toTeX(x.join(''));\r\n                                return _.toTeX(String(x));\r\n                            });\r\n                            f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\r\n                        }\r\n                        else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL)\r\n                            f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\r\n                        else {\r\n\r\n                            f = LaTeX.latex(e, decimals);\r\n                            //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        }\r\n\r\n                        TeX.push(f);\r\n                    }\r\n                    else {\r\n                        TeX.push(LaTeX.latex(e, decimals));\r\n                    }\r\n                }\r\n                else if(isArray(e)) {\r\n                    TeX.push(LaTeX.brackets(this.toTeX(e)));\r\n                }\r\n                else {\r\n                    if(e === '/')\r\n                        TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));\r\n                    else\r\n                        TeX.push(e);\r\n                }\r\n            }\r\n\r\n            return TeX.join(' ');\r\n        };\r\n\r\n//Parser.functions ==============================================================\r\n        /* Although parens is not a \"real\" function it is important in some cases when the\r\n         * symbol must carry parenthesis. Once set you don't have to worry about it anymore\r\n         * as the parser will get rid of it at the first opportunity\r\n         */\r\n        function parens(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                return symbol;\r\n            }\r\n            return _.symfunction('parens', [symbol]);\r\n        }\r\n\r\n        function abs(symbol) {\r\n\r\n            //|-∞| = ∞\r\n            if(symbol.isInfinity) {\r\n                return Symbol.infinity();\r\n            }\r\n            if(symbol.multiplier.lessThan(0))\r\n                symbol.multiplier.negate();\r\n\r\n            if(symbol.isImaginary()) {\r\n                var re = symbol.realpart();\r\n                var im = symbol.imagpart();\r\n                if(re.isConstant() && im.isConstant())\r\n                    return sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\r\n            }\r\n            else if(isNumericSymbol(symbol) || even(symbol.power)) {\r\n                return symbol;\r\n            }\r\n\r\n            if(symbol.isComposite()) {\r\n                var ms = [];\r\n                symbol.each(function (x) {\r\n                    ms.push(x.multiplier);\r\n                });\r\n                var gcd = Math2.QGCD.apply(null, ms);\r\n                if(gcd.lessThan(0)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\r\n                    symbol.distributeMultiplier();\r\n                }\r\n            }\r\n\r\n            //convert |n*x| to n*|x|\r\n            var m = _.parse(symbol.multiplier);\r\n            symbol.toUnitMultiplier();\r\n\r\n            return _.multiply(m, _.symfunction(ABS, [symbol]));\r\n        }\r\n        /**\r\n         * The factorial function\r\n         * @param {Symbol} symbol\r\n         * @return {Symbol}\r\n         */\r\n        function factorial(symbol) {\r\n            var retval;\r\n            if(isVector(symbol)) {\r\n                var V = new Vector();\r\n                symbol.each(function (x, i) {\r\n                    //i start at one.\r\n                    V.set(i - 1, factorial(x));\r\n                });\r\n                return V;\r\n            }\r\n            if(isMatrix(symbol)) {\r\n                var M = new Matrix();\r\n                symbol.each(function (x, i, j) {\r\n                    //i start at one.\r\n                    M.set(i, j, factorial(x));\r\n                });\r\n                return M;\r\n            }\r\n            if(Settings.PARSE2NUMBER && symbol.isConstant()) {\r\n                if(isInt(symbol)) {\r\n                    retval = Math2.bigfactorial(symbol);\r\n                }\r\n                else {\r\n                    retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\r\n                }\r\n\r\n                retval = bigConvert(retval);\r\n                return retval;\r\n            }\r\n            else if(symbol.isConstant()) {\r\n                var den = symbol.getDenom();\r\n                if(den.equals(2)) {\r\n                    var num = symbol.getNum();\r\n                    var a, b, c, n;\r\n\r\n                    if(!symbol.multiplier.isNegative()) {\r\n                        n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\r\n                        a = Math2.bigfactorial(new Frac(2).multiply(n));\r\n                        b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\r\n                    }\r\n                    else {\r\n                        n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\r\n                        a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\r\n                        b = Math2.bigfactorial(new Frac(2).multiply(n));\r\n                    }\r\n                    c = a.divide(b);\r\n                    return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\r\n                }\r\n            }\r\n            return _.symfunction(FACTORIAL, [symbol]);\r\n        }\r\n        ;\r\n        /**\r\n         * Returns the continued fraction of a number\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} n\r\n         * @returns {Symbol}\r\n         */\r\n        function continued_fraction(symbol, n) {\r\n            var _symbol = evaluate(symbol);\r\n            if(_symbol.isConstant()) {\r\n                var cf = Math2.continuedFraction(_symbol, n);\r\n                //convert the fractions array to a new Vector\r\n                var fractions = Vector.fromArray(cf.fractions.map(function (x) {\r\n                    return new Symbol(x);\r\n                }));\r\n                return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\r\n            }\r\n            return _.symfunction('continued_fraction', arguments);\r\n        }\r\n        /**\r\n         * Returns the error function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function erf(symbol) {\r\n            var _symbol = evaluate(symbol);\r\n\r\n            if(_symbol.isConstant()) {\r\n                return Math2.erf(_symbol);\r\n            }\r\n            else if(_symbol.isImaginary()) {\r\n                return complex.erf(symbol);\r\n            }\r\n            return _.symfunction('erf', arguments);\r\n        }\r\n        ;\r\n        /**\r\n         * The mod function\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Symbol}\r\n         */\r\n        function mod(symbol1, symbol2) {\r\n            if(symbol1.isConstant() && symbol2.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\r\n                return retval;\r\n            }\r\n            //try to see if division has remainder of zero\r\n            var r = _.divide(symbol1.clone(), symbol2.clone());\r\n            if(isInt(r))\r\n                return new Symbol(0);\r\n            return _.symfunction('mod', [symbol1, symbol2]);\r\n        }\r\n        /**\r\n         * A branghing function\r\n         * @param {Boolean} condition\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        function IF(condition, a, b) {\r\n            if(typeof condition !== 'boolean')\r\n                if(isNumericSymbol(condition))\r\n                    condition = !!Number(condition);\r\n            if(condition)\r\n                return a;\r\n            return b;\r\n        }\r\n        /**\r\n         *\r\n         * @param {Matrix|Vector|Set|Collection} obj\r\n         * @param {Symbol} item\r\n         * @returns {Boolean}\r\n         */\r\n        function is_in(obj, item) {\r\n            if(isMatrix(obj)) {\r\n                for(var i = 0, l = obj.rows(); i < l; i++) {\r\n                    for(var j = 0, l2 = obj.cols(); j < l2; j++) {\r\n                        var element = obj.elements[i][j];\r\n                        if(element.equals(item))\r\n                            return new Symbol(1);\r\n                    }\r\n                }\r\n            }\r\n            else if(obj.elements) {\r\n                for(var i = 0, l = obj.elements.length; i < l; i++) {\r\n                    if(obj.elements[i].equals(item))\r\n                        return new Symbol(1);\r\n                }\r\n            }\r\n\r\n            return new Symbol(0);\r\n        }\r\n\r\n        /**\r\n         * A symbolic extension for sinc\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sinc(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant()) {\r\n                    return new Symbol(Math2.sinc(symbol));\r\n                }\r\n                return _.parse(format('sin({0})/({0})', symbol));\r\n            }\r\n            return _.symfunction('sinc', [symbol]);\r\n        }\r\n\r\n        /**\r\n         * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\r\n         * Thanks @ Happypig375\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function exp(symbol) {\r\n            if(symbol.fname === Settings.LOG && symbol.isLinear()) {\r\n                return _.pow(symbol.args[0], Symbol.create(symbol.multiplier));\r\n            }\r\n            return _.parse(format('e^({0})', symbol));\r\n        }\r\n\r\n        /**\r\n         * Converts value degrees to radians\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function radians(symbol) {\r\n            return _.parse(format('({0})*pi/180', symbol));\r\n        }\r\n\r\n        /**\r\n         * Converts value from radians to degrees\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function degrees(symbol) {\r\n            return _.parse(format('({0})*180/pi', symbol));\r\n        }\r\n\r\n        function nroots(symbol) {\r\n            var a, b;\r\n            if(symbol.group === FN && symbol.fname === '') {\r\n                a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\r\n                b = _.parse(symbol.power);\r\n            }\r\n            else if(symbol.group === P) {\r\n                a = _.parse(symbol.value);\r\n                b = _.parse(symbol.power);\r\n            }\r\n\r\n            if(a && b && a.group === N && b.group === N) {\r\n                var _roots = [];\r\n                var parts = Symbol.toPolarFormArray(symbol);\r\n                var r = _.parse(a).abs().toString();\r\n                //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\r\n                var x = arg(a).toString();\r\n                var n = b.multiplier.den.toString();\r\n                var p = b.multiplier.num.toString();\r\n\r\n                var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\r\n                for(var i = 0; i < n; i++) {\r\n                    var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\r\n                    _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\r\n                }\r\n                return Vector.fromArray(_roots);\r\n            }\r\n            else if(symbol.isConstant(true)) {\r\n                var sign = symbol.sign();\r\n                var x = evaluate(symbol.abs());\r\n                var root = _.sqrt(x);\r\n\r\n                var _roots = [root.clone(), root.negate()];\r\n\r\n                if(sign < 0)\r\n                    _roots = _roots.map(function (x) {\r\n                        return _.multiply(x, Symbol.imaginary());\r\n                    });\r\n            }\r\n            else {\r\n                _roots = [_.parse(symbol)];\r\n            }\r\n\r\n            return Vector.fromArray(_roots);\r\n        }\r\n\r\n        /**\r\n         * Rationalizes a symbol\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rationalize(symbol) {\r\n            if(symbol.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                var num, den, retnum, retden, a, b, n, d;\r\n                symbol.each(function (x) {\r\n                    num = x.getNum();\r\n                    den = x.getDenom();\r\n                    retnum = retval.getNum();\r\n                    retden = retval.getDenom();\r\n                    a = _.multiply(den, retnum);\r\n                    b = _.multiply(num, retden);\r\n                    n = _.expand(_.add(a, b));\r\n                    d = _.multiply(retden, den);\r\n                    retval = _.divide(n, d);\r\n                }, true);\r\n\r\n                return retval;\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        /**\r\n         * The square root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sqrt(symbol) {\r\n            if(!isSymbol(symbol)) {\r\n                symbol = _.parse(symbol);\r\n            }\r\n            \r\n            // Exit early for EX\r\n            if(symbol.group === EX) {\r\n                return _.symfunction(SQRT, [symbol]);\r\n            }\r\n\r\n            if(symbol.fname === '' && symbol.power.equals(1))\r\n                symbol = symbol.args[0];\r\n\r\n            var is_negative = symbol.multiplier.sign() < 0;\r\n\r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant() && !is_negative) {\r\n                    return new Symbol(bigDec.sqrt(symbol.multiplier.toDecimal()));\r\n                }\r\n                else if(symbol.isImaginary()) {\r\n                    return complex.sqrt(symbol);\r\n                }\r\n                else if(symbol.group === S) {\r\n                    return _.symfunction('sqrt', [symbol]);\r\n                }\r\n            }\r\n\r\n            var img, retval,\r\n                    isConstant = symbol.isConstant();\r\n\r\n            if(symbol.group === CB && symbol.isLinear()) {\r\n                var m = sqrt(Symbol(symbol.multiplier));\r\n                for(var s in symbol.symbols) {\r\n                    var x = symbol.symbols[s];\r\n                    m = _.multiply(m, sqrt(x));\r\n                }\r\n\r\n                retval = m;\r\n            }\r\n            //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\r\n            else if(symbol.fname === SQRT) {\r\n                var s = symbol.args[0];\r\n                var ms = symbol.multiplier;\r\n                s.setPower(symbol.power.multiply(new Frac(0.25)));\r\n                retval = s;\r\n                //grab the multiplier\r\n                if(!ms.equals(1))\r\n                    retval = _.multiply(sqrt(_.parse(ms)), retval);\r\n            }\r\n            //if the symbol is a fraction then we don't keep can unwrap it. For instance\r\n            //no need to keep sqrt(x^(1/3))\r\n            else if(!symbol.power.isInteger()) {\r\n                symbol.setPower(symbol.power.multiply(new Frac(0.5)));\r\n                retval = symbol;\r\n            }\r\n            else if(symbol.multiplier < 0 && symbol.group === S) {\r\n                var a = _.parse(symbol.multiplier).negate();\r\n                var b = _.parse(symbol).toUnitMultiplier().negate();\r\n                retval = _.multiply(_.symfunction(Settings.SQRT, [b]), sqrt(a));\r\n            }\r\n            else {\r\n\r\n                //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\r\n                //to sqrt(a)*sqrt(b)^1 for better simplification\r\n                //the sign of the power\r\n                var sign = symbol.power.sign();\r\n                //remove the sign\r\n                symbol.power = symbol.power.abs();\r\n\r\n                //if the symbols is imagary then we place in the imaginary part. We'll return it\r\n                //as a product\r\n                if(isConstant && symbol.multiplier.lessThan(0)) {\r\n                    img = Symbol.imaginary();\r\n                    symbol.multiplier = symbol.multiplier.abs();\r\n                }\r\n\r\n                var q = symbol.multiplier.toDecimal(),\r\n                        qa = Math.abs(q),\r\n                        t = Math.sqrt(qa);\r\n\r\n                var m;\r\n                //it's a perfect square so take the square\r\n                if(isInt(t)) {\r\n                    m = new Symbol(t);\r\n                }\r\n                else if(isInt(q)) {\r\n                    var factors = Math2.ifactor(q);\r\n                    var tw = 1;\r\n                    for(var x in factors) {\r\n                        var n = factors[x],\r\n                                nn = (n - (n % 2)); //get out the whole numbers\r\n                        if(nn) { //if there is a whole number ...\r\n                            var w = Math.pow(x, nn);\r\n                            tw *= Math.pow(x, nn / 2); //add to total wholes\r\n                            q /= w; //reduce the number by the wholes\r\n                        }\r\n                    }\r\n                    m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\r\n                }\r\n                else {\r\n                    //reduce the numerator and denominator using prime factorization\r\n                    var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\r\n                    var r = [new Symbol(1), new Symbol(1)];\r\n                    var sq = [new Symbol(1), new Symbol(1)];\r\n                    for(var i = 0; i < 2; i++) {\r\n                        var n = c[i];\r\n                        //get the prime factors and loop through each.\r\n                        pfactor(n).each(function (x) {\r\n                            x = Symbol.unwrapPARENS(x);\r\n                            var b = x.clone().toLinear();\r\n                            var p = Number(x.power);\r\n                            //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\r\n                            var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\r\n                            var w = (p - rem) / 2; //get the whole numbers of n/2\r\n                            r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\r\n                            sq[i] = _.multiply(sq[i], sqrt(_.pow(b, new Symbol(rem))));\r\n                        });\r\n                    }\r\n                    m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\r\n                }\r\n\r\n\r\n                //strip the multiplier since we already took the sqrt\r\n                symbol = symbol.toUnitMultiplier(true);\r\n                //if the symbol is one just return one and not the sqrt function\r\n                if(symbol.isOne()) {\r\n                    retval = symbol;\r\n                }\r\n                else if(even(symbol.power.toString())) {\r\n                    //just raise it to the 1/2\r\n                    retval = _.pow(symbol.clone(), new Symbol(0.5));\r\n                }\r\n                else {\r\n                    retval = _.symfunction(SQRT, [symbol]);\r\n                }\r\n\r\n                //put back the sign that was removed earlier\r\n                if(sign < 0)\r\n                    retval.power.negate();\r\n\r\n                if(m)\r\n                    retval = _.multiply(m, retval);\r\n\r\n                if(img)\r\n                    retval = _.multiply(img, retval);\r\n            }\r\n\r\n            if(is_negative && Settings.PARSE2NUMBER)\r\n                return _.parse(retval);\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * The cube root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function cbrt(symbol) {\r\n            if(!symbol.isConstant(true)) {\r\n                var retval;\r\n\r\n                var n = symbol.power / 3;\r\n                //take the cube root of the multplier\r\n                var m = _.pow(_.parse(symbol.multiplier), new Symbol(1 / 3));\r\n                //strip the multiplier\r\n                var sym = symbol.toUnitMultiplier();\r\n\r\n                //simplify the power\r\n                if(isInt(n)) {\r\n                    retval = _.pow(sym.toLinear(), _.parse(n));\r\n                }\r\n                else {\r\n                    if(sym.group === CB) {\r\n                        retval = new Symbol(1);\r\n                        sym.each(function (x) {\r\n                            retval = _.multiply(retval, cbrt(x));\r\n                        });\r\n                    }\r\n                    else {\r\n                        retval = _.symfunction('cbrt', [sym]);\r\n                    }\r\n                }\r\n\r\n                return _.multiply(m, retval);\r\n            }\r\n            return nthroot(symbol, new Symbol(3));\r\n        }\r\n\r\n        function scientific(symbol, sigfigs) {\r\n            //Just set the flag and keep it moving. Symbol.toString will deal with how to\r\n            //display this\r\n            symbol.scientific = sigfigs || 10;\r\n            return symbol;\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Symbol} num - the number being raised\r\n         * @param {Symbol} p - the exponent\r\n         * @param {type} prec - the precision wanted\r\n         * @param {bool} asbig - true if a bigDecimal is wanted\r\n         * @returns {Symbol}\r\n         */\r\n        function nthroot(num, p, prec, asbig) {\r\n            //clone p and convert to a number if possible\r\n            p = evaluate(_.parse(p));\r\n\r\n            //cannot calculate if p = 0. nthroot(0, 0) => 0^(1/0) => undefined\r\n            if(p.equals(0)) {\r\n                throw new UndefinedError('Unable to calculate nthroots of zero');\r\n            }\r\n\r\n            //Stop computation if it negative and even since we have an imaginary result\r\n            if(num < 0 && even(p))\r\n                throw new Error('Cannot calculate nthroot of negative number for even powers');\r\n\r\n            //return non numeric values unevaluated\r\n            if(!num.isConstant(true)) {\r\n                return _.symfunction('nthroot', arguments);\r\n            }\r\n\r\n            //evaluate numeric values\r\n            if(num.group !== N) {\r\n                num = evaluate(num);\r\n            }\r\n\r\n            //default is to return a big value\r\n            if(typeof asbig === 'undefined')\r\n                asbig = true;\r\n\r\n            prec = prec || 25;\r\n\r\n            var sign = num.sign();\r\n            var retval;\r\n            var ans;\r\n\r\n            if(sign < 0) {\r\n                num = abs(num); //remove the sign\r\n            }\r\n\r\n            if(isInt(num) && p.isConstant()) {\r\n\r\n                if(num < 18446744073709551616) {\r\n                    //2^64\r\n                    ans = Frac.create(Math.pow(num, 1 / p));\r\n                }\r\n                else {\r\n                    ans = Math2.nthroot(num, p);\r\n                }\r\n\r\n                var retval;\r\n                if(asbig) {\r\n                    retval = new Symbol(ans);\r\n                }\r\n                retval = new Symbol(ans.toDecimal(prec));\r\n\r\n                return _.multiply(new Symbol(sign), retval);\r\n            }\r\n        }\r\n\r\n        function pfactor(symbol) {\r\n            //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\r\n            //More Big Number issues >:(\r\n            if(symbol.greaterThan(9.999999999998891e+41) || symbol.equals(-1))\r\n                return symbol;\r\n            //Fix issue #298\r\n            if(symbol.equals(Math.PI))\r\n                return new Symbol(Math.PI);\r\n            //evaluate the symbol to merge constants\r\n            symbol = evaluate(symbol.clone());\r\n\r\n            if(symbol.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                var m = symbol.toString();\r\n                if(isInt(m)) {\r\n                    var factors = Math2.ifactor(m);\r\n                    for(var factor in factors) {\r\n                        var p = factors[factor];\r\n                        retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\r\n                    }\r\n                }\r\n                else {\r\n                    var n = pfactor(new Symbol(symbol.multiplier.num));\r\n                    var d = pfactor(new Symbol(symbol.multiplier.den));\r\n                    retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\r\n                }\r\n            }\r\n            else\r\n                retval = _.symfunction('pfactor', arguments);\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Get's the real part of a complex number. Return number if real\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function realpart(symbol) {\r\n            return symbol.realpart();\r\n        }\r\n\r\n        /**\r\n         * Get's the imaginary part of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function imagpart(symbol) {\r\n            return symbol.imagpart();\r\n        }\r\n\r\n        /**\r\n         * Computes the conjugate of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function conjugate(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\r\n        }\r\n\r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            if(re.isConstant() && im.isConstant())\r\n                return new Symbol(Math.atan2(im, re));\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n\r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            if(re.isConstant() && im.isConstant()) {\r\n                if(im.equals(0) && re.equals(-1)) {\r\n                    return _.parse('pi');\r\n                }\r\n                else if(im.equals(1) && re.equals(0)) {\r\n                    return _.parse('pi/2');\r\n                }\r\n                else if(im.equals(1) && re.equals(1)) {\r\n                    return _.parse('pi/4');\r\n                }\r\n                return new Symbol(Math.atan2(im, re));\r\n            }\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n\r\n        /**\r\n         * Returns the polarform of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function polarform(symbol) {\r\n            var p, r, e, theta;\r\n            p = Symbol.toPolarFormArray(symbol);\r\n            theta = p[1];\r\n            r = p[0];\r\n            e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\r\n            return _.multiply(r, e);\r\n        }\r\n\r\n        /**\r\n         * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rectform(symbol) {\r\n            //TODO: e^((i*pi)/4)\r\n            var original = symbol.clone();\r\n            try {\r\n                var f, p, q, s, h, d, n;\r\n                f = decompose_fn(symbol, 'e', true);\r\n                p = _.divide(f.x.power, Symbol.imaginary());\r\n                q = evaluate(trig.tan(p));\r\n                s = _.pow(f.a, new Symbol(2));\r\n                d = q.getDenom(true);\r\n                n = q.getNum();\r\n                h = Symbol.hyp(n, d);\r\n                //check\r\n                if(h.equals(f.a)) {\r\n                    return _.add(d, _.multiply(Symbol.imaginary(), n));\r\n                }\r\n                else {\r\n                    return original;\r\n                }\r\n            }\r\n            catch(e) {\r\n                return original;\r\n            }\r\n        }\r\n\r\n        function symMinMax(f, args) {\r\n            args.map(function (x) {\r\n                x.numVal = evaluate(x).multiplier;\r\n            });\r\n            var l, a, b, a_val, b_val;\r\n            while(true) {\r\n                l = args.length;\r\n                if(l < 2)\r\n                    return args[0];\r\n                a = args.pop();\r\n                b = args[l - 2];\r\n                if(f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\r\n                    args.pop();\r\n                    args.push(a);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns maximum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function max() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.max.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args))\r\n                return symMinMax('max', args);\r\n            return _.symfunction('max', args);\r\n        }\r\n\r\n        /**\r\n         * Returns minimum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function min() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.min.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args))\r\n                return symMinMax('min', args);\r\n            return _.symfunction('min', args);\r\n        }\r\n\r\n        /**\r\n         * Returns the sign of a number\r\n         * @param {Symbol} x\r\n         * @returns {Symbol}\r\n         */\r\n        function sign(x) {\r\n            if(x.isConstant(true))\r\n                return new Symbol(Math.sign(evaluate(x)));\r\n            return _.symfunction('sign', arguments);\r\n        }\r\n\r\n        function sort(symbol, opt) {\r\n            opt = opt ? opt.toString() : 'asc';\r\n            var getval = function (e) {\r\n                if(e.group === N)\r\n                    return e.multiplier;\r\n                if(e.group === FN) {\r\n                    if(e.fname === '')\r\n                        return getval(e.args[0]);\r\n                    return e.fname;\r\n                }\r\n                if(e.group === S)\r\n                    return e.power;\r\n\r\n                return e.value;\r\n            };\r\n            var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\r\n            return new Vector(symbols.sort(function (a, b) {\r\n                var aval = getval(a),\r\n                        bval = getval(b);\r\n                if(opt === 'desc')\r\n                    return bval - aval;\r\n                return aval - bval;\r\n            }));\r\n        }\r\n\r\n        /**\r\n         * The log function\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} base\r\n         * @returns {Symbol}\r\n         */\r\n        function log(symbol, base) {\r\n\r\n            if(symbol.equals(1)) {\r\n                return new Symbol(0);\r\n            }\r\n\r\n            var retval;\r\n\r\n            if(symbol.fname === SQRT && symbol.multiplier.equals(1)) {\r\n                retval = _.divide(log(symbol.args[0]), new Symbol(2));\r\n\r\n                if(symbol.power.sign() < 0) {\r\n                    retval.negate();\r\n                }\r\n\r\n                // Exit early\r\n                return retval;\r\n            }\r\n\r\n            //log(0) is undefined so complain\r\n            if(symbol.equals(0)) {\r\n                throw new UndefinedError(Settings.LOG + '(0) is undefined!');\r\n            }\r\n\r\n            //deal with imaginary values\r\n            if(symbol.isImaginary()) {\r\n                return complex.evaluate(symbol, Settings.LOG);\r\n            }\r\n\r\n            if(symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\r\n                var log_sym = Math.log(symbol);\r\n                var log_base = Math.log(base);\r\n                retval = new Symbol(log_sym / log_base);\r\n            }\r\n            else if(symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\r\n                symbol.power.negate();\r\n                //move the negative outside but keep the positive inside :)\r\n                retval = log(symbol).negate();\r\n            }\r\n            else if(symbol.value === 'e' && symbol.multiplier.equals(1)) {\r\n                var p = symbol.power;\r\n                retval = isSymbol(p) ? p : new Symbol(p);\r\n            }\r\n            else if(symbol.group === FN && symbol.fname === 'exp') {\r\n                var s = symbol.args[0];\r\n                if(symbol.multiplier.equals(1))\r\n                    retval = _.multiply(s, new Symbol(symbol.power));\r\n                else\r\n                    retval = _.symfunction(Settings.LOG, [symbol]);\r\n            }\r\n            else if(Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\r\n                // Parse for safety.\r\n                symbol = _.parse(symbol);\r\n\r\n                var img_part;\r\n                if(symbol.multiplier.lessThan(0)) {\r\n                    symbol.negate();\r\n                    img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\r\n                }\r\n\r\n                retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\r\n\r\n                if(img_part) {\r\n                    retval = _.add(retval, img_part);\r\n                }\r\n\r\n            }\r\n            else {\r\n                var s;\r\n                if(!symbol.power.equals(1) && !symbol.contains('e')) {\r\n                    s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\r\n                    symbol.toLinear();\r\n                }\r\n                //log(a,a) = 1 since the base is allowed to be changed.\r\n                //This was pointed out by Happypig375 in issue #280\r\n                if(arguments.length > 1 && allSame(arguments)) {\r\n                    retval = new Symbol(1);\r\n                }\r\n                else {\r\n                    retval = _.symfunction(Settings.LOG, arguments);\r\n                }\r\n\r\n                if(s)\r\n                    retval = _.multiply(s, retval);\r\n            }\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Round a number up to s decimal places\r\n         * @param {Number} x\r\n         * @param {int} s - the number of decimal places\r\n         * @returns {undefined}\r\n         */\r\n        function round(x, s) {\r\n            var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\r\n            if(x.isConstant() && sIsConstant) {\r\n                var v, e, exp, retval;\r\n                v = x;\r\n                //round the coefficient of then number but not the actual decimal value\r\n                //we know this because a negative number was passed\r\n                if(s && s.lessThan(0)) {\r\n                    s = abs(s);\r\n                    //convert the number to exponential form\r\n                    e = Number(x).toExponential().toString().split('e');\r\n                    //point v to the coefficient of then number\r\n                    v = e[0];\r\n                    //set the expontent\r\n                    exp = e[1];\r\n                }\r\n                //round the number to the requested precision\r\n                retval = new Symbol(nround(v, Number(s || 0)));\r\n                //if there's a exponent then put it back\r\n                return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)))\r\n            }\r\n\r\n\r\n            return _.symfunction('round', arguments);\r\n        }\r\n\r\n        /**\r\n         * Gets the quadrant of the trig function\r\n         * @param {Frac} m\r\n         * @returns {Int}\r\n         */\r\n        function getQuadrant(m) {\r\n            var v = m % 2, quadrant;\r\n\r\n            if(v < 0)\r\n                v = 2 + v; //put it in terms of pi\r\n\r\n            if(v >= 0 && v <= 0.5)\r\n                quadrant = 1;\r\n            else if(v > 0.5 && v <= 1)\r\n                quadrant = 2;\r\n            else if(v > 1 && v <= 1.5)\r\n                quadrant = 3;\r\n            else\r\n                quadrant = 4;\r\n            return quadrant;\r\n        }\r\n\r\n        /*\r\n         * Serves as a bridge between numbers and bigNumbers\r\n         * @param {Frac|Number} n\r\n         * @returns {Symbol}\r\n         */\r\n        function bigConvert(n) {\r\n            if(!isFinite(n)) {\r\n                var sign = Math.sign(n);\r\n                var r = new Symbol(String(Math.abs(n)));\r\n                r.multiplier = r.multiplier.multiply(new Frac(sign));\r\n                return r;\r\n            }\r\n            if(isSymbol(n))\r\n                return n;\r\n            if(typeof n === 'number') {\r\n                try {\r\n                    n = Frac.simple(n);\r\n                }\r\n                catch(e) {\r\n                    n = new Frac(n);\r\n                }\r\n            }\r\n\r\n            var symbol = new Symbol(0);\r\n            symbol.multiplier = n;\r\n            return symbol;\r\n        }\r\n        ;\r\n\r\n        function clean(symbol) {\r\n            // handle functions with numeric values\r\n            // handle denominator within denominator\r\n            // handle trig simplifications\r\n            var g = symbol.group, retval;\r\n            //Now let's get to work\r\n            if(g === CP) {\r\n                var num = symbol.getNum(),\r\n                        den = symbol.getDenom() || new Symbol(1),\r\n                        p = Number(symbol.power),\r\n                        factor = new Symbol(1);\r\n                if(Math.abs(p) === 1) {\r\n                    den.each(function (x) {\r\n                        if(x.group === CB) {\r\n                            factor = _.multiply(factor, clean(x.getDenom()));\r\n                        }\r\n                        else if(x.power.lessThan(0)) {\r\n                            factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\r\n                        }\r\n                    });\r\n\r\n                    var new_den = new Symbol(0);\r\n                    //now divide out the factor and add to new den\r\n                    den.each(function (x) {\r\n                        new_den = _.add(_.divide(x, factor.clone()), new_den);\r\n                    });\r\n\r\n                    factor.invert(); //invert so it can be added to the top\r\n                    var new_num;\r\n                    if(num.isComposite()) {\r\n                        new_num = new Symbol(0);\r\n                        num.each(function (x) {\r\n                            new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\r\n                        });\r\n                    }\r\n                    else\r\n                        new_num = _.multiply(factor, num);\r\n\r\n                    retval = _.divide(new_num, new_den);\r\n                }\r\n            }\r\n            else if(g === CB) {\r\n                retval = new Symbol(1);\r\n                symbol.each(function (x) {\r\n                    retval = _.multiply(retval, _.clean(x));\r\n                });\r\n            }\r\n            else if(g === FN) {\r\n                if(symbol.args.length === 1 && symbol.args[0].isConstant())\r\n                    retval = block('PARSE2NUMBER', function () {\r\n                        return _.parse(symbol);\r\n                    }, true);\r\n            }\r\n\r\n            if(!retval)\r\n                retval = symbol;\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * A wrapper for the expand function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function expandall(symbol, opt) {\r\n            opt = opt || {\r\n                expand_denominator: true,\r\n                expand_functions: true\r\n            };\r\n            return expand(symbol, opt);\r\n        }\r\n        /**\r\n         * Expands a symbol\r\n         * @param symbol\r\n         */\r\n        // Old expand\r\n        function expand(symbol, opt) {\r\n            if(Array.isArray(symbol)) {\r\n                return symbol.map(function (x) {\r\n                    return expand(x, opt);\r\n                });\r\n            }\r\n            opt = opt || {};\r\n            //deal with parenthesis\r\n            if(symbol.group === FN && symbol.fname === '') {\r\n                var f = expand(symbol.args[0], opt);\r\n                var x = expand(_.pow(f, _.parse(symbol.power)), opt);\r\n                return _.multiply(_.parse(symbol.multiplier), x).distributeMultiplier();\r\n            }\r\n            // We can expand these groups so no need to waste time. Just return and be done.\r\n            if([N, P, S].indexOf(symbol.group) !== -1) {\r\n                return symbol; //nothing to do\r\n            }\r\n\r\n            var original = symbol.clone();\r\n\r\n            // Set up a try-catch block. If anything goes wrong then we simply return the original symbol\r\n            try {\r\n                // Store the power and multiplier\r\n                var m = symbol.multiplier.toString();\r\n                var p = Number(symbol.power);\r\n                var retval = symbol;\r\n\r\n                // Handle (a+b)^2 | (x+x^2)^2\r\n                if(symbol.isComposite() && isInt(symbol.power) && symbol.power > 0) {\r\n                    var n = p - 1;\r\n                    // Strip the expression of it's multiplier and power. We'll call it f. The power will be p and the multiplier m.\r\n                    var f = new Symbol(0);\r\n\r\n                    symbol.each(function (x) {\r\n                        f = _.add(f, expand(_.parse(x), opt));\r\n                    });\r\n\r\n                    var expanded = _.parse(f);\r\n\r\n                    for(var i = 0; i < n; i++) {\r\n                        expanded = mix(expanded, f, opt);\r\n                    }\r\n\r\n                    retval = _.multiply(_.parse(m), expanded).distributeMultiplier();\r\n                }\r\n                else if(symbol.group === FN && opt.expand_functions === true) {\r\n                    var args = [];\r\n                    // Expand function the arguments\r\n                    symbol.args.forEach(function (x) {\r\n                        args.push(expand(x, opt));\r\n                    });\r\n                    // Put back the power and multiplier\r\n                    retval = _.pow(_.symfunction(symbol.fname, args), _.parse(symbol.power));\r\n                    retval = _.multiply(retval, _.parse(symbol.multiplier));\r\n                }\r\n                else if(symbol.isComposite() && isInt(symbol.power) && symbol.power < 0 && opt.expand_denominator === true) {\r\n                    // Invert it. Expand it and then re-invert it.\r\n                    symbol = symbol.invert();\r\n                    retval = expand(symbol, opt);\r\n                    retval.invert();\r\n                }\r\n                else if(symbol.group === CB) {\r\n                    var rank = function (s) {\r\n                        switch(s.group) {\r\n                            case CP:\r\n                                return 0;\r\n                            case PL:\r\n                                return 1;\r\n                            case CB:\r\n                                return 2;\r\n                            case FN:\r\n                                return 3;\r\n                            default:\r\n                                return 4;\r\n                        }\r\n                    };\r\n                    // Consider (a+b)(c+d). The result will be (a*c+a*d)+(b*c+b*d).\r\n                    // We start by moving collecting the symbols. We want others>FN>CB>PL>CP\r\n                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                        return rank(b) - rank(a);\r\n                    })\r\n                            // Distribute the power to each symbol and expand\r\n                            .map(function (s) {\r\n                                var x = _.pow(s, _.parse(p));\r\n                                var e = expand(x, opt);\r\n                                return e;\r\n                            });\r\n\r\n                    var f = symbols.pop();\r\n\r\n                    // If the first symbols isn't a composite then we're done\r\n                    if(f.isComposite() && f.isLinear()) {\r\n                        symbols.forEach(function (s) {\r\n                            f = mix(f, s, opt);\r\n                        });\r\n\r\n                        // If f is of group PL or CP then we can expand some more\r\n                        if(f.isComposite()) {\r\n                            if(f.power > 1) {\r\n                                f = expand(_.pow(f, _.parse(f.power)), opt);\r\n                            }\r\n                            // Put back the multiplier\r\n                            retval = _.multiply(_.parse(m), f).distributeMultiplier();\r\n                            ;\r\n                        }\r\n                        else {\r\n                            // Everything is expanded at this point so if it's still a CB\r\n                            // then just return the symbol\r\n                            retval = f;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Just multiply back in the expanded form of each\r\n                        retval = f;\r\n                        symbols.forEach(function (s) {\r\n                            retval = _.multiply(retval, s);\r\n                        });\r\n                        // Put back the multiplier\r\n                        retval = _.multiply(retval, _.parse(m)).distributeMultiplier();\r\n                    }\r\n\r\n                    // TODO: This exists solely as a quick fix for sqrt(11)*sqrt(33) not simplifying.\r\n                    if(retval.group === CB) {\r\n                        retval = _.parse(retval);\r\n                    }\r\n                }\r\n                else {\r\n                    // Otherwise just return the expression\r\n                    retval = symbol;\r\n                }\r\n                // Final cleanup and return\r\n                return retval;\r\n            }\r\n            catch(e) {\r\n                return original;\r\n            }\r\n\r\n            return original;\r\n        }\r\n\r\n        /**\r\n         * Returns an identity matrix of nxn\r\n         * @param {Number} n\r\n         * @returns {Matrix}\r\n         */\r\n        function imatrix(n) {\r\n            return Matrix.identity(n);\r\n        }\r\n\r\n        /**\r\n         * Retrieves and item from a vector\r\n         * @param {Vector} vector\r\n         * @param {Number} index\r\n         * @returns {Vector|Symbol}\r\n         */\r\n        function vecget(vector, index) {\r\n            if(index.isConstant() && isInt(index))\r\n                return vector.elements[index];\r\n            return _.symfunction('vecget', arguments);\r\n        }\r\n\r\n        /**\r\n         * Removes duplicates from a vector\r\n         * @param {Vector} vector\r\n         * @param {Number} tolerance\r\n         * @returns {Vector}\r\n         */\r\n        function vectrim(vector, tolerance) {\r\n            tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\r\n\r\n            vector = vector.clone();\r\n\r\n            tolerance = Number(tolerance);\r\n            //place algebraic solutions first\r\n            vector.elements.sort(function (a, b) {\r\n                return b.group - a.group;\r\n            });\r\n            //depending on the start point we may have duplicates so we need to clean those up a bit.\r\n            //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\r\n            vector.elements = removeDuplicates(vector.elements, function (a, b) {\r\n                var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\r\n                return diff <= tolerance;\r\n            });\r\n\r\n            return vector;\r\n        }\r\n\r\n        /**\r\n         * Set a value for a vector at a given index\r\n         * @param {Vector} vector\r\n         * @param {Number} index\r\n         * @param {Symbol} value\r\n         * @returns {Vector}\r\n         */\r\n        function vecset(vector, index, value) {\r\n            if(!index.isConstant)\r\n                return _.symfunction('vecset', arguments);\r\n            vector.elements[index] = value;\r\n            return vector;\r\n        }\r\n\r\n        function matget(matrix, i, j) {\r\n            if(i.isConstant() && j.isConstant())\r\n                return matrix.elements[i][j];\r\n            return _.symfunction('matget', arguments);\r\n        }\r\n\r\n        function matgetrow(matrix, i) {\r\n            if(i.isConstant())\r\n                return new Matrix(matrix.elements[i]);\r\n            return _.symfunction('matgetrow', arguments);\r\n        }\r\n\r\n        function matsetrow(matrix, i, x) {\r\n            //handle symbolics\r\n            if(!i.isConstant())\r\n                return _.symfunction('matsetrow', arguments);\r\n            if(matrix.elements[i].length !== x.elements.length)\r\n                throw new DimensionError('Matrix row must match row dimensions!');\r\n            var M = matrix.clone();\r\n            M.elements[i] = x.clone().elements;\r\n            return M;\r\n        }\r\n\r\n        function matgetcol(matrix, col_index) {\r\n            //handle symbolics\r\n            if(!col_index.isConstant())\r\n                return _.symfunction('matgetcol', arguments);\r\n            col_index = Number(col_index);\r\n            var M = Matrix.fromArray([]);\r\n            matrix.each(function (x, i, j) {\r\n                if(j === col_index) {\r\n                    M.elements.push([x.clone()]);\r\n                }\r\n            });\r\n            return M;\r\n        }\r\n\r\n        function matsetcol(matrix, j, col) {\r\n            //handle symbolics\r\n            if(!j.isConstant())\r\n                return _.symfunction('matsetcol', arguments);\r\n            j = Number(j);\r\n            if(matrix.rows() !== col.elements.length)\r\n                throw new DimensionError('Matrix columns must match number of columns!');\r\n            col.each(function (x, i) {\r\n                matrix.set(i - 1, j, x.elements[0].clone());\r\n            });\r\n            return matrix;\r\n        }\r\n\r\n\r\n        function matset(matrix, i, j, value) {\r\n            matrix.elements[i][j] = value;\r\n            return matrix;\r\n        }\r\n\r\n        //the constructor for vectors\r\n        function vector() {\r\n            return new Vector([].slice.call(arguments));\r\n        }\r\n\r\n        //the constructor for matrices\r\n        function matrix() {\r\n            return Matrix.fromArray(arguments);\r\n        }\r\n\r\n        //the constructor for sets\r\n        function set() {\r\n            return Set.fromArray(arguments);\r\n        }\r\n\r\n        function determinant(symbol) {\r\n            if(isMatrix(symbol)) {\r\n                return symbol.determinant();\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        function size(symbol) {\r\n            var retval;\r\n            if(isMatrix(symbol))\r\n                retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];\r\n            else if(isVector(symbol) || isSet(symbol))\r\n                retval = new Symbol(symbol.elements.length);\r\n            else\r\n                err('size expects a matrix or a vector');\r\n            return retval;\r\n        }\r\n\r\n        function dot(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2))\r\n                return vec1.dot(vec2);\r\n            err('function dot expects 2 vectors');\r\n        }\r\n\r\n        function cross(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2))\r\n                return vec1.cross(vec2);\r\n            err('function cross expects 2 vectors');\r\n        }\r\n\r\n        function transpose(mat) {\r\n            if(isMatrix(mat))\r\n                return mat.transpose();\r\n            err('function transpose expects a matrix');\r\n        }\r\n\r\n        function invert(mat) {\r\n            if(isMatrix(mat))\r\n                return mat.invert();\r\n            err('invert expects a matrix');\r\n        }\r\n\r\n        //basic set functions\r\n        function union(set1, set2) {\r\n            return set1.union(set2);\r\n        }\r\n\r\n        function intersection(set1, set2) {\r\n            return set1.intersection(set2);\r\n        }\r\n\r\n        function contains(set1, e) {\r\n            return set1.contains(e);\r\n        }\r\n\r\n        function difference(set1, set2) {\r\n            return set1.difference(set2);\r\n        }\r\n\r\n        function intersects(set1, set2) {\r\n            return new Symbol(Number(set1.intersects(set2)));\r\n        }\r\n\r\n        function is_subset(set1, set2) {\r\n            return new Symbol(Number(set1.is_subset(set2)));\r\n        }\r\n\r\n        function print() {\r\n            arguments2Array(arguments).map(function (x) {\r\n                console.log(x.toString());\r\n            });\r\n        }\r\n\r\n        function testSQRT(symbol) {\r\n            //wrap the symbol in sqrt. This eliminates one more check down the line.\r\n            if(!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\r\n                var sign = symbol.power.sign();\r\n                //don't devide the power directly. Notice the use of toString. This makes it possible\r\n                //to use a bigNumber library in the future\r\n                var retval = sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear());\r\n                //place back the sign of the power\r\n                if(sign < 0)\r\n                    retval.invert();\r\n                return retval;\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        //try to reduce a symbol by pulling its power\r\n        function testPow(symbol) {\r\n            if(symbol.group === P) {\r\n                var v = symbol.value;\r\n\r\n                var fct = primeFactors(v)[0];\r\n\r\n                //safety\r\n                if(!fct) {\r\n                    warn('Unable to compute prime factors. This should not happen. Please review and report.');\r\n                    return symbol;\r\n                }\r\n\r\n                var n = new Frac(Math.log(v) / Math.log(fct)),\r\n                        p = n.multiply(symbol.power);\r\n\r\n                //we don't want a more complex number than before\r\n                if(p.den > symbol.power.den)\r\n                    return symbol;\r\n\r\n                if(isInt(p))\r\n                    symbol = Symbol(Math.pow(fct, p));\r\n                else\r\n                    symbol = new Symbol(fct).setPower(p);\r\n            }\r\n\r\n            return symbol;\r\n        }\r\n\r\n        //Link the functions to the parse so they're available outside of the library.\r\n        //This is strictly for convenience and may be deprecated.\r\n        this.expand = expand;\r\n        this.round = round;\r\n        this.clean = clean;\r\n        this.sqrt = sqrt;\r\n        this.cbrt = cbrt;\r\n        this.abs = abs;\r\n        this.log = log;\r\n        this.rationalize = rationalize;\r\n        this.nthroot = nthroot;\r\n        this.arg = arg;\r\n        this.conjugate = conjugate;\r\n        this.imagpart = imagpart;\r\n        this.realpart = realpart;\r\n\r\n        //TODO:\r\n        //Utilize the function below instead of the linked function\r\n        this.getFunction = function (name) {\r\n            return functions[name][0];\r\n        };\r\n\r\n//Parser.methods ===============================================================\r\n        this.addPreprocessor = function (name, action, order, shift_cells) {\r\n            var names = preprocessors.names;\r\n            var actions = preprocessors.actions;\r\n            if((typeof action !== 'function')) //the person probably forgot to specify a name\r\n                throw new PreprocessorError('Incorrect parameters. Function expected!');\r\n            if(!order) {\r\n                names.push(name);\r\n                actions.push(action);\r\n            }\r\n            else {\r\n                if(shift_cells) {\r\n                    names.splice(order, 0, name);\r\n                    actions.splice(order, 0, action);\r\n                }\r\n                else {\r\n                    names[order] = name;\r\n                    actions[order] = action;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.getPreprocessors = function () {\r\n            var preprocessors = {};\r\n            for(var i = 0, l = preprocessors.names.length; i < l; i++) {\r\n                var name = preprocessors.names[i];\r\n                preprocessors[name] = {\r\n                    order: i,\r\n                    action: preprocessors.actions[i]\r\n                };\r\n            }\r\n            return preprocessors;\r\n        };\r\n\r\n        this.removePreprocessor = function (name, shift_cells) {\r\n            var i = preprocessors.names.indexOf(name);\r\n            if(shift_cells) {\r\n                remove(preprocessors.names, i);\r\n                remove(preprocessors.actions, i);\r\n            }\r\n            else {\r\n                preprocessors.names[i] = undefined;\r\n                preprocessors.actions[i] = undefined;\r\n            }\r\n        };\r\n\r\n        //The loader for functions which are not part of Math2\r\n        this.mapped_function = function () {\r\n            var subs = {},\r\n                    params = this.params;\r\n\r\n            for(var i = 0; i < params.length; i++) {\r\n                subs[params[i]] = String(arguments[i]);\r\n            }\r\n\r\n            return _.parse(this.body, subs);\r\n        };\r\n        /**\r\n         * Adds two symbols\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.add = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            //we're dealing with two symbols\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //forward the adding of symbols with units to the Unit module\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.add(a, b);\r\n                }\r\n                //handle Infinity\r\n                //https://www.encyclopediaofmath.org/index.php/Infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    var aneg = a.multiplier.lessThan(0),\r\n                            bneg = b.multiplier.lessThan(0);\r\n\r\n                    if(a.isInfinity && b.isInfinity && aneg !== bneg) {\r\n                        throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\r\n                    }\r\n\r\n                    var inf = Symbol.infinity();\r\n                    if(bneg)\r\n                        inf.negate();\r\n                    return inf;\r\n                }\r\n\r\n                if(a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\r\n                    a.distributeMultiplier();\r\n                    b.distributeMultiplier();\r\n                    // Fix for issue #606\r\n                    if(b.length > a.length && a.group === b.group) {\r\n                        [a, b] = [b, a];\r\n                    }\r\n                }\r\n                \r\n                //no need to waste time on zeroes\r\n                if(a.multiplier.equals(0))\r\n                    return b;\r\n                if(b.multiplier.equals(0))\r\n                    return a;\r\n\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\r\n                    return result;\r\n                }\r\n\r\n                var g1 = a.group,\r\n                        g2 = b.group,\r\n                        ap = a.power.toString(),\r\n                        bp = b.power.toString();\r\n\r\n                //always keep the greater group on the left.\r\n                if(g1 < g2 || (g1 === g2 && ap > bp && bp > 0)) {\r\n                    return this.add(b, a);\r\n                }\r\n\r\n                /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\r\n                 * because it doesn't know which one to prioritize. */\r\n                //correction to PL dilemma\r\n                if(g1 === CB && g2 === PL && a.value === b.value) {\r\n                    //swap\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t;\r\n                    g1 = a.group;\r\n                    g2 = b.group;\r\n                    ap = a.power.toString();\r\n                    bp = b.power.toString();\r\n                }\r\n\r\n                var powEQ = ap === bp,\r\n                        v1 = a.value,\r\n                        v2 = b.value,\r\n                        aIsComposite = a.isComposite(),\r\n                        bIsComposite = b.isComposite(),\r\n                        h1, h2, result;\r\n\r\n                if(aIsComposite)\r\n                    h1 = text(a, 'hash');\r\n                if(bIsComposite)\r\n                    h2 = text(b, 'hash');\r\n\r\n                if(g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\r\n                    return this.add(b, a);\r\n                }\r\n\r\n                //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\r\n                if(g1 === PL && g2 === PL) {\r\n                    v1 = h1;\r\n                    v2 = h2;\r\n                }\r\n\r\n                var PN = g1 === P && g2 === N,\r\n                        PNEQ = a.value === b.multiplier.toString(),\r\n                        valEQ = (v1 === v2 || h1 === h2 && h1 !== undefined || (PN && PNEQ));\r\n\r\n                //equal values, equal powers\r\n                if(valEQ && powEQ && g1 === g2) {\r\n                    //make sure to convert N to something P can work with\r\n                    if(PN)\r\n                        b = b.convert(P);//CL\r\n\r\n                    //handle PL\r\n                    if(g1 === PL && (g2 === S || g2 === P)) {\r\n                        a.distributeMultiplier();\r\n                        result = a.attach(b);\r\n                    }\r\n                    else {\r\n                        result = a;//CL\r\n                        if(a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\r\n                            for(var s in b.symbols) {\r\n                                var x = b.symbols[s];\r\n                                result.attach(x);\r\n                            }\r\n                        }\r\n                        else\r\n                            result.multiplier = result.multiplier.add(b.multiplier);\r\n                    }\r\n                }\r\n                //equal values uneven powers\r\n                else if(valEQ && g1 !== PL) {\r\n                    //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\r\n                    if(g1 === CP && g2 === PL) {\r\n                        b.insert(a, 'add');\r\n                        result = b;\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(PL).attach([a, b]);\r\n                        //update the hash\r\n                        result.value = g1 === PL ? h1 : v1;\r\n                    }\r\n                }\r\n                else if(aIsComposite && a.isLinear()) {\r\n                    var canIterate = g1 === g2,\r\n                            bothPL = g1 === PL && g2 === PL;\r\n\r\n                    //we can only iterate group PL if they values match\r\n                    if(bothPL)\r\n                        canIterate = a.value === b.value;\r\n                    //distribute the multiplier over the entire symbol\r\n                    a.distributeMultiplier();\r\n\r\n                    if(b.isComposite() && b.isLinear() && canIterate) {\r\n                        b.distributeMultiplier();\r\n                        //CL\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            a.attach(x);\r\n                        }\r\n                        result = a;\r\n                    }\r\n                    //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\r\n                    else if(bothPL && a.value !== h2 || g1 === PL && !valEQ) {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n\r\n                    }\r\n                    else {\r\n                        result = a.attach(b);\r\n                    }\r\n                }\r\n                else {\r\n                    if(g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\r\n                        var m = b.multiplier.clone();\r\n                        b = sqrt(b.toUnitMultiplier().toLinear());\r\n                        b.multiplier = m;\r\n                    }\r\n                    //fix for issue #3 and #159\r\n                    if(a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\r\n                        result = _.add(expand(a), expand(b));\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n                    }\r\n                }\r\n\r\n                if(result.multiplier.equals(0))\r\n                    result = new Symbol(0);\r\n\r\n                //make sure to remove unnecessary wraps\r\n                if(result.length === 1) {\r\n                    var m = result.multiplier;\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(m);\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //keep symbols to the right\r\n                if(bIsSymbol && !aIsSymbol) {\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t; //swap\r\n                    t = bIsSymbol;\r\n                    bIsSymbol = aIsSymbol;\r\n                    aIsSymbol = t;\r\n                }\r\n\r\n                var bIsMatrix = isMatrix(b);\r\n\r\n                if(aIsSymbol && bIsMatrix) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (e, i, j) {\r\n                        M.set(i, j, _.add(a.clone(), e));\r\n                    });\r\n\r\n                    b = M\r\n                }\r\n                else {\r\n                    if(isMatrix(a) && bIsMatrix) {\r\n                        b = a.add(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function (x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.add(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function (x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.add(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return _.add(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function (e, i) {\r\n                                    var row = [];\r\n                                    for(var j = 0; j < l; j++) {\r\n                                        row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else\r\n                                err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.subtract = function (a, b) {\r\n            var aIsSymbol = aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b), t;\r\n\r\n            if(aIsSymbol && bIsSymbol) {\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.subtract(a, b);\r\n                }\r\n                return this.add(a, b.negate());\r\n            }\r\n            else {\r\n                if(bIsSymbol && isVector(a)) {\r\n                    b = a.map(function (x) {\r\n                        return _.subtract(x, b.clone());\r\n                    });\r\n                }\r\n                else if(aIsSymbol && isVector(b)) {\r\n                    b = b.map(function (x) {\r\n                        return _.subtract(a.clone(), x);\r\n                    });\r\n                }\r\n                else if(isVector(a) && isVector(b)) {\r\n                    if(a.dimensions() === b.dimensions())\r\n                        b = a.subtract(b);\r\n                    else\r\n                        _.error('Unable to subtract vectors. Dimensions do not match.');\r\n                }\r\n                else if(isMatrix(a) && isVector(b)) {\r\n                    if(b.elements.length === a.rows()) {\r\n                        var M = new Matrix(), l = a.cols();\r\n                        b.each(function (e, i) {\r\n                            var row = [];\r\n                            for(var j = 0; j < l; j++) {\r\n                                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\r\n                            }\r\n                            M.elements.push(row);\r\n                        });\r\n                        return M;\r\n                    }\r\n                    else\r\n                        err('Dimensions must match!');\r\n                }\r\n                else if(isVector(a) && isMatrix(b)) {\r\n                    var M = b.clone().negate();\r\n                    return _.add(M, a);\r\n                }\r\n                else if(isMatrix(a) && isMatrix(b)) {\r\n                    b = a.subtract(b);\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    var M = new Matrix();\r\n                    a.each(function (x, i, j) {\r\n                        M.set(i, j, _.subtract(x, b.clone()));\r\n                    });\r\n                    b = M;\r\n                }\r\n                else if(aIsSymbol && isMatrix(b)) {\r\n                    var M = new Matrix();\r\n                    b.each(function (x, i, j) {\r\n                        M.set(i, j, _.subtract(a.clone(), x));\r\n                    });\r\n                    b = M;\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the * operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.multiply = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            //we're dealing with function assignment here\r\n            if(aIsSymbol && b instanceof Collection) {\r\n                b.elements.push(a);\r\n                return b;\r\n            }\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //if it has a unit then add it and return it right away.\r\n                if(b.isUnit) {\r\n                    var result = a.clone();\r\n                    a.unit = b;\r\n                    return result;\r\n                }\r\n                \r\n                //if it has units then just forward that problem to the unit module\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.multiply(a, b);\r\n                }\r\n\r\n                //handle Infinty\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.equals(0) || b.equals(0))\r\n                        throw new UndefinedError(a + '*' + b + ' is undefined!');\r\n                    //x/infinity\r\n                    if(b.power.lessThan(0)) {\r\n                        if(!a.isInfinity) {\r\n                            return new Symbol(0);\r\n                        }\r\n                        else {\r\n                            throw new UndefinedError('Infinity/Infinity is not defined!');\r\n                        }\r\n                    }\r\n\r\n                    var sign = a.multiplier.multiply(b.multiplier).sign(),\r\n                            inf = Symbol.infinity();\r\n                    if(a.isConstant() || b.isConstant() || (a.isInfinity && b.isInfinity)) {\r\n                        if(sign < 0)\r\n                            inf.negate();\r\n\r\n                        return inf;\r\n                    }\r\n                }\r\n                //the quickies\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\r\n                    var retval = new Symbol(t);\r\n                    return retval;\r\n                }\r\n\r\n                //don't waste time\r\n                if(a.isOne()) {\r\n                    return b.clone();\r\n                }\r\n                if(b.isOne()) {\r\n                    return a.clone();\r\n                }\r\n\r\n                if(a.multiplier.equals(0) || b.multiplier.equals(0))\r\n                    return new Symbol(0);\r\n\r\n                if(b.group > a.group && !(b.group === CP))\r\n                    return this.multiply(b, a);\r\n                //correction for PL/CB dilemma\r\n                if(a.group === CB && b.group === PL && a.value === b.value) {\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t;//swap\r\n                }\r\n\r\n                var g1 = a.group,\r\n                        g2 = b.group,\r\n                        bnum = b.multiplier.num,\r\n                        bden = b.multiplier.den;\r\n\r\n                if(g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\r\n                    //unwrap sqrt\r\n                    var a_pow = a.power;\r\n                    var a_multiplier = _.parse(a.multiplier);\r\n                    a = _.multiply(a_multiplier, a.args[0].clone());\r\n                    a.setPower(new Frac(0.5).multiply(a_pow));\r\n                    g1 = a.group;\r\n                }\r\n                //simplify n/sqrt(n). Being very specific\r\n                else if(g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\r\n                    a = _.symfunction(SQRT, [b.clone()]);\r\n                    b = new Symbol(1);\r\n                }\r\n                ;\r\n\r\n                var v1 = a.value,\r\n                        v2 = b.value,\r\n                        sign = new Frac(a.sign()),\r\n                        //since P is just a morphed version of N we need to see if they relate\r\n                        ONN = (g1 === P && g2 === N && b.multiplier.equals(a.value)),\r\n                        //don't multiply the multiplier of b since that's equal to the value of a\r\n                        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\r\n                        result = a.clone().toUnitMultiplier();\r\n                b = b.clone().toUnitMultiplier(true);\r\n\r\n                //further simplification of sqrt\r\n                if(g1 === FN && g2 === FN) {\r\n                    var u = a.args[0].clone();\r\n                    var v = b.args[0].clone();\r\n                    if(a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\r\n\r\n                        var q = _.divide(u, v).invert();\r\n                        if(q.gt(1) && isInt(q)) {\r\n                            //b contains a factor a which can be moved to a\r\n                            result = _.multiply(a.args[0].clone(), sqrt(q.clone()));\r\n                            b = new Symbol(1);\r\n                        }\r\n                    }\r\n                    //simplify factorial but only if\r\n                    //1 - It's division so b will have a negative power\r\n                    //2 - We're not dealing with factorials of numbers\r\n                    else if(a.fname === FACTORIAL && b.fname === FACTORIAL && !u.isConstant() && !v.isConstant() && b.power < 0) {\r\n                        //assume that n = positive\r\n                        var d = _.subtract(u.clone(), v.clone());\r\n\r\n                        //if it's not numeric then we don't know if we can simplify so just return\r\n                        if(d.isConstant()) {\r\n\r\n                            //there will never be a case where d == 0 since this will already have\r\n                            //been handled at the beginning of this function\r\n                            t = new Symbol(1);\r\n                            if(d < 0) {\r\n                                //If d is negative then the numerator is larger so expand that\r\n                                for(var i = 0, n = Math.abs(d); i <= n; i++) {\r\n                                    var s = _.add(u.clone(), new Symbol(i));\r\n                                    t = _.multiply(t, s);\r\n                                }\r\n\r\n                                result = _.multiply(_.pow(u, new Symbol(a.power)), _.pow(t, new Symbol(b.power)));\r\n\r\n                                b = new Symbol(1);\r\n                            }\r\n                            else {\r\n                                //Otherwise the denominator is larger so expand that\r\n                                for(var i = 0, n = Math.abs(d); i <= n; i++) {\r\n                                    var s = _.add(v.clone(), new Symbol(i));\r\n                                    t = _.multiply(t, s);\r\n                                }\r\n\r\n                                result = _.multiply(_.pow(t, new Symbol(a.power)), _.pow(v, new Symbol(b.power)));\r\n\r\n                                b = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                //if both are PL then their hashes have to match\r\n                if(v1 === v2 && g1 === PL && g1 === g2) {\r\n                    v1 = a.text('hash');\r\n                    v2 = b.text('hash');\r\n                }\r\n\r\n                //same issue with (x^2+1)^x*(x^2+1)\r\n                //EX needs an exception when multiplying because it needs to recognize\r\n                //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\r\n                if(g2 === EX && b.previousGroup === PL && g1 === PL) {\r\n                    v1 = text(a, 'hash', EX);\r\n                }\r\n\r\n                if((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\r\n                    var p1 = a.power,\r\n                            p2 = b.power,\r\n                            isSymbolP1 = isSymbol(p1),\r\n                            isSymbolP2 = isSymbol(p2),\r\n                            toEX = (isSymbolP1 || isSymbolP2);\r\n                    //TODO: this needs cleaning up\r\n                    if(g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\r\n                        result = new Symbol(0);\r\n                        a.each(function (x) {\r\n                            result = _.add(result, _.multiply(x, b.clone()));\r\n                        }, true);\r\n                    }\r\n                    else {\r\n                        //add the powers\r\n                        result.power = toEX ? _.add(\r\n                                !(isSymbol(p1)) ? new Symbol(p1) : p1,\r\n                                !(isSymbol(p2)) ? new Symbol(p2) : p2\r\n                                ) : (g1 === N /*don't add powers for N*/ ? p1 : p1.add(p2));\r\n\r\n                        //eliminate zero power values and convert them to numbers\r\n                        if(result.power.equals(0))\r\n                            result = result.convert(N);\r\n\r\n                        //properly convert to EX\r\n                        if(toEX)\r\n                            result.convert(EX);\r\n\r\n                        //take care of imaginaries\r\n                        if(a.imaginary && b.imaginary) {\r\n                            var isEven = even(result.power % 2);\r\n                            if(isEven) {\r\n                                result = new Symbol(1);\r\n                                m.negate();\r\n                            }\r\n                        }\r\n\r\n                        //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\r\n                        if(result.group !== EX && result.previousGroup)\r\n                            result.previousGroup = undefined;\r\n                        //the sign for b is floating around. Remember we are assuming that the odd variable will carry\r\n                        //the sign but this isn't true if they're equals symbols\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                }\r\n                else if(g1 === CB && a.isLinear()) {\r\n                    if(g2 === CB)\r\n                        b.distributeExponent();\r\n                    if(g2 === CB && b.isLinear()) {\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            result = result.combine(x);\r\n                        }\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                    else {\r\n                        result.combine(b);\r\n                    }\r\n                }\r\n                else {\r\n                    //the multiplier was already handled so nothing left to do\r\n                    if(g1 !== N) {\r\n                        if(g1 === CB) {\r\n                            result.distributeExponent();\r\n                            result.combine(b);\r\n                        }\r\n                        else if(!b.isOne()) {\r\n                            var bm = b.multiplier.clone();\r\n                            b.toUnitMultiplier();\r\n                            result = Symbol.shell(CB).combine([result, b]);\r\n                            //transfer the multiplier to the outside\r\n                            result.multiplier = result.multiplier.multiply(bm);\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = b.clone().toUnitMultiplier();\r\n                    }\r\n                }\r\n\r\n                if(result.group === P) {\r\n                    var logV = Math.log(result.value),\r\n                            n1 = Math.log(bnum) / logV,\r\n                            n2 = Math.log(bden) / logV,\r\n                            ndiv = m.num / bnum,\r\n                            ddiv = m.den / bden;\r\n                    //we don't want to divide by zero no do we? Strange things happen.\r\n                    if(n1 !== 0 && isInt(n1) && isInt(ndiv)) {\r\n                        result.power = result.power.add(new Frac(n1));\r\n                        m.num /= bnum; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                    if(n2 !== 0 && isInt(n2) && isInt(ddiv)) {\r\n                        result.power = result.power.subtract(new Frac(n2));\r\n                        m.den /= bden; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                }\r\n\r\n                //unpack CB if length is only one\r\n                if(result.length === 1) {\r\n                    var t = result.multiplier;\r\n                    //transfer the multiplier\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(t);\r\n                }\r\n\r\n                //reduce square root\r\n                var ps = result.power.toString();\r\n                if(even(ps) && result.fname === SQRT) {\r\n                    //grab the sign of the symbol\r\n                    sign = sign * result.sign();\r\n                    var p = result.power;\r\n                    result = result.args[0];\r\n                    result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2)))));\r\n                    //flip it back to the correct sign\r\n                    if(sign < 0)\r\n                        result.negate()\r\n                }\r\n                else {\r\n                    result.multiplier = result.multiplier.multiply(m).multiply(sign);\r\n                    if(result.group === CP && result.isImaginary())\r\n                        result.distributeMultiplier();\r\n                }\r\n\r\n                //back convert group P to a simpler group N if possible\r\n                if(result.group === P && isInt(result.power.toDecimal()))\r\n                    result = result.convert(N);\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //****** Matrices & Vector *****//\r\n                if(bIsSymbol && !aIsSymbol) { //keep symbols to the right\r\n                    t = a;\r\n                    a = b;\r\n                    b = t; //swap\r\n                    t = bIsSymbol;\r\n                    bIsSymbol = aIsSymbol;\r\n                    aIsSymbol = t;\r\n                }\r\n\r\n                var isMatrixB = isMatrix(b), isMatrixA = isMatrix(a);\r\n                if(aIsSymbol && isMatrixB) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (e, i, j) {\r\n                        M.set(i, j, _.multiply(a.clone(), e));\r\n                    });\r\n\r\n                    b = M;\r\n                }\r\n                else {\r\n                    if(isMatrixA && isMatrixB) {\r\n                        b = a.multiply(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function (x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.multiply(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function (x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return this.multiply(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function (e, i) {\r\n                                    var row = [];\r\n                                    for(var j = 0; j < l; j++) {\r\n                                        row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else\r\n                                err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the / operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.divide = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //forward to Unit division\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.divide(a, b);\r\n                }\r\n                var result;\r\n                if(b.equals(0))\r\n                    throw new DivisionByZero('Division by zero not allowed!');\r\n\r\n                if(a.isConstant() && b.isConstant()) {\r\n                    result = a.clone();\r\n                    result.multiplier = result.multiplier.divide(b.multiplier);\r\n                }\r\n                else {\r\n                    b.invert();\r\n                    result = _.multiply(a, b);\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                //******* Vectors & Matrices *********//\r\n                var isVectorA = isVector(a), isVectorB = isVector(b);\r\n                if(aIsSymbol && isVectorB) {\r\n                    b = b.map(function (x) {\r\n                        return _.divide(a.clone(), x);\r\n                    });\r\n                }\r\n                else if(isVectorA && bIsSymbol) {\r\n                    b = a.map(function (x) {\r\n                        return _.divide(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isVectorA && isVectorB) {\r\n                    if(a.dimensions() === b.dimensions()) {\r\n                        b = b.map(function (x, i) {\r\n                            return _.divide(a.elements[--i], x);\r\n                        });\r\n                    }\r\n                    else\r\n                        _.error('Cannot divide vectors. Dimensions do not match!');\r\n                }\r\n                else {\r\n                    var isMatrixA = isMatrix(a), isMatrixB = isMatrix(b);\r\n                    if(isMatrixA && bIsSymbol) {\r\n                        var M = new Matrix();\r\n                        a.eachElement(function (x, i, j) {\r\n                            M.set(i, j, _.divide(x, b.clone()));\r\n                        });\r\n                        b = M;\r\n                    }\r\n                    else if(aIsSymbol && isMatrixB) {\r\n                        var M = new Matrix();\r\n                        b.eachElement(function (x, i, j) {\r\n                            M.set(i, j, _.divide(a.clone(), x));\r\n                        });\r\n                        b = M;\r\n                    }\r\n                    else if(isMatrixA && isMatrixB) {\r\n                        var M = new Matrix();\r\n                        if(a.rows() === b.rows() && a.cols() === b.cols()) {\r\n                            a.eachElement(function (x, i, j) {\r\n                                M.set(i, j, _.divide(x, b.elements[i][j]));\r\n                            });\r\n                            b = M;\r\n                        }\r\n                        else {\r\n                            _.error('Dimensions do not match!');\r\n                        }\r\n                    }\r\n                    else if(isMatrixA && isVectorB) {\r\n                        if(a.cols() === b.dimensions()) {\r\n                            var M = new Matrix();\r\n                            a.eachElement(function (x, i, j) {\r\n                                M.set(i, j, _.divide(x, b.elements[i].clone()));\r\n                            });\r\n                            b = M;\r\n                        }\r\n                        else {\r\n                            _.error('Unable to divide matrix by vector.');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the ^ operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.pow = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //it has units then it's the Unit module's problem\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.pow(a, b);\r\n                }\r\n                \r\n                // Handle abs\r\n                if(a.group === FN && a.fname === ABS && even(b)) {\r\n                    var m = a.multiplier.clone();\r\n                    var raised = _.pow(a.args[0], b);\r\n                    raised.multiplier = m;\r\n                    return raised;\r\n                }\r\n                \r\n                // Handle infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.isInfinity && b.isInfinity)\r\n                        throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\r\n\r\n                    if(a.isConstant() && b.isInfinity) {\r\n                        if(a.equals(0)) {\r\n                            if(b.lessThan(0))\r\n                                throw new UndefinedError('0^Infinity is undefined!');\r\n                            return new Symbol(0);\r\n                        }\r\n                        if(a.equals(1))\r\n                            throw new UndefinedError('1^' + b.toString() + ' is undefined!');\r\n                        //a^-oo\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        //a^oo\r\n                        if(!a.lessThan(0))\r\n                            return Symbol.infinity();\r\n                    }\r\n\r\n                    if(a.isInfinity && b.isConstant()) {\r\n                        if(b.equals(0))\r\n                            throw new UndefinedError(a + '^0 is undefined!');\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\r\n                    }\r\n                }\r\n\r\n                var aIsZero = a.equals(0);\r\n                var bIsZero = b.equals(0);\r\n                if(aIsZero && bIsZero)\r\n                    throw new UndefinedError('0^0 is undefined!');\r\n\r\n                // Return 0 right away if possible\r\n                if(aIsZero && b.isConstant() && b.multiplier.greaterThan(0))\r\n                    return new Symbol(0);\r\n\r\n                if(bIsZero)\r\n                    return new Symbol(1);\r\n\r\n                var bIsConstant = b.isConstant(),\r\n                        aIsConstant = a.isConstant(),\r\n                        bIsInt = b.isInteger(),\r\n                        m = a.multiplier,\r\n                        result = a.clone();\r\n\r\n                // 0^0, 1/0, etc. Complain.\r\n                if(aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0))\r\n                    throw new UndefinedError('Division by zero is not allowed!');\r\n\r\n                // Compute imaginary numbers right away\r\n                if(Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\r\n                    var k, re, im;\r\n                    k = Math.PI * b;\r\n                    re = new Symbol(Math.cos(k));\r\n                    im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\r\n                    return _.add(re, im);\r\n                }\r\n\r\n                // Imaginary number under negative nthroot or to the n\r\n                if(Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\r\n                    var re, im, r, theta, nre, nim, phi;\r\n                    re = a.realpart();\r\n                    im = a.imagpart();\r\n                    if(re.isConstant('all') && im.isConstant('all')) {\r\n                        phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal()).times(b.toString())) : Math.atan2(im, re) * b;\r\n                        theta = new Symbol(phi);\r\n                        r = _.pow(Symbol.hyp(re, im), b);\r\n                        nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\r\n                        nim = _.multiply(r, _.trig.sin(theta));\r\n                        return _.add(nre, _.multiply(Symbol.imaginary(), nim));\r\n                    }\r\n                }\r\n\r\n                // Take care of the symbolic part\r\n                result.toUnitMultiplier();\r\n                //simpifly sqrt\r\n                if(result.group === FN && result.fname === SQRT && !bIsConstant) {\r\n                    var s = result.args[0];\r\n                    s.multiplyPower(new Symbol(0.5));\r\n                    s.multiplier.multiply(result.multiplier);\r\n                    s.multiplyPower(b);\r\n                    result = s;\r\n                }\r\n                else {\r\n                    var sign = m.sign();\r\n                    //handle cases such as (-a^3)^(1/4)\r\n                    if(evenFraction(b) && sign < 0) {\r\n                        // Swaperoo\r\n                        // First put the sign back on the symbol\r\n                        result.negate();\r\n                        // Wrap it in brackets\r\n                        result = _.symfunction(PARENTHESIS, [result]);\r\n                        // Move the sign back the exterior and let nerdamer handle the rest\r\n                        result.negate();\r\n                    }\r\n\r\n                    result.multiplyPower(b);\r\n                }\r\n\r\n                if(aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\r\n                    var c;\r\n                    //remove the sign\r\n                    if(sign < 0) {\r\n                        a.negate();\r\n                        if(b.multiplier.den.equals(2))\r\n                            //we know that the numerator has to be odd and therefore it's i\r\n                            c = new Symbol(Settings.IMAGINARY);\r\n                        else if(isInt(b.multiplier)) {\r\n                            if(even(b.multiplier))\r\n                                c = new Symbol(1);\r\n                            else\r\n                                c = new Symbol(-1);\r\n                        }\r\n                        else if(!even(b.multiplier.den)) {\r\n                            c = new Symbol(Math.pow(sign, b.multiplier.num));\r\n                        }\r\n                        else {\r\n                            c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                        }\r\n                    }\r\n\r\n                    result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal()));\r\n\r\n                    //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\r\n                    //put the back sign\r\n                    if(c)\r\n                        result = _.multiply(result, c);\r\n                }\r\n                else if(bIsInt && !m.equals(1)) {\r\n                    var abs_b = b.abs();\r\n                    // Provide fall back to JS until big number implementation is improved\r\n                    if(abs_b.gt(Settings.MAX_EXP)) {\r\n                        if(b.sign() < 0)\r\n                            return new Symbol(0);\r\n                        return Symbol.infinity();\r\n                    }\r\n                    else {\r\n                        var p = b.multiplier.toDecimal();\r\n                        var sgn = Math.sign(p);\r\n                        p = Math.abs(p);\r\n                        var multiplier = new Frac(1);\r\n                        multiplier.num = m.num.pow(p);\r\n                        multiplier.den = m.den.pow(p);\r\n                        if(sgn < 0)\r\n                            multiplier.invert();\r\n                        //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\r\n                        result.multiplier = result.multiplier.multiply(multiplier);\r\n                    }\r\n                }\r\n                else {\r\n                    var sign = a.sign();\r\n                    if(b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\r\n                        //we know the sign is negative so if the denominator for b == 2 then it's i\r\n                        if(b.multiplier.den.equals(2)) {\r\n                            var i = new Symbol(Settings.IMAGINARY);\r\n                            a.negate();//remove the sign\r\n                            //if the power is negative then i is negative\r\n                            if(b.lessThan(0)) {\r\n                                i.negate();\r\n                                b.negate();//remove the sign from the power\r\n                            }\r\n                            //pull the power normally and put back the imaginary\r\n                            result = _.multiply(_.pow(a, b), i);\r\n                        }\r\n                        else {\r\n                            var aa = a.clone();\r\n                            aa.multiplier.negate();\r\n                            result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                            var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\r\n                            var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\r\n                            var r = _.divide(_a, _b);\r\n                            result = _.multiply(result, r);\r\n                        }\r\n                    }\r\n                    else if(Settings.PARSE2NUMBER && b.isImaginary()) {\r\n                        //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\r\n\r\n                        var re = b.realpart();\r\n                        var im = b.imagpart();\r\n                        /*\r\n                         if(b.group === CP && false) {\r\n                         var ex = _.pow(a.clone(), re);\r\n                         var xi = _.multiply(_.multiply(ex.clone(), trig.sin(im.clone())), Symbol.imaginary());\r\n                         var xa = _.multiply(trig.cos(im), ex);\r\n                         result = _.add(xi, xa);\r\n                         }\r\n                         else {\r\n                         */\r\n                        var aa = a.clone().toLinear();\r\n                        var a1 = _.pow(aa.clone(), re);\r\n                        var log_a = log(aa.clone());\r\n                        var b1 = trig.cos(_.multiply(im.clone(), log_a));\r\n                        var c1 = _.multiply(trig.sin(_.multiply(im, log(aa))), Symbol.imaginary());\r\n                        result = _.multiply(a1, _.add(b1, c1));\r\n                        result = _.expand(_.parse(result));\r\n                        /*\r\n                         }   \r\n                         */\r\n                    }\r\n                    else {\r\n                        //b is a symbol\r\n                        var neg_num = a.group === N && sign < 0,\r\n                            num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\r\n                            den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert());\r\n\r\n                        //eliminate imaginary if possible\r\n                        if(a.imaginary) {\r\n                            if(bIsInt) {\r\n                                var s, p, n;\r\n                                s = Math.sign(b);\r\n                                p = abs(b);\r\n                                n = p % 4;\r\n                                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\r\n                                if(n === 0 || s < 0 && (n === 1) || s > 0 && (n === 3)) {\r\n                                    result.negate();\r\n                                }\r\n                            }\r\n                            else {\r\n                                //assume i = sqrt(-1) -> (-1)^(1/2)\r\n                                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\r\n                                        //the denominator denotes the power so raise to it. It will turn positive it round\r\n                                        tn = Math.pow(-1, nr.num);\r\n                                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\r\n                            }\r\n                        }\r\n                        //ensure that the sign is carried by the symbol and not the multiplier\r\n                        //this enables us to check down the line if the multiplier can indeed be transferred\r\n                        if(sign < 0 && !neg_num)\r\n                            result.negate();\r\n\r\n                        //retain the absolute value\r\n                        if(bIsConstant && a.group !== EX) {\r\n                            var evenr = even(b.multiplier.den),\r\n                                    evenp = even(a.power),\r\n                                    n = result.power.toDecimal(),\r\n                                    evennp = even(n);\r\n                            if(evenr && evenp && !evennp) {\r\n                                if(n === 1)\r\n                                    result = _.symfunction(ABS, [result]);\r\n                                else if(!isInt(n)) {\r\n                                    var p = result.power;\r\n                                    result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\r\n                                }\r\n                                else {\r\n                                    result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]),\r\n                                            result.clone().setPower(new Frac(n - 1)));\r\n                                }\r\n                                //quick workaround. Revisit\r\n                                if(Settings.POSITIVE_MULTIPLIERS && result.fname === ABS)\r\n                                    result = result.args[0];\r\n                            }\r\n                        }\r\n                        //multiply out sqrt\r\n                        if(b.equals(2) && result.group === CB) {\r\n                            var _result = new Symbol(1);\r\n                            result.each(function (sym) {\r\n                                _result = _.multiply(_result, _.pow(sym, b));\r\n                            });\r\n                            result = _result;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = testSQRT(result);\r\n\r\n                // Don't multiply until we've tested the remaining symbol\r\n                if(num && den) {\r\n                    result = _.multiply(result, testPow(_.multiply(num, den)));\r\n                }\r\n\r\n                // Reduce square root\r\n                if(result.fname === SQRT) {\r\n                    var isEX = result.group === EX;\r\n                    var t = isEX ? result.power.multiplier.toString() : result.power.toString();\r\n                    if(even(t)) {\r\n                        var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\r\n                                m = result.multiplier;\r\n                        result = _.pow(result.args[0], pt);\r\n                        result.multiplier = result.multiplier.multiply(m);\r\n                    }\r\n                }\r\n                // Detect Euler's identity\r\n                else if(!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi')\r\n                        && result.power.contains(Settings.IMAGINARY) && b.group === CB) {\r\n                    var theta = b.stripVar(Settings.IMAGINARY);\r\n                    result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta)));\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                if(isVector(a) && bIsSymbol) {\r\n                    a = a.map(function (x) {\r\n                        return _.pow(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    var M = new Matrix();\r\n                    a.eachElement(function (x, i, j) {\r\n                        M.set(i, j, _.pow(x, b.clone()));\r\n                    });\r\n                    a = M;\r\n                }\r\n                else if(aIsSymbol && isMatrix(b)) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (x, i, j) {\r\n                        M.set(i, j, _.pow(a.clone(), x));\r\n                    });\r\n                    a = M;\r\n                }\r\n                return a;\r\n            }\r\n        };\r\n        // Gets called when the parser finds the , operator.\r\n        // Commas return a Collector object which is roughly an array\r\n        this.comma = function (a, b) {\r\n            if(!(a instanceof Collection))\r\n                a = Collection.create(a);\r\n            a.append(b);\r\n            return a;\r\n        };\r\n        // Link to modulus\r\n        this.mod = function (a, b) {\r\n            return mod(a, b);\r\n        };\r\n        // Used to slice elements from arrays\r\n        this.slice = function (a, b) {\r\n            return new Slice(a, b);\r\n        };\r\n        // The equality setter\r\n        this.equals = function (a, b) {\r\n            // Equality can only be set for group S so complain it's not\r\n            if(a.group !== S && !a.isLinear())\r\n                err('Cannot set equality for ' + a.toString());\r\n            VARS[a.value] = b.clone();\r\n            return b;\r\n        };\r\n        // Percent\r\n        this.percent = function (a) {\r\n            return _.divide(a, new Symbol(100));\r\n        };\r\n        // Set variable\r\n        this.assign = function (a, b) {\r\n            if(a instanceof Collection && b instanceof Collection) {\r\n                a.elements.map(function (x, i) {\r\n                    return _.assign(x, b.elements[i]);\r\n                });\r\n                return Vector.fromArray(b.elements);\r\n            }\r\n            if(a.parent) {\r\n                // It's referring to the parent instead. The current item can be discarded\r\n                var e = a.parent;\r\n                e.elements[e.getter] = b;\r\n                delete e.getter;\r\n                return e;\r\n            }\r\n\r\n            if(a.group !== S)\r\n                throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\r\n            VARS[a.value] = b;\r\n            return b;\r\n        };\r\n        this.function_assign = function (a, b) {\r\n            var f = a.elements.pop();\r\n            return setFunction(f, a.elements, b);\r\n        };\r\n        // Function to quickly convert bools to Symbols\r\n        var bool2Symbol = function (x) {\r\n            return new Symbol(x === true ? 1 : 0);\r\n        };\r\n        //check for equality\r\n        this.eq = function (a, b) {\r\n            return bool2Symbol(a.equals(b));\r\n        };\r\n        //checks for greater than\r\n        this.gt = function (a, b) {\r\n            return bool2Symbol(a.gt(b));\r\n        };\r\n        //checks for greater than equal\r\n        this.gte = function (a, b) {\r\n            return bool2Symbol(a.gte(b));\r\n        };\r\n        //checks for less than\r\n        this.lt = function (a, b) {\r\n            return bool2Symbol(a.lt(b));\r\n        };\r\n        //checks for less than equal\r\n        this.lte = function (a, b) {\r\n            return bool2Symbol(a.lte(b));\r\n        };\r\n        // wraps the factorial\r\n        this.factorial = function (a) {\r\n            return this.symfunction(FACTORIAL, [a]);\r\n        };\r\n        // wraps the double factorial\r\n        this.dfactorial = function (a) {\r\n            return this.symfunction(DOUBLEFACTORIAL, [a]);\r\n        };\r\n    }\r\n    ;\r\n\r\n    /* \"STATIC\" */\r\n    // converts a number to a fraction.\r\n    var Fraction = {\r\n        /**\r\n         * Converts a decimal to a fraction\r\n         * @param {number} value\r\n         * @param {object} opts\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        convert: function (value, opts) {\r\n            var frac;\r\n            if(value === 0) {\r\n                frac = [0, 1];\r\n            }\r\n            else {\r\n                if(value < 1e-6 || value > 1e20) {\r\n                    var qc = this.quickConversion(Number(value));\r\n                    if(qc[1] <= 1e20) {\r\n                        var abs = Math.abs(value);\r\n                        var sign = value / abs;\r\n                        frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\r\n                        frac[0] = frac[0] * sign;\r\n                    }\r\n                    else {\r\n                        frac = qc;\r\n                    }\r\n                }\r\n                else {\r\n                    frac = this.fullConversion(value);\r\n                }\r\n            }\r\n            return frac;\r\n        },\r\n        /**\r\n         * If the fraction is too small or too large this gets called instead of fullConversion method\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        quickConversion: function (value) {\r\n            var stripSign = function (s) {\r\n                // Explicitely convert to a string\r\n                if(typeof s !== 'string') {\r\n                    s = s.toString();\r\n                }\r\n\r\n                var sign = '';\r\n\r\n                // Remove and store the sign\r\n                var start = s.charAt(0);\r\n                if(start === '-') {\r\n                    s = s.substr(1, s.length);\r\n                    sign = '-';\r\n                }\r\n                else if(start === '+') {\r\n                    // Just remove the plus sign\r\n                    s = s.substr(1, s.length);\r\n                }\r\n\r\n                return {\r\n                    sign: sign,\r\n                    value: s\r\n                };\r\n            };\r\n\r\n\r\n            function convert(value) {\r\n                // Explicitely convert to a decimal\r\n                if(Scientific.isScientific(value)) {\r\n                    value = scientificToDecimal(value);\r\n                }\r\n\r\n                // Split the value into the sign and the value\r\n                var nparts = stripSign(value);\r\n\r\n                // Split it at the decimal. We'll refer to it as the coeffient parts\r\n                var cparts = nparts.value.split('.');\r\n\r\n                // Combine the entire number by removing leading zero and adding the decimal part\r\n                // This would be teh same as moving the decimal point to the end\r\n                var num;\r\n                // We're dealing with integers\r\n                if(cparts.length === 1) {\r\n                    num = cparts[0];\r\n                }\r\n                else {\r\n                    num = cparts[0] + cparts[1];\r\n                }\r\n                var n = cparts[1] ? cparts[1].length : 0;\r\n                // Generate the padding for the zeros\r\n                var den = `1${'0'.repeat(n)}`;\r\n\r\n                if(num !== '0') {\r\n                    num = num.replace(/^0+/, '');\r\n                }\r\n                return [nparts.sign + num, den];\r\n            }\r\n\r\n            return convert(value);\r\n        },\r\n        /**\r\n         * Returns a good approximation of a fraction. This method gets called by convert\r\n         * http://mathforum.org/library/drmath/view/61772.html\r\n         * Decimal To Fraction Conversion - A Simpler Version\r\n         * Dr Peterson\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        fullConversion: function (dec) {\r\n            var done = false;\r\n            // you can adjust the epsilon to a larger number if you don't need very high precision\r\n            var n1 = 0, d1 = 1, n2 = 1, d2 = 0, n = 0, q = dec, epsilon = 1e-16;\r\n            while(!done) {\r\n                n++;\r\n                if(n > 10000) {\r\n                    done = true;\r\n                }\r\n                var a = Math.floor(q);\r\n                var num = n1 + a * n2;\r\n                var den = d1 + a * d2;\r\n                var e = (q - a);\r\n                if(e < epsilon) {\r\n                    done = true;\r\n                }\r\n                q = 1 / e;\r\n                n1 = n2;\r\n                d1 = d2;\r\n                n2 = num;\r\n                d2 = den;\r\n                if(Math.abs(num / den - dec) < epsilon || n > 30) {\r\n                    done = true;\r\n                }\r\n            }\r\n            return [num, den];\r\n        }\r\n    };\r\n    //Depends on Fraction\r\n\r\n    //The latex generator\r\n    var LaTeX = {\r\n        parser: (function () {\r\n            // create a parser and strip it from everything except the items that you need\r\n            var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\r\n            var parser = new Parser();\r\n            for(var x in parser) {\r\n                if(keep.indexOf(x) === -1)\r\n                    delete parser[x];\r\n            }\r\n            // declare the operators\r\n            parser.setOperator({\r\n                precedence: 8,\r\n                operator: '\\\\',\r\n                action: 'slash',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; // bypass the slash\r\n                }\r\n            });\r\n            parser.setOperator({\r\n                precedence: 8,\r\n                operator: '\\\\,',\r\n                action: 'slash_comma',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; // bypass the slash\r\n                }\r\n            });\r\n            // have braces not map to anything. We want them to be return as-is\r\n            var brackets = parser.getBrackets();\r\n            brackets['{'].maps_to = undefined;\r\n            return parser;\r\n        })(),\r\n        space: '~',\r\n        dot: ' \\\\cdot ',\r\n        // grab a list of supported functions but remove the excluded ones found in exclFN\r\n\r\n        latex: function (symbol, option) {\r\n            // it might be an array\r\n            if(symbol.clone) {\r\n                symbol = symbol.clone(); // leave original as-is\r\n            }\r\n            if(symbol instanceof _.classes.Collection)\r\n                symbol = symbol.elements;\r\n\r\n            if(isArray(symbol)) {\r\n                var LaTeXArray = [];\r\n                for(var i = 0; i < symbol.length; i++) {\r\n                    var sym = symbol[i];\r\n                    //This way I can generate LaTeX on an array of strings.\r\n                    if(!isSymbol(sym))\r\n                        sym = _.parse(sym);\r\n                    LaTeXArray.push(this.latex(sym, option));\r\n                }\r\n                return this.brackets(LaTeXArray.join(', '), 'square');\r\n            }\r\n\r\n            else if(isMatrix(symbol)) {\r\n                var TeX = '\\\\begin{pmatrix}\\n';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    var rowTeX = [],\r\n                            e = symbol.elements[i];\r\n                    for(var j = 0; j < e.length; j++) {\r\n                        rowTeX.push(this.latex(e[j], option));\r\n                    }\r\n                    TeX += rowTeX.join(' & ');\r\n                    if(i < symbol.elements.length - 1) {\r\n                        TeX += '\\\\\\\\\\n';\r\n                    }\r\n                }\r\n                TeX += '\\\\end{pmatrix}';\r\n                return TeX;\r\n            }\r\n\r\n            else if(isVector(symbol)) {\r\n                var TeX = '\\\\left[';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\right]';\r\n                return TeX;\r\n            }\r\n\r\n            else if(isSet(symbol)) {\r\n                var TeX = '\\\\{';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\}';\r\n                return TeX;\r\n            }\r\n\r\n            symbol = symbol.clone();\r\n\r\n            var decimal = (option === 'decimal' || option === 'decimals'),\r\n                    power = symbol.power,\r\n                    invert = isNegative(power),\r\n                    negative = symbol.multiplier.lessThan(0);\r\n\r\n            if(symbol.group === P && decimal) {\r\n                return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\r\n            }\r\n            else {\r\n                symbol.multiplier = symbol.multiplier.abs();\r\n\r\n                // if the user wants the result in decimal format then return it as such by placing it at the top part\r\n                var m_array;\r\n\r\n                if(decimal) {\r\n                    var m = String(symbol.multiplier.toDecimal());\r\n                    // if(String(m) === '1' && !decimal) m = '';\r\n                    m_array = [m, ''];\r\n                }\r\n                else {\r\n                    m_array = [symbol.multiplier.num, symbol.multiplier.den];\r\n                }\r\n                // get the value as a two part array\r\n                var v_array = this.value(symbol, invert, option, negative),\r\n                        p;\r\n                // make it all positive since we know whether to push the power to the numerator or denominator already.\r\n                if(invert)\r\n                    power.negate();\r\n                // the power is simple since it requires no additional formatting. We can get it to a\r\n                // string right away. pass in true to neglect unit powers\r\n                if(decimal) {\r\n                    p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\r\n                    if(String(p) === '1')\r\n                        p = '';\r\n                }\r\n                // get the latex representation\r\n                else if(isSymbol(power))\r\n                    p = this.latex(power, option);\r\n                // get it as a fraction\r\n                else\r\n                    p = this.formatFrac(power, true);\r\n                // use this array to specify if the power is getting attached to the top or the bottom\r\n                var p_array = ['', ''],\r\n                        // stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\r\n                        index = invert ? 1 : 0;\r\n                p_array[index] = p;\r\n\r\n                // special case group P and decimal\r\n                var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\r\n\r\n                return retval.replace(/\\+\\-/gi, '-');\r\n            }\r\n\r\n        },\r\n        // greek mapping\r\n        greek: {\r\n            alpha: '\\\\alpha',\r\n            beta: '\\\\beta',\r\n            gamma: '\\\\gamma',\r\n            delta: '\\\\delta',\r\n            epsilon: '\\\\epsilon',\r\n            zeta: '\\\\zeta',\r\n            eta: '\\\\eta',\r\n            theta: '\\\\theta',\r\n            iota: '\\\\iota',\r\n            kappa: '\\\\kappa',\r\n            lambda: '\\\\lambda',\r\n            mu: '\\\\mu',\r\n            nu: '\\\\nu',\r\n            xi: '\\\\xi',\r\n            omnikron: '\\\\omnikron',\r\n            pi: '\\\\pi',\r\n            rho: '\\\\rho',\r\n            sigma: '\\\\sigma',\r\n            tau: '\\\\tau',\r\n            upsilon: '\\\\upsilon',\r\n            phi: '\\\\phi',\r\n            chi: '\\\\chi',\r\n            psi: '\\\\psi',\r\n            omega: '\\\\omega',\r\n            Gamma: '\\\\Gamma',\r\n            Delta: '\\\\Delta',\r\n            Epsilon: '\\\\Epsilon',\r\n            Theta: '\\\\Theta',\r\n            Lambda: '\\\\Lambda',\r\n            Xi: '\\\\Xi',\r\n            Pi: '\\\\Pi',\r\n            Sigma: '\\\\Sigma',\r\n            Phi: '\\\\Phi',\r\n            Psi: '\\\\Psi',\r\n            Omega: '\\\\Omega'\r\n        },\r\n        symbols: {\r\n            arccos: '\\\\arccos',\r\n            cos: '\\\\cos',\r\n            csc: '\\\\csc',\r\n            exp: '\\\\exp',\r\n            ker: '\\\\ker',\r\n            limsup: '\\\\limsup',\r\n            min: '\\\\min',\r\n            sinh: '\\\\sinh',\r\n            arcsin: '\\\\arcsin',\r\n            cosh: '\\\\cosh',\r\n            deg: '\\\\deg',\r\n            gcd: '\\\\gcd',\r\n            lg: '\\\\lg',\r\n            ln: '\\\\ln',\r\n            Pr: '\\\\Pr',\r\n            sqrt: '\\\\sqrt',\r\n            sup: '\\\\sup',\r\n            arctan: '\\\\arctan',\r\n            cot: '\\\\cot',\r\n            det: '\\\\det',\r\n            hom: '\\\\hom',\r\n            lim: '\\\\lim',\r\n            log: '\\\\log',\r\n            LN: '\\\\LN',\r\n            sec: '\\\\sec',\r\n            tan: '\\\\tan',\r\n            arg: '\\\\arg',\r\n            coth: '\\\\coth',\r\n            dim: '\\\\dim',\r\n            inf: '\\\\inf',\r\n            liminf: '\\\\liminf',\r\n            max: '\\\\max',\r\n            sin: '\\\\sin',\r\n            tanh: '\\\\tanh'\r\n        },\r\n        // get the raw value of the symbol as an array\r\n        value: function (symbol, inverted, option, negative) {\r\n            var group = symbol.group,\r\n                    previousGroup = symbol.previousGroup,\r\n                    v = ['', ''],\r\n                    index = inverted ? 1 : 0;\r\n            /*if(group === N) // do nothing since we want to return top & bottom blank; */\r\n            if(symbol.isInfinity) {\r\n                v[index] = '\\\\infty';\r\n            }\r\n            else if(group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\r\n                var value = this.formatSubscripts(symbol.value);\r\n                if(value.replace)\r\n                    value = value.replace(/(.+)_$/, '$1\\\\_');\r\n                // split it so we can check for instances of alpha as well as alpha_b\r\n                var t_varray = String(value).split('_');\r\n                var greek = this.greek[t_varray[0]];\r\n                if(greek) {\r\n                    t_varray[0] = greek;\r\n                    value = t_varray.join('_');\r\n                }\r\n                var symbol = this.symbols[t_varray[0]];\r\n                if(symbol) {\r\n                    t_varray[0] = symbol;\r\n                    value = t_varray.join('_');\r\n                }\r\n                v[index] = value;\r\n            }\r\n            else if(group === FN || previousGroup === FN) {\r\n                var name,\r\n                        input = [],\r\n                        fname = symbol.fname;\r\n                // collect the arguments\r\n                for(var i = 0; i < symbol.args.length; i++) {\r\n                    var arg = symbol.args[i], item;\r\n                    if(typeof arg === 'string')\r\n                        item = arg;\r\n                    else {\r\n                        item = this.latex(arg, option);\r\n                    }\r\n                    input.push(item);\r\n                }\r\n\r\n                if(fname === SQRT) {\r\n                    v[index] = '\\\\sqrt' + this.braces(input.join(','));\r\n                }\r\n                else if(fname === ABS) {\r\n                    v[index] = this.brackets(input.join(','), 'abs');\r\n                }\r\n                else if(fname === PARENTHESIS) {\r\n                    v[index] = this.brackets(input.join(','), 'parens');\r\n                }\r\n                else if(fname === 'limit') {\r\n                    v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\r\n                }\r\n                else if(fname === 'integrate') {\r\n                    v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\r\n                }\r\n                else if(fname === 'defint') {\r\n                    v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\r\n                }\r\n                else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\r\n                        input[0] = this.brackets(input[0]);\r\n                    }\r\n                    v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\r\n                }\r\n                else if(fname === 'floor') {\r\n                    v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\r\n                }\r\n                else if(fname === 'ceil') {\r\n                    v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\r\n                }\r\n                // capture log(a, b)\r\n                else if(fname === Settings.LOG && input.length > 1) {\r\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\r\n                }\r\n                // capture log(a, b)\r\n                else if(fname === Settings.LOG10) {\r\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'sum') {\r\n                    var a = input[0],\r\n                            b = input[1],\r\n                            c = input[2],\r\n                            d = input[3];\r\n                    v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\r\n                }\r\n                else if(fname === 'product') {\r\n                    var a = input[0],\r\n                            b = input[1],\r\n                            c = input[2],\r\n                            d = input[3];\r\n                    v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\r\n                }\r\n                else if(fname === 'nthroot') {\r\n                    v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\r\n                }\r\n                else if(fname === 'mod') {\r\n                    v[index] = input[0] + ' \\\\bmod ' + input[1];\r\n                }\r\n                else if(fname === 'realpart') {\r\n                    v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'imagpart') {\r\n                    v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\r\n                }\r\n                else {\r\n                    var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\r\n                    if(symbol.isConversion)\r\n                        v[index] = name + this.brackets(input.join(''), 'parens');\r\n                    else\r\n                        v[index] = name + this.brackets(input.join(','), 'parens');\r\n                }\r\n            }\r\n            else if(symbol.isComposite()) {\r\n                var collected = symbol.collectSymbols().sort(\r\n                        group === CP || previousGroup === CP ?\r\n                        function (a, b) {\r\n                            return b.group - a.group;\r\n                        } :\r\n                        function (a, b) {\r\n                            var x = isSymbol(a.power) ? -1 : a.power;\r\n                            var y = isSymbol(b.power) ? -1 : b.power;\r\n                            return y - x;\r\n                        }\r\n                ),\r\n                        symbols = [],\r\n                        l = collected.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    symbols.push(LaTeX.latex(collected[i], option));\r\n                }\r\n                var value = symbols.join('+');\r\n\r\n                v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\r\n            }\r\n            else if(group === CB || previousGroup === EX || previousGroup === CB) {\r\n                if(group === CB)\r\n                    symbol.distributeExponent();\r\n                // This almost feels a little like cheating but I need to know if I should be wrapping the symbol\r\n                // in brackets or not. We'll do this by checking the value of the numerator and then comparing it\r\n                // to whether the symbol value is \"simple\" or not.\r\n                var denominator = [],\r\n                        numerator = [];\r\n                // Generate a profile\r\n                var den_map = [], num_map = [], num_c = 0, den_c = 0;\r\n                var setBrackets = function (container, map, counter) {\r\n                    if(counter > 1 && map.length > 0) {\r\n                        var l = map.length;\r\n                        for(var i = 0; i < l; i++) {\r\n                            var idx = map[i], item = container[idx];\r\n                            if(!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\r\n                                container[idx] = LaTeX.brackets(item, 'parens');\r\n                            }\r\n                        }\r\n                    }\r\n                    return container;\r\n                };\r\n\r\n                // Generate latex for each of them\r\n                symbol.each(function (x) {\r\n                    var isDenom = isNegative(x.power),\r\n                            laTex;\r\n\r\n                    if(isDenom) {\r\n                        laTex = LaTeX.latex(x.invert(), option);\r\n                        den_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.den != 1 && Math.abs(x.power) == 1)\r\n                                laTex = LaTeX.brackets(laTex, 'parens');\r\n                            den_map.push(denominator.length); // make a note of where the composite was found\r\n                        }\r\n\r\n                        denominator.push(laTex);\r\n                    }\r\n                    else {\r\n                        laTex = LaTeX.latex(x, option);\r\n                        num_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.num != 1 && Math.abs(x.power) == 1)\r\n                                laTex = LaTeX.brackets(laTex, 'parens');\r\n                            num_map.push(numerator.length);   // make a note of where the composite was found\r\n                        }\r\n                        numerator.push(laTex);\r\n                    }\r\n                });\r\n\r\n                // Apply brackets\r\n                setBrackets(numerator, num_map, num_c);\r\n                v[0] = numerator.join(this.dot); // collapse the numerator into one string\r\n\r\n                setBrackets(denominator, den_map, den_c);\r\n                v[1] = denominator.join(this.dot);\r\n            }\r\n\r\n            return v;\r\n        },\r\n        set: function (m, v, p, combine_power) {\r\n            var isBracketed = function (v) {\r\n                return /^\\\\left\\(.+\\\\right\\)$/.test(v);\r\n            };\r\n            // format the power if it exists\r\n            if(p)\r\n                p = this.formatP(p);\r\n            // group CB will have to be wrapped since the power applies to both it's numerator and denominator\r\n            if(combine_power) {\r\n                // POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\r\n                // the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\r\n                // of a case where this isn't true\r\n                var tp = p[0];\r\n                p[0] = ''; // temporarily make p blank\r\n            }\r\n\r\n            // merge v and p. Not that v MUST be first since the order matters\r\n            v = this.merge(v, p);\r\n            var mn = m[0], md = m[1], vn = v[0], vd = v[1];\r\n            // filters\r\n            // if the top has a variable but the numerator is one drop it\r\n            if(vn && Number(mn) === 1)\r\n                mn = '';\r\n            // if denominator is 1 drop it always\r\n            if(Number(md) === 1)\r\n                md = '';\r\n            // prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : '');\r\n\r\n            // prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : '');\r\n            // format the power if it exists\r\n            // make it a fraction if both top and bottom exists\r\n            if(top && bottom) {\r\n                var frac = this.frac(top, bottom);\r\n                if(combine_power && tp)\r\n                    frac = this.brackets(frac) + tp;\r\n                return frac;\r\n            }\r\n            // otherwise only the top exists so return that\r\n            else\r\n                return top;\r\n        },\r\n        merge: function (a, b) {\r\n            var r = [];\r\n            for(var i = 0; i < 2; i++)\r\n                r[i] = a[i] + b[i];\r\n            return r;\r\n        },\r\n        // joins together two strings if both exist\r\n        join: function (n, d, glue) {\r\n            if(!n && !d)\r\n                return '';\r\n            if(n && !d)\r\n                return n;\r\n            if(d && !n)\r\n                return d;\r\n            return n + glue + d;\r\n        },\r\n        /**\r\n         * Places subscripts in braces for proper formatting\r\n         * @param {String} v\r\n         * @returns {String}\r\n         */\r\n        formatSubscripts: function (v) {\r\n            // Split it at the underscore\r\n            var arr = v.toString().split('_');\r\n\r\n            var name = '';\r\n\r\n            // Loop over all entries except the first one\r\n            while(arr.length > 1) {\r\n                // Wrap all in braces except for the last one\r\n                if(arr.length > 0) {\r\n                    name = '_' + this.braces(arr.pop() + name);\r\n                }\r\n            }\r\n\r\n            return arr[0] + name;\r\n        },\r\n        formatP: function (p_array) {\r\n            for(var i = 0; i < 2; i++) {\r\n                var p = p_array[i];\r\n                if(p)\r\n                    p_array[i] = '^' + this.braces(p);\r\n            }\r\n            return p_array;\r\n        },\r\n        /**\r\n         * formats the fractions accordingly.\r\n         * @param {Frac} f\r\n         * @param {bool} is_pow\r\n         */\r\n        formatFrac: function (f, is_pow) {\r\n            var n = f.num.toString(),\r\n                    d = f.den.toString();\r\n            // no need to have x^1\r\n            if(is_pow && n === '1' && d === '1')\r\n                return '';\r\n            // no need to have x/1\r\n            if(d === '1')\r\n                return n;\r\n            return this.frac(n, d);\r\n        },\r\n        frac: function (n, d) {\r\n            return '\\\\frac' + this.braces(n) + this.braces(d);\r\n        },\r\n        braces: function (e) {\r\n            return '{' + e + '}';\r\n        },\r\n        brackets: function (e, typ) {\r\n            typ = typ || 'parens';\r\n            var bracketTypes = {\r\n                parens: ['(', ')'],\r\n                square: ['[', ']'],\r\n                brace: ['{', '}'],\r\n                abs: ['|', '|'],\r\n                angle: ['\\\\langle', '\\\\rangle']\r\n            };\r\n            var bracket = bracketTypes[typ];\r\n            return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\r\n        },\r\n        /**\r\n         * Removes extreneous tokens\r\n         * @param {Tokens[]} tokens\r\n         * @returns {Tokens[]}\r\n         */\r\n        filterTokens: function (tokens) {\r\n            var filtered = [];\r\n\r\n            // Copy over the type of the scope\r\n            if(isArray(tokens)) {\r\n                filtered.type = tokens.type;\r\n            }\r\n\r\n            // the items that need to be disposed\r\n            var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\r\n            for(var i = 0, l = tokens.length; i < l; i++) {\r\n                var token = tokens[i];\r\n                var next_token = tokens[i + 1];\r\n                if(token.value === '\\\\' && next_token.value === '\\\\') {\r\n                    filtered.push(token);\r\n                }\r\n                else if(isArray(token)) {\r\n                    filtered.push(LaTeX.filterTokens(token));\r\n                }\r\n                else if(d.indexOf(token.value) === -1) {\r\n                    filtered.push(token);\r\n                }\r\n            }\r\n            return filtered;\r\n        },\r\n        /*\r\n         * Parses tokens from LaTeX string. Does not do any error checking\r\n         * @param {Tokens[]} rpn\r\n         * @returns {String}\r\n         */\r\n        parse: function (raw_tokens) {\r\n            var i, l;\r\n            var retval = '';\r\n            var tokens = this.filterTokens(raw_tokens);\r\n            var replace = {\r\n                'cdot': '',\r\n                'times': '',\r\n                'infty': 'Infinity'\r\n            };\r\n            // get the next token\r\n            var next = function (n) {\r\n                return tokens[(typeof n === 'undefined' ? ++i : i += n)];\r\n            };\r\n            var parse_next = function () {\r\n                return LaTeX.parse(next());\r\n            };\r\n            var get = function (token) {\r\n                if(token in replace) {\r\n                    return replace[token];\r\n                }\r\n                // A quirk with implicit multiplication forces us to check for *\r\n                if(token === '*' && tokens[i + 1].value === '&') {\r\n                    next(2); // skip this and the &\r\n                    return ',';\r\n                }\r\n\r\n                if(token === '&') {\r\n                    next();\r\n                    return ','; // Skip the *\r\n                }\r\n                // If it's the end of a row, return the row separator\r\n                if(token === '\\\\') {\r\n                    return '],[';\r\n                }\r\n                return token;\r\n            };\r\n\r\n            // start parsing the tokens\r\n            for(i = 0, l = tokens.length; i < l; i++) {\r\n                var token = tokens[i];\r\n                // fractions\r\n                if(token.value === 'frac') {\r\n                    // parse and wrap it in brackets\r\n                    var n = parse_next();\r\n                    var d = parse_next();\r\n                    retval += n + '/' + d;\r\n                }\r\n                else if(token.value in LaTeX.symbols) {\r\n                    if(token.value === SQRT && tokens[i + 1].type === 'vector' && tokens[i + 2].type === 'Set') {\r\n                        var base = parse_next();\r\n                        var expr = parse_next();\r\n                        retval += (expr + '^' + inBrackets('1/' + base));\r\n                    }\r\n                    else {\r\n                        retval += token.value + parse_next();\r\n                    }\r\n                }\r\n                else if(token.value === 'int') {\r\n                    var f = parse_next();\r\n                    // skip the comma\r\n                    i++;\r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    dx = get(dx.substring(1, dx.length));\r\n                    retval += 'integrate' + inBrackets(f + ',' + dx);\r\n                }\r\n                else if(token.value === 'int_') {\r\n                    var l = parse_next(); // lower\r\n                    i++; // skip the ^\r\n                    var u = next().value; // upper\r\n                    // if it is in brackets\r\n                    if (u === undefined) {\r\n                        i--;\r\n                        var u = parse_next();\r\n                    }\r\n                    var f = parse_next(); // function\r\n                    \r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    // skip the comma\r\n                    if (dx === ',') {\r\n                        var dx = next().value;\r\n                    }\r\n                    // if 'd', skip\r\n                    if (dx === 'differentialD') {\r\n                        // skip the *\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    if (dx === 'mathrm') {\r\n                        // skip the mathrm{d}\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\r\n                }\r\n                else if(token.value && token.value.startsWith('int_')) {\r\n                    // var l = parse_next(); // lower\r\n                    var l = token.value.replace('int_', '')\r\n                    console.log('uppernow')\r\n                    i++; // skip the ^\r\n                    var u = next().value; // upper\r\n                    // if it is in brackets\r\n                    if (u === undefined) {\r\n                        i--;\r\n                        var u = parse_next();\r\n                    }\r\n                    var f = parse_next(); // function\r\n                    \r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    // skip the comma\r\n                    if (dx === ',') {\r\n                        var dx = next().value;\r\n                    }\r\n                    // if 'd', skip\r\n                    if (dx === 'differentialD') {\r\n                        // skip the *\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    if (dx === 'mathrm') {\r\n                        // skip the mathrm{d}\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\r\n                }\r\n                else if(token.value === 'mathrm') {\r\n                    var f = tokens[++i][0].value;\r\n                    retval += f + parse_next();\r\n                }\r\n                // sum and product\r\n                else if(token.value === 'sum_' || token.value === 'prod_') {\r\n                    var fn = token.value === 'sum_' ? 'sum' : 'product';\r\n                    var nxt = next();\r\n                    i++; // skip the caret\r\n                    var end = parse_next();\r\n                    var f = parse_next();\r\n                    retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\r\n                }\r\n                else if(token.value === 'lim_') {\r\n                    var nxt = next();\r\n                    retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\r\n                }\r\n                else if(token.value === 'begin') {\r\n                    var nxt = next();\r\n                    if(Array.isArray(nxt)) {\r\n                        var v = nxt[0].value;\r\n                        if(v === 'matrix') {\r\n                            // Start a matrix\r\n                            retval += 'matrix([';\r\n                        }\r\n                    }\r\n                }\r\n                else if(token.value === 'end') {\r\n                    var nxt = next();\r\n                    if(Array.isArray(nxt)) {\r\n                        var v = nxt[0].value;\r\n                        if(v === 'matrix') {\r\n                            // End a matrix\r\n                            retval += '])';\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if(Array.isArray(token)) {\r\n                        retval += get(LaTeX.parse(token));\r\n                    }\r\n                    else {\r\n                        retval += get(token.value.toString());\r\n                    }\r\n                }\r\n            }\r\n\r\n            return inBrackets(retval);\r\n        }\r\n    };\r\n//Vector =======================================================================\r\n    function Vector(v) {\r\n        if(isVector(v))\r\n            this.elements = v.items.slice(0);\r\n        else if(isArray(v))\r\n            this.elements = v.slice(0);\r\n        else\r\n            this.elements = [].slice.call(arguments);\r\n    }\r\n    /*\r\n     * Generates a pre-filled array\r\n     * @param {type} n\r\n     * @param {type} val\r\n     * @returns {unresolved}\r\n     */\r\n    Vector.arrayPrefill = function (n, val) {\r\n        var a = [];\r\n        val = val || 0;\r\n        for(var i = 0; i < n; i++)\r\n            a[i] = val;\r\n        return a;\r\n    };\r\n    /**\r\n     * Generate a vector from and array\r\n     * @param {type} a\r\n     * @returns {unresolved}\r\n     */\r\n    Vector.fromArray = function (a) {\r\n        var v = new Vector();\r\n        v.elements = a;\r\n        return v;\r\n    };\r\n\r\n    /**\r\n     * Convert a Set to a Vector\r\n     * @param {Set} set\r\n     * @returns {Vector}\r\n     */\r\n    Vector.fromSet = function (set) {\r\n        return Vector.fromArray(set.elements);\r\n    };\r\n\r\n    //Ported from Sylvester.js\r\n    Vector.prototype = {\r\n        custom: true,\r\n        // Returns element i of the vector\r\n        e: function (i) {\r\n            return (i < 1 || i > this.elements.length) ? null : this.elements[i - 1];\r\n        },\r\n\r\n        set: function (i, val) {\r\n            if(!isSymbol(val))\r\n                val = new Symbol(val);\r\n            this.elements[i] = val;\r\n        },\r\n\r\n        // Returns the number of elements the vector has\r\n        dimensions: function () {\r\n            return this.elements.length;\r\n        },\r\n\r\n        // Returns the modulus ('length') of the vector\r\n        modulus: function () {\r\n            return block('SAFE', function () {\r\n                return _.pow((this.dot(this.clone())), new Symbol(0.5));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is equal to the argument\r\n        eql: function (vector) {\r\n            var n = this.elements.length;\r\n            var V = vector.elements || vector;\r\n            if(n !== V.length) {\r\n                return false;\r\n            }\r\n            do {\r\n                if(Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\r\n                    return false;\r\n                }\r\n            }\r\n            while(--n);\r\n            return true;\r\n        },\r\n\r\n        // Returns a clone of the vector\r\n        clone: function () {\r\n            var V = new Vector(),\r\n                    l = this.elements.length;\r\n            for(var i = 0; i < l; i++) {\r\n                //Rule: all items within the vector must have a clone method.\r\n                V.elements.push(this.elements[i].clone());\r\n            }\r\n            if(this.getter) {\r\n                V.getter = this.getter.clone();\r\n            }\r\n            return V;\r\n        },\r\n\r\n        // Maps the vector to another vector according to the given function\r\n        map: function (fn) {\r\n            var elements = [];\r\n            this.each(function (x, i) {\r\n                elements.push(fn(x, i));\r\n            });\r\n\r\n            return new Vector(elements);\r\n        },\r\n\r\n        // Calls the iterator for each element of the vector in turn\r\n        each: function (fn) {\r\n            var n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                fn(this.elements[i], i + 1);\r\n            }\r\n            while(--n);\r\n        },\r\n\r\n        // Returns a new vector created by normalizing the receiver\r\n        toUnitVector: function () {\r\n            return block('SAFE', function () {\r\n                var r = this.modulus();\r\n                if(r.valueOf() === 0) {\r\n                    return this.clone();\r\n                }\r\n                return this.map(function (x) {\r\n                    return _.divide(x, r);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the angle between the vector and the argument (also a vector)\r\n        angleFrom: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                var n = this.elements.length;\r\n                if(n !== V.length) {\r\n                    return null;\r\n                }\r\n                var dot = new Symbol(0), mod1 = new Symbol(0), mod2 = new Symbol(0);\r\n                // Work things out in parallel to save time\r\n                this.each(function (x, i) {\r\n                    dot = _.add(dot, _.multiply(x, V[i - 1]));\r\n                    mod1 = _.add(mod1, _.multiply(x, x));// will not conflict in safe block\r\n                    mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1]));// will not conflict in safe block\r\n                });\r\n                mod1 = _.pow(mod1, new Symbol(0.5));\r\n                mod2 = _.pow(mod2, new Symbol(0.5));\r\n                var product = _.multiply(mod1, mod2);\r\n                if(product.valueOf() === 0) {\r\n                    return null;\r\n                }\r\n                var theta = _.divide(dot, product);\r\n                var theta_val = theta.valueOf();\r\n                if(theta_val < -1) {\r\n                    theta = -1;\r\n                }\r\n                if(theta_val > 1) {\r\n                    theta = 1;\r\n                }\r\n                return new Symbol(Math.acos(theta));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is parallel to the argument\r\n        isParallelTo: function (vector) {\r\n            var angle = this.angleFrom(vector).valueOf();\r\n            return (angle === null) ? null : (angle <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is antiparallel to the argument\r\n        isAntiparallelTo: function (vector) {\r\n            var angle = this.angleFrom(vector).valueOf();\r\n            return (angle === null) ? null : (Math.abs(angle - Math.PI) <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is perpendicular to the argument\r\n        isPerpendicularTo: function (vector) {\r\n            var dot = this.dot(vector);\r\n            return (dot === null) ? null : (Math.abs(dot) <= PRECISION);\r\n        },\r\n\r\n        // Returns the result of adding the argument to the vector\r\n        add: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                if(this.elements.length !== V.length) {\r\n                    return null;\r\n                }\r\n                return this.map(function (x, i) {\r\n                    return _.add(x, V[i - 1]);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of subtracting the argument from the vector\r\n        subtract: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                if(this.elements.length !== V.length) {\r\n                    return null;\r\n                }\r\n                return this.map(function (x, i) {\r\n                    return _.subtract(x, V[i - 1]);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of multiplying the elements of the vector by the argument\r\n        multiply: function (k) {\r\n            return this.map(function (x) {\r\n                return x.clone() * k.clone();\r\n            });\r\n        },\r\n\r\n        x: function (k) {\r\n            return this.multiply(k);\r\n        },\r\n\r\n        // Returns the scalar product of the vector with the argument\r\n        // Both vectors must have equal dimensionality\r\n        dot: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                var product = new Symbol(0), n = this.elements.length;\r\n                if(n !== V.length) {\r\n                    return null;\r\n                }\r\n                do {\r\n                    product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\r\n                }\r\n                while(--n);\r\n                return product;\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the vector product of the vector with the argument\r\n        // Both vectors must have dimensionality 3\r\n        cross: function (vector) {\r\n            var B = vector.elements || vector;\r\n            if(this.elements.length !== 3 || B.length !== 3) {\r\n                return null;\r\n            }\r\n            var A = this.elements;\r\n            return block('SAFE', function () {\r\n                return new Vector([\r\n                    _.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])),\r\n                    _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])),\r\n                    _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))\r\n                ]);\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the (absolute) largest element of the vector\r\n        max: function () {\r\n            var m = 0, n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                if(Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\r\n                    m = this.elements[i];\r\n                }\r\n            }\r\n            while(--n);\r\n            return m;\r\n        },\r\n        magnitude: function () {\r\n            var magnitude = new Symbol(0);\r\n            this.each(function (e) {\r\n                magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\r\n            });\r\n            return _.sqrt(magnitude);\r\n        },\r\n        // Returns the index of the first match found\r\n        indexOf: function (x) {\r\n            var index = null, n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                if(index === null && this.elements[i].valueOf() === x.valueOf()) {\r\n                    index = i + 1;\r\n                }\r\n            }\r\n            while(--n);\r\n            return index;\r\n        },\r\n        text: function (x) {\r\n            return text(this);\r\n        },\r\n        toString: function () {\r\n            return this.text();\r\n        },\r\n        latex: function (option) {\r\n            var tex = [];\r\n            for(var i = 0; i < this.elements.length; i++) {\r\n                tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\r\n            }\r\n            return '[' + tex.join(', ') + ']';\r\n        }\r\n    };\r\n\r\n//Matrix =======================================================================\r\n    function Matrix() {\r\n        var m = arguments,\r\n                l = m.length, i, el = [];\r\n        if(isMatrix(m)) { // if it's a matrix then make a clone\r\n            for(i = 0; i < l; i++) {\r\n                el.push(m[i].slice(0));\r\n            }\r\n        }\r\n        else {\r\n            var row, lw, rl;\r\n            for(i = 0; i < l; i++) {\r\n                row = m[i];\r\n                if(isVector(row))\r\n                    row = row.elements;\r\n                if(!isArray(row))\r\n                    row = [row];\r\n                rl = row.length;\r\n                if(lw && lw !== rl)\r\n                    err('Unable to create Matrix. Row dimensions do not match!');\r\n                el.push(row);\r\n                lw = rl;\r\n            }\r\n        }\r\n        this.elements = el;\r\n    }\r\n    Matrix.identity = function (n) {\r\n        var m = new Matrix();\r\n        for(var i = 0; i < n; i++) {\r\n            m.elements.push([]);\r\n            for(var j = 0; j < n; j++) {\r\n                m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\r\n            }\r\n        }\r\n        return m;\r\n    };\r\n    Matrix.fromArray = function (arr) {\r\n        function F(args) {\r\n            return Matrix.apply(this, args);\r\n        }\r\n        F.prototype = Matrix.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n    Matrix.zeroMatrix = function (rows, cols) {\r\n        var m = new Matrix();\r\n        for(var i = 0; i < rows; i++) {\r\n            m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\r\n        }\r\n        return m;\r\n    };\r\n    Matrix.prototype = {\r\n        // needs be true to let the parser know not to try to cast it to a symbol\r\n        custom: true,\r\n        get: function (row, column) {\r\n            if(!this.elements[row])\r\n                return undefined;\r\n            return this.elements[row][column];\r\n        },\r\n        map: function (f, raw_values) {\r\n            var M = new Matrix();\r\n            this.each(function (e, i, j) {\r\n                M.set(i, j, f.call(M, e), raw_values);\r\n            });\r\n            return M;\r\n        },\r\n        set: function (row, column, value, raw) {\r\n            if(!this.elements[row])\r\n                this.elements[row] = [];\r\n            this.elements[row][column] = raw ? value : (isSymbol(value) ? value : new Symbol(value));\r\n        },\r\n        cols: function () {\r\n            return this.elements[0].length;\r\n        },\r\n        rows: function () {\r\n            return this.elements.length;\r\n        },\r\n        row: function (n) {\r\n            if(!n || n > this.cols())\r\n                return [];\r\n            return this.elements[n - 1];\r\n        },\r\n        col: function (n) {\r\n            var nr = this.rows(),\r\n                    col = [];\r\n            if(n > this.cols() || !n)\r\n                return col;\r\n            for(var i = 0; i < nr; i++) {\r\n                col.push(this.elements[i][n - 1]);\r\n            }\r\n            return col;\r\n        },\r\n        eachElement: function (fn) {\r\n            var nr = this.rows(),\r\n                    nc = this.cols(), i, j;\r\n            for(i = 0; i < nr; i++) {\r\n                for(j = 0; j < nc; j++) {\r\n                    fn.call(this, this.elements[i][j], i, j);\r\n                }\r\n            }\r\n        },\r\n        // ported from Sylvester.js\r\n        determinant: function () {\r\n            if(!this.isSquare()) {\r\n                return null;\r\n            }\r\n            var M = this.toRightTriangular();\r\n            var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\r\n            do {\r\n                i = k - n + 1;\r\n                det = _.multiply(det, M.elements[i][i]);\r\n            }\r\n            while(--n);\r\n            return det;\r\n        },\r\n        isSquare: function () {\r\n            return this.elements.length === this.elements[0].length;\r\n        },\r\n        isSingular: function () {\r\n            return this.isSquare() && this.determinant() === 0;\r\n        },\r\n        augment: function (m) {\r\n            var r = this.rows(), rr = m.rows();\r\n            if(r !== rr)\r\n                err(\"Cannot augment matrix. Rows don't match.\");\r\n            for(var i = 0; i < r; i++) {\r\n                this.elements[i] = this.elements[i].concat(m.elements[i]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        clone: function () {\r\n            var r = this.rows(), c = this.cols(),\r\n                    m = new Matrix();\r\n            for(var i = 0; i < r; i++) {\r\n                m.elements[i] = [];\r\n                for(var j = 0; j < c; j++) {\r\n                    var symbol = this.elements[i][j];\r\n                    m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\r\n                }\r\n            }\r\n            return m;\r\n        },\r\n        // ported from Sylvester.js\r\n        invert: function () {\r\n            if(!this.isSquare())\r\n                err('Matrix is not square!');\r\n            return block('SAFE', function () {\r\n                var ni = this.elements.length, ki = ni, i, j;\r\n                var imatrix = Matrix.identity(ni);\r\n                var M = this.augment(imatrix).toRightTriangular();\r\n                var np, kp = M.elements[0].length, p, els, divisor;\r\n                var inverse_elements = [], new_element;\r\n                // Matrix is non-singular so there will be no zeros on the diagonal\r\n                // Cycle through rows from last to first\r\n                do {\r\n                    i = ni - 1;\r\n                    // First, normalise diagonal elements to 1\r\n                    els = [];\r\n                    np = kp;\r\n                    inverse_elements[i] = [];\r\n                    divisor = M.elements[i][i];\r\n                    do {\r\n                        p = kp - np;\r\n                        new_element = _.divide(M.elements[i][p], divisor.clone());\r\n                        els.push(new_element);\r\n                        // Shuffle of the current row of the right hand side into the results\r\n                        // array as it will not be modified by later runs through this loop\r\n                        if(p >= ki) {\r\n                            inverse_elements[i].push(new_element);\r\n                        }\r\n                    }\r\n                    while(--np);\r\n                    M.elements[i] = els;\r\n                    // Then, subtract this row from those above it to\r\n                    // give the identity matrix on the left hand side\r\n                    for(j = 0; j < i; j++) {\r\n                        els = [];\r\n                        np = kp;\r\n                        do {\r\n                            p = kp - np;\r\n                            els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\r\n                        }\r\n                        while(--np);\r\n                        M.elements[j] = els;\r\n                    }\r\n                }\r\n                while(--ni);\r\n                return Matrix.fromArray(inverse_elements);\r\n            }, undefined, this);\r\n        },\r\n        // ported from Sylvester.js\r\n        toRightTriangular: function () {\r\n            return block('SAFE', function () {\r\n                var M = this.clone(), els, fel, nel,\r\n                        n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\r\n                do {\r\n                    i = k - n;\r\n                    fel = M.elements[i][i];\r\n                    if(fel.valueOf() === 0) {\r\n                        for(var j = i + 1; j < k; j++) {\r\n                            nel = M.elements[j][i];\r\n                            if(nel && nel.valueOf() !== 0) {\r\n                                els = [];\r\n                                np = kp;\r\n                                do {\r\n                                    p = kp - np;\r\n                                    els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\r\n                                }\r\n                                while(--np);\r\n                                M.elements[i] = els;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var fel = M.elements[i][i];\r\n                    if(fel.valueOf() !== 0) {\r\n                        for(j = i + 1; j < k; j++) {\r\n                            var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\r\n                            els = [];\r\n                            np = kp;\r\n                            do {\r\n                                p = kp - np;\r\n                                // Elements with column numbers up to an including the number\r\n                                // of the row that we're subtracting can safely be set straight to\r\n                                // zero, since that's the point of this routine and it avoids having\r\n                                // to loop over and correct rounding errors later\r\n                                els.push(p <= i ? new Symbol(0) :\r\n                                        _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\r\n                            }\r\n                            while(--np);\r\n                            M.elements[j] = els;\r\n                        }\r\n                    }\r\n                }\r\n                while(--n);\r\n\r\n                return M;\r\n            }, undefined, this);\r\n        },\r\n        transpose: function () {\r\n            var rows = this.elements.length, cols = this.elements[0].length;\r\n            var M = new Matrix(), ni = cols, i, nj, j;\r\n\r\n            do {\r\n                i = cols - ni;\r\n                M.elements[i] = [];\r\n                nj = rows;\r\n                do {\r\n                    j = rows - nj;\r\n                    M.elements[i][j] = this.elements[j][i].clone();\r\n                }\r\n                while(--nj);\r\n            }\r\n            while(--ni);\r\n            return M;\r\n        },\r\n        // Returns true if the matrix can multiply the argument from the left\r\n        canMultiplyFromLeft: function (matrix) {\r\n            var l = isMatrix(matrix) ? matrix.elements.length : matrix.length;\r\n            // this.columns should equal matrix.rows\r\n            return (this.elements[0].length === l);\r\n        },\r\n        sameSize: function (matrix) {\r\n            return this.rows() === matrix.rows() && this.cols() === matrix.cols();\r\n        },\r\n        multiply: function (matrix) {\r\n            return block('SAFE', function () {\r\n                var M = matrix.elements || matrix;\r\n                if(!this.canMultiplyFromLeft(M)) {\r\n                    if(this.sameSize(matrix)) {\r\n                        var MM = new Matrix();\r\n                        var rows = this.rows();\r\n                        for(var i = 0; i < rows; i++) {\r\n                            var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\r\n                            MM.elements[i] = e.elements;\r\n                        }\r\n                        return MM;\r\n                    }\r\n                    return null;\r\n                }\r\n                var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n                var cols = this.elements[0].length, elements = [], sum, nc, c;\r\n                do {\r\n                    i = ki - ni;\r\n                    elements[i] = [];\r\n                    nj = kj;\r\n                    do {\r\n                        j = kj - nj;\r\n                        sum = new Symbol(0);\r\n                        nc = cols;\r\n                        do {\r\n                            c = cols - nc;\r\n                            sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\r\n                        }\r\n                        while(--nc);\r\n                        elements[i][j] = sum;\r\n                    }\r\n                    while(--nj);\r\n                }\r\n                while(--ni);\r\n                return Matrix.fromArray(elements);\r\n            }, undefined, this);\r\n        },\r\n        add: function (matrix, callback) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function (e, i, j) {\r\n                    var result = _.add(e.clone(), matrix.elements[i][j].clone());\r\n                    if(callback) {\r\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\r\n                    }\r\n                    M.set(i, j, result);\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        subtract: function (matrix, callback) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function (e, i, j) {\r\n                    var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\r\n                    if(callback) {\r\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\r\n                    }\r\n                    M.set(i, j, result);\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        negate: function () {\r\n            this.each(function (e) {\r\n                return e.negate();\r\n            });\r\n            return this;\r\n        },\r\n        toVector: function () {\r\n            if(this.rows() === 1 || this.cols() === 1) {\r\n                var v = new Vector();\r\n                v.elements = this.elements;\r\n                return v;\r\n            }\r\n            return this;\r\n        },\r\n        toString: function (newline, to_decimal) {\r\n            var l = this.rows(),\r\n                    s = [];\r\n            newline = newline === undefined ? '\\n' : newline;\r\n            for(var i = 0; i < l; i++) {\r\n                s.push('[' + this.elements[i].map(function (x) {\r\n                    var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\r\n                    return x !== undefined ? v : '';\r\n                }).join(',') + ']');\r\n            }\r\n            return 'matrix' + inBrackets(s.join(','));\r\n        },\r\n        text: function () {\r\n            return 'matrix(' + this.elements.toString('') + ')';\r\n        },\r\n        latex: function (option) {\r\n            var cols = this.cols(), elements = this.elements;\r\n            return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\r\n                var tex = [];\r\n                for(var row in elements) {\r\n                    var row_tex = [];\r\n                    for(var i = 0; i < cols; i++) {\r\n                        row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\r\n                    }\r\n                    tex.push(row_tex.join(' & '));\r\n                }\r\n                return tex.join(' \\\\cr ');\r\n            });\r\n        }\r\n    };\r\n    // aliases\r\n    Matrix.prototype.each = Matrix.prototype.eachElement;\r\n\r\n\r\n    function Set(set) {\r\n        this.elements = [];\r\n        // if the first object isn't an array, convert it to one.\r\n        if(!isVector(set))\r\n            set = Vector.fromArray(arguments);\r\n\r\n        if(set) {\r\n            var elements = set.elements;\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                this.add(elements[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    Set.fromArray = function (arr) {\r\n        function F(args) {\r\n            return Set.apply(this, args);\r\n        }\r\n        F.prototype = Set.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n\r\n    Set.prototype = {\r\n        add: function (x) {\r\n            if(!this.contains(x))\r\n                this.elements.push(x.clone());\r\n        },\r\n        contains: function (x) {\r\n            for(var i = 0; i < this.elements.length; i++) {\r\n                var e = this.elements[i];\r\n                if(x.equals(e))\r\n                    return true;\r\n            }\r\n            return false;\r\n        },\r\n        each: function (f) {\r\n            var elements = this.elements;\r\n            var set = new Set();\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                var e = elements[i];\r\n                f.call(this, e, set, i);\r\n            }\r\n            return set;\r\n        },\r\n        clone: function () {\r\n            var set = new Set();\r\n            this.each(function (e) {\r\n                set.add(e.clone());\r\n            });\r\n            return set;\r\n        },\r\n        union: function (set) {\r\n            var _union = this.clone();\r\n            set.each(function (e) {\r\n                _union.add(e);\r\n            });\r\n\r\n            return _union;\r\n        },\r\n        difference: function (set) {\r\n            var diff = this.clone();\r\n            set.each(function (e) {\r\n                diff.remove(e);\r\n            });\r\n            return diff;\r\n        },\r\n        remove: function (element) {\r\n            for(var i = 0, l = this.elements.length; i < l; i++) {\r\n                var e = this.elements[i];\r\n                if(e.equals(element)) {\r\n                    remove(this.elements, i);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        intersection: function (set) {\r\n            var _intersection = new Set();\r\n            var A = this;\r\n            set.each(function (e) {\r\n                if(A.contains(e)) {\r\n                    _intersection.add(e);\r\n                }\r\n                ;\r\n            });\r\n\r\n            return _intersection;\r\n        },\r\n        intersects: function (set) {\r\n            return this.intersection(set).elements.length > 0;\r\n        },\r\n        is_subset: function (set) {\r\n            var elements = set.elements;\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                if(!this.contains(elements[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        toString: function () {\r\n            return '{' + this.elements.join(',') + '}';\r\n        }\r\n    };\r\n\r\n//build ========================================================================\r\n    var Build = {\r\n        dependencies: {\r\n            _rename: {\r\n                'Math2.factorial': 'factorial'\r\n            },\r\n            factorial: {\r\n                'Math2.gamma': Math2.gamma\r\n            },\r\n            gamma_incomplete: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Li: {\r\n                'Math2.Ei': Math2.Ei,\r\n                'Math2.bigLog': Math2.bigLog,\r\n                'Frac': Frac\r\n            },\r\n            Ci: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Ei: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Si: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Shi: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Chi: {\r\n                'isInt': isInt,\r\n                'nround': nround,\r\n                'Math2.num_integrate': Math2.num_integrate\r\n            },\r\n            factor: {\r\n                'Math2.ifactor': Math2.ifactor,\r\n                'Symbol': Symbol\r\n            },\r\n            num_integrate: {\r\n                'Math2.simpson': Math2.simpson,\r\n                'nround': nround\r\n            },\r\n            fib: {\r\n                'even': even\r\n            }\r\n        },\r\n        /* Some functions need to be made numeric safe. Build checks if there's a\r\n         * reformat option and calls that instead when compiling the function string.\r\n         */\r\n        reformat: {\r\n            // this simply extends the build function\r\n            diff: function (symbol, deps) {\r\n                var v = symbol.args[1].toString();\r\n                var f = 'var f = ' + Build.build(symbol.args[0].toString(), [v]) + ';';\r\n                deps[1] += 'var diff = ' + Math2.diff.toString() + ';';\r\n                deps[1] += f;\r\n\r\n                return ['diff(f)(' + v + ')', deps];\r\n            }\r\n        },\r\n        getProperName: function (f) {\r\n            var map = {\r\n                continued_fraction: 'continuedFraction'\r\n            };\r\n            return map[f] || f;\r\n        },\r\n        // assumes that dependences are at max 2 levels\r\n        compileDependencies: function (f, deps) {\r\n            // grab the predefined dependiences\r\n            var dependencies = Build.dependencies[f];\r\n\r\n            // the dependency string\r\n            var dep_string = deps && deps[1] ? deps[1] : '';\r\n\r\n            // the functions to be replaced\r\n            var replacements = deps && deps[0] ? deps[0] : {};\r\n\r\n            // loop through them and add them to the list\r\n            for(var x in dependencies) {\r\n                if(typeof dependencies[x] === 'object')\r\n                    continue; // skip object\r\n                var components = x.split('.'); //Math.f becomes f\r\n                // if the function isn't part of an object then reference the function itself\r\n                dep_string += 'var ' + (components.length > 1 ? components[1] : components[0]) + '=' + dependencies[x] + ';';\r\n                replacements[x] = components.pop();\r\n            }\r\n\r\n            return [replacements, dep_string];\r\n        },\r\n        getArgsDeps: function (symbol, dependencies) {\r\n            var args = symbol.args;\r\n            for(var i = 0; i < args.length; i++) {\r\n                symbol.args[i].each(function (x) {\r\n                    if(x.group === FN)\r\n                        dependencies = Build.compileDependencies(x.fname, dependencies);\r\n                });\r\n            }\r\n            return dependencies;\r\n        },\r\n        build: function (symbol, arg_array) {\r\n            symbol = block('PARSE2NUMBER', function () {\r\n                return _.parse(symbol);\r\n            }, true);\r\n            var args = variables(symbol);\r\n            var supplements = [];\r\n            var dependencies = [];\r\n            var ftext = function (symbol, xports) {\r\n                //Fix for #545 - Parentheses confuse build.\r\n                if(symbol.fname === '') {\r\n                    symbol = Symbol.unwrapPARENS(symbol);\r\n                }\r\n                xports = xports || [];\r\n                var c = [],\r\n                        group = symbol.group,\r\n                        prefix = '';\r\n\r\n                var ftext_complex = function (group) {\r\n                    var d = group === CB ? '*' : '+',\r\n                            cc = [];\r\n\r\n                    for(var x in symbol.symbols) {\r\n                        var sym = symbol.symbols[x],\r\n                                ft = ftext(sym, xports)[0];\r\n                        // wrap it in brackets if it's group PL or CP\r\n                        if(sym.isComposite())\r\n                            ft = inBrackets(ft);\r\n                        cc.push(ft);\r\n                    }\r\n                    var retval = cc.join(d);\r\n                    retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\r\n                    return retval;\r\n                },\r\n                        ftext_function = function (bn) {\r\n                            var retval;\r\n                            if(bn in Math)\r\n                                retval = 'Math.' + bn;\r\n                            else {\r\n                                bn = Build.getProperName(bn);\r\n                                if(supplements.indexOf(bn) === -1) { // make sure you're not adding the function twice\r\n                                    //Math2 functions aren't part of the standard javascript\r\n                                    //Math library and must be exported.\r\n                                    xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\r\n                                    supplements.push(bn);\r\n                                }\r\n                                retval = bn;\r\n                            }\r\n                            retval = retval + inBrackets(symbol.args.map(function (x) {\r\n                                return ftext(x, xports)[0];\r\n                            }).join(','));\r\n\r\n                            return retval;\r\n                        };\r\n\r\n                // the multiplier\r\n                if(group === N)\r\n                    c.push(symbol.multiplier.toDecimal());\r\n                else if(symbol.multiplier.equals(-1))\r\n                    prefix = '-';\r\n                else if(!symbol.multiplier.equals(1))\r\n                    c.push(symbol.multiplier.toDecimal());\r\n                // the value\r\n                var value;\r\n\r\n                if(group === S || group === P)\r\n                    value = symbol.value;\r\n                else if(group === FN) {\r\n                    dependencies = Build.compileDependencies(symbol.fname, dependencies);\r\n                    dependencies = Build.getArgsDeps(symbol, dependencies);\r\n                    if(Build.reformat[symbol.fname]) {\r\n                        var components = Build.reformat[symbol.fname](symbol, dependencies);\r\n                        dependencies = components[1];\r\n                        value = components[0];\r\n                    }\r\n                    else {\r\n                        value = ftext_function(symbol.fname);\r\n                    }\r\n\r\n                }\r\n                else if(group === EX) {\r\n                    var pg = symbol.previousGroup;\r\n                    if(pg === N || pg === S)\r\n                        value = symbol.value;\r\n                    else if(pg === FN) {\r\n                        value = ftext_function(symbol.fname);\r\n                        dependencies = Build.compileDependencies(symbol.fname, dependencies);\r\n                        dependencies = Build.getArgsDeps(symbol, dependencies);\r\n                    }\r\n                    else\r\n                        value = ftext_complex(symbol.previousGroup);\r\n                }\r\n                else {\r\n                    value = ftext_complex(symbol.group);\r\n                }\r\n\r\n                if(symbol.group !== N && !symbol.power.equals(1)) {\r\n                    var pow = ftext(_.parse(symbol.power));\r\n                    xports.push(pow[1]);\r\n                    value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\r\n                }\r\n\r\n                if(value)\r\n                    c.push(prefix + value);\r\n\r\n                return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\r\n            };\r\n            if(arg_array) {\r\n                // Fix for issue #546\r\n                // Disable argument checking since it's a bit presumptuous.\r\n                // Consider f(x) = 5; If I explicitely pass in an argument array contain x \r\n                // this check will fail and complain since the function doesn't contain x.\r\n                /*\r\n                 for (var i = 0; i < args.length; i++) {\r\n                 var arg = args[i];\r\n                 if (arg_array.indexOf(arg) === -1)\r\n                 err(arg + ' not found in argument array');\r\n                 }\r\n                 */\r\n                args = arg_array;\r\n            }\r\n\r\n            var f_array = ftext(symbol);\r\n\r\n            // make all the substitutions;\r\n            for(var x in dependencies[0]) {\r\n                var alias = dependencies[0][x];\r\n                f_array[1] = f_array[1].replace(x, alias);\r\n                dependencies[1] = dependencies[1].replace(x, alias);\r\n            }\r\n\r\n            var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\r\n\r\n            return f;\r\n        }\r\n    };\r\n\r\n\r\n//finalize =====================================================================\r\n    /* FINALIZE */\r\n    (function () {\r\n        reserveNames(_.CONSTANTS);\r\n        reserveNames(_.functions);\r\n        _.initConstants();\r\n        //bug fix for error but needs to be revisited\r\n        if(!_.error)\r\n            _.error = err;\r\n\r\n        //Store the log and log10 functions\r\n        Settings.LOG_FNS = {\r\n            log: _.functions['log'],\r\n            log10: _.functions['log10']\r\n        };\r\n\r\n    })();\r\n\r\n    /* END FINALIZE */\r\n\r\n//Core =========================================================================\r\n    var Utils = {\r\n        allSame: allSame,\r\n        allNumeric: allNumeric,\r\n        arguments2Array: arguments2Array,\r\n        arrayAddSlices: arrayAddSlices,\r\n        arrayClone: arrayClone,\r\n        arrayMax: arrayMax,\r\n        arrayMin: arrayMin,\r\n        arrayEqual: arrayEqual,\r\n        arrayUnique: arrayUnique,\r\n        arrayGetVariables: arrayGetVariables,\r\n        arraySum: arraySum,\r\n        block: block,\r\n        build: Build.build,\r\n        clearU: clearU,\r\n        comboSort: comboSort,\r\n        compare: compare,\r\n        convertToVector: convertToVector,\r\n        customError: customError,\r\n        customType: customType,\r\n        decompose_fn: decompose_fn,\r\n        each: each,\r\n        evaluate: evaluate,\r\n        even: even,\r\n        evenFraction: evenFraction,\r\n        fillHoles: fillHoles,\r\n        firstObject: firstObject,\r\n        format: format,\r\n        generatePrimes: generatePrimes,\r\n        getCoeffs: getCoeffs,\r\n        getU: getU,\r\n        importFunctions: importFunctions,\r\n        inBrackets: inBrackets,\r\n        isArray: isArray,\r\n        isExpression: isExpression,\r\n        isFraction: isFraction,\r\n        isInt: isInt,\r\n        isMatrix: isMatrix,\r\n        isNegative: isNegative,\r\n        isNumericSymbol: isNumericSymbol,\r\n        isPrime: isPrime,\r\n        isReserved: isReserved,\r\n        isSymbol: isSymbol,\r\n        isVariableSymbol: isVariableSymbol,\r\n        isVector: isVector,\r\n        keys: keys,\r\n        knownVariable: knownVariable,\r\n        nroots: nroots,\r\n        remove: remove,\r\n        reserveNames: reserveNames,\r\n        range: range,\r\n        round: nround,\r\n        sameSign: sameSign,\r\n        scientificToDecimal: scientificToDecimal,\r\n        separate: separate,\r\n        stringReplace: stringReplace,\r\n        text: text,\r\n        validateName: validateName,\r\n        variables: variables,\r\n        warn: warn\r\n    };\r\n\r\n    //This contains all the parts of nerdamer and enables nerdamer's internal functions\r\n    //to be used.\r\n    var C = {\r\n        groups: Groups,\r\n        Symbol: Symbol,\r\n        Expression: Expression,\r\n        Frac: Frac,\r\n        Vector: Vector,\r\n        Matrix: Matrix,\r\n        Parser: Parser,\r\n        Scientific: Scientific,\r\n        Fraction: Fraction,\r\n        Math2: Math2,\r\n        LaTeX: LaTeX,\r\n        Utils: Utils,\r\n        PARSER: _,\r\n        PARENTHESIS: PARENTHESIS,\r\n        Settings: Settings,\r\n        err: err,\r\n        bigInt: bigInt,\r\n        bigDec: bigDec,\r\n        exceptions: exceptions\r\n    };\r\n\r\n//libExports ===================================================================\r\n    /**\r\n     *\r\n     * @param {String} expression the expression to be evaluated\r\n     * @param {Object} subs the object containing the variable values\r\n     * @param {Integer} location a specific location in the equation list to\r\n     * insert the evaluated expression\r\n     * @param {String} option additional options\r\n     * @returns {Expression}\r\n     */\r\n    var libExports = function (expression, subs, option, location) {\r\n        // Initiate the numer flag\r\n        var numer = false;\r\n\r\n        // Is the user declaring a function?\r\n        var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\r\n        if(fndec)\r\n            return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]);\r\n\r\n        // var variable, fn, args;\r\n        // Convert any expression passed in to a string\r\n        if(expression instanceof Expression)\r\n            expression = expression.toString();\r\n\r\n        // Convert it to an array for simplicity\r\n        if(!isArray(option)) {\r\n            option = typeof option === 'undefined' ? [] : [option];\r\n        }\r\n\r\n        option.forEach(function (o) {\r\n            // Turn on the numer flag if requested\r\n            if(o === 'numer') {\r\n                numer = true;\r\n                return;\r\n            }\r\n            // Wrap it in a function if requested. This only holds true for\r\n            // functions that take a single argument which is the expression\r\n            var f = _.functions[option];\r\n            // If there's a function and it takes a single argument, then wrap\r\n            // the expression in it\r\n            if(f && f[1] === 1) {\r\n                expression = `${o}(${expression})`;\r\n            }\r\n        });\r\n\r\n        var e = block('PARSE2NUMBER', function () {\r\n            return _.parse(expression, subs);\r\n        }, numer || Settings.PARSE2NUMBER);\r\n\r\n        if(location) {\r\n            EXPRESSIONS[location - 1] = e;\r\n        }\r\n        else {\r\n            EXPRESSIONS.push(e);\r\n        }\r\n\r\n        return new Expression(e);\r\n    };\r\n    /**\r\n     * Converts expression into rpn form\r\n     * @param {String} expression\r\n     * @returns {Token[]}\r\n     */\r\n    libExports.rpn = function (expression) {\r\n        return _.tokenize(_.toRPN(expression));\r\n    };\r\n\r\n    /**\r\n     * Generates LaTeX from expression string\r\n     * @param {String} e\r\n     * @param {object} opt\r\n     * @returns {String}\r\n     */\r\n    libExports.convertToLaTeX = function (e, opt) {\r\n        return _.toTeX(e, opt);\r\n    };\r\n\r\n    /**\r\n     * Converts latex to text - Very very very basic at the moment\r\n     * @param {String} e\r\n     * @returns {String}\r\n     */\r\n    libExports.convertFromLaTeX = function (e) {\r\n        var txt = LaTeX.parse(_.tokenize(e));\r\n        return new Expression(_.parse(txt));\r\n    };\r\n\r\n    /**\r\n     * Get the version of nerdamer or a loaded add-on\r\n     * @param {String} add_on - The add-on being checked\r\n     * @returns {String} returns the version of nerdamer\r\n     */\r\n    libExports.version = function (add_on) {\r\n        if(add_on) {\r\n            try {\r\n                return C[add_on].version;\r\n            }\r\n            catch(e) {\r\n                return \"No module named \" + add_on + \" found!\";\r\n            }\r\n        }\r\n        return version;\r\n    };\r\n\r\n    /**\r\n     * Get nerdamer generated warnings\r\n     * @returns {String[]}\r\n     */\r\n    libExports.getWarnings = function () {\r\n        return WARNINGS;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} constant The name of the constant to be set\r\n     * @param {mixed} value The value of the constant\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setConstant = function (constant, value) {\r\n        validateName(constant);\r\n        if(!isReserved(constant)) {\r\n            //fix for issue #127\r\n            if(value === 'delete' || value === '') {\r\n                delete _.CONSTANTS[constant];\r\n            }\r\n            else {\r\n                if(isNaN(value))\r\n                    throw new NerdamerTypeError('Constant must be a number!');\r\n                _.CONSTANTS[constant] = value;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns the value of a previously set constant\r\n     * @param {type} constant\r\n     * @returns {String}\r\n     */\r\n    libExports.getConstant = function (constant) {\r\n        return String(_.constant[constant]);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} name The name of the function\r\n     * @param {Array} params_array A list containing the parameter name of the functions\r\n     * @param {String} body The body of the function\r\n     * @returns {Boolean} returns true if succeeded and falls on fail\r\n     * @example nerdamer.setFunction('f',['x'], 'x^2+2');\r\n     */\r\n    libExports.setFunction = setFunction;\r\n\r\n    /**\r\n     *\r\n     * @returns {C} Exports the nerdamer core functions and objects\r\n     */\r\n    libExports.getCore = function () {\r\n        return C;\r\n    };\r\n\r\n    libExports.getExpression = libExports.getEquation = Expression.getExpression;\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\r\n     * @returns {String|Array}\r\n     */\r\n    libExports.reserved = function (asArray) {\r\n        if(asArray) {\r\n            return RESERVED;\r\n        }\r\n        return RESERVED.join(', ');\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Integer} equation_number the number of the equation to clear.\r\n     * If 'all' is supplied then all equations are cleared\r\n     * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\r\n        if(equation_number === 'all') {\r\n            EXPRESSIONS = [];\r\n        }\r\n        else if(equation_number === 'last') {\r\n            EXPRESSIONS.pop();\r\n        }\r\n        else if(equation_number === 'first') {\r\n            EXPRESSIONS.shift();\r\n        }\r\n        else {\r\n            var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\r\n            keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : remove(EXPRESSIONS, index);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Alias for nerdamer.clear('all')\r\n     */\r\n    libExports.flush = function () {\r\n        this.clear('all');\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} asObject\r\n     * @param {Boolean} asLaTeX\r\n     * @param {String|String[]} option\r\n     * @returns {Array}\r\n     */\r\n    libExports.expressions = function (asObject, asLaTeX, option) {\r\n        var result = asObject ? {} : [];\r\n        for(var i = 0; i < EXPRESSIONS.length; i++) {\r\n            var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : text(EXPRESSIONS[i], option);\r\n            asObject ? result[i + 1] = eq : result.push(eq);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    //the method for registering modules\r\n    libExports.register = function (obj) {\r\n        var core = this.getCore();\r\n\r\n        if(isArray(obj)) {\r\n            for(var i = 0; i < obj.length; i++) {\r\n                if(obj)\r\n                    this.register(obj[i]);\r\n            }\r\n        }\r\n        else if(obj && Settings.exclude.indexOf(obj.name) === -1) {\r\n            //make sure all the dependencies are available\r\n            if(obj.dependencies) {\r\n                for(var i = 0; i < obj.dependencies.length; i++)\r\n                    if(!core[obj.dependencies[i]])\r\n                        throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\r\n            }\r\n            //if no parent object is provided then the function does not have an address and cannot be called directly\r\n            var parent_obj = obj.parent,\r\n                    fn = obj.build.call(core); //call constructor to get function\r\n            if(parent_obj) {\r\n                if(!core[parent_obj])\r\n                    core[obj.parent] = {};\r\n\r\n                var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj];\r\n                //attach the function to the core\r\n                ref_obj[obj.name] = fn;\r\n            }\r\n            if(obj.visible)\r\n                _.functions[obj.name] = [fn, obj.numargs]; //make the function available\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} name variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validateName = validateName;\r\n\r\n    /**\r\n     * @param {String} varname variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validVarName = function (varname) {\r\n        try {\r\n            validateName(varname);\r\n            return RESERVED.indexOf(varname) === -1;\r\n        }\r\n        catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {Array} Array of functions currently supported by nerdamer\r\n     */\r\n    libExports.supported = function () {\r\n        return keys(_.functions);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {Number} The number equations/expressions currently loaded\r\n     */\r\n    libExports.numEquations = libExports.numExpressions = function () {\r\n        return EXPRESSIONS.length;\r\n    };\r\n    /* END EXPORTS */\r\n\r\n    /**\r\n     *\r\n     * @param {String} v variable to be set\r\n     * @param {String} val value of variable. This can be a variable expression or number\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setVar = function (v, val) {\r\n        validateName(v);\r\n        //check if it's not already a constant\r\n        if(v in _.CONSTANTS)\r\n            err('Cannot set value for constant ' + v);\r\n        if(val === 'delete' || val === '')\r\n            delete VARS[v];\r\n        else {\r\n            VARS[v] = isSymbol(val) ? val : _.parse(val);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns the value of a set variable\r\n     * @param {type} v\r\n     * @returns {varies}\r\n     */\r\n    libExports.getVar = function (v) {\r\n        return VARS[v];\r\n    };\r\n    /**\r\n     * Clear the variables from the VARS object\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clearVars = function () {\r\n        VARS = {};\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Function} loader\r\n     * @returns {nerdamer}\r\n     */\r\n    libExports.load = function (loader) {\r\n        loader.call(this);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\r\n     * @param {String|String[]} option\r\n     * @returns {Object} Returns an object with the variables\r\n     */\r\n    libExports.getVars = function (output, option) {\r\n        output = output || 'text';\r\n        var variables = {};\r\n        if(output === 'object')\r\n            variables = VARS;\r\n        else {\r\n            for(var v in VARS) {\r\n                if(output === 'latex') {\r\n                    variables[v] = VARS[v].latex(option);\r\n                }\r\n                else if(output === 'text') {\r\n                    variables[v] = VARS[v].text(option);\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    };\r\n\r\n    /**\r\n     * Set the value of a setting\r\n     * @param {String} setting The setting to be changed\r\n     * @param {boolean} value\r\n     */\r\n    libExports.set = function (setting, value) {\r\n        //current options:\r\n        //PARSE2NUMBER, suppress_errors\r\n        if(typeof setting === 'object')\r\n            for(var x in setting) {\r\n                libExports.set(x, setting[x]);\r\n            }\r\n\r\n        var disallowed = ['SAFE'];\r\n        if(disallowed.indexOf(setting) !== -1)\r\n            err('Cannot modify setting: ' + setting);\r\n\r\n        if(setting === 'PRECISION') {\r\n            bigDec.set({precision: value});\r\n            Settings.PRECISION = value;\r\n\r\n            // Avoid that nerdamer puts out garbage after 21 decimal place\r\n            if(value > 21) {\r\n                this.set('USE_BIG', true);\r\n            }\r\n        }\r\n        else if(setting === 'USE_LN' && value === true) {\r\n            //set log as LN\r\n            Settings.LOG = 'LN';\r\n            //set log10 as log\r\n            Settings.LOG10 = 'log';\r\n            //point the functions in the right direction\r\n            _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\r\n            //the log10 function must be explicitly set\r\n            _.functions['log'][0] = function (x) {\r\n                if(x.isConstant())\r\n                    return new Symbol(Math.log10(x));\r\n                return _.symfunction(Settings.LOG10, [x]);\r\n            };\r\n            _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\r\n\r\n            //remove log10\r\n            delete _.functions['log10'];\r\n        }\r\n        else\r\n            Settings[setting] = value;\r\n    };\r\n\r\n    /**\r\n     * Get the value of a setting\r\n     * @param {type} setting\r\n     * @returns {undefined}\r\n     */\r\n    libExports.get = function (setting) {\r\n        return Settings[setting];\r\n    };\r\n\r\n    /**\r\n     * This functions makes internal functions available externally\r\n     * @param {bool} override Override the functions when calling api if it exists\r\n     */\r\n    libExports.api = function (override) {\r\n        //Map internal functions to external ones\r\n        var linker = function (fname) {\r\n            return function () {\r\n                var args = [].slice.call(arguments);\r\n                for(var i = 0; i < args.length; i++)\r\n                    args[i] = _.parse(args[i]);\r\n                return new Expression(block('PARSE2NUMBER', function () {\r\n                    return _.callfunction(fname, args);\r\n                }));\r\n            };\r\n        };\r\n        //perform the mapping\r\n        for(var x in _.functions)\r\n            if(!(x in libExports) || override)\r\n                libExports[x] = linker(x);\r\n    };\r\n\r\n    libExports.replaceFunction = function (name, fn, num_args) {\r\n        var existing = _.functions[name];\r\n        var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\r\n        _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\r\n    };\r\n\r\n    libExports.setOperator = function (operator, shift) {\r\n        _.setOperator(operator, shift);\r\n    };\r\n\r\n    libExports.getOperator = function (operator) {\r\n        return _.getOperator(operator);\r\n    };\r\n\r\n    libExports.aliasOperator = function (operator, withOperator) {\r\n        _.aliasOperator(operator, withOperator);\r\n    };\r\n\r\n    libExports.tree = function (expression) {\r\n        return _.tree(_.toRPN(_.tokenize(expression)));\r\n    };\r\n\r\n    libExports.htmlTree = function (expression, indent) {\r\n        var tree = this.tree(expression);\r\n\r\n        return '<div class=\"tree\">\\n' +\r\n                '    <ul>\\n' +\r\n                '        <li>\\n' +\r\n                tree.toHTML(3, indent) + '\\n' +\r\n                '        </li>\\n' +\r\n                '    </ul>\\n' +\r\n                '</div>';\r\n    };\r\n\r\n    libExports.addPeeker = function (name, f) {\r\n        if(_.peekers[name])\r\n            _.peekers[name].push(f);\r\n    };\r\n\r\n    libExports.removePeeker = function (name, f) {\r\n        remove(_.peekers[name], f);\r\n    };\r\n\r\n    libExports.parse = function (e) {\r\n        return String(e).split(';').map(function (x) {\r\n            return _.parse(x);\r\n        });\r\n    };\r\n\r\n    libExports.api();\r\n\r\n    return libExports; //Done\r\n//imports ======================================================================\r\n})({\r\n    //https://github.com/peterolson/BigInteger.js\r\n    bigInt: (function(){\r\n        var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0])};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,325,9375,28178,450775,9780504,1795265022]);var logN=Math.log(2)*bits;var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.equals(1))throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n===\"number\"||typeof n===\"string\")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false}result=arrayToSmall(result);return low.add(typeof result===\"number\"?new SmallInteger(result):new BigInteger(result,false))}var parseBase=function(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c===\"-\")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}return new SmallInteger(parseInt(text,base))}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\");digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit){if(digit<=35){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit)}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.equals(1)){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(stringify).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix);return String(this.value)};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}\r\n        return bigInt;\r\n    })(),\r\n    /*\r\n     *  decimal.js v10.2.1\r\n     *  An arbitrary-precision Decimal type for JavaScript.\r\n     *  https://github.com/MikeMcl/decimal.js\r\n     *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n     *  MIT Licence\r\n     */\r\n    bigDec: function(n){\"use strict\";var e,i,t,r,s=9e15,o=1e9,u=\"0123456789abcdef\",c=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",f=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",a={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-s,maxE:s,crypto:!1},h=!0,d=\"[DecimalError] \",l=d+\"Invalid argument: \",p=d+\"Precision limit exceeded\",g=d+\"crypto unavailable\",m=Math.floor,w=Math.pow,v=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,N=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,b=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,E=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,x=1e7,y=7,M=c.length-1,q=f.length-1,O={name:\"[object Decimal]\"};function D(n){var e,i,t,r=n.length-1,s=\"\",o=n[0];if(r>0){for(s+=o,e=1;e<r;e++)t=n[e]+\"\",(i=y-t.length)&&(s+=k(i)),s+=t;o=n[e],(i=y-(t=o+\"\").length)&&(s+=k(i))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function F(n,e,i){if(n!==~~n||n<e||n>i)throw Error(l+n)}function A(n,e,i,t){var r,s,o,u;for(s=n[0];s>=10;s/=10)--e;return--e<0?(e+=y,r=0):(r=Math.ceil((e+1)/y),e%=y),s=w(10,y-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),o=i<4&&99999==u||i>3&&49999==u||5e4==u||0==u):o=(i<4&&u+1==s||i>3&&u+1==s/2)&&(n[r+1]/s/100|0)==w(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),o=(t||i<4)&&9999==u||!t&&i>3&&4999==u):o=((t||i<4)&&u+1==s||!t&&i>3&&u+1==s/2)&&(n[r+1]/s/1e3|0)==w(10,e-3)-1,o}function S(n,e,i){for(var t,r,s=[0],o=0,c=n.length;o<c;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=u.indexOf(n.charAt(o++)),t=0;t<s.length;t++)s[t]>i-1&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}O.absoluteValue=O.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),P(n)},O.ceil=function(){return P(new this.constructor(this),this.e+1,2)},O.comparedTo=O.cmp=function(n){var e,i,t,r,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(t=o.length)<(r=u.length)?t:r;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return t===r?0:t>r^c<0?1:-1},O.cosine=O.cos=function(){var n,e,i=this,t=i.constructor;return i.d?i.d[0]?(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+y,t.rounding=1,i=function(n,e){var i,t,r=e.d.length;r<32?(i=Math.ceil(r/3),t=(1/z(4,i)).toString()):(i=16,t=\"2.3283064365386962890625e-10\");n.precision+=i,e=J(n,1,e.times(t),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(t,G(t,i)),t.precision=n,t.rounding=e,P(2==r||3==r?i.neg():i,n,e,!0)):new t(1):new t(NaN)},O.cubeRoot=O.cbrt=function(){var n,e,i,t,r,s,o,u,c,f,a=this,d=a.constructor;if(!a.isFinite()||a.isZero())return new d(a);for(h=!1,(s=a.s*w(a.s*a,1/3))&&Math.abs(s)!=1/0?t=new d(s.toString()):(i=D(a.d),(s=((n=a.e)-i.length+1)%3)&&(i+=1==s||-2==s?\"0\":\"00\"),s=w(i,1/3),n=m((n+1)/3)-(n%3==(n<0?-1:2)),(t=new d(i=s==1/0?\"5e\"+n:(i=s.toExponential()).slice(0,i.indexOf(\"e\")+1)+n)).s=a.s),o=(n=d.precision)+3;;)if(f=(c=(u=t).times(u).times(u)).plus(a),t=Z(f.plus(a).times(u),f.plus(c),o+2,1),D(u.d).slice(0,o)===(i=D(t.d)).slice(0,o)){if(\"9999\"!=(i=i.slice(o-3,o+1))&&(r||\"4999\"!=i)){+i&&(+i.slice(1)||\"5\"!=i.charAt(0))||(P(t,n+1,1),e=!t.times(t).times(t).eq(a));break}if(!r&&(P(u,n+1,0),u.times(u).times(u).eq(a))){t=u;break}o+=4,r=1}return h=!0,P(t,n,d.rounding,e)},O.decimalPlaces=O.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-m(this.e/y))*y,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},O.dividedBy=O.div=function(n){return Z(this,new this.constructor(n))},O.dividedToIntegerBy=O.divToInt=function(n){var e=this.constructor;return P(Z(this,new e(n),0,1,1),e.precision,e.rounding)},O.equals=O.eq=function(n){return 0===this.cmp(n)},O.floor=function(){return P(new this.constructor(this),this.e+1,3)},O.greaterThan=O.gt=function(n){return this.cmp(n)>0},O.greaterThanOrEqualTo=O.gte=function(n){var e=this.cmp(n);return 1==e||0===e},O.hyperbolicCosine=O.cosh=function(){var n,e,i,t,r,s=this,o=s.constructor,u=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return u;i=o.precision,t=o.rounding,o.precision=i+Math.max(s.e,s.sd())+4,o.rounding=1,(r=s.d.length)<32?e=(1/z(4,n=Math.ceil(r/3))).toString():(n=16,e=\"2.3283064365386962890625e-10\"),s=J(o,1,s.times(e),new o(1),!0);for(var c,f=n,a=new o(8);f--;)c=s.times(s),s=u.minus(c.times(a.minus(c.times(a))));return P(s,o.precision=i,o.rounding=t,!0)},O.hyperbolicSine=O.sinh=function(){var n,e,i,t,r=this,s=r.constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=J(s,2,r,r,!0);else{n=(n=1.4*Math.sqrt(t))>16?16:0|n,r=J(s,2,r=r.times(1/z(5,n)),r,!0);for(var o,u=new s(5),c=new s(16),f=new s(20);n--;)o=r.times(r),r=r.times(u.plus(o.times(c.times(o).plus(f))))}return s.precision=e,s.rounding=i,P(r,e,i,!0)},O.hyperbolicTangent=O.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Z(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},O.inverseCosine=O.acos=function(){var n,e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?U(i,r,s):new i(0):new i(NaN):e.isZero()?U(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),n=U(i,r+4,s).times(.5),i.precision=r,i.rounding=s,n.minus(e))},O.inverseHyperbolicCosine=O.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,h=!1,i=i.times(i).minus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},O.inverseHyperbolicSine=O.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,h=!1,i=i.times(i).plus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln())},O.inverseHyperbolicTangent=O.atanh=function(){var n,e,i,t,r=this,s=r.constructor;return r.isFinite()?r.e>=0?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?P(new s(r),n,e,!0):(s.precision=i=t-r.e,r=Z(r.plus(1),new s(1).minus(r),i+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},O.inverseSine=O.asin=function(){var n,e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((n=U(s,i+4,t).times(.5)).s=r.s,n):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},O.inverseTangent=O.atan=function(){var n,e,i,t,r,s,o,u,c,f=this,a=f.constructor,d=a.precision,l=a.rounding;if(f.isFinite()){if(f.isZero())return new a(f);if(f.abs().eq(1)&&d+4<=q)return(o=U(a,d+4,l).times(.25)).s=f.s,o}else{if(!f.s)return new a(NaN);if(d+4<=q)return(o=U(a,d+4,l).times(.5)).s=f.s,o}for(a.precision=u=d+10,a.rounding=1,n=i=Math.min(28,u/y+2|0);n;--n)f=f.div(f.times(f).plus(1).sqrt().plus(1));for(h=!1,e=Math.ceil(u/y),t=1,c=f.times(f),o=new a(f),r=f;-1!==n;)if(r=r.times(c),s=o.minus(r.div(t+=2)),r=r.times(c),void 0!==(o=s.plus(r.div(t+=2))).d[e])for(n=e;o.d[n]===s.d[n]&&n--;);return i&&(o=o.times(2<<i-1)),h=!0,P(o,a.precision=d,a.rounding=l,!0)},O.isFinite=function(){return!!this.d},O.isInteger=O.isInt=function(){return!!this.d&&m(this.e/y)>this.d.length-2},O.isNaN=function(){return!this.s},O.isNegative=O.isNeg=function(){return this.s<0},O.isPositive=O.isPos=function(){return this.s>0},O.isZero=function(){return!!this.d&&0===this.d[0]},O.lessThan=O.lt=function(n){return this.cmp(n)<0},O.lessThanOrEqualTo=O.lte=function(n){return this.cmp(n)<1},O.logarithm=O.log=function(n){var e,i,t,r,s,o,u,c,f=this.constructor,a=f.precision,d=f.rounding;if(null==n)n=new f(10),e=!0;else{if(i=(n=new f(n)).d,n.s<0||!i||!i[0]||n.eq(1))return new f(NaN);e=n.eq(10)}if(i=this.d,this.s<0||!i||!i[0]||this.eq(1))return new f(i&&!i[0]?-1/0:1!=this.s?NaN:i?0:1/0);if(e)if(i.length>1)s=!0;else{for(r=i[0];r%10==0;)r/=10;s=1!==r}if(h=!1,o=V(this,u=a+5),t=e?T(f,u+10):V(n,u),A((c=Z(o,t,u,1)).d,r=a,d))do{if(o=V(this,u+=10),t=e?T(f,u+10):V(n,u),c=Z(o,t,u,1),!s){+D(c.d).slice(r+1,r+15)+1==1e14&&(c=P(c,a+1,0));break}}while(A(c.d,r+=10,d));return h=!0,P(c,a,d)},O.minus=O.sub=function(n){var e,i,t,r,s,o,u,c,f,a,d,l,p=this,g=p.constructor;if(n=new g(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new g(n.d||p.s!==n.s?p:NaN):n=new g(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(f=p.d,l=n.d,u=g.precision,c=g.rounding,!f[0]||!l[0]){if(l[0])n.s=-n.s;else{if(!f[0])return new g(3===c?-0:0);n=new g(p)}return h?P(n,u,c):n}if(i=m(n.e/y),a=m(p.e/y),f=f.slice(),s=a-i){for((d=s<0)?(e=f,s=-s,o=l.length):(e=l,i=a,o=f.length),s>(t=Math.max(Math.ceil(u/y),o)+2)&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=f.length)<(o=l.length))&&(o=t),t=0;t<o;t++)if(f[t]!=l[t]){d=f[t]<l[t];break}s=0}for(d&&(e=f,f=l,l=e,n.s=-n.s),o=f.length,t=l.length-o;t>0;--t)f[o++]=0;for(t=l.length;t>s;){if(f[--t]<l[t]){for(r=t;r&&0===f[--r];)f[r]=x-1;--f[r],f[t]+=x}f[t]-=l[t]}for(;0===f[--o];)f.pop();for(;0===f[0];f.shift())--i;return f[0]?(n.d=f,n.e=L(f,i),h?P(n,u,c):n):new g(3===c?-0:0)},O.modulo=O.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?P(new t(i),t.precision,t.rounding):(h=!1,9==t.modulo?(e=Z(i,n.abs(),0,3,1)).s*=n.s:e=Z(i,n,0,t.modulo,1),e=e.times(n),h=!0,i.minus(e))},O.naturalExponential=O.exp=function(){return B(this)},O.naturalLogarithm=O.ln=function(){return V(this)},O.negated=O.neg=function(){var n=new this.constructor(this);return n.s=-n.s,P(n)},O.plus=O.add=function(n){var e,i,t,r,s,o,u,c,f,a,d=this,l=d.constructor;if(n=new l(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new l(n.d||d.s===n.s?d:NaN)):n=new l(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(f=d.d,a=n.d,u=l.precision,c=l.rounding,!f[0]||!a[0])return a[0]||(n=new l(d)),h?P(n,u,c):n;if(s=m(d.e/y),t=m(n.e/y),f=f.slice(),r=s-t){for(r<0?(i=f,r=-r,o=a.length):(i=a,t=s,o=f.length),r>(o=(s=Math.ceil(u/y))>o?s+1:o+1)&&(r=o,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((o=f.length)-(r=a.length)<0&&(r=o,i=a,a=f,f=i),e=0;r;)e=(f[--r]=f[r]+a[r]+e)/x|0,f[r]%=x;for(e&&(f.unshift(e),++t),o=f.length;0==f[--o];)f.pop();return n.d=f,n.e=L(f,t),h?P(n,u,c):n},O.precision=O.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(l+n);return i.d?(e=_(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},O.round=function(){var n=this,e=n.constructor;return P(new e(n),n.e+1,e.rounding)},O.sine=O.sin=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+y,t.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return J(n,2,e,e);i=(i=1.4*Math.sqrt(t))>16?16:0|i,e=e.times(1/z(5,i)),e=J(n,2,e,e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(t,G(t,i)),t.precision=n,t.rounding=e,P(r>2?i.neg():i,n,e,!0)):new t(NaN)},O.squareRoot=O.sqrt=function(){var n,e,i,t,r,s,o=this,u=o.d,c=o.e,f=o.s,a=o.constructor;if(1!==f||!u||!u[0])return new a(!f||f<0&&(!u||u[0])?NaN:u?o:1/0);for(h=!1,0==(f=Math.sqrt(+o))||f==1/0?(((e=D(u)).length+c)%2==0&&(e+=\"0\"),f=Math.sqrt(e),c=m((c+1)/2)-(c<0||c%2),t=new a(e=f==1/0?\"5e\"+c:(e=f.toExponential()).slice(0,e.indexOf(\"e\")+1)+c)):t=new a(f.toString()),i=(c=a.precision)+3;;)if(t=(s=t).plus(Z(o,s,i+2,1)).times(.5),D(s.d).slice(0,i)===(e=D(t.d)).slice(0,i)){if(\"9999\"!=(e=e.slice(i-3,i+1))&&(r||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(P(t,c+1,1),n=!t.times(t).eq(o));break}if(!r&&(P(s,c+1,0),s.times(s).eq(o))){t=s;break}i+=4,r=1}return h=!0,P(t,c,a.rounding,n)},O.tangent=O.tan=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+10,t.rounding=1,(i=i.sin()).s=1,i=Z(i,new t(1).minus(i.times(i)).sqrt(),n+10,0),t.precision=n,t.rounding=e,P(2==r||4==r?i.neg():i,n,e,!0)):new t(NaN)},O.times=O.mul=function(n){var e,i,t,r,s,o,u,c,f,a=this,d=a.constructor,l=a.d,p=(n=new d(n)).d;if(n.s*=a.s,!(l&&l[0]&&p&&p[0]))return new d(!n.s||l&&!l[0]&&!p||p&&!p[0]&&!l?NaN:l&&p?0*n.s:n.s/0);for(i=m(a.e/y)+m(n.e/y),(c=l.length)<(f=p.length)&&(s=l,l=p,p=s,o=c,c=f,f=o),s=[],t=o=c+f;t--;)s.push(0);for(t=f;--t>=0;){for(e=0,r=c+t;r>t;)u=s[r]+p[t]*l[r-t-1]+e,s[r--]=u%x|0,e=u/x|0;s[r]=(s[r]+e)%x|0}for(;!s[--o];)s.pop();return e?++i:s.shift(),n.d=s,n.e=L(s,i),h?P(n,d.precision,d.rounding):n},O.toBinary=function(n,e){return K(this,2,n,e)},O.toDecimalPlaces=O.toDP=function(n,e){var i=this,t=i.constructor;return i=new t(i),void 0===n?i:(F(n,0,o),void 0===e?e=t.rounding:F(e,0,8),P(i,n+i.e+1,e))},O.toExponential=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,!0):(F(n,0,o),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n+1,e),!0,n+1)),t.isNeg()&&!t.isZero()?\"-\"+i:i},O.toFixed=function(n,e){var i,t,r=this,s=r.constructor;return void 0===n?i=R(r):(F(n,0,o),void 0===e?e=s.rounding:F(e,0,8),i=R(t=P(new s(r),n+r.e+1,e),!1,n+t.e+1)),r.isNeg()&&!r.isZero()?\"-\"+i:i},O.toFraction=function(n){var e,i,t,r,s,o,u,c,f,a,d,p,g=this,m=g.d,v=g.constructor;if(!m)return new v(g);if(f=i=new v(1),t=c=new v(0),o=(s=(e=new v(t)).e=_(m)-g.e-1)%y,e.d[0]=w(10,o<0?y+o:o),null==n)n=s>0?e:f;else{if(!(u=new v(n)).isInt()||u.lt(f))throw Error(l+u);n=u.gt(e)?s>0?e:f:u}for(h=!1,u=new v(D(m)),a=v.precision,v.precision=s=m.length*y*2;d=Z(u,e,0,1,1),1!=(r=i.plus(d.times(t))).cmp(n);)i=t,t=r,r=f,f=c.plus(d.times(r)),c=r,r=e,e=u.minus(d.times(r)),u=r;return r=Z(n.minus(i),t,0,1,1),c=c.plus(r.times(f)),i=i.plus(r.times(t)),c.s=f.s=g.s,p=Z(f,t,s,1).minus(g).abs().cmp(Z(c,i,s,1).minus(g).abs())<1?[f,t]:[c,i],v.precision=a,h=!0,p},O.toHexadecimal=O.toHex=function(n,e){return K(this,16,n,e)},O.toNearest=function(n,e){var i=this,t=i.constructor;if(i=new t(i),null==n){if(!i.d)return i;n=new t(1),e=t.rounding}else{if(n=new t(n),void 0===e?e=t.rounding:F(e,0,8),!i.d)return n.s?i:n;if(!n.d)return n.s&&(n.s=i.s),n}return n.d[0]?(h=!1,i=Z(i,n,0,e,1).times(n),h=!0,P(i)):(n.s=i.s,i=n),i},O.toNumber=function(){return+this},O.toOctal=function(n,e){return K(this,8,n,e)},O.toPower=O.pow=function(n){var e,i,t,r,s,o,u=this,c=u.constructor,f=+(n=new c(n));if(!(u.d&&n.d&&u.d[0]&&n.d[0]))return new c(w(+u,f));if((u=new c(u)).eq(1))return u;if(t=c.precision,s=c.rounding,n.eq(1))return P(u,t,s);if((e=m(n.e/y))>=n.d.length-1&&(i=f<0?-f:f)<=9007199254740991)return r=C(c,u,i,t),n.s<0?new c(1).div(r):P(r,t,s);if((o=u.s)<0){if(e<n.d.length-1)return new c(NaN);if(0==(1&n.d[e])&&(o=1),0==u.e&&1==u.d[0]&&1==u.d.length)return u.s=o,u}return(e=0!=(i=w(+u,f))&&isFinite(i)?new c(i+\"\").e:m(f*(Math.log(\"0.\"+D(u.d))/Math.LN10+u.e+1)))>c.maxE+1||e<c.minE-1?new c(e>0?o/0:0):(h=!1,c.rounding=u.s=1,i=Math.min(12,(e+\"\").length),(r=B(n.times(V(u,t+i)),t)).d&&A((r=P(r,t+5,1)).d,t,s)&&(e=t+10,+D((r=P(B(n.times(V(u,e+i)),e),e+5,1)).d).slice(t+1,t+15)+1==1e14&&(r=P(r,t+1,0))),r.s=o,h=!0,c.rounding=s,P(r,t,s))},O.toPrecision=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,t.e<=r.toExpNeg||t.e>=r.toExpPos):(F(n,1,o),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n,e),n<=t.e||t.e<=r.toExpNeg,n)),t.isNeg()&&!t.isZero()?\"-\"+i:i},O.toSignificantDigits=O.toSD=function(n,e){var i=this.constructor;return void 0===n?(n=i.precision,e=i.rounding):(F(n,1,o),void 0===e?e=i.rounding:F(e,0,8)),P(new i(this),n,e)},O.toString=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?\"-\"+i:i},O.truncated=O.trunc=function(){return P(new this.constructor(this),this.e+1,1)},O.valueOf=O.toJSON=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?\"-\"+i:i};var Z=function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=i>t?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function t(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&n.length>1;)n.shift()}return function(r,s,o,u,c,f){var a,h,d,l,p,g,w,v,N,b,E,M,q,O,D,F,A,S,Z,R,L=r.constructor,T=r.s==s.s?1:-1,U=r.d,_=s.d;if(!(U&&U[0]&&_&&_[0]))return new L(r.s&&s.s&&(U?!_||U[0]!=_[0]:_)?U&&0==U[0]||!_?0*T:T/0:NaN);for(f?(p=1,h=r.e-s.e):(f=x,p=y,h=m(r.e/p)-m(s.e/p)),Z=_.length,A=U.length,b=(N=new L(T)).d=[],d=0;_[d]==(U[d]||0);d++);if(_[d]>(U[d]||0)&&h--,null==o?(O=o=L.precision,u=L.rounding):O=c?o+(r.e-s.e)+1:o,O<0)b.push(1),g=!0;else{if(O=O/p+2|0,d=0,1==Z){for(l=0,_=_[0],O++;(d<A||l)&&O--;d++)D=l*f+(U[d]||0),b[d]=D/_|0,l=D%_|0;g=l||d<A}else{for((l=f/(_[0]+1)|0)>1&&(_=n(_,l,f),U=n(U,l,f),Z=_.length,A=U.length),F=Z,M=(E=U.slice(0,Z)).length;M<Z;)E[M++]=0;(R=_.slice()).unshift(0),S=_[0],_[1]>=f/2&&++S;do{l=0,(a=e(_,E,Z,M))<0?(q=E[0],Z!=M&&(q=q*f+(E[1]||0)),(l=q/S|0)>1?(l>=f&&(l=f-1),1==(a=e(w=n(_,l,f),E,v=w.length,M=E.length))&&(l--,t(w,Z<v?R:_,v,f))):(0==l&&(a=l=1),w=_.slice()),(v=w.length)<M&&w.unshift(0),t(E,w,M,f),-1==a&&(a=e(_,E,Z,M=E.length))<1&&(l++,t(E,Z<M?R:_,M,f)),M=E.length):0===a&&(l++,E=[0]),b[d++]=l,a&&E[0]?E[M++]=U[F]||0:(E=[U[F]],M=1)}while((F++<A||void 0!==E[0])&&O--);g=void 0!==E[0]}b[0]||b.shift()}if(1==p)N.e=h,i=g;else{for(d=1,l=b[0];l>=10;l/=10)d++;N.e=d+h*p-1,P(N,c?o+N.e+1:o,u,g)}return N}}();function P(n,e,i,t){var r,s,o,u,c,f,a,d,l,p=n.constructor;n:if(null!=e){if(!(d=n.d))return n;for(r=1,u=d[0];u>=10;u/=10)r++;if((s=e-r)<0)s+=y,o=e,c=(a=d[l=0])/w(10,r-o-1)%10|0;else if((l=Math.ceil((s+1)/y))>=(u=d.length)){if(!t)break n;for(;u++<=l;)d.push(0);a=c=0,r=1,o=(s%=y)-y+1}else{for(a=u=d[l],r=1;u>=10;u/=10)r++;c=(o=(s%=y)-y+r)<0?0:a/w(10,r-o-1)%10|0}if(t=t||e<0||void 0!==d[l+1]||(o<0?a:a%w(10,r-o-1)),f=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):c>5||5==c&&(4==i||t||6==i&&(s>0?o>0?a/w(10,r-o):0:d[l-1])%10&1||i==(n.s<0?8:7)),e<1||!d[0])return d.length=0,f?(e-=n.e+1,d[0]=w(10,(y-e%y)%y),n.e=-e||0):d[0]=n.e=0,n;if(0==s?(d.length=l,u=1,l--):(d.length=l+1,u=w(10,y-s),d[l]=o>0?(a/w(10,r-o)%w(10,o)|0)*u:0),f)for(;;){if(0==l){for(s=1,o=d[0];o>=10;o/=10)s++;for(o=d[0]+=u,u=1;o>=10;o/=10)u++;s!=u&&(n.e++,d[0]==x&&(d[0]=1));break}if(d[l]+=u,d[l]!=x)break;d[l--]=0,u=1}for(s=d.length;0===d[--s];)d.pop()}return h&&(n.e>p.maxE?(n.d=null,n.e=NaN):n.e<p.minE&&(n.e=0,n.d=[0])),n}function R(n,e,i){if(!n.isFinite())return j(n);var t,r=n.e,s=D(n.d),o=s.length;return e?(i&&(t=i-o)>0?s=s.charAt(0)+\".\"+s.slice(1)+k(t):o>1&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(n.e<0?\"e\":\"e+\")+n.e):r<0?(s=\"0.\"+k(-r-1)+s,i&&(t=i-o)>0&&(s+=k(t))):r>=o?(s+=k(r+1-o),i&&(t=i-r-1)>0&&(s=s+\".\"+k(t))):((t=r+1)<o&&(s=s.slice(0,t)+\".\"+s.slice(t)),i&&(t=i-o)>0&&(r+1===o&&(s+=\".\"),s+=k(t))),s}function L(n,e){var i=n[0];for(e*=y;i>=10;i/=10)e++;return e}function T(n,e,i){if(e>M)throw h=!0,i&&(n.precision=i),Error(p);return P(new n(c),e,1,!0)}function U(n,e,i){if(e>q)throw Error(p);return P(new n(f),e,i,!0)}function _(n){var e=n.length-1,i=e*y+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];e>=10;e/=10)i++}return i}function k(n){for(var e=\"\";n--;)e+=\"0\";return e}function C(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/y+4);for(h=!1;;){if(i%2&&Q((s=s.times(e)).d,o)&&(r=!0),0===(i=m(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}Q((e=e.times(e)).d,o)}return h=!0,s}function I(n){return 1&n.d[n.d.length-1]}function H(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function B(n,e){var i,t,r,s,o,u,c,f=0,a=0,d=0,l=n.constructor,p=l.rounding,g=l.precision;if(!n.d||!n.d[0]||n.e>17)return new l(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(null==e?(h=!1,c=g):c=e,u=new l(.03125);n.e>-2;)n=n.times(u),d+=5;for(c+=t=Math.log(w(2,d))/Math.LN10*2+5|0,i=s=o=new l(1),l.precision=c;;){if(s=P(s.times(n),c,1),i=i.times(++a),D((u=o.plus(Z(s,i,c,1))).d).slice(0,c)===D(o.d).slice(0,c)){for(r=d;r--;)o=P(o.times(o),c,1);if(null!=e)return l.precision=g,o;if(!(f<3&&A(o.d,c-t,p,f)))return P(o,l.precision=g,p,h=!0);l.precision=c+=10,i=s=u=new l(1),a=0,f++}o=u}}function V(n,e){var i,t,r,s,o,u,c,f,a,d,l,p=1,g=n,m=g.d,w=g.constructor,v=w.rounding,N=w.precision;if(g.s<0||!m||!m[0]||!g.e&&1==m[0]&&1==m.length)return new w(m&&!m[0]?-1/0:1!=g.s?NaN:m?0:g);if(null==e?(h=!1,a=N):a=e,w.precision=a+=10,t=(i=D(m)).charAt(0),!(Math.abs(s=g.e)<15e14))return f=T(w,a+2,N).times(s+\"\"),g=V(new w(t+\".\"+i.slice(1)),a-10).plus(f),w.precision=N,null==e?P(g,N,v,h=!0):g;for(;t<7&&1!=t||1==t&&i.charAt(1)>3;)t=(i=D((g=g.times(n)).d)).charAt(0),p++;for(s=g.e,t>1?(g=new w(\"0.\"+i),s++):g=new w(t+\".\"+i.slice(1)),d=g,c=o=g=Z(g.minus(1),g.plus(1),a,1),l=P(g.times(g),a,1),r=3;;){if(o=P(o.times(l),a,1),D((f=c.plus(Z(o,new w(r),a,1))).d).slice(0,a)===D(c.d).slice(0,a)){if(c=c.times(2),0!==s&&(c=c.plus(T(w,a+2,N).times(s+\"\"))),c=Z(c,new w(p),a,1),null!=e)return w.precision=N,c;if(!A(c.d,a-10,v,u))return P(c,w.precision=N,v,h=!0);w.precision=a+=10,f=o=g=Z(d.minus(1),d.plus(1),a,1),l=P(g.times(g),a,1),r=u=1}c=f,r+=2}}function j(n){return String(n.s*n.s/0)}function $(n,e){var i,t,r;for((i=e.indexOf(\".\"))>-1&&(e=e.replace(\".\",\"\")),(t=e.search(/e/i))>0?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%y,i<0&&(t+=y),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=y;t<r;)n.d.push(+e.slice(t,t+=y));e=e.slice(t),t=y-e.length}else t-=r;for(;t--;)e+=\"0\";n.d.push(+e),h&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function W(n,i){var t,r,s,o,u,c,f,a,d;if(\"Infinity\"===i||\"NaN\"===i)return+i||(n.s=NaN),n.e=NaN,n.d=null,n;if(N.test(i))t=16,i=i.toLowerCase();else if(v.test(i))t=2;else{if(!b.test(i))throw Error(l+i);t=8}for((o=i.search(/p/i))>0?(f=+i.slice(o+1),i=i.substring(2,o)):i=i.slice(2),u=(o=i.indexOf(\".\"))>=0,r=n.constructor,u&&(o=(c=(i=i.replace(\".\",\"\")).length)-o,s=C(r,new r(t),o,2*o)),o=d=(a=S(i,t,x)).length-1;0===a[o];--o)a.pop();return o<0?new r(0*n.s):(n.e=L(a,d),n.d=a,h=!1,u&&(n=Z(n,s,4*c)),f&&(n=n.times(Math.abs(f)<54?w(2,f):e.pow(2,f))),h=!0,n)}function J(n,e,i,t,r){var s,o,u,c,f=n.precision,a=Math.ceil(f/y);for(h=!1,c=i.times(i),u=new n(t);;){if(o=Z(u.times(c),new n(e++*e++),f,1),u=r?t.plus(o):t.minus(o),t=Z(o.times(c),new n(e++*e++),f,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return h=!0,o.d.length=a+1,o}function z(n,e){for(var i=n;--e;)i*=n;return i}function G(n,e){var i,t=e.s<0,s=U(n,n.precision,1),o=s.times(.5);if((e=e.abs()).lte(o))return r=t?4:1,e;if((i=e.divToInt(s)).isZero())r=t?3:2;else{if((e=e.minus(i.times(s))).lte(o))return r=I(i)?t?2:3:t?4:1,e;r=I(i)?t?1:4:t?3:2}return e.minus(s).abs()}function K(n,e,t,r){var s,c,f,a,h,d,l,p,g,m=n.constructor,w=void 0!==t;if(w?(F(t,1,o),void 0===r?r=m.rounding:F(r,0,8)):(t=m.precision,r=m.rounding),n.isFinite()){for(w?(s=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):s=e,(f=(l=R(n)).indexOf(\".\"))>=0&&(l=l.replace(\".\",\"\"),(g=new m(1)).e=l.length-f,g.d=S(R(g),10,s),g.e=g.d.length),c=h=(p=S(l,10,s)).length;0==p[--h];)p.pop();if(p[0]){if(f<0?c--:((n=new m(n)).d=p,n.e=c,p=(n=Z(n,g,t,r,0,s)).d,c=n.e,d=i),f=p[t],a=s/2,d=d||void 0!==p[t+1],d=r<4?(void 0!==f||d)&&(0===r||r===(n.s<0?3:2)):f>a||f===a&&(4===r||d||6===r&&1&p[t-1]||r===(n.s<0?8:7)),p.length=t,d)for(;++p[--t]>s-1;)p[t]=0,t||(++c,p.unshift(1));for(h=p.length;!p[h-1];--h);for(f=0,l=\"\";f<h;f++)l+=u.charAt(p[f]);if(w){if(h>1)if(16==e||8==e){for(f=16==e?4:3,--h;h%f;h++)l+=\"0\";for(h=(p=S(l,s,e)).length;!p[h-1];--h);for(f=1,l=\"1.\";f<h;f++)l+=u.charAt(p[f])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(c<0?\"p\":\"p+\")+c}else if(c<0){for(;++c;)l=\"0\"+l;l=\"0.\"+l}else if(++c>h)for(c-=h;c--;)l+=\"0\";else c<h&&(l=l.slice(0,c)+\".\"+l.slice(c))}else l=w?\"0p+0\":\"0\";l=(16==e?\"0x\":2==e?\"0b\":8==e?\"0o\":\"\")+l}else l=j(n);return n.s<0?\"-\"+l:l}function Q(n,e){if(n.length>e)return n.length=e,!0}function X(n){return new this(n).abs()}function Y(n){return new this(n).acos()}function nn(n){return new this(n).acosh()}function en(n,e){return new this(n).plus(e)}function tn(n){return new this(n).asin()}function rn(n){return new this(n).asinh()}function sn(n){return new this(n).atan()}function on(n){return new this(n).atanh()}function un(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?U(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=U(this,s,1).times(.5)).s=n.s:e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Z(n,e,s,1)),e=U(this,s,1),this.precision=t,this.rounding=r,i=n.s<0?i.minus(e):i.plus(e)):i=this.atan(Z(n,e,s,1)):(i=U(this,s,1).times(e.s>0?.25:.75)).s=n.s:i=new this(NaN),i}function cn(n){return new this(n).cbrt()}function fn(n){return P(n=new this(n),n.e+1,2)}function an(n){if(!n||\"object\"!=typeof n)throw Error(d+\"Object expected\");var e,i,t,r=!0===n.defaults,u=[\"precision\",1,o,\"rounding\",0,8,\"toExpNeg\",-s,0,\"toExpPos\",0,s,\"maxE\",0,s,\"minE\",-s,0,\"modulo\",0,9];for(e=0;e<u.length;e+=3)if(i=u[e],r&&(this[i]=a[i]),void 0!==(t=n[i])){if(!(m(t)===t&&t>=u[e+1]&&t<=u[e+2]))throw Error(l+i+\": \"+t);this[i]=t}if(i=\"crypto\",r&&(this[i]=a[i]),void 0!==(t=n[i])){if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(l+i+\": \"+t);if(t){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(g);this[i]=!0}else this[i]=!1}return this}function hn(n){return new this(n).cos()}function dn(n){return new this(n).cosh()}function ln(n,e){return new this(n).div(e)}function pn(n){return new this(n).exp()}function gn(n){return P(n=new this(n),n.e+1,3)}function mn(){var n,e,i=new this(0);for(h=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return h=!0,new this(1/0);i=e}return h=!0,i.sqrt()}function wn(n){return n instanceof e||n&&\"[object Decimal]\"===n.name||!1}function vn(n){return new this(n).ln()}function Nn(n,e){return new this(n).log(e)}function bn(n){return new this(n).log(2)}function En(n){return new this(n).log(10)}function xn(){return H(this,arguments,\"lt\")}function yn(){return H(this,arguments,\"gt\")}function Mn(n,e){return new this(n).mod(e)}function qn(n,e){return new this(n).mul(e)}function On(n,e){return new this(n).pow(e)}function Dn(n){var e,i,t,r,s=0,u=new this(1),c=[];if(void 0===n?n=this.precision:F(n,1,o),t=Math.ceil(n/y),this.crypto)if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(t));s<t;)(r=e[s])>=429e7?e[s]=crypto.getRandomValues(new Uint32Array(1))[0]:c[s++]=r%1e7;else{if(!crypto.randomBytes)throw Error(g);for(e=crypto.randomBytes(t*=4);s<t;)(r=e[s]+(e[s+1]<<8)+(e[s+2]<<16)+((127&e[s+3])<<24))>=214e7?crypto.randomBytes(4).copy(e,s):(c.push(r%1e7),s+=4);s=t/4}else for(;s<t;)c[s++]=1e7*Math.random()|0;for(t=c[--s],n%=y,t&&n&&(r=w(10,y-n),c[s]=(t/r|0)*r);0===c[s];s--)c.pop();if(s<0)i=0,c=[0];else{for(i=-1;0===c[0];i-=y)c.shift();for(t=1,r=c[0];r>=10;r/=10)t++;t<y&&(i-=y-t)}return u.e=i,u.d=c,u}function Fn(n){return P(n=new this(n),n.e+1,this.rounding)}function An(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function Sn(n){return new this(n).sin()}function Zn(n){return new this(n).sinh()}function Pn(n){return new this(n).sqrt()}function Rn(n,e){return new this(n).sub(e)}function Ln(n){return new this(n).tan()}function Tn(n){return new this(n).tanh()}function Un(n){return P(n=new this(n),n.e+1,1)}return(e=function n(e){var i,t,r;function s(n){var e,i,t,r=this;if(!(r instanceof s))return new s(n);if(r.constructor=s,n instanceof s)return r.s=n.s,void(h?!n.d||n.e>s.maxE?(r.e=NaN,r.d=null):n.e<s.minE?(r.e=0,r.d=[0]):(r.e=n.e,r.d=n.d.slice()):(r.e=n.e,r.d=n.d?n.d.slice():n.d));if(\"number\"==(t=typeof n)){if(0===n)return r.s=1/n<0?-1:1,r.e=0,void(r.d=[0]);if(n<0?(n=-n,r.s=-1):r.s=1,n===~~n&&n<1e7){for(e=0,i=n;i>=10;i/=10)e++;return void(h?e>s.maxE?(r.e=NaN,r.d=null):e<s.minE?(r.e=0,r.d=[0]):(r.e=e,r.d=[n]):(r.e=e,r.d=[n]))}return 0*n!=0?(n||(r.s=NaN),r.e=NaN,void(r.d=null)):$(r,n.toString())}if(\"string\"!==t)throw Error(l+n);return 45===(i=n.charCodeAt(0))?(n=n.slice(1),r.s=-1):(43===i&&(n=n.slice(1)),r.s=1),E.test(n)?$(r,n):W(r,n)}if(s.prototype=O,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=an,s.clone=n,s.isDecimal=wn,s.abs=X,s.acos=Y,s.acosh=nn,s.add=en,s.asin=tn,s.asinh=rn,s.atan=sn,s.atanh=on,s.atan2=un,s.cbrt=cn,s.ceil=fn,s.cos=hn,s.cosh=dn,s.div=ln,s.exp=pn,s.floor=gn,s.hypot=mn,s.ln=vn,s.log=Nn,s.log10=En,s.log2=bn,s.max=xn,s.min=yn,s.mod=Mn,s.mul=qn,s.pow=On,s.random=Dn,s.round=Fn,s.sign=An,s.sin=Sn,s.sinh=Zn,s.sqrt=Pn,s.sub=Rn,s.tan=Ln,s.tanh=Tn,s.trunc=Un,void 0===e&&(e={}),e&&!0!==e.defaults)for(r=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],i=0;i<r.length;)e.hasOwnProperty(t=r[i++])||(e[t]=this[t]);return s.config(e),s}(a)).default=e.Decimal=e,c=new e(c),f=new e(f),\"function\"==typeof define&&define.amd?define(function(){return e}):\"undefined\"!=typeof module&&module.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(O[Symbol.for(\"nodejs.util.inspect.custom\")]=O.toString,O[Symbol.toStringTag]=\"Decimal\"),module.exports=e):(n||(n=\"undefined\"!=typeof self&&self&&self.self==self?self:window),t=n.Decimal,e.noConflict=function(){return n.Decimal=t,e},n.Decimal=e),e}(this)\r\n//    bigDec: require('decimal.js')\r\n});\r\n\r\nif((typeof module) !== 'undefined') {\r\n    module.exports = nerdamer;\r\n};\r\n","<template>\r\n    <ion-page>\r\n        <Header title=\"Internal Flow\" :clear=\"clear\"></Header>\r\n        <ion-content :fullscreen=\"true\">\r\n            <Exit></Exit>\r\n            <div id=\"container\">\r\n                <ion-list>\r\n                    <ion-item>\r\n                        <ion-label>Re : </ion-label>\r\n                        <ion-input v-model=\"re\" type=\"number\" placeholder=\"Enter Reynold's Number\"></ion-input>\r\n                    </ion-item>\r\n                    <ion-item v-if=\"parseFloat(re) >= 2301\">\r\n                        <ion-label>Type of flow : </ion-label>\r\n                        <ion-select v-model=\"flow\" interface=\"popover\">\r\n                            <ion-select-option value=\"turbC\">Turbulent ( Colebrook )</ion-select-option>\r\n                            <ion-select-option value=\"turbH\">Turbulent ( Haaland )</ion-select-option>\r\n                        </ion-select>\r\n                    </ion-item>\r\n                </ion-list>\r\n                <br>\r\n                <br>\r\n\r\n                <img v-if=\"re <= 2300\" class=\"invert\" src=\"/img/lamFriction.png\" style=\"padding-left: 2%; padding-right: 2%;\">\r\n                <br v-if=\"re <= 2300\">\r\n                <br v-if=\"re <= 2300\">\r\n                <br v-if=\"re <= 2300\">\r\n                <ion-list v-if=\"re <= 2300\">\r\n                    <ion-item>\r\n                        <ion-label>Eqn : </ion-label>\r\n                        <ion-input v-model=\"eqn\" placeholder=\"Enter Friction Equation ( 64/Re )\"></ion-input>\r\n                    </ion-item>\r\n                </ion-list>\r\n\r\n                <img v-if=\"flow == 'turbH' && parseFloat(re) >= 2301\" class=\"invert\" src=\"/img/haaland.png\" style=\"padding-left: 2%; padding-right: 2%;\">\r\n                <br v-if=\"flow == 'turbH' && parseFloat(re) >= 2301\">\r\n                <br v-if=\"flow == 'turbH' && parseFloat(re) >= 2301\">\r\n                <br v-if=\"flow == 'turbH' && parseFloat(re) >= 2301\">\r\n\r\n                <img v-if=\"flow == 'turbC' && parseFloat(re) >= 2301\" class=\"invert\" src=\"/img/turbFriction.png\" style=\"padding-left: 2%; padding-right: 2%;\">\r\n                <br v-if=\"flow == 'turbC' && parseFloat(re) >= 2301\">\r\n                <br v-if=\"flow == 'turbC' && parseFloat(re) >= 2301\">\r\n                <br v-if=\"flow == 'turbC' && parseFloat(re) >= 2301\">\r\n                <ion-list v-if=\"flow == 'turbC' || flow == 'turbH' && parseFloat(re) >= 2301\">\r\n                    <ion-item>\r\n                        <ion-label>&epsilon; : </ion-label>\r\n                        <ion-input v-model=\"e\" placeholder=\"Enter Roughness ( mm )\"></ion-input>\r\n                    </ion-item>\r\n                    <ion-item>\r\n                        <ion-label>D : </ion-label>\r\n                        <ion-input v-model=\"d\" placeholder=\"Enter Diameter ( m )\"></ion-input>\r\n                    </ion-item>\r\n                </ion-list>\r\n                <ion-item>\r\n                        <ion-label>f&nbsp;&nbsp;: </ion-label>\r\n                        <ion-input v-if=\"fShow\" :value=fShow readonly></ion-input>\r\n                        <ion-input v-if=\"fTurbShow\" :value=fTurbShow readonly></ion-input>\r\n                        <ion-input v-if=\"fTurbShowH\" :value=fTurbShowH readonly></ion-input>\r\n                </ion-item>\r\n                <br>\r\n                <ion-button color=\"dark\" @click=\"clear()\" id=\"clear\">Clear</ion-button>\r\n            </div>\r\n        </ion-content>\r\n        <Help></Help>\r\n    </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    IonPage,\r\n    IonContent,\r\n    IonButton,\r\n    IonInput,\r\n    IonItem,\r\n    IonLabel,\r\n    IonSelect,\r\n    IonSelectOption,\r\n    IonList\r\n} from '@ionic/vue'\r\n\r\nimport {\r\n    defineComponent\r\n} from 'vue'\r\n\r\nimport Help from '../../components/help.vue'\r\nimport Header from '../../components/header.vue'\r\nimport Exit from '../../components/exit.vue'\r\nimport nerdamer from 'nerdamer/all.min'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        IonPage,\r\n        IonContent,\r\n        IonButton,\r\n        IonInput,\r\n        IonItem,\r\n        IonLabel,\r\n        Help,\r\n        Header,\r\n        Exit,\r\n        IonSelect,\r\n        IonSelectOption,\r\n        IonList\r\n    },\r\n    data() {\r\n        return {\r\n            re : \"\",\r\n            eqn: \"\",\r\n            e: \"\",\r\n            d: \"\",\r\n            flow: \"turbC\"\r\n        }\r\n    },\r\n    computed: {\r\n        fShow() {\r\n            if (this.re != \"\" && this.eqn != \"\") {\r\n                let re = this.re\r\n                try {\r\n                    return parseFloat(eval(this.eqn.toLowerCase())).toFixed(this.$store.state.decimal)\r\n                } catch (err) {\r\n                    console.log(re)\r\n                    return \"\"\r\n                }\r\n            } else {\r\n                return \"\"\r\n            }\r\n        },\r\n        fTurbShow() {\r\n            if (this.re != \"\" && this.e != \"\" && this.d != \"\" && this.flow == \"turbC\") {\r\n                let temp = \"\"\r\n                temp += \"10 ^ (-x/2) = (\"\r\n                temp += String(this.e/1000)\r\n                temp += \"/\"\r\n                temp += String(this.d)\r\n                temp += \") / 3.7 + 2.51 * x /\"\r\n                temp += String(this.re)\r\n                try {\r\n                    temp = nerdamer.solveEquations(String(temp), 'x').toString()\r\n                    temp = ((1/parseFloat(eval(temp)))**2).toFixed(this.$store.state.decimal)\r\n                } catch(err) {\r\n                    return \"\"\r\n                }\r\n                return parseFloat(temp).toFixed(this.$store.state.decimal)\r\n            } else {\r\n                return \"\"\r\n            }\r\n        },\r\n        fTurbShowH() {\r\n            if (this.re != \"\" && this.e != \"\" && this.d != \"\" && this.flow == \"turbH\") {\r\n                return parseFloat((1/(-1.8*Math.log10((6.9/this.re)+(((this.e/1000)/this.d)/3.7)**1.11)))**2).toFixed(this.$store.state.decimal)\r\n            } else {\r\n                return \"\"\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        clear() {\r\n            this.re = \"\"\r\n            this.eqn = \"\"\r\n            this.e = \"\"\r\n            this.d = \"\"\r\n        }\r\n    },\r\n    watch: {\r\n        flow: function() {\r\n            if (this.flow == \"turbC\" || this.flow == \"turbH\") {\r\n                this.e = \"\"\r\n                this.d = \"\"\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n#container {\r\n  text-align: center;\r\n  \r\n  position: relative;\r\n  left: 0;\r\n  right: 0;\r\n  top: 5%;\r\n}\r\n\r\n#container strong {\r\n  font-size: 20px;\r\n  line-height: 26px;\r\n}\r\n\r\n#container p {\r\n  font-size: 16px;\r\n  line-height: 22px;\r\n  \r\n  color: #8c8c8c;\r\n  \r\n  margin: 0;\r\n}\r\n\r\n#container a {\r\n  text-decoration: none;\r\n}\r\n</style>","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./lamFriction.vue?vue&type=style&index=0&id=7e216362&scoped=true&lang=css\"","/* global module */\r\n\r\n/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\nif((typeof module) !== 'undefined' && typeof nerdamer === 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Algebra.js');\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var core = nerdamer.getCore(),\r\n            _ = core.PARSER,\r\n            Frac = core.Frac,\r\n            Settings = core.Settings,\r\n            isSymbol = core.Utils.isSymbol,\r\n            FN = core.groups.FN,\r\n            Symbol = core.Symbol,\r\n            text = core.Utils.text,\r\n            inBrackets = core.Utils.inBrackets,\r\n            isInt = core.Utils.isInt,\r\n            format = core.Utils.format,\r\n            even = core.Utils.even,\r\n            evaluate = core.Utils.evaluate,\r\n            N = core.groups.N,\r\n            S = core.groups.S,\r\n            FN = core.groups.FN,\r\n            PL = core.groups.PL,\r\n            CP = core.groups.CP,\r\n            CB = core.groups.CB,\r\n            EX = core.groups.EX,\r\n            P = core.groups.P,\r\n            LOG = Settings.LOG,\r\n            EXP = 'exp',\r\n            ABS = 'abs',\r\n            SQRT = 'sqrt',\r\n            SIN = 'sin',\r\n            COS = 'cos',\r\n            TAN = 'tan',\r\n            SEC = 'sec',\r\n            CSC = 'csc',\r\n            COT = 'cot',\r\n            ASIN = 'asin',\r\n            ACOS = 'acos',\r\n            ATAN = 'atan',\r\n            ASEC = 'asec',\r\n            ACSC = 'acsc',\r\n            ACOT = 'acot',\r\n            SINH = 'sinh',\r\n            COSH = 'cosh',\r\n            TANH = 'tanh',\r\n            CSCH = 'csch',\r\n            SECH = 'sech',\r\n            COTH = 'coth',\r\n            ASECH = 'asech',\r\n            ACSCH = 'acsch',\r\n            ACOTH = 'acoth';\r\n\r\n    //custom errors\r\n    function NoIntegralFound(msg) {\r\n        this.message = msg || \"\";\r\n    }\r\n    NoIntegralFound.prototype = new Error();\r\n\r\n    //Preparations\r\n    Symbol.prototype.hasIntegral = function () {\r\n        return this.containsFunction('integrate');\r\n    };\r\n    //transforms a function\r\n    Symbol.prototype.fnTransform = function () {\r\n        if(this.group !== FN)\r\n            return this;\r\n        var retval, a = this.args[0];\r\n        var m = new Symbol(this.multiplier);\r\n        var sym = this.clone().toUnitMultiplier();\r\n        if(this.isLinear()) {\r\n            switch(this.fname) {\r\n                case SINH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('(e^({0})+e^(-({0})))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))', a));\r\n                    break;\r\n                case TAN:\r\n                    retval = _.parse(format('sin({0})/cos({0})', a));\r\n                    break;\r\n                case CSC:\r\n                    retval = _.parse(format('1/sin({0})', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('1/cos({0})', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.power.equals(2)) {\r\n            switch(this.fname) {\r\n                case SIN:\r\n                    retval = _.parse(format('1/2-cos(2*({0}))/2', a));\r\n                    break;\r\n                case COS:\r\n                    retval = _.parse(format('1/2+cos(2*({0}))/2', a));\r\n                    break;\r\n                case TAN:\r\n                    //retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))', a));\r\n                    retval = _.parse(format('sin({0})^2/cos({0})^2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case SINH:\r\n                    retval = _.parse(format('-1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(1+cosh(2*({0})))/(-1+cosh(2*({0})))', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))+1', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.fname === SEC) {\r\n            retval = _.parse(format('1/cos({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === CSC) {\r\n            retval = _.parse(format('1/sin({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === TAN) {\r\n            if(this.power.lessThan(0)) {\r\n                retval = _.parse(format('cos({0})^(-({1}))/sin({0})^({1})', this.args[0], this.power.negate()));\r\n            }\r\n            else {\r\n                retval = _.parse(format('sin({0})^({1})/cos({0})^({1})', this.args[0], this.power));\r\n            }\r\n        }\r\n        else if(this.fname === SIN && this.power.lessThan(0)) {\r\n            retval = _.parse(format('csc({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === COS && this.power.lessThan(0)) {\r\n            retval = _.parse(format('sec({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === SIN && this.power.equals(3)) {\r\n            retval = _.parse(format('(3*sin({0})-sin(3*({0})))/4', this.args[0]));\r\n        }\r\n        else if(this.fname === COS && this.power.equals(3)) {\r\n            retval = _.parse(format('(cos(3*({0}))+3*cos({0}))/4', this.args[0]));\r\n        }\r\n        //cos(a*x)^(2*n) or sin(a*x)^(2*n)\r\n        else if((this.fname === COS || this.fname === SIN) && even(this.power)) {\r\n            var n = this.power / 2;\r\n            //convert to a double angle\r\n            var double_angle = _.pow(this.clone().toLinear(), _.parse(2)).fnTransform();\r\n            //raise to the n and expand\r\n            var transformed = _.expand(_.pow(double_angle, _.parse(n)));\r\n\r\n            retval = new Symbol(0);\r\n\r\n            transformed.each(function (s) {\r\n                var t = s.fnTransform();\r\n                retval = _.add(retval, t);\r\n            }, true);\r\n        }\r\n        else\r\n            retval = sym;\r\n\r\n        return _.multiply(retval, m);\r\n    };\r\n\r\n    Symbol.prototype.hasTrig = function () {\r\n        if(this.isConstant(true) || this.group === S)\r\n            return false;\r\n        if(this.fname && (core.Utils.in_trig(this.fname) || core.Utils.in_inverse_trig(this.fname)))\r\n            return true;\r\n        if(this.symbols) {\r\n            for(var x in this.symbols)\r\n                if(this.symbols[x].hasTrig())\r\n                    return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    core.Expression.prototype.hasIntegral = function () {\r\n        return this.symbol.hasIntegral();\r\n    };\r\n    /**\r\n     * Attempts to rewrite a symbol under one common denominator\r\n     * @param {Symbol} symbol \r\n     */\r\n    core.Utils.toCommonDenominator = function (symbol) {\r\n        //transform x/a+x -> (ax+x)/a\r\n        if(symbol.isComposite() && symbol.isLinear()) {\r\n            var m = new Symbol(symbol.multiplier);\r\n            var denominator = new Symbol(1);\r\n            var numerator = new Symbol(0);\r\n            symbol.each(function (x) {\r\n                denominator = _.multiply(denominator, x.getDenom());\r\n            }, true);\r\n\r\n            //remove the denomitor in each term\r\n            symbol.each(function (x) {\r\n                var num = x.getNum();\r\n                var den = x.getDenom();\r\n                var factor = _.multiply(num, _.divide(denominator.clone(), den));\r\n                numerator = _.add(numerator, factor);\r\n            });\r\n            var retval = _.multiply(m, core.Algebra.divide(_.expand(numerator), _.expand(denominator)));\r\n            return retval;\r\n        }\r\n        return symbol;\r\n    };\r\n    //A function to check if a function name is an inverse trig function\r\n    core.Utils.in_inverse_trig = function (x) {\r\n        var inv_trig_fns = [ASIN, ACOS, ATAN, ACSC, ASEC, ACOT];\r\n        return inv_trig_fns.indexOf(x) !== -1;\r\n    };\r\n    //A function to check if a function name is a trig function\r\n    core.Utils.in_trig = function (x) {\r\n        var trig_fns = [COS, SIN, TAN, SEC, CSC, COT];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n\r\n    core.Utils.in_htrig = function (x) {\r\n        var trig_fns = [SINH, COSH, TANH, ACSCH, ASECH, ACOTH];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n\r\n    // Matrix functions\r\n    core.Matrix.jacobian = function (eqns, vars) {\r\n        var jacobian = new core.Matrix();\r\n        //get the variables if not supplied\r\n        if(!vars) {\r\n            vars = core.Utils.arrayGetVariables(eqns);\r\n        }\r\n\r\n        vars.forEach(function (v, i) {\r\n            eqns.forEach(function (eq, j) {\r\n                var e = core.Calculus.diff(eq.clone(), v);\r\n                jacobian.set(j, i, e);\r\n            });\r\n        });\r\n\r\n        return jacobian;\r\n    };\r\n\r\n    core.Matrix.prototype.max = function () {\r\n        var max = new Symbol(0);\r\n        this.each(function (x) {\r\n            var e = x.abs();\r\n            if(e.gt(max))\r\n                max = e;\r\n        });\r\n        return max;\r\n    };\r\n\r\n    core.Matrix.cMatrix = function (value, vars) {\r\n        var m = new core.Matrix();\r\n        //make an initial guess\r\n        vars.forEach(function (v, i) {\r\n            m.set(i, 0, _.parse(value));\r\n        });\r\n        return m;\r\n    };\r\n\r\n    var all_functions = core.Utils.all_functions = function (arr) {\r\n        for(var i = 0, l = arr.length; i < l; i++)\r\n            if(arr[i].group !== FN)\r\n                return false;\r\n        return true;\r\n    },\r\n            cosAsinBtransform = core.Utils.cosAsinBtranform = function (symbol1, symbol2) {\r\n                var a, b;\r\n                a = symbol1.args[0];\r\n                b = symbol2.args[0];\r\n                return _.parse(format('(sin(({0})+({1}))-sin(({0})-({1})))/2', a, b));\r\n            },\r\n            cosAsinAtransform = core.Utils.cosAsinAtranform = function (symbol1, symbol2) {\r\n                //TODO: temporary fix for integrate(e^x*sin(x)*cos(x)^2).\r\n                //we technically know how to do this transform but more is needed for correct output\r\n                if(Number(symbol2.power) !== 1)\r\n                    return _.multiply(symbol1, symbol2);\r\n                var a;\r\n                a = symbol1.args[0];\r\n                return _.parse(format('(sin(2*({0})))/2', a));\r\n            },\r\n            sinAsinBtransform = core.Utils.cosAsinBtranform = function (symbol1, symbol2) {\r\n                var a, b;\r\n                a = symbol1.args[0];\r\n                b = symbol2.args[0];\r\n                return _.parse(format('(cos(({0})+({1}))-cos(({0})-({1})))/2', a, b));\r\n            },\r\n            trigTransform = core.Utils.trigTransform = function (arr) {\r\n                var map = {}, symbol, t,\r\n                        retval = new Symbol(1);\r\n                for(var i = 0, l = arr.length; i < l; i++) {\r\n                    symbol = arr[i];\r\n\r\n                    if(symbol.group === FN) {\r\n                        var fname = symbol.fname;\r\n\r\n                        if(fname === COS && map[SIN]) {\r\n\r\n                            if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = cosAsinBtransform(symbol, map[SIN]);\r\n                            }\r\n                            else {\r\n                                t = cosAsinAtransform(symbol, map[SIN]);\r\n                            }\r\n                            delete map[SIN];\r\n\r\n                            retval = _.multiply(retval, t);\r\n                        }\r\n                        else if(fname === SIN && map[COS]) {\r\n                            if(map[COS].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = cosAsinBtransform(symbol, map[COS]);\r\n                            }\r\n                            else {\r\n                                t = cosAsinAtransform(symbol, map[COS]);\r\n                            }\r\n                            delete map[COS];\r\n\r\n                            retval = _.multiply(retval, t);\r\n                        }\r\n                        else if(fname === SIN && map[SIN]) {\r\n                            if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = sinAsinBtransform(symbol, map[SIN]);\r\n                                delete map[SIN];\r\n                            }\r\n                            else {\r\n                                //This should actually be redundant code but let's put just in case\r\n                                t = _.multiply(symbol, map[SIN]);\r\n                                delete map[SIN];\r\n                            }\r\n\r\n                            retval = t;\r\n                        }\r\n                        else {\r\n                            map[fname] = symbol;\r\n                        }\r\n                    }\r\n                    else\r\n                        retval = _.multiply(retval, symbol);\r\n                }\r\n\r\n                //put back the remaining functions\r\n                for(var x in map)\r\n                    retval = _.multiply(retval, map[x]);\r\n\r\n                return retval;\r\n\r\n            };\r\n\r\n    core.Settings.integration_depth = 10;\r\n\r\n    core.Settings.max_lim_depth = 10;\r\n\r\n    var __ = core.Calculus = {\r\n\r\n        version: '1.4.6',\r\n\r\n        sum: function (fn, index, start, end) {\r\n            if(!(index.group === core.groups.S))\r\n                throw new core.exceptions.NerdamerTypeError('Index must be symbol. ' + text(index) + ' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                start = Number(start);\r\n                end = Number(end);\r\n                retval = core.Utils.block(modifier, function () {\r\n                    var f = fn.text(),\r\n                            subs = {'~': true}, //lock subs. Is this even being used?\r\n                            retval = new core.Symbol(0);\r\n\r\n                    for(var i = start; i <= end; i++) {\r\n                        subs[index] = new Symbol(i);\r\n                        var ans = _.parse(f, subs);\r\n                        retval = _.add(retval, ans);\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('sum', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        product: function (fn, index, start, end) {\r\n            if(!(index.group === core.groups.S))\r\n                throw new core.exceptions.NerdamerTypeError('Index must be symbol. ' + text(index) + ' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                retval = core.Utils.block(modifier, function () {\r\n                    start = Number(start);\r\n                    end = Number(end.multiplier);\r\n\r\n                    var f = fn.text(),\r\n                            subs = {},\r\n                            retval = new core.Symbol(1);\r\n\r\n                    for(var i = start; i <= end; i++) {\r\n                        subs[index] = new Symbol(i);\r\n                        retval = _.multiply(retval, _.parse(f, subs));\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('product', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        diff: function (symbol, wrt, nth) {\r\n            if(core.Utils.isVector(symbol)) {\r\n                var vector = new core.Vector([]);\r\n                symbol.each(function (x) {\r\n                    vector.elements.push(__.diff(x, wrt, nth));\r\n                });\r\n                return vector;\r\n            }\r\n            else if(core.Utils.isMatrix(symbol)) {\r\n                var matrix = new core.Matrix();\r\n                symbol.each(function (x, i, j) {\r\n                    matrix.set(i, j, __.diff(x, wrt, nth));\r\n                });\r\n                return matrix;\r\n            }\r\n\r\n            var d = isSymbol(wrt) ? wrt.text() : wrt;\r\n            //the nth derivative\r\n            nth = isSymbol(nth) ? nth.multiplier : nth || 1;\r\n\r\n            if(d === undefined)\r\n                d = core.Utils.variables(symbol)[0];\r\n\r\n            //unwrap sqrt\r\n            if(symbol.group === FN && symbol.fname === SQRT) {\r\n                var s = symbol.args[0],\r\n                        sp = symbol.power.clone();\r\n                //these groups go to zero anyway so why waste time?\r\n                if(s.group !== N || s.group !== P) {\r\n                    s.power = isSymbol(s.power) ? _.multiply(s.power, _.multiply(new Symbol(1 / 2)), sp) : s.power.multiply(new Frac(0.5)).multiply(sp);\r\n                    s.multiplier = s.multiplier.multiply(symbol.multiplier);\r\n                }\r\n\r\n                symbol = s;\r\n            }\r\n\r\n            if(symbol.group === FN && !isSymbol(symbol.power)) {\r\n                var a = derive(_.parse(symbol));\r\n                var b = __.diff(symbol.args[0].clone(), d);\r\n                symbol = _.multiply(a, b);//chain rule\r\n            }\r\n            else {\r\n                symbol = derive(symbol);\r\n            }\r\n\r\n            if(nth > 1) {\r\n                nth--;\r\n                symbol = __.diff(symbol, wrt, nth);\r\n            }\r\n\r\n            return symbol;\r\n\r\n            // Equivalent to \"derivative of the outside\".\r\n            function polydiff(symbol) {\r\n                if(symbol.value === d || symbol.contains(d, true)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(symbol.power);\r\n                    symbol.power = symbol.power.subtract(new Frac(1));\r\n                    if(symbol.power.equals(0)) {\r\n                        symbol = Symbol(symbol.multiplier);\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            }\r\n            \r\n            function derive(symbol) {\r\n                var g = symbol.group, a, b, cp;\r\n\r\n                if(g === N || g === S && symbol.value !== d || g === P) {\r\n                    symbol = Symbol(0);\r\n                }\r\n                else if(g === S) {\r\n                    symbol = polydiff(symbol);\r\n                }\r\n                else if(g === CB) {\r\n                    var m = symbol.multiplier.clone();\r\n                    symbol.toUnitMultiplier();\r\n                    var retval = _.multiply(product_rule(symbol), polydiff(symbol));\r\n                    retval.multiplier = retval.multiplier.multiply(m);\r\n                    return retval;\r\n                }\r\n                else if(g === FN && symbol.power.equals(1)) {\r\n                    // Table of known derivatives\r\n                    switch(symbol.fname) {\r\n                        case LOG:\r\n                            cp = symbol.clone();\r\n                            symbol = symbol.args[0].clone();//get the arguments\r\n                            symbol.power = symbol.power.negate();\r\n                            symbol.multiplier = cp.multiplier.divide(symbol.multiplier);\r\n                            break;\r\n                        case COS:\r\n                            //cos -> -sin\r\n                            symbol.fname = SIN;\r\n                            symbol.multiplier.negate();\r\n                            break;\r\n                        case SIN:\r\n                            //sin -> cos\r\n                            symbol.fname = COS;\r\n                            break;\r\n                        case TAN:\r\n                            //tan -> sec^2\r\n                            symbol.fname = SEC;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SEC:\r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, TAN);\r\n                            break;\r\n                        case CSC:\r\n                            symbol = qdiff(symbol, '-cot');\r\n                            break;\r\n                        case COT:\r\n                            symbol.fname = CSC;\r\n                            symbol.multiplier.negate();\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case ASIN:\r\n                            symbol = _.parse('(sqrt(1-(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case ACOS:\r\n                            symbol = _.parse('-(sqrt(1-(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case ATAN:\r\n                            symbol = _.parse('(1+(' + text(symbol.args[0]) + ')^2)^(-1)');\r\n                            break;\r\n                        case ABS:\r\n                            m = symbol.multiplier.clone();\r\n                            symbol.toUnitMultiplier();\r\n                            //depending on the complexity of the symbol it's easier to just parse it into a new symbol\r\n                            //this should really be readdressed soon\r\n                            b = symbol.args[0].clone();\r\n                            b.toUnitMultiplier();\r\n                            symbol = _.parse(inBrackets(text(symbol.args[0])) + '/abs' + inBrackets(text(b)));\r\n                            symbol.multiplier = m;\r\n                            break;\r\n                        case 'parens':\r\n                            //see product rule: f'.g goes to zero since f' will return zero. This way we only get back\r\n                            //1*g'\r\n                            symbol = Symbol(1);\r\n                            break;\r\n                        case 'cosh':\r\n                            //cosh -> -sinh\r\n                            symbol.fname = 'sinh';\r\n                            break;\r\n                        case 'sinh':\r\n                            //sinh -> cosh\r\n                            symbol.fname = 'cosh';\r\n                            break;\r\n                        case TANH:\r\n                            //tanh -> sech^2\r\n                            symbol.fname = SECH;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SECH:\r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, '-tanh');\r\n                            break;\r\n                        case CSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-coth(' + arg + ')*csch(' + arg + ')');\r\n                            break;\r\n                        case COTH:\r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-csch(' + arg + ')^2');\r\n                            break;\r\n                        case 'asinh':\r\n                            symbol = _.parse('(sqrt(1+(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case 'acosh':\r\n                            symbol = _.parse('(sqrt(-1+(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case 'atanh':\r\n                            symbol = _.parse('(1-(' + text(symbol.args[0]) + ')^2)^(-1)');\r\n                            break;\r\n                        case ASECH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/(' + arg + ')^2-1)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACOTH:\r\n                            symbol = _.parse('-1/((' + symbol.args[0] + ')^2-1)');\r\n                            break;\r\n                        case ACSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/(' + arg + ')^2+1)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ASEC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('1/(sqrt(1-1/(' + arg + ')^2)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACSC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1-1/(' + arg + ')^2)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACOT:\r\n                            symbol = _.parse('-1/((' + symbol.args[0] + ')^2+1)');\r\n                            break;\r\n                        case 'S':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('sin((pi*(' + arg + ')^2)/2)');\r\n                            break;\r\n                        case 'C':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('cos((pi*(' + arg + ')^2)/2)');\r\n                            break;\r\n                        case 'Si':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sin(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Shi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sinh(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Ci':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cos(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Chi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cosh(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Ei':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('e^(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Li':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('1/' + Settings.LOG + '(' + arg + ')');\r\n                            break;\r\n                        case 'erf':\r\n                            symbol = _.parse('(2*e^(-(' + symbol.args[0] + ')^2))/sqrt(pi)');\r\n                            break;\r\n                        case 'atan2':\r\n                            var x_ = String(symbol.args[0]),\r\n                                    y_ = String(symbol.args[1]);\r\n                            symbol = _.parse('(' + y_ + ')/((' + y_ + ')^2+(' + x_ + ')^2)');\r\n                            break;\r\n                        case 'sign':\r\n                            symbol = new Symbol(0);\r\n                            break;\r\n                        case 'sinc':\r\n                            symbol = _.parse(format('(({0})*cos({0})-sin({0}))*({0})^(-2)', symbol.args[0]));\r\n                            break;\r\n                        case Settings.LOG10:\r\n                            symbol = _.parse('1/((' + symbol.args[0] + ')*' + Settings.LOG + '(10))');\r\n                            break;\r\n                        default:\r\n                            symbol = _.symfunction('diff', [symbol, wrt]);\r\n                    }\r\n                }\r\n                else if(g === EX || g === FN && isSymbol(symbol.power)) {\r\n                    var value;\r\n                    if(g === EX) {\r\n                        value = symbol.value;\r\n                    }\r\n                    else if(g === FN && symbol.contains(d)) {\r\n                        value = symbol.fname + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    else {\r\n                        value = symbol.value + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    a = _.multiply(_.parse(LOG + inBrackets(value)), symbol.power.clone());\r\n                    b = __.diff(_.multiply(_.parse(LOG + inBrackets(value)), symbol.power.clone()), d);\r\n                    symbol = _.multiply(symbol, b);\r\n                }\r\n                else if(g === FN && !symbol.power.equals(1)) {\r\n                    b = symbol.clone();\r\n                    b.toLinear();\r\n                    b.toUnitMultiplier();\r\n                    symbol = _.multiply(polydiff(symbol.clone()), derive(b));\r\n                }\r\n                else if(g === CP || g === PL) {\r\n                    // Note: Do not use `parse` since this puts back the sqrt and causes a bug as in #610. Use clone.\r\n                    var c = symbol.clone();\r\n                    var result = new Symbol(0);\r\n                    for(var x in symbol.symbols) {\r\n                        result = _.add(result, __.diff(symbol.symbols[x].clone(), d));\r\n                    }\r\n                    symbol = _.multiply(polydiff(c), result);\r\n                }\r\n\r\n                symbol.updateHash();\r\n\r\n                return symbol;\r\n            }\r\n            ;\r\n\r\n            function qdiff(symbol, val, altVal) {\r\n                return _.multiply(symbol, _.parse(val + inBrackets(altVal || text(symbol.args[0]))));\r\n            }\r\n            ;\r\n\r\n            function product_rule(symbol) {\r\n                //grab all the symbols within the CB symbol\r\n                var symbols = symbol.collectSymbols(),\r\n                        result = new Symbol(0),\r\n                        l = symbols.length;\r\n                //loop over all the symbols\r\n                for(var i = 0; i < l; i++) {\r\n                    var df = __.diff(symbols[i].clone(), d);\r\n                    for(var j = 0; j < l; j++) {\r\n                        //skip the symbol of which we just pulled the derivative\r\n                        if(i !== j) {\r\n                            //multiply out the remaining symbols\r\n                            df = _.multiply(df, symbols[j].clone());\r\n                        }\r\n                    }\r\n                    //add the derivative to the result\r\n                    result = _.add(result, df);\r\n                }\r\n                return result; //done\r\n            }\r\n            ;\r\n        },\r\n        integration: {\r\n            u_substitution: function (symbols, dx) {\r\n                function try_combo(a, b, f) {\r\n                    var d = __.diff(b, dx);\r\n                    var q = f ? f(a, b) : _.divide(a.clone(), d);\r\n                    if(!q.contains(dx, true))\r\n                        return q;\r\n                    return null;\r\n                }\r\n                function do_fn_sub(fname, arg) {\r\n                    var subbed = __.integrate(_.symfunction(fname, [new Symbol(u)]), u, 0);\r\n                    subbed = subbed.sub(new Symbol(u), arg);\r\n                    subbed.updateHash();\r\n                    return subbed;\r\n                }\r\n\r\n                var a = symbols[0].clone(),\r\n                        b = symbols[1].clone(),\r\n                        g1 = a.group,\r\n                        g2 = b.group,\r\n                        //may cause problems if person is using this already. Will need\r\n                        //to find algorithm for detecting conflict\r\n                        u = '__u__',\r\n                        Q;\r\n                if(g1 === FN && g2 !== FN) {\r\n                    //e.g. 2*x*cos(x^2)\r\n                    var arg = a.args[0];\r\n                    Q = try_combo(b, arg.clone());\r\n                    if(Q)\r\n                        return _.multiply(Q, do_fn_sub(a.fname, arg));\r\n                    Q = try_combo(b, a);\r\n                    if(Q) {\r\n                        return __.integration.poly_integrate(a);\r\n                    }\r\n                }\r\n                else if(g2 === FN && g1 !== FN) {\r\n                    //e.g. 2*(x+1)*cos((x+1)^2\r\n                    var arg = b.args[0];\r\n                    Q = try_combo(a, arg.clone());\r\n                    if(Q)\r\n                        return _.multiply(Q, do_fn_sub(b.fname, arg));\r\n                }\r\n                else if(g1 === FN && g2 === FN) {\r\n                    Q = try_combo(a.clone(), b.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(b.clone(), a.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                }\r\n                else if(g1 === EX && g2 !== EX) {\r\n                    var p = a.power;\r\n                    Q = try_combo(b, p.clone());\r\n                    if(!Q) {\r\n                        //one more try\r\n                        var dc = __.integration.decompose_arg(p.clone(), dx);\r\n                        //consider the possibility of a^x^(n-1)*x^n dx\r\n                        var xp = __.diff(dc[2].clone(), dx);\r\n                        var dc2 = __.integration.decompose_arg(xp.clone(), dx);\r\n                        //if their powers equal, so if dx*p == b\r\n                        if(_.multiply(dc[1], dc2[1]).power.equals(b.power)) {\r\n                            var m = _.divide(dc[0].clone(), dc2[0].clone());\r\n\r\n                            var new_val = _.multiply(m.clone(), _.pow(new Symbol(a.value), _.multiply(dc[0], new Symbol(u))));\r\n                            new_val = _.multiply(new_val, new Symbol(u));\r\n                            return __.integration.by_parts(new_val, u, 0, {}).sub(u, dc[1].clone());\r\n                        }\r\n\r\n                    }\r\n                    var integrated = __.integrate(a.sub(p.clone(), new Symbol(u)), u, 0),\r\n                            retval = _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n\r\n\r\n                    return retval;\r\n                }\r\n                else if(g2 === EX && g1 !== EX) {\r\n                    var p = b.power;\r\n                    Q = try_combo(a, p.clone());\r\n                    var integrated = __.integrate(b.sub(p, new Symbol(u)), u, 0);\r\n                    return _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n                }\r\n                else if(a.isComposite() || b.isComposite()) {\r\n                    var f = function (a, b) {\r\n                        var d = __.diff(b, dx);\r\n                        var A = core.Algebra.Factor.factor(a),\r\n                                B = core.Algebra.Factor.factor(d);\r\n                        var q = _.divide(A, B);\r\n                        return q;\r\n                    };\r\n                    var f1 = a.isComposite() ? a.clone().toLinear() : a.clone(),\r\n                            f2 = b.isComposite() ? b.clone().toLinear() : b.clone();\r\n                    Q = try_combo(f1.clone(), f2.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(f2.clone(), f1.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(a), Q);\r\n                }\r\n            },\r\n            //simple integration of a single polynomial x^(n+1)/(n+1)\r\n            poly_integrate: function (x) {\r\n                var p = x.power.toString(),\r\n                        m = x.multiplier.toDecimal(),\r\n                        s = x.toUnitMultiplier().toLinear();\r\n                if(Number(p) === -1) {\r\n                    return _.multiply(new Symbol(m), _.symfunction(LOG, [s]));\r\n                }\r\n                return _.parse(format('({0})*({1})^(({2})+1)/(({2})+1)', m, s, p));\r\n            },\r\n            //If we're just spinning wheels we want to stop. This is why we \r\n            //wrap integration in a try catch block and call this to stop.\r\n            stop: function (msg) {\r\n                msg = msg || 'Unable to compute integral!';\r\n                core.Utils.warn(msg);\r\n                throw new NoIntegralFound(msg);\r\n            },\r\n            partial_fraction: function (input, dx, depth, opt) {\r\n                //TODO: This whole thing needs to be rolled into one but for now I'll leave it as two separate parts\r\n                if(!isSymbol(dx))\r\n                    dx = _.parse(dx);\r\n\r\n                var result, partial_fractions;\r\n                result = new Symbol(0);\r\n                partial_fractions = core.Algebra.PartFrac.partfrac(input, dx);\r\n\r\n                if(partial_fractions.group === CB && partial_fractions.isLinear()) {\r\n                    //perform a quick check to make sure that all partial fractions are linear\r\n                    partial_fractions.each(function (x) {\r\n                        if(!x.isLinear())\r\n                            __.integration.stop();\r\n                    });\r\n                    partial_fractions.each(function (x) {\r\n                        result = _.add(result, __.integrate(x, dx, depth, opt));\r\n                    });\r\n                }\r\n                else {\r\n                    result = _.add(result, __.integrate(partial_fractions, dx, depth, opt));\r\n                }\r\n                return result;\r\n            },\r\n            get_udv: function (symbol) {\r\n                var parts = [[/*L*/], [/*I*/], [/*A*/], [/*T*/], [/*E*/]];\r\n                //first we sort them \r\n                var setSymbol = function (x) {\r\n                    var g = x.group;\r\n                    if(g === FN) {\r\n                        var fname = x.fname;\r\n                        if(core.Utils.in_trig(fname) || core.Utils.in_htrig(fname))\r\n                            parts[3].push(x);\r\n                        else if(core.Utils.in_inverse_trig(fname))\r\n                            parts[1].push(x);\r\n                        else if(fname === LOG)\r\n                            parts[0].push(x);\r\n                        else {\r\n                            __.integration.stop();\r\n                        }\r\n                    }\r\n                    else if(g === S || x.isComposite() && x.isLinear() || g === CB && x.isLinear()) {\r\n                        parts[2].push(x);\r\n                    }\r\n                    else if(g === EX || x.isComposite() && !x.isLinear())\r\n                        parts[4].push(x);\r\n                    else\r\n                        __.integration.stop();\r\n                };\r\n\r\n                if(symbol.group === CB)\r\n                    symbol.each(function (x) {\r\n                        setSymbol(Symbol.unwrapSQRT(x, true));\r\n                    });\r\n                else\r\n                    setSymbol(symbol);\r\n                var u, dv = new Symbol(1);\r\n                //compile u and dv\r\n                for(var i = 0; i < 5; i++) {\r\n                    var part = parts[i], t,\r\n                            l = part.length;\r\n                    if(l > 0) {\r\n                        if(l > 1) {\r\n                            t = new Symbol(1);\r\n                            for(var j = 0; j < l; j++)\r\n                                t = _.multiply(t, part[j].clone());\r\n                        }\r\n                        else\r\n                            t = part[0].clone();\r\n\r\n                        if(!u) {\r\n                            u = t;//the first u encountered gets chosen\r\n                            u.multiplier = u.multiplier.multiply(symbol.multiplier); //the first one gets the mutliplier\r\n                        }\r\n                        else\r\n                            dv = _.multiply(dv, t); //everything else belongs to dv\r\n                    }\r\n                }\r\n\r\n                return [u, dv];\r\n            },\r\n\r\n            trig_sub: function (symbol, dx, depth, opt, parts, symbols) {\r\n                parts = parts || __.integration.decompose_arg(symbol.clone().toLinear(), dx);\r\n                var b = parts[3],\r\n                        ax = parts[2],\r\n                        a = parts[0],\r\n                        x = parts[1];\r\n                if(x.power.equals(2) && a.greaterThan(0)) {\r\n                    //use tan(x)\r\n                    var t = core.Utils.getU(symbol), //get an appropriate u\r\n                            u = _.parse(TAN + inBrackets(t)), //u\r\n                            du = _.parse(SEC + inBrackets(t) + '^2'), //du\r\n                            f = _.multiply(symbol.sub(x, u), du);\r\n                    var integral = __.integrate(f, t, depth, opt).sub(u, x);\r\n                    core.Utils.clearU(u);\r\n                    return integral;\r\n                }\r\n            },\r\n\r\n            by_parts: function (symbol, dx, depth, o) {\r\n                o.previous = o.previous || [];\r\n                var udv, u, dv, du, v, vdu, uv, retval, integral_vdu, m, c, vdu_s;\r\n                //first LIATE\r\n                udv = __.integration.get_udv(symbol);\r\n                u = udv[0];\r\n                dv = udv[1];\r\n                du = Symbol.unwrapSQRT(_.expand(__.diff(u.clone(), dx)), true);\r\n                c = du.clone().stripVar(dx);\r\n                //strip any coefficients\r\n                du = _.divide(du, c.clone());\r\n                v = __.integrate(dv.clone(), dx, depth || 0);\r\n                vdu = _.multiply(v.clone(), du);\r\n                vdu_s = vdu.toString();\r\n                //currently only supports e^x*(some trig)\r\n                if(o.previous.indexOf(vdu_s) !== -1 && (core.Utils.in_trig(u.fname)) && dv.isE()) {\r\n                    //We're going to exploit the fact that vdu can never be constant\r\n                    //to work out way out of this cycle. We'll return the length of\r\n                    //the this.previous array until we're back at level one\r\n                    o.is_cyclic = true;\r\n                    //return the integral. \r\n                    return new Symbol(1);\r\n                }\r\n                else\r\n                    o.previous.push(vdu_s);\r\n\r\n                uv = _.multiply(u, v);\r\n                //clear the multiplier so we're dealing with a bare integral\r\n                m = vdu.multiplier.clone();\r\n                vdu.toUnitMultiplier();\r\n                integral_vdu = _.multiply(__.integrate(vdu.clone(), dx, depth, o), c);\r\n                integral_vdu.multiplier = integral_vdu.multiplier.multiply(m);\r\n                retval = _.subtract(uv, integral_vdu);\r\n                //we know that there cannot be constants so they're a holdover from a cyclic integral\r\n                if(o.is_cyclic) {\r\n                    //start popping the previous stack so we know how deep in we are\r\n                    o.previous.pop();\r\n                    if(o.previous.length === 0) {\r\n                        retval = _.expand(retval);\r\n                        var rem = new Symbol(0);\r\n                        retval.each(function (x) {\r\n                            if(!x.contains(dx))\r\n                                rem = _.add(rem, x.clone());\r\n                        });\r\n                        //get the actual uv\r\n                        retval = _.divide(_.subtract(retval, rem.clone()), _.subtract(new Symbol(1), rem));\r\n                    }\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            /*\r\n             * dependents: [Solve, integrate]\r\n             */\r\n            decompose_arg: core.Utils.decompose_fn\r\n        },\r\n        //TODO: nerdamer.integrate('-e^(-a*t)*sin(t)', 't') -> gives incorrect output\r\n        integrate: function (original_symbol, dt, depth, opt) {\r\n            //assume integration wrt independent variable if expression only has one variable\r\n            if(!dt) {\r\n                var vars = core.Utils.variables(original_symbol);\r\n                if(vars.length === 1)\r\n                    dt = vars[0];\r\n                //defaults to x\r\n                dt = dt || 'x';\r\n            }\r\n            //add support for integrating vectors\r\n            if(core.Utils.isVector(original_symbol)) {\r\n                var vector = new core.Vector([]);\r\n                original_symbol.each(function (x) {\r\n                    vector.elements.push(__.integrate(x, dt));\r\n                });\r\n                return vector;\r\n            }\r\n            if(!isNaN(dt))\r\n                _.error('variable expected but received ' + dt);\r\n            //get rid of constants right away\r\n            if(original_symbol.isConstant(true))\r\n                return _.multiply(original_symbol.clone(), _.parse(dt));\r\n\r\n            //configurations options for integral. This is needed for tracking extra options\r\n            //e.g. cyclic integrals or additional settings\r\n            opt = opt || {};\r\n            return core.Utils.block('PARSE2NUMBER', function () {\r\n                //make a note of the original symbol. Set only if undefined\r\n                depth = depth || 0;\r\n                var dx = isSymbol(dt) ? dt.toString() : dt,\r\n                        //we don't want the symbol in sqrt form. x^(1/2) is prefererred\r\n                        symbol = Symbol.unwrapSQRT(original_symbol.clone(), true),\r\n                        g = symbol.group,\r\n                        retval;\r\n\r\n                try {\r\n                    //We stop integration after x amount of recursive calls\r\n                    if(++depth > core.Settings.integration_depth)\r\n                        __.integration.stop('Maximum depth reached. Exiting!');\r\n\r\n                    //constants. We first eliminate anything that doesn't have dx. Everything after this has \r\n                    //to have dx or else it would have been taken care of below\r\n                    if(!symbol.contains(dx, true)) {\r\n                        retval = _.multiply(symbol.clone(), _.parse(dx));\r\n                    }\r\n                    //e.g. 2*x\r\n                    else if(g === S) {\r\n                        retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                    }\r\n                    else if(g === EX) {\r\n                        if(symbol.previousGroup === FN && !(symbol.fname === 'sqrt' || symbol.fname === Settings.PARENTHESIS))\r\n                            __.integration.stop();\r\n                        //check the base\r\n                        if(symbol.contains(dx) && symbol.previousGroup !== FN) {\r\n                            //if the symbol also contains dx then we stop since we currently \r\n                            //don't know what to do with it e.g. x^x\r\n                            if(symbol.power.contains(dx))\r\n                                __.integration.stop();\r\n                            else {\r\n                                var t = __.diff(symbol.clone().toLinear(), dx);\r\n                                if(t.contains(dx))\r\n                                    __.integration.stop();\r\n                                //since at this point it's the base only then we do standard single poly integration\r\n                                //e.g. x^y\r\n                                retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                            }\r\n                        }\r\n                        //e.g. a^x or 9^x\r\n                        else {\r\n                            var a = __.diff(symbol.power.clone(), dx);\r\n                            if(a.contains(dx)) {\r\n                                var aa = a.stripVar(dx),\r\n                                        x = _.divide(a.clone(), aa.clone());\r\n                                if(x.group === S && x.isLinear()) {\r\n                                    aa.multiplier = aa.multiplier.divide(new Frac(2));\r\n                                    return _.parse(format('({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))', aa, dx, symbol.multiplier));\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            if(symbol.isE()) {\r\n                                if(a.isLinear())\r\n                                    retval = symbol;\r\n                                else {\r\n                                    if(a.isE() && a.power.group === S && a.power.power.equals(1))\r\n                                        retval = _.multiply(_.symfunction('Ei', [symbol.power.clone()]), symbol.power);\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                            }\r\n                            else {\r\n                                var d = _.symfunction(LOG, [_.parse(symbol.value)]);\r\n                                retval = _.divide(symbol, d);\r\n                            }\r\n                            retval = _.divide(retval, a);\r\n                        }\r\n                    }\r\n                    else if(symbol.isComposite() && symbol.isLinear()) {\r\n                        var m = _.parse(symbol.multiplier);\r\n                        symbol.toUnitMultiplier();\r\n                        retval = new Symbol(0);\r\n                        symbol.each(function (x) {\r\n                            retval = _.add(retval, __.integrate(x, dx, depth));\r\n                        });\r\n                        retval = _.multiply(m, retval);\r\n                    }\r\n                    else if(g === CP) {\r\n                        if(symbol.power.greaterThan(1))\r\n                            symbol = _.expand(symbol);\r\n                        if(symbol.power.equals(1)) {\r\n                            retval = new Symbol(0);\r\n                            symbol.each(function (x) {\r\n                                retval = _.add(retval, __.integrate(x, dx, depth));\r\n                            }, true);\r\n                        }\r\n                        else {\r\n                            var p = Number(symbol.power),\r\n                                    m = symbol.multiplier.clone();//temporarily remove the multiplier\r\n                            symbol.toUnitMultiplier();\r\n                            var //below we consider the form ax+b\r\n                                    fn = symbol.clone().toLinear(), //get just the pure function without the power\r\n                                    decomp = __.integration.decompose_arg(fn, dx),\r\n                                    //I have no idea why I used bx+a and not ax+b. TODO change this to something that makes sense\r\n                                    b = decomp[3],\r\n                                    ax = decomp[2],\r\n                                    a = decomp[0],\r\n                                    x = decomp[1];\r\n                            if(p === -1 && x.group !== PL && x.power.equals(2)) {\r\n                                var b_is_positive = isInt(b) ? b > 0 : true;\r\n                                //we can now check for atan\r\n                                if(x.group === S && x.power.equals(2) && b_is_positive) {\r\n                                    ////then we have atan\r\n                                    //abs is redundants since the sign appears in both denom and num.\r\n                                    var unwrapAbs = function (s) {\r\n                                        var result = new Symbol(1);\r\n                                        s.each(function (x) {\r\n                                            result = _.multiply(result, x.fname === 'abs' ? x.args[0] : x);\r\n                                        });\r\n                                        return result;\r\n                                    };\r\n                                    var A = a.clone(),\r\n                                            B = b.clone();\r\n                                    A = _.pow(A, new Symbol(1 / 2));\r\n                                    B = _.pow(B, new Symbol(1 / 2));\r\n                                    //unwrap abs\r\n\r\n                                    var d = _.multiply(unwrapAbs(B), unwrapAbs(A)),\r\n                                            f = _.symfunction(ATAN, [_.divide(_.multiply(a, x.toLinear()), d.clone())]);\r\n                                    retval = _.divide(f, d);\r\n                                }\r\n                                else if(x.group === S && x.isLinear()) {\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                }\r\n                                else {\r\n                                    //1/(x^4+1)\r\n                                    if(x.power.equals(4)) {\r\n                                        //https://www.freemathhelp.com/forum/threads/55678-difficult-integration-int-1-(1-x-4)-dx\r\n                                        var A, B, C, D, E, F, f1, f2, f3, f4, L1, L2;\r\n                                        var br = inBrackets;\r\n                                        //apply rule: ax^4+b = (√ax^2+√2∜a∜bx+√b)(√ax^2-√2∜a∜bx+√b)\r\n                                        //get quadratic factors\r\n                                        A = _.parse(SQRT + br(a) + '*' + dx + '^2');\r\n                                        B = _.parse(SQRT + br(2) + '*' + br(a) + '^' + br('1/4') + '*' + br(b) + '^' + br('1/4') + '*' + dx);\r\n                                        C = _.parse(SQRT + br(b));\r\n                                        f1 = _.add(_.add(A.clone(), B.clone()), C.clone());\r\n                                        f2 = _.add(_.subtract(A, B), C);\r\n                                        //calculate numerators: [D+E, D-E] -> [√2*b^(3/4)+√b∜ax, √2*b^(3/4)-√b∜ax]\r\n                                        D = _.parse(SQRT + br(2) + '*' + br(b) + '^' + br('3/4'));\r\n                                        E = _.parse(SQRT + br(b) + '*' + br(b) + '^' + br('1/4') + '*' + dx);\r\n                                        //let F = 2b√2∜b\r\n                                        F = _.parse(2 + '*' + br(b) + '*' + SQRT + br(2) + '*' + br(b) + '^' + br('1/4'));\r\n                                        //calculate the factors\r\n                                        L1 = _.divide(_.subtract(D.clone(), E.clone()), _.multiply(F.clone(), f2));\r\n                                        L2 = _.divide(_.add(D, E), _.multiply(F, f1.clone()));\r\n                                        retval = _.add(\r\n                                                __.integrate(L1, dx, depth, opt),\r\n                                                __.integrate(L2, dx, depth, opt)\r\n                                                );\r\n                                    }\r\n                                    else\r\n                                        //let's try partial fractions\r\n                                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                }\r\n                            }\r\n                            else if(p === -1 / 2) {\r\n                                //detect asin and atan\r\n                                if(x.group === S && x.power.equals(2)) {\r\n                                    if(ax.multiplier.lessThan(0) && !b.multiplier.lessThan(0)) {\r\n                                        a.negate();\r\n                                        //it's asin\r\n                                        if(b.isConstant() && a.isConstant()) {\r\n                                            var d = _.symfunction(SQRT, [a.clone()]),\r\n                                                    d2 = _.symfunction(SQRT, [_.multiply(a.clone(), b)]);\r\n                                            retval = _.divide(_.symfunction(ASIN, [_.divide(ax.toLinear(), d2)]), d);\r\n                                        }\r\n                                        //I'm not sure about this one. I'm trusting Wolfram Alpha here\r\n                                        else {\r\n                                            var sqrt_a = _.symfunction(SQRT, [a]),\r\n                                                    sqrt_ax = _.multiply(sqrt_a.clone(), x.clone().toLinear());\r\n                                            retval = _.divide(_.symfunction(ATAN, [_.divide(sqrt_ax, _.symfunction(SQRT, [fn.clone()]))]), sqrt_a);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        /*WHAT HAPPENS HERE???? e.g. integrate(3/sqrt(-a+b*x^2),x) or integrate(3/sqrt(a+b*x^2),x)*/\r\n                                        __.integration.stop();\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //This would be a case like 1/(sqrt(1-x^3) or 1/(1-(x+1)^2)\r\n                                    __.integration.stop();\r\n                                }\r\n                            }\r\n                            else {\r\n                                if(x.isLinear() && x.group !== PL)\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                else if(x.power.equals(2) && a.greaterThan(0)) {\r\n                                    var sqa, sqb, aob, bsqi, n, integral, u, v, uv;\r\n                                    //1/(a*x^2+b^2)^n\r\n                                    //strip the value of b so b = 1\r\n                                    sqa = _.parse(SQRT + inBrackets(a)); //strip a so b = 1\r\n                                    sqb = _.parse(SQRT + inBrackets(b));\r\n                                    aob = _.multiply(sqa.clone(), sqb.clone()).invert();\r\n                                    bsqi = _.pow(b, new Symbol(symbol.power));\r\n                                    uv = core.Utils.getU(symbol);\r\n                                    u = _.multiply(aob, x.clone().toLinear());\r\n                                    v = _.parse(ATAN + inBrackets(u));\r\n                                    //the conversion will be 1+tan(x)^2 -> sec(x)^2\r\n                                    //since the denominator is now (sec(x)^2)^n and the numerator is sec(x)^2 \r\n                                    //then the remaining sec will be (n-1)*2;\r\n                                    var n = (Math.abs(symbol.power) - 1) * 2;\r\n                                    //1/sec(x)^n can now be converted to cos(x)^n and we can pull the integral of that\r\n                                    var integral = __.integrate(_.parse(COS + inBrackets(uv) + '^' + n));\r\n                                    core.Utils.clearU(uv);\r\n                                    return _.multiply(integral.sub(uv, v), bsqi);\r\n                                }\r\n                                else {\r\n                                    if(symbol.group !== CB && !symbol.power.lessThan(0)) {\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n                                    else {\r\n                                        var f = symbol.clone().toLinear();\r\n                                        var factored = core.Algebra.Factor.factor(f);\r\n                                        var was_factored = factored.toString() !== f.toString();\r\n                                        if(core.Algebra.degree(f, _.parse(dx)).equals(2) && !was_factored) {\r\n                                            try {\r\n                                                var f1, fx, u, sq;\r\n                                                sq = core.Algebra.sqComplete(f, dx);\r\n                                                u = core.Utils.getU(f);\r\n                                                f1 = sq.f.sub(sq.a, u);\r\n                                                fx = _.pow(f1, _.parse(symbol.power));\r\n                                                retval = __.integrate(fx, u).sub(u, sq.a);\r\n                                            }\r\n                                            catch(e) {\r\n                                                __.integration.stop();\r\n                                            }\r\n                                        }\r\n                                        else\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                    }\r\n                                }\r\n                            }\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === FN) {\r\n                        var arg = symbol.args[0],\r\n                                m = symbol.multiplier.clone();\r\n                        symbol.toUnitMultiplier();\r\n                        var decomp = __.integration.decompose_arg(arg, dx);\r\n                        //easies way I can think of to get the coefficient and to make sure\r\n                        //that the symbol is linear wrt dx. I'm not actually trying to get the \r\n                        //derivative\r\n                        var a = decomp[0],\r\n                                x = decomp[1],\r\n                                fname = symbol.fname;\r\n                        //log is a special case that can be handled with integration by parts\r\n                        if(fname === LOG || (fname === ASIN || fname === ACOS || fname === ATAN && x.isLinear())) {\r\n                            /*integration by parts */\r\n                            var p = symbol.power.toString();\r\n                            if(isInt(p))\r\n                                depth = depth - p; //it needs more room to find the integral\r\n\r\n                            if(!arg.isComposite())\r\n                                retval = _.multiply(_.parse(m), __.integration.by_parts(symbol, dx, depth, opt));\r\n                            else {\r\n                                //integral u du\r\n                                var u = core.Utils.getU(symbol);\r\n                                var f = _.pow(_.parse(LOG + inBrackets(u)), new Symbol(p));\r\n                                var du = __.diff(arg, dx);\r\n                                var u_du = _.multiply(f, du);\r\n                                var integral = __.integrate(u_du, u, depth, opt);\r\n                                retval = _.multiply(_.parse(m), integral.sub(u, arg));\r\n                            }\r\n\r\n                        }\r\n                        else if(fname === TAN && symbol.power.lessThan(0)) {\r\n                            //convert to cotangent\r\n                            var sym = symbol.clone();\r\n                            sym.power.negate();\r\n                            sym.fname = COT;\r\n                            return _.multiply(_.parse(m), __.integrate(sym, dx, depth));\r\n                        }\r\n                        else {\r\n                            if(!a.contains(dx, true) && symbol.isLinear()) { //perform a deep search for safety\r\n                                //first handle the special cases \r\n                                if(fname === ABS) {\r\n                                    //REVISIT **TODO**\r\n                                    var x = _.divide(arg.clone(), a.clone());\r\n                                    if(x.group === S && !x.power.lessThan(0)) {\r\n                                        if(core.Utils.even(x.power)) {\r\n                                            retval = __.integrate(arg, dx, depth);\r\n                                        }\r\n                                        else {\r\n                                            var integrated = __.integrate(x, dx, depth);\r\n                                            integrated.power = integrated.power.subtract(new Frac(1));\r\n                                            retval = _.multiply(_.multiply(_.symfunction(ABS, [x.toLinear()]), integrated), a);\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                                else {\r\n                                    var ag = symbol.args[0].group,\r\n                                            decomposed = __.integration.decompose_arg(arg, dx);\r\n\r\n                                    if(!(ag === CP || ag === S || ag === CB) || !decomposed[1].power.equals(1) || arg.hasFunc())\r\n                                        __.integration.stop();\r\n                                    /**TODO**/ //ASIN, ACOS, ATAN\r\n                                    switch(fname) {\r\n                                        case COS:\r\n                                            retval = _.symfunction(SIN, [arg]);\r\n                                            break;\r\n                                        case SIN:\r\n                                            retval = _.symfunction(COS, [arg]);\r\n                                            retval.negate();\r\n                                            break;\r\n                                        case TAN:\r\n                                            retval = _.parse(format(Settings.LOG + '(sec({0}))', arg));\r\n                                            break;\r\n                                        case SEC:\r\n                                            retval = _.parse(format(Settings.LOG + '(tan({0})+sec({0}))', arg));\r\n                                            break;\r\n                                        case CSC:\r\n                                            retval = _.parse(format('-' + Settings.LOG + '(csc({0})+cot({0}))', arg));\r\n                                            break;\r\n                                        case COT:\r\n                                            retval = _.parse(format(Settings.LOG + '(sin({0}))', arg));\r\n                                            break;\r\n                                        case SINH:\r\n                                            retval = _.symfunction(COSH, [arg]);\r\n                                            break;\r\n                                        case COSH:\r\n                                            retval = _.symfunction(SINH, [arg]);\r\n                                            break;\r\n                                        case TANH:\r\n                                            retval = _.parse(format(Settings.LOG + '(cosh({0}))', arg));\r\n                                            break;\r\n                                        case ASEC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOT:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                            //inverse htrig\r\n                                        case ASECH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSCH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOTH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                            //end inverse htrig\r\n                                            //htrigh\r\n                                        case SECH:\r\n                                            retval = _.parse(format('atan(sinh({0}))', arg));\r\n                                            break;\r\n                                        case CSCH:\r\n                                            retval = _.parse(format(Settings.LOG + '(tanh(({0})/2))', arg));\r\n                                            break;\r\n                                        case COTH:\r\n                                            retval = _.parse(format(Settings.LOG + '(sinh({0}))', arg));\r\n                                            break;\r\n                                            //end htrig\r\n                                        case EXP:\r\n                                            retval = __.integrate(_.parse(format('e^({0})', arg)), dx, depth);\r\n                                            break;\r\n                                        case 'S':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)', a_, b_, x));\r\n                                            break;\r\n                                        case 'C':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)', a_, b_, x_));\r\n                                            break;\r\n                                        case 'erf':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            retval = _.parse(format('e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))', a_, x_, arg));\r\n                                            break;\r\n                                        case 'sign':\r\n                                            retval = _.multiply(symbol.clone(), arg.clone());\r\n                                            break;\r\n                                        default:\r\n                                            __.integration.stop();\r\n                                    }\r\n\r\n                                    retval = _.divide(retval, a);\r\n                                }\r\n                            }\r\n                            else if(x.isLinear()) {\r\n                                if(fname === COS || fname === SIN) {\r\n                                    var p = Number(symbol.power);\r\n                                    //check to see if it's negative and then just transform it to sec or csc\r\n                                    if(p < 0) {\r\n                                        symbol.fname = fname === SIN ? CSC : SEC;\r\n                                        symbol.invert().updateHash();\r\n                                        retval = __.integrate(symbol, dx, depth);\r\n                                    }\r\n                                    else {\r\n                                        var arg = symbol.args[0],\r\n                                                rd = symbol.clone(), //cos^(n-1)\r\n                                                rd2 = symbol.clone(), //cos^(n-2)\r\n                                                q = new Symbol((p - 1) / p), //\r\n                                                na = _.multiply(a.clone(), new Symbol(p)).invert(); //1/(n*a)\r\n                                        rd.power = rd.power.subtract(new Frac(1));\r\n                                        rd2.power = rd2.power.subtract(new Frac(2));\r\n\r\n                                        var t = _.symfunction(fname === COS ? SIN : COS, [arg.clone()]);\r\n                                        if(fname === SIN)\r\n                                            t.negate();\r\n                                        retval = _.add(_.multiply(_.multiply(na, rd), t), _.multiply(q, __.integrate(_.parse(rd2), dx, depth)));\r\n                                    }\r\n                                }\r\n                                //tan(x)^n or cot(x)^n\r\n                                else if(fname === TAN || fname === COT) {\r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    if(symbol.args[0].isLinear(dx)) {\r\n                                        var n = symbol.power.subtract(new Frac(1)).toString(),\r\n                                                r = symbol.clone().toUnitMultiplier(),\r\n                                                w = _.parse(format((fname === COT ? '-' : '') + '1/({2}*{0})*{3}({1})^({0})', n, arg, a, fname));\r\n                                        r.power = r.power.subtract(new Frac(2));\r\n                                        if(r.power.equals(0))\r\n                                            r = _.parse(r);\r\n                                        retval = _.subtract(w, __.integrate(r, dx, depth));\r\n                                    }\r\n                                }\r\n                                //sec(x)^n or csc(x)^n\r\n                                else if(fname === SEC || fname === CSC) {\r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    var n1 = symbol.power.subtract(new Frac(1)).toString(),\r\n                                            n2 = symbol.power.subtract(new Frac(2)).toString(),\r\n                                            f2 = fname === SEC ? TAN : COT,\r\n                                            r = symbol.clone().toUnitMultiplier(),\r\n                                            parse_str = format((fname === CSC ? '-' : '') + '1/({0}*{1})*{4}({3})^({2})*{5}({3})', a, n1, n2, arg, fname, f2),\r\n                                            w = _.parse(parse_str);\r\n                                    r.power = r.power.subtract(new Frac(2));\r\n                                    if(r.power.equals(0))\r\n                                        r = _.parse(r);\r\n                                    retval = _.add(w, _.multiply(new Symbol(n2 / n1), __.integrate(r, dx, depth)));\r\n                                }\r\n                                else if((fname === COSH || fname === SINH) && symbol.power.equals(2)) {\r\n                                    retval = __.integrate(symbol.fnTransform(), dx, depth);\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            else\r\n                                __.integration.stop();\r\n\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === PL) {\r\n                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                    }\r\n                    else if(g === CB) {\r\n                        var den = symbol.getDenom();\r\n                        if(den.group === S)\r\n                            symbol = _.expand(symbol);\r\n\r\n                        //separate the coefficient since all we care about are symbols containing dx\r\n                        var coeff = symbol.stripVar(dx);\r\n                        //now get only those that apply\r\n                        var cfsymbol = _.divide(symbol.clone(), coeff.clone()); //a coeff free symbol\r\n                        //peform a correction for stripVar. This is a serious TODO!\r\n                        if(coeff.contains(dx)) {\r\n                            cfsymbol = _.multiply(cfsymbol, coeff);\r\n                            coeff = new Symbol(1);\r\n                        }\r\n\r\n                        //if we only have one symbol left then let's not waste time. Just pull the integral\r\n                        //and let the chips fall where they may\r\n                        if(cfsymbol.group !== CB) {\r\n                            if(cfsymbol.equals(1)) {\r\n                                return __.integrate(_.expand(symbol), dx, depth);\r\n                            }\r\n\r\n                            //only factor for multivariate which are polynomials\r\n                            if(cfsymbol.clone().toLinear().isPoly(true) && core.Utils.variables(cfsymbol).length > 1) {\r\n                                cfsymbol = core.Algebra.Factor.factor(cfsymbol);\r\n                            }\r\n\r\n                            retval = __.integrate(cfsymbol, dx, depth);\r\n                        }\r\n                        else {\r\n                            //we collect the symbols and sort them descending group, descending power, descending alpabethically\r\n                            var symbols = cfsymbol.collectSymbols().sort(function (a, b) {\r\n                                if(a.group === b.group) {\r\n                                    if(Number(a.power) === Number(b.power))\r\n                                        if(a < b)\r\n                                            return 1; //I want sin first\r\n                                        else\r\n                                            return -1;\r\n                                    return b.power - a.power; //descending power\r\n                                }\r\n                                return b.group - a.group; //descending groups\r\n                            }).map(function (x) {\r\n                                var unwrapped = Symbol.unwrapSQRT(x, true);\r\n                                if(unwrapped.fname === EXP) {\r\n                                    return _.parse(format('({1})*e^({0})', unwrapped.args[0], unwrapped.multiplier));\r\n                                }\r\n                                return unwrapped;\r\n                            });\r\n                            var l = symbols.length;\r\n                            if(symbol.power < 0) {\r\n                                if(l === 2) {\r\n                                    return __.integrate(_.expand(symbol), dx, depth, opt);\r\n                                }\r\n                            }\r\n                            //otherwise the denominator is one lumped together symbol \r\n                            else {\r\n                                //generate an image for \r\n                                if(l === 2) {\r\n                                    //try u substitution\r\n                                    try {\r\n                                        retval = __.integration.u_substitution(symbols, dx);\r\n                                    }\r\n                                    catch(e) {/* failed :`(*/\r\n                                        ;\r\n                                    }\r\n\r\n                                    if(!retval) {\r\n                                        //no success with u substitution so let's try known combinations\r\n                                        //are they two functions\r\n                                        var g1 = symbols[0].group,\r\n                                                g2 = symbols[1].group,\r\n                                                sym1 = symbols[0],\r\n                                                sym2 = symbols[1],\r\n                                                fn1 = sym1.fname,\r\n                                                fn2 = sym2.fname;\r\n                                        //reset the symbol minus the coeff\r\n                                        symbol = _.multiply(sym1.clone(), sym2.clone());\r\n                                        if(g1 === FN && g2 === FN) {\r\n                                            if(fn1 === LOG || fn2 === LOG) {\r\n                                                retval = __.integration.by_parts(symbol.clone(), dx, depth, opt);\r\n                                            }\r\n                                            else {\r\n                                                symbols.sort(function (a, b) {\r\n                                                    return b.fname > a.fname;\r\n                                                });\r\n                                                var arg1 = sym1.args[0];\r\n                                                //make sure the arguments are suitable. We don't know how to integrate non-linear arguments\r\n                                                if(!arg1.isLinear() || !(arg1.group === CP || arg1.group === CB || arg1.group === S))\r\n                                                    __.integration.stop();\r\n\r\n                                                var decomp = __.integration.decompose_arg(arg1, dx);\r\n                                                x = decomp[1],\r\n                                                        a = decomp[0];\r\n                                                if(!x.isLinear()) //again... linear arguments only wrt x\r\n                                                    __.integration.stop();\r\n\r\n                                                //they have to have the same arguments and then we have cleared all the check to \r\n                                                //make sure we can integrate FN & FN\r\n                                                var arg2 = sym2.args[0];\r\n                                                //make sure that their argument matches\r\n                                                if(arg1.equals(arg2)) {\r\n                                                    if(fn1 === SIN && fn2 === COS || fn1 === COS && fn2 === SIN) {\r\n                                                        if(sym1.power.lessThan(0))\r\n                                                            __.integration.stop();//we don't know how to handle, sin(x)^n/cos(x)^m where m > n,  yet\r\n                                                        //if it's in the form sin(x)^n*cos(x)^n then we can just return tan(x)^n which we know how to integrate\r\n                                                        if(fn1 === SIN && sym1.power.add(sym2.power).equals(0)) {\r\n                                                            sym1.fname = TAN;\r\n                                                            sym1.updateHash();\r\n                                                            retval = __.integrate(sym1, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            if(even(sym1.power) && fn2 === COS && sym2.power.lessThan(0)) {\r\n                                                                //transform sin^(2*n) to (1-cos^2)^n\r\n                                                                var n = Number(sym1.power) / 2,\r\n                                                                        new_sym = _.parse(format('(1-cos({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else if(even(sym1.power) && fn2 === SIN && sym2.power.lessThan(0)) {\r\n                                                                //transform cos^(2*n) to (1-sin^2)^n\r\n                                                                var n = Number(sym1.power) / 2,\r\n                                                                        new_sym = _.parse(format('(1-sin({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else {\r\n                                                                var p1_even = core.Utils.even(sym1.power),\r\n                                                                        p2_even = core.Utils.even(sym2.power);\r\n                                                                retval = new Symbol(0);\r\n                                                                if(!p1_even || !p2_even) {\r\n                                                                    var u, r, trans;\r\n                                                                    //since cos(x) is odd it carries du. If sin was odd then it would be the other way around\r\n                                                                    //know that p1 satifies the odd portion in this case. If p2 did than it would contain r\r\n                                                                    if(!p1_even) {\r\n                                                                        //u = sin(x)\r\n                                                                        u = sym2;\r\n                                                                        r = sym1;\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        u = sym1;\r\n                                                                        r = sym2;\r\n                                                                    }\r\n                                                                    //get the sign of du. In this case r carries du as stated before and D(cos(x),x) = -sin(x)\r\n                                                                    var sign = u.fname === COS ? -1 : 1,\r\n                                                                            n = r.power,\r\n                                                                            //remove the du e.g. cos(x)^2*sin(x)^3 dx -> cos(x)^2*sin(x)^2*sin(x). We're left with two \r\n                                                                            //even powers afterwards which can be transformed\r\n                                                                            k = (n - 1) / 2,\r\n                                                                            //make the transformation cos(x)^2 = 1 - sin(x)^2\r\n                                                                            trans = _.parse('(1-' + u.fname + core.Utils.inBrackets(arg1) + '^2)^' + k),\r\n                                                                            sym = _.expand(_.multiply(new Symbol(sign), _.multiply(u.clone(), trans)));\r\n                                                                    //we can now just loop through and integrate each since it's now just a polynomial with functions\r\n                                                                    sym.each(function (x) {\r\n                                                                        retval = _.add(retval, __.integration.poly_integrate(x.clone()));\r\n                                                                    });\r\n                                                                }\r\n                                                                else {\r\n                                                                    //performs double angle transformation\r\n                                                                    var double_angle = function (symbol) {\r\n                                                                        var p = symbol.power,\r\n                                                                                k = p / 2, e;\r\n                                                                        if(symbol.fname === COS)\r\n                                                                            e = '((1/2)+(cos(2*(' + symbol.args[0] + '))/2))^' + k;\r\n                                                                        else\r\n                                                                            e = '((1/2)-(cos(2*(' + symbol.args[0] + '))/2))^' + k;\r\n\r\n                                                                        return _.parse(e);\r\n                                                                    };\r\n                                                                    //they're both even so transform both using double angle identities and we'll just\r\n                                                                    //be able to integrate by the sum of integrals\r\n                                                                    var a = double_angle(sym1),\r\n                                                                            b = double_angle(sym2),\r\n                                                                            t = _.multiply(a, b);\r\n                                                                    var sym = _.expand(t);\r\n                                                                    sym.each(function (x) {\r\n                                                                        retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                                    });\r\n                                                                    return _.multiply(retval, coeff);\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    //tan(x)*sec(x)^n \r\n                                                    else if(fn1 === SEC && fn2 === TAN && x.isLinear() && sym2.isLinear()) {\r\n                                                        retval = _.parse(format('sec({0})^({1})/({1})', sym1.args[0], sym1.power));\r\n                                                    }\r\n                                                    else if(fn1 === TAN && fn2 === SEC && x.isLinear()) {\r\n                                                        //remaining: tan(x)^3*sec(x)^6\r\n                                                        if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                            retval = _.divide(_.symfunction(SEC, [arg1.clone()]), a);\r\n                                                        }\r\n                                                        else if(even(sym1.power)) {\r\n                                                            var p = Number(sym1.power) / 2;\r\n                                                            //transform tangent\r\n                                                            var t = _.parse(format('(sec({0})^2-1)^({1})', sym1.args[0], p));\r\n                                                            retval = __.integrate(_.expand(_.multiply(t, sym2)), dx, depth);\r\n                                                        }\r\n                                                        else\r\n                                                            __.integration.stop();\r\n                                                    }\r\n                                                    else if(fn1 === SEC && fn2 === COS) {\r\n                                                        sym1.fname = COS;\r\n                                                        sym1.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    else if(fn1 === SIN && fn2 === CSC) {\r\n                                                        sym2.fname = SIN;\r\n                                                        sym2.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    //tan/cos\r\n                                                    else if(fn1 === TAN && (fn2 === COS || fn2 === SIN) && sym2.power.lessThan(0)) {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2);\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                    else {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2.fnTransform());\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                }\r\n                                                //TODO: In progress\r\n                                                else if((fn1 === SIN || fn1 === COS) && (fn2 === SIN || fn2 === COS)) {\r\n\r\n                                                    if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                        //if in the form cos(a*x)*sin(b*x)\r\n                                                        if(sym1.args[0].isLinear() && sym2.args[0].isLinear()) {\r\n                                                            //use identity (sin(b*x+a*x)+sin(b*x-a*x))/2\r\n                                                            var ax, bx;\r\n                                                            if(fn2 === SIN) {\r\n                                                                ax = sym1.args[0];\r\n                                                                bx = sym2.args[0];\r\n                                                            }\r\n                                                            else {\r\n                                                                bx = sym1.args[0];\r\n                                                                ax = sym2.args[0];\r\n                                                            }\r\n\r\n                                                            //make the transformation\r\n                                                            f = _.parse(format('(sin(({1})+({0}))+sin(({1})-({0})))/2', ax.toString(), bx.toString()));\r\n\r\n                                                            //integrate it\r\n                                                            retval = __.integrate(f, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            var transformed = trigTransform(symbols);\r\n                                                            retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        var transformed = new Symbol(1);\r\n                                                        symbols.map(function (sym) {\r\n                                                            var s = sym.fnTransform();\r\n                                                            transformed = _.multiply(transformed, s);\r\n                                                        });\r\n                                                        var t = _.expand(transformed);\r\n\r\n                                                        retval = __.integrate(t, dx, depth);\r\n\r\n                                                        if(retval.hasIntegral()) {\r\n                                                            retval = __.integrate(trigTransform(transformed.collectSymbols()), dx, depth);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    __.integration.stop();\r\n                                                }\r\n\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === FN && g2 === S) {\r\n                                            var sym1_is_linear = sym1.isLinear();\r\n                                            if(sym1.fname === COS && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Ci', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COS && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === COSH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Chi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COSH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SIN && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Si', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SIN && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SINH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Shi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SINH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === LOG && sym2.power.equals(-1)) {\r\n                                                //log(x)^n/x = log(x)^(n+1)/(n+1)\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === 'erf') {\r\n                                                if(sym2.power.equals(1)) {\r\n                                                    var dc = __.integration.decompose_arg(sym1.args[0], dx),\r\n                                                            a_ = dc[0],\r\n                                                            x_ = dc[1],\r\n                                                            arg = sym1.args[0].toString();\r\n                                                    retval = _.parse(format('(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)', a_, x_, arg))\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                //since group S is guaranteed convergence we need not worry about tracking depth of integration\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === EX && g2 === S) {\r\n                                            var x = fn1 === LOG ? __.integration.decompose_arg(sym1.args[0], dx)[1] : null;\r\n                                            if(sym1.isE() && (sym1.power.group === S || sym1.power.group === CB) && sym2.power.equals(-1)) {\r\n                                                retval = _.symfunction('Ei', [sym1.power.clone()]);\r\n                                            }\r\n                                            else if(fn1 === LOG && x.value === sym2.value) {\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                        else if(g1 === PL && g2 === S) {\r\n                                            //first try to reduce the top\r\n                                            if(sym2.value === sym1.value && sym1.power.equals(-1)) {\r\n                                                //find the lowest power in the denominator\r\n                                                var pd = Math.min.apply(null, core.Utils.keys(sym1.symbols));\r\n                                                //get the lowest common value between denominator and numerator\r\n                                                var pc = Math.min(pd, sym2.power);\r\n                                                //reduce both denominator and numerator by that factor\r\n                                                var factor = sym2.clone();\r\n                                                factor.power = new Frac(pc);\r\n                                                sym2 = _.divide(sym2, factor.clone()); //reduce the denominator\r\n                                                var t = new Symbol(0);\r\n                                                sym1.each(function (x) {\r\n                                                    t = _.add(t, _.divide(x.clone(), factor.clone()));\r\n                                                });\r\n                                                t.multiplier = sym1.multiplier;\r\n                                                symbol = _.divide(sym2, t);\r\n                                            }\r\n                                            else {\r\n                                                symbol = _.expand(symbol);\r\n                                            }\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                        }\r\n                                        else if(g1 === CP && g2 === S) {\r\n                                            var f = sym1.clone().toLinear(),\r\n                                                    f_is_linear = core.Algebra.degree(f, _.parse(dx)).equals(1);\r\n                                            //handle cases x^(2*n)/sqrt(1-x^2)\r\n                                            if(sym1.power.equals(-1 / 2)) {\r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx);\r\n                                                var a = decomp[0].negate(),\r\n                                                        x = decomp[1],\r\n                                                        b = decomp[3],\r\n                                                        p1 = Number(sym1.power),\r\n                                                        p2 = Number(sym2.power);\r\n                                                if(isInt(p2) && core.Utils.even(p2) && x.power.equals(2)) {\r\n                                                    //if the substitution \r\n                                                    var c = _.divide(_.multiply(_.pow(b.clone(), new Symbol(2)),\r\n                                                            _.symfunction(SQRT, [_.divide(b.clone(), a.clone())])),\r\n                                                            _.pow(a.clone(), new Symbol(2)));\r\n                                                    c = _.multiply(c, _.symfunction(SQRT, [b]).invert());\r\n                                                    var dummy = _.parse('sin(u)');\r\n                                                    dummy.power = dummy.power.multiply(sym2.power);\r\n                                                    var integral = __.integrate(dummy, 'u', depth);\r\n                                                    var bksub = _.parse(ASIN + '(' + SQRT + '(' + a + '/' + b + ')*' + dx + ')');\r\n                                                    retval = _.multiply(c, integral.sub(new Symbol('u'), bksub));\r\n                                                }\r\n                                                else if(p1 === -1 / 2) {\r\n                                                    var u_transform = function (f, u) {\r\n                                                        var integral = _.parse(__.integrate(f, dx, depth, opt).sub(dx, format(u, dx)));\r\n                                                        if(!integral.hasIntegral())\r\n                                                            return integral;\r\n                                                    }\r\n                                                    if(p2 === -1) {\r\n                                                        retval = u_transform(\r\n                                                                _.expand(_.expand(_.pow(_.multiply(sym1.invert(), sym2.invert()), new Symbol(2)))).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                                );\r\n                                                    }\r\n                                                    else if(p2 === -2) {\r\n                                                        //apply transformation to see if it matches asin(x)\r\n                                                        retval = u_transform(\r\n                                                                _.sqrt(_.expand(_.divide(_.pow(symbol, new Symbol(2)).invert(), _.pow(new Symbol(dx), new Symbol(2))).negate())).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                                );\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            else if(sym1.power.equals(-1) && sym2.isLinear() && f_is_linear) {\r\n                                                retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else if(!sym1.power.lessThan(0) && isInt(sym1.power)) {\r\n                                                //sum of integrals\r\n                                                var expanded = _.expand(sym1);\r\n                                                retval = new Symbol(0);\r\n                                                expanded.each(function (x) {\r\n                                                    if(x.group === PL) {\r\n                                                        x.each(function (y) {\r\n                                                            retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), y), dx, depth));\r\n                                                        });\r\n                                                    }\r\n                                                    else\r\n                                                        retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), x), dx, depth));\r\n                                                });\r\n                                            }\r\n                                            else if(sym1.power.lessThan(-2)) {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                            else if(sym1.power.lessThan(0) && sym2.power.greaterThan(1)) {\r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                        a = decomp[0].negate(),\r\n                                                        x = decomp[1],\r\n                                                        b = decomp[3],\r\n                                                        fn = sym1.clone().toLinear();\r\n\r\n                                                if(x.group !== PL && x.isLinear()) {\r\n                                                    var p = Number(sym2.power),\r\n                                                            du = '_u_',\r\n                                                            u = new Symbol(du),\r\n                                                            //pull the integral with the subsitution\r\n                                                            U = _.expand(_.divide(_.pow(_.subtract(u.clone(), b.clone()), new Symbol(p)), u.clone())),\r\n                                                            scope = {};\r\n\r\n                                                    //generate a scope for resubbing the symbol\r\n                                                    scope[du] = fn;\r\n                                                    var U2 = _.parse(U, scope);\r\n                                                    retval = __.integrate(U2, dx, 0);\r\n                                                }\r\n                                                else if(sym2.power.greaterThan(x.power) || sym2.power.equals(x.power)) {\r\n\r\n                                                    //factor out coefficients\r\n                                                    var factors = new core.Algebra.Classes.Factors();\r\n                                                    sym1 = core.Algebra.Factor.coeffFactor(sym1.invert(), factors);\r\n                                                    var div = core.Algebra.divide(sym2, sym1);\r\n                                                    //it assumed that the result will be of group CB\r\n                                                    if(div.group !== CB) {\r\n                                                        retval = new Symbol(0);\r\n                                                        div.each(function (t) {\r\n                                                            retval = _.add(retval, __.integrate(t, dx, depth));\r\n                                                        });\r\n                                                        //put back the factors\r\n                                                        factors.each(function (factor) {\r\n                                                            retval = _.divide(retval, factor);\r\n                                                        });\r\n\r\n                                                        retval = _.expand(retval);\r\n                                                    }\r\n                                                    else {\r\n                                                        //try something else\r\n                                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else {\r\n                                                //handle cases such as (1-x^2)^(n/2)*x^(m) where n is odd ___ cracking knuckles... This can get a little hairy \r\n                                                if(sym1.power.den.equals(2)) {\r\n                                                    //assume the function is in the form (a^2-b*x^n)^(m/2)\r\n                                                    var dc = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                            //using the above definition\r\n                                                            a = dc[3], x = dc[1], b = dc[0], bx = dc[2];\r\n                                                    if(x.power.equals(2) && b.lessThan(0)) { //if n is even && b is negative\r\n                                                        //make a equal 1 so we can do a trig sub\r\n                                                        if(!a.equals(1)) { //divide a out of everything\r\n                                                            //move a to the coeff\r\n                                                            coeff = _.multiply(coeff, _.pow(a, new Symbol(2)));\r\n                                                        }\r\n                                                        var u = dx;\r\n                                                        var c = _.divide(_.pow(b.clone().negate(), new Symbol(1 / 2)), _.pow(a, new Symbol(1 / 2))),\r\n                                                                du = _.symfunction(COS, [new Symbol(u)]),\r\n                                                                cosn = _.pow(_.symfunction(COS, [new Symbol(u)]), new Symbol(sym1.power.num)),\r\n                                                                X = _.pow(_.symfunction(SIN, [new Symbol(u)]), new Symbol(sym2.power)),\r\n                                                                val = _.multiply(_.multiply(cosn, du), X),\r\n                                                                integral = __.integrate(val, u, depth);\r\n                                                        //but remember that u = asin(sqrt(b)*a*x)\r\n                                                        retval = integral.sub(u, _.symfunction(ASIN, [_.multiply(new Symbol(dx), c)]));\r\n                                                    }\r\n                                                    else {\r\n                                                        retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else if(f_is_linear) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                        else if(sym1.isComposite() && sym2.isComposite()) {\r\n                                            //sum of integrals\r\n                                            retval = new Symbol(0);\r\n                                            if(sym1.power.greaterThan(0) && sym2.power.greaterThan(0)) {\r\n                                                //combine and pull the integral of each\r\n                                                var sym = _.expand(symbol);\r\n                                                sym.each(function (x) {\r\n                                                    retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                }, true);\r\n                                            }\r\n                                            else {\r\n                                                var p1 = Number(sym1.power),\r\n                                                        p2 = Number(sym2.power);\r\n                                                if(p1 < 0 && p2 > 0) {\r\n                                                    //swap\r\n                                                    var t = sym1;\r\n                                                    sym1 = sym2;\r\n                                                    sym2 = t;\r\n                                                }\r\n                                                if(p1 === -1 && p2 === -1) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx);\r\n                                                }\r\n                                                else {\r\n                                                    sym1.each(function (x) {\r\n                                                        var k = _.multiply(x, sym2.clone());\r\n                                                        var integral = __.integrate(k, dx, depth);\r\n                                                        retval = _.add(retval, integral);\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === CP && symbols[0].power.greaterThan(0)) {\r\n                                            sym1 = _.expand(sym1);\r\n                                            retval = new Symbol(0);\r\n                                            sym1.each(function (x) {\r\n                                                retval = _.add(retval, __.integrate(_.multiply(x, sym2.clone()), dx, depth));\r\n                                            }, true);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === EX && core.Utils.in_htrig(sym1.fname)) {\r\n                                            sym1 = sym1.fnTransform();\r\n                                            retval = __.integrate(_.expand(_.multiply(sym1, sym2)), dx, depth);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === CP || g2 === FN && g1 === CP) {\r\n                                            if(g2 === FN && g1 === CP) {\r\n                                                var t = sym1;\r\n                                                sym1 = sym2;\r\n                                                sym2 = t; //swap\r\n                                            }\r\n                                            var du, sym2_clone, p, q, sa, sb;\r\n                                            du = Symbol.unwrapSQRT(__.diff(sym1.clone(), dx), true);\r\n                                            sym2_clone = Symbol.unwrapSQRT(sym2, true);\r\n                                            if(du.power.equals(sym2_clone.power)) {\r\n                                                p = new Symbol(sym2.power);\r\n                                                sa = du.clone().toLinear();\r\n                                                sb = sym2.clone().toLinear();\r\n                                                q = core.Algebra.divide(sa.toLinear(), sb);\r\n                                                if(q.isConstant()) {\r\n                                                    var nq = _.pow(q, p.negate());\r\n                                                    retval = _.multiply(nq, __.integration.poly_integrate(sym1.clone()));\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            var syma = sym1.clone().toLinear();\r\n                                            var symb = sym2.clone().toLinear();\r\n                                            if(g1 === EX && g2 === EX && sym1.power.contains(dx) && sym2.power.contains(dx)\r\n                                                    && !syma.contains(dx) && !symb.contains(dx)) {\r\n                                                retval = _.parse(format('(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))',\r\n                                                        syma.toString(),\r\n                                                        symb.toString(),\r\n                                                        sym1.power.multiplier.toString(),\r\n                                                        sym2.power.multiplier.toString(),\r\n                                                        dx\r\n                                                        ));\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(l === 3 && (symbols[2].group === S && symbols[2].power.lessThan(2) || symbols[0].group === CP)) {\r\n                                    var first = symbols[0];\r\n                                    if(first.group === CP) { //TODO {support higher powers of x in the future}\r\n                                        if(first.power.greaterThan(1))\r\n                                            first = _.expand(first);\r\n                                        var r = _.multiply(symbols[1], symbols[2]);\r\n                                        retval = new Symbol(0);\r\n                                        first.each(function (x) {\r\n                                            var t = _.multiply(x, r.clone());\r\n                                            var intg = __.integrate(t, dx, depth);\r\n                                            retval = _.add(retval, intg);\r\n                                        }, true);\r\n                                    }\r\n                                    else {\r\n                                        //try integration by parts although technically it will never work\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n\r\n                                }\r\n                                else if(all_functions(symbols)) {\r\n                                    var t = new Symbol(1);\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        t = _.multiply(t, symbols[i].fnTransform());\r\n                                    }\r\n                                    t = _.expand(t);\r\n                                    retval = __.integrate(t, dx, depth);\r\n                                }\r\n                                else {\r\n                                    //one more go\r\n                                    var transformed = trigTransform(symbols);\r\n                                    retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        retval = _.multiply(retval, coeff);\r\n                    }\r\n                    //if an integral was found then we return it\r\n                    if(retval)\r\n                        return retval;\r\n                }\r\n\r\n                catch(error) {\r\n                    //do nothing if it's a NoIntegralFound error otherwise let it bubble\r\n                    if(!(error instanceof NoIntegralFound || error instanceof core.exceptions.DivisionByZero))\r\n                        throw error;\r\n                }\r\n\r\n                //no symbol found so we return the integral again\r\n                return _.symfunction('integrate', [original_symbol, dt]);\r\n            }, false);\r\n        },\r\n        defint: function (symbol, from, to, dx) {\r\n            dx = dx || 'x'; //make x the default variable of integration\r\n            var get_value = function (integral, vars, point) {\r\n                try {\r\n                    return _.parse(integral, vars);\r\n                }\r\n                catch(e) {\r\n                    //it failed for some reason so return the limit\r\n                    var lim = __.Limit.limit(integral, dx, point);\r\n                    return lim;\r\n                }\r\n            };\r\n\r\n            var vars = core.Utils.variables(symbol),\r\n                    hasTrig = symbol.hasTrig();\r\n            var retval, integral;\r\n\r\n            // Fix #593 - Only assume the first variable if dx is not defined.\r\n            if(vars.length === 1 && !dx)\r\n                dx = vars[0];\r\n\r\n            if(!hasTrig) {\r\n                integral = __.integrate(symbol, dx);\r\n            }\r\n\r\n            if(!hasTrig && !integral.hasIntegral()) {\r\n                var upper = {},\r\n                        lower = {},\r\n                        a, b;\r\n                upper[dx] = to;\r\n                lower[dx] = from;\r\n\r\n                a = get_value(integral, upper, to, dx);\r\n                b = get_value(integral, lower, from, dx);\r\n                retval = _.subtract(a, b);\r\n            }\r\n            else if(vars.length === 1 && from.isConstant() && to.isConstant()) {\r\n\r\n                var f = core.Utils.build(symbol);\r\n                retval = new Symbol(core.Math2.num_integrate(f, Number(from), Number(to)));\r\n            }\r\n            else\r\n                retval = _.symfunction('defint', [symbol, from, to, dx]);\r\n            return retval;\r\n        },\r\n\r\n        Limit: {\r\n            interval: function (start, end) {\r\n                return _.parse(format('[{0}, {1}]', start, end));\r\n            },\r\n            diverges: function () {\r\n                return __.Limit.interval('-Infinity', 'Infinity');\r\n            },\r\n            divide: function (f, g, x, lim, depth) {\r\n                if(depth++ > Settings.max_lim_depth) {\r\n                    return;\r\n                }\r\n\r\n                var fin = f.clone(), gin = g.clone();\r\n\r\n                //But first a little \"cheating\". x/|x| ends up in an infinite loop since the d/dx |x| -> x/|x|\r\n                //To break this loop we simply provide the answer. Keep in mind that currently limit only provides\r\n                //the two-sided limit.\r\n                //Known limit\r\n                if(g.fname === ABS) {\r\n                    var sign = f.sign();\r\n                    var lim_sign = lim.sign();\r\n\r\n                    if(lim.isInfinity)\r\n                        return _.multiply(new Symbol(sign), new Symbol(lim_sign));\r\n\r\n                    else if(lim.equals(0)) {\r\n                        var fm = _.parse(f.multiplier);\r\n                        var gm = _.parse(g.multiplier);\r\n                        return _.divide(_.multiply(fm, __.Limit.interval('-1', '1')), gm);\r\n                    }\r\n                    else {\r\n                        //TODO: Support more limits\r\n                        __.Limit.diverges();\r\n                    }\r\n                }\r\n\r\n                var isInfinity = function (L) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        for(var i = 0; i < L.elements.length; i++)\r\n                            if(!L.elements[i].isInfinity)\r\n                                return false;\r\n                        return true;\r\n                    }\r\n                    return L.isInfinity;\r\n                };\r\n\r\n                var equals = function (L, v) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        return false;\r\n                    }\r\n                    return L.equals(v);\r\n                };\r\n\r\n                var retval;\r\n                do {\r\n                    var lim1 = evaluate(__.Limit.limit(f.clone(), x, lim, depth));\r\n                    var lim2 = evaluate(__.Limit.limit(g.clone(), x, lim, depth));\r\n\r\n                    //if it's in indeterminate form apply L'Hospital's rule\r\n                    var indeterminate = isInfinity(lim1) && isInfinity(lim2) || equals(lim1, 0) && equals(lim2, 0);\r\n                    //pull the derivatives\r\n                    if(indeterminate) {\r\n                        var ft = __.diff(f.clone(), x);\r\n                        var gt = __.diff(g.clone(), x);\r\n\r\n                        var t_symbol = _.expand(_.divide(ft, gt));\r\n                        f = t_symbol.getNum();\r\n                        g = t_symbol.getDenom();\r\n\r\n                    }\r\n                }\r\n                while(indeterminate)\r\n\r\n                //REMEMBER: \r\n                //- 1/cos(x)\r\n                //n/0 is still possible since we only checked for 0/0\r\n                var den_is_zero = lim2.equals(0);\r\n                var p = Number(gin.power);\r\n\r\n                if(lim.isConstant(true) && den_is_zero) {\r\n                    retval = Symbol.infinity(core.Utils.even(p) && lim1.lessThan(0) ? -1 : undefined);\r\n                }\r\n                else if(den_is_zero) {\r\n                    retval = __.Limit.diverges();\r\n                }\r\n                else {\r\n                    retval = _.divide(lim1, lim2);\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            rewriteToLog: function (symbol) {\r\n                var p = symbol.power.clone();\r\n                symbol.toLinear();\r\n                return _.pow(new Symbol('e'), _.multiply(p, _.symfunction(Settings.LOG + '', [symbol])));\r\n            },\r\n            getSubbed: function (f, x, lim) {\r\n                var retval;\r\n                //1. rewrite EX with base e\r\n                if(f.group === EX) {\r\n                    f = __.rewriteToLog(f);\r\n                }\r\n                //2. try simple substitution\r\n                try {\r\n                    retval = f.sub(x, lim);\r\n                }\r\n                catch(e) {\r\n                    //Nope. No go, so just return the unsubbed function so we can test the limit instead.\r\n                    retval = f;\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            isInterval: function (limit) {\r\n                return core.Utils.isVector(limit);\r\n            },\r\n            isConvergent: function (limit) {\r\n                //it's not convergent if it lies on the interval -Infinity to Infinity\r\n                if(\r\n                        //It lies on the interval -Infinity to Infinity\r\n                        __.Limit.isInterval(limit) && limit.elements[0].isInfinity && limit.elements[1].isInfinity ||\r\n                        //We weren't able to calculate the limit\r\n                        limit.containsFunction('limit')\r\n                        ) {\r\n                    return false; //Then no\r\n                }\r\n                return true; //It is\r\n            },\r\n            limit: function (symbol, x, lim, depth) {\r\n                //Simplify the symbol\r\n                if(symbol.isLinear() && symbol.isComposite()) {\r\n\r\n                    //Apply sum of limits\r\n                    var limit = new Symbol(0);\r\n                    symbol.each(function (s) {\r\n                        limit = _.add(limit, __.Limit.limit(s, x, lim, depth));\r\n                    }, true);\r\n\r\n                    return limit;\r\n                }\r\n                ;\r\n\r\n                symbol = core.Algebra.Simplify.simplify(symbol);\r\n\r\n                depth = depth || 1;\r\n\r\n                if(depth++ > Settings.max_lim_depth) {\r\n                    return;\r\n                }\r\n\r\n                //store the multiplier\r\n                var m = _.parse(symbol.multiplier);\r\n                //strip the multiplier\r\n                symbol.toUnitMultiplier();\r\n                try {\r\n                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                    var retval;\r\n                    //we try the simplest option first where c is some limit\r\n                    //lim a as x->c = a where c \r\n                    if(symbol.isConstant(true)) {\r\n                        retval = symbol;\r\n                    }\r\n                    else {\r\n                        var point = {};\r\n                        point[x] = lim;\r\n                        //lim x as x->c = c where c\r\n\r\n                        try {\r\n\r\n                            //evaluate the function at the given limit\r\n                            var t = _.parse(symbol.sub(x, lim), point);\r\n\r\n                            //a constant or infinity is known so we're done\r\n                            if(t.isConstant(true) || t.isInfinity)\r\n                                retval = t;\r\n\r\n                        }\r\n                        catch(e) { /*Nothing. Maybe we tried to divide by zero.*/\r\n                        }\r\n                        ;\r\n\r\n                        if(!retval) {\r\n                            //split the symbol in the numerator and the denominator\r\n                            var num = symbol.getNum();\r\n                            var den = symbol.getDenom();\r\n\r\n                            if(den.isConstant(true)) {\r\n                                //We still don't have a limit so we generate tests.\r\n                                if(symbol.group === EX) {\r\n                                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                                    //Speed boost for exponentials by detecting patterns\r\n                                    var f = symbol.clone().toLinear();\r\n                                    var p = symbol.power.clone();\r\n                                    var _num = f.getNum();\r\n                                    var _den = f.getDenom();\r\n                                    var fn = core.Utils.decompose_fn(_den, x, true);\r\n                                    //start detection of pattern (x/(x+1))^x\r\n                                    if(_num.group === S && _num.multiplier.isOne() && fn.ax.group === S && fn.b.isConstant(true) && fn.a.isOne() && fn.b.isConstant(true)) {\r\n                                        retval = _.parse(format('(1/e^({0}))', fn.b));\r\n                                    }\r\n                                    else {\r\n                                        var symbol_ = __.Limit.rewriteToLog(symbol.clone());\r\n                                        //get the base\r\n                                        var pow = symbol_.power.clone();\r\n                                        var base = symbol_.clone().toLinear();\r\n                                        var lim_base = __.Limit.limit(base, x, lim, depth);\r\n                                        var lim_pow = __.Limit.limit(pow, x, lim, depth);\r\n                                        retval = _.pow(lim_base, lim_pow);\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === FN && symbol.args.length === 1) {\r\n                                    var evaluates;\r\n                                    //Squeeze theorem lim f(g(x)) = lim f(lim g))\r\n                                    var arg = __.Limit.limit(symbol.args[0], x, lim, depth);\r\n                                    if(core.Utils.isVector(arg)) {\r\n                                        //get the limit over that interval\r\n                                        retval = arg.map(function (e) {\r\n                                            var clone = symbol.clone();\r\n                                            clone.args[0] = e;\r\n                                            return __.Limit.limit(_.symfunction(symbol.fname, [e]), x, lim, depth);\r\n                                        });\r\n\r\n                                        return _.multiply(m, retval);\r\n                                    }\r\n                                    //if the argument is constant then we're done\r\n                                    else if(arg.isConstant(true)) {\r\n\r\n                                        //double check that it evaluates\r\n                                        var trial = _.symfunction(symbol.fname, [arg]);\r\n                                        //trial evaluation\r\n                                        try {\r\n                                            evaluate(trial);\r\n                                            evaluates = true;\r\n                                        }\r\n                                        catch(e) {\r\n\r\n                                            evaluates = false;\r\n                                        }\r\n                                    }\r\n                                    if(evaluates) {\r\n                                        retval = trial;\r\n                                    }\r\n                                    else {\r\n                                        //if the limit converges. We'll deal with non-convergent ones later\r\n                                        if(__.Limit.isConvergent(arg)) {\r\n                                            if(symbol.fname === LOG) {\r\n                                                switch(arg.toString()) {\r\n                                                    //lim -> 0\r\n                                                    case '0':\r\n                                                        retval = Symbol.infinity().negate();\r\n                                                        break;\r\n                                                    case 'Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                    case '-Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else if((symbol.fname === COS || symbol.fname === SIN) && lim.isInfinity) {\r\n                                                retval = __.Limit.interval(-1, 1);\r\n                                            }\r\n                                            else if((symbol.fname === TAN)) {\r\n                                                var s_arg = symbol.args[0];\r\n                                                var n = s_arg.getNum();\r\n                                                var d = s_arg.getDenom();\r\n                                                var pi = n.toUnitMultiplier();\r\n                                                if(lim.isInfinity || pi.equals('pi') && d.equals(2)) {\r\n                                                    retval = divergent();\r\n                                                }\r\n                                            }\r\n                                            else if(symbol.fname === Settings.FACTORIAL) {\r\n                                                if(arg.isInfinity)\r\n                                                    return Symbol.infinity();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === S) {\r\n                                    if(symbol.power > 0)\r\n                                        //these functions always converge to the limit\r\n                                        return _.parse(symbol, point);\r\n                                    else {\r\n                                        //we're dealing with 1/x^n but remember that infinity has already been dealt\r\n                                        //with by substitution\r\n                                        if(core.Utils.even(symbol.power)) {\r\n                                            //even powers converge to infinity\r\n                                            retval = Symbol.infinity();\r\n                                        }\r\n                                        else {\r\n                                            //odd ones don't\r\n                                            retval = __.Limit.diverges();\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === CB) {\r\n\r\n                                    var lim1, lim2;\r\n                                    //loop through all the symbols\r\n                                    //thus => lim f*g*h = lim (f*g)*h = (lim f*g)*(lim h)\r\n                                    //symbols of lower groups are generally easier to differentiatee so get them to the right by first sorting\r\n                                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                                        return a.group - b.group;\r\n                                    });\r\n\r\n                                    var f = symbols.pop();\r\n                                    //calculate the first limit so we can keep going down the list\r\n                                    lim1 = evaluate(__.Limit.limit(f, x, lim, depth));\r\n\r\n                                    //reduces all the limits one at a time\r\n                                    while(symbols.length) {\r\n                                        //get the second limit\r\n                                        var g = symbols.pop();\r\n                                        //get the limit of g\r\n                                        lim2 = evaluate(__.Limit.limit(g, x, lim, depth));\r\n\r\n                                        //if the limit is in indeterminate form aplly L'Hospital by inverting g and then f/(1/g)\r\n                                        if((lim1.isInfinity || !__.Limit.isConvergent(lim1) && lim2.equals(0) || lim1.equals(0) && __.Limit.isConvergent(lim2))) {\r\n                                            if(g.containsFunction(LOG)) {\r\n                                                //swap them\r\n                                                g = [f, f = g][0];\r\n                                            }\r\n                                            //invert the symbol\r\n                                            g.invert();\r\n\r\n                                            // Product of infinities\r\n                                            if(lim1.isInfinity && lim2.isInfinity) {\r\n                                                lim1 = Symbol.infinity()\r\n                                            }\r\n                                            else {\r\n                                                lim1 = __.Limit.divide(f, g, x, lim, depth);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //lim f*g = (lim f)*(lim g)\r\n                                            lim1 = _.multiply(lim1, lim2);\r\n                                            //let f*g equal f and h equal g \r\n                                            f = _.multiply(f, g);\r\n                                        }\r\n                                    }\r\n\r\n                                    //Done, lim1 is the limit we're looking for     \r\n                                    retval = lim1;\r\n                                }\r\n                                else if(symbol.isComposite()) {\r\n                                    var _lim;\r\n                                    if(!symbol.isLinear())\r\n                                        symbol = _.expand(symbol);\r\n                                    //Apply lim f+g = (lim f)+(lim g)\r\n                                    retval = new Symbol(0);\r\n\r\n                                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                                        return b.group - a.group;\r\n                                    });\r\n\r\n                                    var _symbols = [];\r\n                                    //Analyze the functions first\r\n                                    var fns = new Symbol(0);\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        var sym = symbols[i].clone();\r\n                                        if(sym.group === FN || sym.group === CB && sym.hasFunc()) {\r\n                                            fns = _.add(fns, sym);\r\n                                        }\r\n                                        else\r\n                                            _symbols.push(sym);\r\n                                    }\r\n                                    _symbols.unshift(fns);\r\n\r\n                                    //make sure that we didn't just repackage the exact same symbol\r\n                                    if(_symbols.length !== 1) {\r\n                                        symbols = _symbols;\r\n                                    }\r\n\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        var sym = symbols[i];\r\n                                        //If the addition of the limits is undefined then the limit diverges so return -infinity to infinity\r\n                                        try {\r\n                                            _lim = __.Limit.limit(sym, x, lim, depth);\r\n                                        }\r\n                                        catch(e) {\r\n                                            _lim = __.Limit.diverges();\r\n                                        }\r\n\r\n                                        try {\r\n                                            retval = _.add(retval, _lim);\r\n                                        }\r\n                                        catch(e) {\r\n                                            if(depth++ > Settings.max_lim_depth) {\r\n                                                return;\r\n                                            }\r\n                                            ;\r\n                                            retval = __.Limit.limit(__.diff(symbol, x), x, lim, depth);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                retval = __.Limit.divide(num, den, x, lim, depth);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //if we still don't have a solution\r\n                    if(!retval)\r\n                        //return it symbolically\r\n                        retval = _.symfunction('limit', [symbol, x, lim]);\r\n                }\r\n                catch(e) {\r\n                    //if all else fails return the symbolic function\r\n                    retval = _.symfunction('limit', [symbol, x, lim]);\r\n                }\r\n\r\n                return _.multiply(m, retval);\r\n            }\r\n        },\r\n        Fresnel: {\r\n            S: function (x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('sin(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('S', arguments);\r\n            },\r\n            C: function (x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('cos(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('C', arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    nerdamer.register([\r\n        {\r\n            name: 'diff',\r\n            visible: true,\r\n            numargs: [1, 3],\r\n            build: function () {\r\n                return __.diff;\r\n            }\r\n        },\r\n        {\r\n            name: 'sum',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function () {\r\n                return __.sum;\r\n            }\r\n        },\r\n        {\r\n            name: 'product',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function () {\r\n                return __.product;\r\n            }\r\n        },\r\n        {\r\n            name: 'integrate',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.integrate;\r\n            }\r\n        },\r\n        {\r\n            name: 'defint',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function () {\r\n                return __.defint;\r\n            }\r\n        },\r\n        {\r\n            name: 'S',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Fresnel.S;\r\n            }\r\n        },\r\n        {\r\n            name: 'C',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Fresnel.C;\r\n            }\r\n        },\r\n        {\r\n            name: 'limit',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function () {\r\n                return __.Limit.limit;\r\n            }\r\n        }\r\n    ]);\r\n    //link registered functions externally\r\n    nerdamer.api();\r\n\r\n})();","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { render } from \"./lamFriction.vue?vue&type=template&id=7e216362&scoped=true\"\nimport script from \"./lamFriction.vue?vue&type=script&lang=js\"\nexport * from \"./lamFriction.vue?vue&type=script&lang=js\"\n\nimport \"./lamFriction.vue?vue&type=style&index=0&id=7e216362&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-7e216362\"\n\nexport default script","/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * License : MIT\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global module, Function */\r\n\r\nif((typeof module) !== 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Calculus.js');\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    /*shortcuts*/\r\n    var core = nerdamer.getCore(),\r\n            _ = core.PARSER,\r\n            N = core.groups.N,\r\n            P = core.groups.P,\r\n            S = core.groups.S,\r\n            EX = core.groups.EX,\r\n            FN = core.groups.FN,\r\n            PL = core.groups.PL,\r\n            CP = core.groups.CP,\r\n            CB = core.groups.CB,\r\n            keys = core.Utils.keys,\r\n            even = core.Utils.even,\r\n            variables = core.Utils.variables,\r\n            format = core.Utils.format,\r\n            round = core.Utils.round,\r\n            Frac = core.Frac,\r\n            isInt = core.Utils.isInt,\r\n            Symbol = core.Symbol,\r\n            CONST_HASH = core.Settings.CONST_HASH,\r\n            math = core.Utils.importFunctions(),\r\n            evaluate = core.Utils.evaluate;\r\n    //*************** CLASSES ***************//\r\n    /**\r\n     * Converts a symbol into an equivalent polynomial arrays of \r\n     * the form [[coefficient_1, power_1],[coefficient_2, power_2], ... ]\r\n     * Univariate polymials only. \r\n     * @param {Symbol|Number} symbol\r\n     * @param {String} variable The variable name of the polynomial\r\n     * @param {int} order\r\n     */\r\n    function Polynomial(symbol, variable, order) {\r\n        if(core.Utils.isSymbol(symbol)) {\r\n            this.parse(symbol);\r\n            this.variable = this.variable || variable;\r\n        }\r\n        else if(!isNaN(symbol)) {\r\n            order = order || 0;\r\n            if(variable === undefined)\r\n                throw new core.exceptions.InvalidVariableNameError('Polynomial expects a variable name when creating using order');\r\n            this.coeffs = [];\r\n            this.coeffs[order] = symbol;\r\n            this.fill(symbol);\r\n        }\r\n        else if(typeof symbol === 'string') {\r\n            this.parse(_.parse(symbol));\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Polynomial given an array of coefficients\r\n     * @param {int[]} arr\r\n     * @param {String} variable\r\n     * @returns {Polynomial}\r\n     */\r\n    Polynomial.fromArray = function (arr, variable) {\r\n        if(typeof variable === 'undefined')\r\n            throw new core.exceptions.InvalidVariableNameError('A variable name must be specified when creating polynomial from array');\r\n        var p = new Polynomial();\r\n        p.coeffs = arr;\r\n        p.variable = variable;\r\n        return p;\r\n    };\r\n\r\n    Polynomial.fit = function (c1, c2, n, base, p, variable) {\r\n        //after having looped through and mod 10 the number to get the matching factor\r\n        var terms = new Array(p + 1),\r\n                t = n - c2;\r\n        terms[0] = c2; //the constants is assumed to be correct\r\n        //constant for x^p is also assumed know so add\r\n        terms[p] = c1;\r\n        t -= c1 * Math.pow(base, p);\r\n        //start fitting\r\n        for(var i = p - 1; i > 0; i--) {\r\n            var b = Math.pow(base, i), //we want as many wholes as possible\r\n                    q = t / b,\r\n                    sign = Math.sign(q);\r\n            var c = sign * Math.floor(Math.abs(q));\r\n            t -= c * b;\r\n            terms[i] = c;\r\n        }\r\n        if(t !== 0)\r\n            return null;\r\n        for(var i = 0; i < terms.length; i++)\r\n            terms[i] = new Frac(terms[i]);\r\n\r\n        return Polynomial.fromArray(terms, variable);\r\n    };\r\n\r\n    Polynomial.prototype = {\r\n        /**\r\n         * Converts Symbol to Polynomial\r\n         * @param {Symbol} symbol\r\n         * @param {Array} c - a collector array\r\n         * @returns {Polynomial}\r\n         */\r\n        parse: function (symbol, c) {\r\n            this.variable = variables(symbol)[0];\r\n            if(!symbol.isPoly())\r\n                throw core.exceptions.NerdamerTypeError('Polynomial Expected! Received ' + core.Utils.text(symbol));\r\n            c = c || [];\r\n            if(!symbol.power.absEquals(1))\r\n                symbol = _.expand(symbol);\r\n\r\n            if(symbol.group === core.groups.N) {\r\n                c[0] = symbol.multiplier;\r\n            }\r\n            else if(symbol.group === core.groups.S) {\r\n                c[symbol.power.toDecimal()] = symbol.multiplier;\r\n            }\r\n            else {\r\n                for(var x in symbol.symbols) {\r\n                    var sub = symbol.symbols[x],\r\n                            p = sub.power;\r\n                    if(core.Utils.isSymbol(p))\r\n                        throw new core.exceptions.NerdamerTypeError('power cannot be a Symbol');\r\n\r\n                    p = sub.group === N ? 0 : p.toDecimal();\r\n                    if(sub.symbols) {\r\n                        this.parse(sub, c);\r\n                    }\r\n                    else {\r\n                        c[p] = sub.multiplier;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.coeffs = c;\r\n\r\n            this.fill();\r\n        },\r\n        /**\r\n         * Fills in the holes in a polynomial with zeroes\r\n         * @param {Number} x - The number to fill the holes with\r\n         */\r\n        fill: function (x) {\r\n            x = Number(x) || 0;\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                if(this.coeffs[i] === undefined) {\r\n                    this.coeffs[i] = new Frac(x);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Removes higher order zeros or a specific coefficient\r\n         * @returns {Array}\r\n         */\r\n        trim: function () {\r\n            var l = this.coeffs.length;\r\n            while(l--) {\r\n                var c = this.coeffs[l];\r\n                var equalsZero = c.equals(0);\r\n                if(c && equalsZero) {\r\n                    if(l === 0)\r\n                        break;\r\n                    this.coeffs.pop();\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /*\r\n         * Returns polynomial mod p **currently fails**\r\n         * @param {Number} p\r\n         * @returns {Polynomial}\r\n         */\r\n        modP: function (p) {\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var c = this.coeffs[i];\r\n                if(c < 0) { //go borrow\r\n                    var b; //a coefficient > 0\r\n                    for(var j = i; j < l; j++) {//starting from where we left off\r\n                        if(this.coeffs[j] > 0) {\r\n                            b = this.coeffs[j];\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if(b) { //if such a coefficient exists\r\n                        for(j; j > i; j--) { //go down the line and adjust using p\r\n                            this.coeffs[j] = this.coeffs[j].subtract(new Frac(1));\r\n                            this.coeffs[j - 1] = this.coeffs[j - 1].add(new Frac(p));\r\n                        }\r\n                        c = this.coeffs[i]; //reset c\r\n                    }\r\n                }\r\n\r\n                var d = c.mod(p);\r\n                var w = c.subtract(d).divide(p);\r\n                if(!w.equals(0)) {\r\n                    var up_one = i + 1;\r\n                    var next = this.coeffs[up_one] || new Frac(0);\r\n                    next = next.add(w);\r\n                    this.coeffs[up_one] = new Frac(next);\r\n                    this.coeffs[i] = new Frac(d);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds together 2 polynomials\r\n         * @param {Polynomial} poly\r\n         */\r\n        add: function (poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i = 0; i < l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                        b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.add(b);\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds together 2 polynomials\r\n         * @param {Polynomial} poly\r\n         */\r\n        subtract: function (poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i = 0; i < l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                        b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.subtract(b);\r\n            }\r\n            return this;\r\n        },\r\n        divide: function (poly) {\r\n            var variable = this.variable,\r\n                    dividend = core.Utils.arrayClone(this.coeffs),\r\n                    divisor = core.Utils.arrayClone(poly.coeffs),\r\n                    n = dividend.length,\r\n                    mp = divisor.length - 1,\r\n                    quotient = [];\r\n\r\n            //loop through the dividend\r\n            for(var i = 0; i < n; i++) {\r\n                var p = n - (i + 1);\r\n                //get the difference of the powers\r\n                var d = p - mp;\r\n                //get the quotient of the coefficients\r\n                var q = dividend[p].divide(divisor[mp]);\r\n\r\n                if(d < 0)\r\n                    break;//the divisor is not greater than the dividend\r\n                //place it in the quotient\r\n                quotient[d] = q;\r\n\r\n                for(var j = 0; j <= mp; j++) {\r\n                    //reduce the dividend\r\n                    dividend[j + d] = dividend[j + d].subtract((divisor[j].multiply(q)));\r\n                }\r\n            }\r\n\r\n            //clean up\r\n            var p1 = Polynomial.fromArray(dividend, variable || 'x').trim(), //pass in x for safety\r\n                    p2 = Polynomial.fromArray(quotient, variable || 'x');\r\n            return [p2, p1];\r\n        },\r\n        multiply: function (poly) {\r\n            var l1 = this.coeffs.length, l2 = poly.coeffs.length,\r\n                    c = []; //array to be returned\r\n            for(var i = 0; i < l1; i++) {\r\n                var x1 = this.coeffs[i];\r\n                for(var j = 0; j < l2; j++) {\r\n                    var k = i + j, //add the powers together\r\n                            x2 = poly.coeffs[j],\r\n                            e = c[k] || new Frac(0); //get the existing term from the new array\r\n                    c[k] = e.add(x1.multiply(x2)); //multiply the coefficients and add to new polynomial array\r\n                }\r\n            }\r\n            this.coeffs = c;\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks if a polynomial is zero\r\n         * @returns {Boolean}\r\n         */\r\n        isZero: function () {\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var e = this.coeffs[i];\r\n                if(!e.equals(0))\r\n                    return false;\r\n            }\r\n            return true;\r\n        },\r\n        /** \r\n         * Substitutes in a number n into the polynomial p(n)\r\n         * @param {Number} n\r\n         * @returns {Frac}\r\n         */\r\n        sub: function (n) {\r\n            var sum = new Frac(0), l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var t = this.coeffs[i];\r\n                if(!t.equals(0))\r\n                    sum = sum.add(t.multiply(new Frac(Math.pow(n, i))));\r\n            }\r\n            return sum;\r\n        },\r\n        /**\r\n         * Returns a clone of the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        clone: function () {\r\n            var p = new Polynomial();\r\n            p.coeffs = this.coeffs;\r\n            p.variable = this.variable;\r\n            return p;\r\n        },\r\n        /**\r\n         * Gets the degree of the polynomial\r\n         * @returns {Number}\r\n         */\r\n        deg: function () {\r\n            this.trim();\r\n            return this.coeffs.length - 1;\r\n        },\r\n        /**\r\n         * Returns a lead coefficient\r\n         * @returns {Frac}\r\n         */\r\n        lc: function () {\r\n            return this.coeffs[this.deg()].clone();\r\n        },\r\n        /**\r\n         * Converts polynomial into a monic polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        monic: function () {\r\n            var lc = this.lc(), l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++)\r\n                this.coeffs[i] = this.coeffs[i].divide(lc);\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the GCD of two polynomials\r\n         * @param {Polynomial} poly\r\n         * @returns {Polynomial}\r\n         */\r\n        gcd: function (poly) {\r\n            //get the maximum power of each\r\n            var mp1 = this.coeffs.length - 1,\r\n                    mp2 = poly.coeffs.length - 1,\r\n                    T;\r\n            //swap so we always have the greater power first\r\n            if(mp1 < mp2) {\r\n                return poly.gcd(this);\r\n            }\r\n            var a = this;\r\n\r\n            while(!poly.isZero()) {\r\n                var t = poly.clone();\r\n                a = a.clone();\r\n                T = a.divide(t);\r\n                poly = T[1];\r\n                a = t;\r\n            }\r\n\r\n            var gcd = core.Math2.QGCD.apply(null, a.coeffs);\r\n            if(!gcd.equals(1)) {\r\n                var l = a.coeffs.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    a.coeffs[i] = a.coeffs[i].divide(gcd);\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        /**\r\n         * Differentiates the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        diff: function () {\r\n            var new_array = [], l = this.coeffs.length;\r\n            for(var i = 1; i < l; i++)\r\n                new_array.push(this.coeffs[i].multiply(new Frac(i)));\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Integrates the polynomial\r\n         * @returns {Polynomial} \r\n         */\r\n        integrate: function () {\r\n            var new_array = [0], l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var c = new Frac(i + 1);\r\n                new_array[c] = this.coeffs[i].divide(c);\r\n            }\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the Greatest common factor of the polynomial\r\n         * @param {bool} toPolynomial - true if a polynomial is wanted\r\n         * @returns {Frac|Polynomial}\r\n         */\r\n        gcf: function (toPolynomial) {\r\n            //get the first nozero coefficient and returns its power\r\n            var fnz = function (a) {\r\n                for(var i = 0; i < a.length; i++)\r\n                    if(!a[i].equals(0))\r\n                        return i;\r\n            },\r\n                    ca = [];\r\n            for(var i = 0; i < this.coeffs.length; i++) {\r\n                var c = this.coeffs[i];\r\n                if(!c.equals(0) && ca.indexOf(c) === -1)\r\n                    ca.push(c);\r\n            }\r\n            var p = [core.Math2.QGCD.apply(undefined, ca), fnz(this.coeffs)].toDecimal();\r\n\r\n            if(toPolynomial) {\r\n                var parr = [];\r\n                parr[p[1] - 1] = p[0];\r\n                p = Polynomial.fromArray(parr, this.variable).fill();\r\n            }\r\n\r\n            return p;\r\n        },\r\n        /**\r\n         * Raises a polynomial P to a power p -> P^p. e.g. (x+1)^2\r\n         * @param {bool} incl_img - Include imaginary numbers \r\n         */\r\n        quad: function (incl_img) {\r\n            var roots = [];\r\n            if(this.coeffs.length > 3)\r\n                throw new Error('Cannot calculate quadratic order of ' + (this.coeffs.length - 1));\r\n            if(this.coeffs.length === 0)\r\n                throw new Error('Polynomial array has no terms');\r\n            var a = this.coeffs[2] || 0, b = this.coeffs[1] || 0, c = this.coeffs[0];\r\n            var dsc = b * b - 4 * a * c;\r\n            if(dsc < 0 && !incl_img)\r\n                return roots;\r\n            else {\r\n                roots[0] = (-b + Math.sqrt(dsc)) / (2 * a);\r\n                roots[1] = (-b - Math.sqrt(dsc)) / (2 * a);\r\n            }\r\n            return roots;\r\n        },\r\n        /**\r\n         * Makes polynomial square free\r\n         * @returns {Array}\r\n         */\r\n        squareFree: function () {\r\n\r\n            var a = this.clone(),\r\n                    i = 1,\r\n                    b = a.clone().diff(),\r\n                    c = a.clone().gcd(b),\r\n                    w = a.divide(c)[0];\r\n            var output = Polynomial.fromArray([new Frac(1)], a.variable);\r\n            while(!c.equalsNumber(1)) {\r\n                var y = w.gcd(c);\r\n                var z = w.divide(y)[0];\r\n                //one of the factors may have shown up since it's square but smaller than the \r\n                //one where finding\r\n                if(!z.equalsNumber(1) && i > 1) {\r\n                    var t = z.clone();\r\n                    for(var j = 1; j < i; j++)\r\n                        t.multiply(z.clone());\r\n                    z = t;\r\n                }\r\n                output = output.multiply(z);\r\n                i++;\r\n                w = y;\r\n                c = c.divide(y)[0];\r\n            }\r\n\r\n            return [output, w, i];\r\n        },\r\n        /**\r\n         * Converts polynomial to Symbol\r\n         * @returns {Symbol}\r\n         */\r\n        toSymbol: function () {\r\n            var l = this.coeffs.length,\r\n                    variable = this.variable;\r\n            if(l === 0)\r\n                return new core.Symbol(0);\r\n            var end = l - 1, str = '';\r\n\r\n            for(var i = 0; i < l; i++) {\r\n                //place the plus sign for all but the last one\r\n                var plus = i === end ? '' : '+',\r\n                        e = this.coeffs[i];\r\n                if(!e.equals(0))\r\n                    str += (e + '*' + variable + '^' + i + plus);\r\n            }\r\n            return _.parse(str);\r\n        },\r\n        /**\r\n         * Checks if polynomial is equal to a number\r\n         * @param {Number} x\r\n         * @returns {Boolean}\r\n         */\r\n        equalsNumber: function (x) {\r\n            this.trim();\r\n            return this.coeffs.length === 1 && this.coeffs[0].toDecimal() === String(x);\r\n        },\r\n        toString: function () {\r\n            return this.toSymbol().toString();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * TODO\r\n     * ===================================================================================\r\n     * THIS METHOD HAS A NASTY HIDDEN BUG. IT HAS INCONSISTENT RETURN TYPES PRIMARILY DUE TO \r\n     * WRONG ASSUMPTIONS AT THE BEGINNING. THE ASSUMPTION WAS THAT COEFFS WERE ALWAYS GOING BE NUMBERS\r\n     * NOT TAKING INTO ACCOUNT THAT IMAGINARY NUMBERS. FIXING THIS BREAKS WAY TOO MANY TESTS \r\n     * AT THEM MOMENT WHICH I DON'T HAVE TO FIX\r\n     * ===================================================================================\r\n     * If the symbols is of group PL or CP it will return the multipliers of each symbol\r\n     * as these are polynomial coefficients. CB symbols are glued together by multiplication\r\n     * so the symbol multiplier carries the coefficients for all contained symbols.\r\n     * For S it just returns it's own multiplier. This function doesn't care if it's a polynomial or not\r\n     * @param {Array} c The coefficient array\r\n     * @param {boolean} with_order \r\n     * @return {Array}\r\n     */\r\n    Symbol.prototype.coeffs = function (c, with_order) {\r\n        if(with_order && !this.isPoly(true))\r\n            _.error('Polynomial expected when requesting coefficients with order');\r\n        c = c || [];\r\n        var s = this.clone().distributeMultiplier();\r\n        if(s.isComposite()) {\r\n            for(var x in s.symbols) {\r\n                var sub = s.symbols[x];\r\n                if(sub.isComposite()) {\r\n                    sub.clone().distributeMultiplier().coeffs(c, with_order);\r\n                }\r\n                else {\r\n                    if(with_order)\r\n                        c[sub.isConstant() ? 0 : sub.power.toDecimal()] = sub.multiplier;\r\n                    else {\r\n                        c.push(sub.multiplier);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if(with_order)\r\n                c[s.isConstant(true) ? 0 : s.power.toDecimal()] = s.multiplier;\r\n            else {\r\n                if(s.group === CB && s.isImaginary()) {\r\n                    var m = new Symbol(s.multiplier);\r\n                    s.each(function (x) {\r\n                        //add the imaginary part\r\n                        if(x.isConstant(true) || x.imaginary)\r\n                            m = _.multiply(m, x);\r\n                    });\r\n                    c.push(m);\r\n                }\r\n                else\r\n                    c.push(s.multiplier);\r\n            }\r\n        }\r\n        //fill the holes\r\n        if(with_order) {\r\n            for(var i = 0; i < c.length; i++)\r\n                if(c[i] === undefined)\r\n                    c[i] = new Symbol(0);\r\n        }\r\n        return c;\r\n    };\r\n    Symbol.prototype.tBase = function (map) {\r\n        if(typeof map === 'undefined')\r\n            throw new Error('Symbol.tBase requires a map object!');\r\n        var terms = [];\r\n        var symbols = this.collectSymbols(null, null, null, true),\r\n                l = symbols.length;\r\n        for(var i = 0; i < l; i++) {\r\n            var symbol = symbols[i],\r\n                    g = symbol.group,\r\n                    nterm = new MVTerm(symbol.multiplier, [], map);\r\n            if(g === CB) {\r\n                for(var x in symbol.symbols) {\r\n                    var sym = symbol.symbols[x];\r\n                    nterm.terms[map[x]] = sym.power;\r\n                }\r\n            }\r\n            else {\r\n                nterm.terms[map[symbol.value]] = symbol.power;\r\n            }\r\n\r\n            terms.push(nterm.fill());\r\n            nterm.updateCount();\r\n        }\r\n        return terms;\r\n    };\r\n    Symbol.prototype.altVar = function (x) {\r\n        var m = this.multiplier.toString(), p = this.power.toString();\r\n        return (m === '1' ? '' : m + '*') + x + (p === '1' ? '' : '^' + p);\r\n    };\r\n    /**\r\n     * Checks to see if the symbols contain the same variables\r\n     * @param {Symbol} symbol\r\n     * @returns {Boolean}\r\n     */\r\n    Symbol.prototype.sameVars = function (symbol) {\r\n        if(!(this.symbols || this.group === symbol.group))\r\n            return false;\r\n        for(var x in this.symbols) {\r\n            var a = this.symbols[x], b = symbol.symbols[x];\r\n            if(!b)\r\n                return false;\r\n            if(a.value !== b.value)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Groups the terms in a symbol with respect to a variable\r\n     * For instance the symbol {a*b^2*x^2+a*b*x^2+x+6} returns [6,1,a*b+a*b^2]\r\n     * @returns {Factors}\r\n     */\r\n    Symbol.prototype.groupTerms = function (x) {\r\n        x = String(x);\r\n        var f, p, egrouped;\r\n        var grouped = [];\r\n        this.each(function (e) {\r\n            if(e.group === PL) {\r\n                egrouped = e.groupTerms(x);\r\n                for(var i = 0; i < egrouped.length; i++) {\r\n                    var el = egrouped[i];\r\n                    if(el)\r\n                        grouped[i] = el;\r\n                }\r\n            }\r\n            else {\r\n                f = core.Utils.decompose_fn(e, x, true);\r\n                p = f.x.value === x ? Number(f.x.power) : 0;\r\n                //check if there's an existing value\r\n                grouped[p] = _.add(grouped[p] || new Symbol(0), f.a);\r\n            }\r\n        });\r\n        return grouped;\r\n    };\r\n    /**\r\n     * Use this to collect Factors\r\n     * @returns {Symbol[]}\r\n     */\r\n    Symbol.prototype.collectFactors = function () {\r\n        var factors = [];\r\n        if(this.group === CB)\r\n            this.each(function (x) {\r\n                factors.push(x.clone());\r\n            });\r\n        else\r\n            factors.push(this.clone());\r\n        return factors;\r\n    };\r\n    /**\r\n     * A container class for factors\r\n     * @returns {Factors}\r\n     */\r\n    function Factors() {\r\n        this.factors = {};\r\n        this.length = 0;\r\n    }\r\n    ;\r\n    Factors.prototype.getNumberSymbolics = function () {\r\n        var n = 0;\r\n        this.each(function (x) {\r\n            if(!x.isConstant(true))\r\n                n++;\r\n        });\r\n        return n;\r\n    };\r\n    /**\r\n     * Adds the factors to the factor object\r\n     * @param {Symbo} s\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.add = function (s) {\r\n        if(s.equals(0))\r\n            return this; //nothing to add\r\n\r\n        //we don't want to carry -1 as a factor. If a factor already exists,\r\n        //then add the minus one to that factor and return.\r\n        if(s.equals(-1) && this.length > 0) {\r\n            var fo = core.Utils.firstObject(this.factors, null, true);\r\n            this.add(_.symfunction(core.Settings.PARENTHESIS, [fo.obj]).negate());\r\n            delete this.factors[fo.key];\r\n            this.length--;\r\n            return this;\r\n        }\r\n\r\n        if(s.group === CB) {\r\n            var factors = this;\r\n            if(!s.multiplier.equals(1))\r\n                factors.add(new Symbol(s.multiplier));\r\n            s.each(function (x) {\r\n                factors.add(x);\r\n            });\r\n        }\r\n        else {\r\n            if(this.preAdd) //if a preAdd function was defined call it to do prep\r\n                s = this.preAdd(s);\r\n            if(this.pFactor) //if the symbol isn't linear add back the power\r\n                s = _.pow(s, new Symbol(this.pFactor));\r\n\r\n            var is_constant = s.isConstant();\r\n            if(is_constant && s.equals(1))\r\n                return this; //don't add 1\r\n            var v = is_constant ? s.value : s.text();\r\n            if(v in this.factors) {\r\n                this.factors[v] = _.multiply(this.factors[v], s);\r\n                //did the addition cancel out the existing factor? If so remove it and decrement the length\r\n                if(this.factors[v].equals(1)) {\r\n                    delete this.factors[v];\r\n                    this.length--;\r\n                }\r\n            }\r\n            else {\r\n                this.factors[v] = s;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the factor object to a Symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Factors.prototype.toSymbol = function () {\r\n        var factored = new Symbol(1);\r\n        var factors = Object.values(this.factors).sort(function (a, b) {\r\n            return a.group > b.group;\r\n        });\r\n\r\n        for(var i = 0, l = factors.length; i < l; i++) {\r\n            var f = factors[i];\r\n\r\n            //don't wrap group S or FN\r\n            var factor = f.power.equals(1) && f.fname !== '' /* don't wrap it twice */ ?\r\n                    _.symfunction(core.PARENTHESIS, [f]) : f;\r\n\r\n            factored = _.multiply(factored, factor);\r\n        }\r\n        if(factored.fname === '')\r\n            factored = Symbol.unwrapPARENS(factored);\r\n        return factored;\r\n    };\r\n    /**\r\n     * Merges 2 factor objects into one\r\n     * @param {Factor} o\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.merge = function (o) {\r\n        for(var x in o) {\r\n            if(x in this.factors)\r\n                this.factors[x] = _.multiply(this.factors[x], o[x]);\r\n            else\r\n                this.factors[x] = o[x];\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * The iterator for the factor object\r\n     * @param {Function} f - callback\r\n     * @returns {Factor}\r\n     */\r\n    Factors.prototype.each = function (f) {\r\n        for(var x in this.factors) {\r\n            var factor = this.factors[x];\r\n            if(factor.fname === core.PARENTHESIS && factor.isLinear())\r\n                factor = factor.args[0];\r\n            f.call(this, factor, x);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Return the number of factors contained in the factor object\r\n     * @returns {int}\r\n     */\r\n    Factors.prototype.count = function () {\r\n        return keys(this.factors).length;\r\n    };\r\n    /**\r\n     * Cleans up factors from -1\r\n     * @returns {undefined}\r\n     */\r\n    Factors.prototype.clean = function () {\r\n        try {\r\n            var h = core.Settings.CONST_HASH;\r\n            if(this.factors[h].lessThan(0)) {\r\n                if(this.factors[h].equals(-1))\r\n                    delete this.factors[h];\r\n                else\r\n                    this.factors[h].negate();\r\n                this.each(function (x) {\r\n                    x.negate();\r\n                });\r\n            }\r\n        }\r\n        catch(e) {\r\n        }\r\n        ;\r\n    };\r\n    Factors.prototype.toString = function () {\r\n        return this.toSymbol().toString();\r\n    };\r\n\r\n    //a wrapper for performing multivariate division\r\n    function MVTerm(coeff, terms, map) {\r\n        this.terms = terms || [];\r\n        this.coeff = coeff;\r\n        this.map = map; //careful! all maps are the same object\r\n        this.sum = new core.Frac(0);\r\n        this.image = undefined;\r\n    }\r\n    ;\r\n    MVTerm.prototype.updateCount = function () {\r\n        this.count = this.count || 0;\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            if(!this.terms[i].equals(0))\r\n                this.count++;\r\n        }\r\n        return this;\r\n    };\r\n    MVTerm.prototype.getVars = function () {\r\n        var vars = [];\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            var term = this.terms[i],\r\n                    rev_map = this.getRevMap();\r\n            if(!term.equals(0))\r\n                vars.push(this.rev_map[i]);\r\n        }\r\n        return vars.join(' ');\r\n    };\r\n    MVTerm.prototype.len = function () {\r\n        if(typeof this.count === 'undefined') {\r\n            this.updateCount();\r\n        }\r\n        return this.count;\r\n    };\r\n    MVTerm.prototype.toSymbol = function (rev_map) {\r\n        rev_map = rev_map || this.getRevMap();\r\n        var symbol = new Symbol(this.coeff);\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            var v = rev_map[i],\r\n                    t = this.terms[i];\r\n            if(t.equals(0) || v === CONST_HASH)\r\n                continue;\r\n            var mapped = new Symbol(v);\r\n            mapped.power = t;\r\n            symbol = _.multiply(symbol, mapped);\r\n        }\r\n        return symbol;\r\n    };\r\n    MVTerm.prototype.getRevMap = function () {\r\n        if(this.rev_map)\r\n            return this.rev_map;\r\n        var o = {};\r\n        for(var x in this.map)\r\n            o[this.map[x]] = x;\r\n        this.rev_map = o;\r\n        return o;\r\n    };\r\n    MVTerm.prototype.generateImage = function () {\r\n        this.image = this.terms.join(' ');\r\n        return this;\r\n    },\r\n            MVTerm.prototype.getImg = function () {\r\n                if(!this.image)\r\n                    this.generateImage();\r\n                return this.image;\r\n            },\r\n            MVTerm.prototype.fill = function () {\r\n                var l = this.map.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    if(typeof this.terms[i] === 'undefined')\r\n                        this.terms[i] = new core.Frac(0);\r\n                    else {\r\n                        this.sum = this.sum.add(this.terms[i]);\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n    MVTerm.prototype.divide = function (mvterm) {\r\n        var c = this.coeff.divide(mvterm.coeff),\r\n                l = this.terms.length,\r\n                new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i = 0; i < l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].subtract(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.multiply = function (mvterm) {\r\n        var c = this.coeff.multiply(mvterm.coeff),\r\n                l = this.terms.length,\r\n                new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i = 0; i < l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].add(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.isZero = function () {\r\n        return this.coeff.equals(0);\r\n    };\r\n    MVTerm.prototype.toString = function () {\r\n        return '{ coeff: ' + this.coeff.toString() + ', terms: [' +\r\n                this.terms.join(',') + ']: sum: ' + this.sum.toString() + ', count: ' + this.count + '}';\r\n    };\r\n\r\n    core.Utils.toMapObj = function (arr) {\r\n        var c = 0, o = {};\r\n        for(var i = 0; i < arr.length; i++) {\r\n            var v = arr[i];\r\n            if(typeof o[v] === 'undefined') {\r\n                o[v] = c;\r\n                c++;\r\n            }\r\n        }\r\n        o.length = c;\r\n        return o;\r\n    };\r\n    core.Utils.filledArray = function (v, n, clss) {\r\n        var a = [];\r\n        while(n--) {\r\n            a[n] = clss ? new clss(v) : v;\r\n        }\r\n        return a;\r\n    };\r\n    core.Utils.arrSum = function (arr) {\r\n        var sum = 0, l = arr.length;\r\n        for(var i = 0; i < l; i++)\r\n            sum += arr[i];\r\n        return sum;\r\n    };\r\n    /**\r\n     * Determines if 2 arrays have intersecting elements.\r\n     * @param {Array} a\r\n     * @param {Array} b\r\n     * @returns {Boolean} True if a and b have intersecting elements.\r\n     */\r\n    core.Utils.haveIntersection = function (a, b) {\r\n        var t;\r\n        if(b.length > a.length)\r\n            t = b, b = a, a = t; // indexOf to loop over shorter\r\n        return a.some(function (e) {\r\n            return b.indexOf(e) > -1;\r\n        });\r\n    };\r\n    /**\r\n     * Substitutes out functions as variables so they can be used in regular algorithms\r\n     * @param {Symbol} symbol\r\n     * @param {Object} map\r\n     * @returns {String} The expression string\r\n     */\r\n    core.Utils.subFunctions = function (symbol, map) {\r\n        map = map || {};\r\n        var subbed = [];\r\n        symbol.each(function (x) {\r\n            if(x.group === FN || x.previousGroup === FN) {\r\n                //we need a new variable name so why not use one of the existing\r\n                var val = core.Utils.text(x, 'hash'), tvar = map[val];\r\n                if(!tvar) {\r\n                    //generate a unique enough name\r\n                    var t = x.fname + keys(map).length;\r\n                    map[val] = t;\r\n                    subbed.push(x.altVar(t));\r\n                }\r\n                else\r\n                    subbed.push(x.altVar(tvar));\r\n            }\r\n            else if(x.group === CB || x.group === PL || x.group === CP) {\r\n                subbed.push(core.Utils.subFunctions(x, map));\r\n            }\r\n            else\r\n                subbed.push(x.text());\r\n        });\r\n        if(symbol.group === CP || symbol.group === PL)\r\n            return symbol.altVar(core.Utils.inBrackets(subbed.join('+')));\r\n        ;\r\n        if(symbol.group === CB)\r\n            return symbol.altVar(core.Utils.inBrackets(subbed.join('*')));\r\n        return symbol.text();\r\n    };\r\n    core.Utils.getFunctionsSubs = function (map) {\r\n        var subs = {};\r\n        //prepare substitutions\r\n        for(var x in map)\r\n            subs[map[x]] = _.parse(x);\r\n        return subs;\r\n    };\r\n\r\n    var __ = core.Algebra = {\r\n        version: '1.4.6',\r\n        proots: function (symbol, decp) {\r\n            //the roots will be rounded up to 7 decimal places.\r\n            //if this causes trouble you can explicitly pass in a different number of places\r\n            //rarr for polynomial of power n is of format [n, coeff x^n, coeff x^(n-1), ..., coeff x^0]\r\n            decp = decp || 7;\r\n            var zeros = 0;\r\n            var known_roots = [];\r\n            var get_roots = function (rarr, powers, max) {\r\n                var roots = calcroots(rarr, powers, max).concat(known_roots);\r\n                for(var i = 0; i < zeros; i++)\r\n                    roots.unshift(0);\r\n                return roots;\r\n            };\r\n\r\n            if(symbol instanceof Symbol && symbol.isPoly()) {\r\n                symbol.distributeMultiplier();\r\n                //make it so the symbol has a constants as the lowest term\r\n                if(symbol.group === PL) {\r\n                    var lowest_pow = core.Utils.arrayMin(keys(symbol.symbols));\r\n                    var lowest_symbol = symbol.symbols[lowest_pow].clone().toUnitMultiplier();\r\n                    symbol = _.expand(_.divide(symbol, lowest_symbol));\r\n                    known_roots.push(0); //add zero since this is a known root\r\n                }\r\n                if(symbol.group === core.groups.S) {\r\n                    return [0];\r\n                }\r\n                else if(symbol.group === core.groups.PL) {\r\n                    var powers = keys(symbol.symbols),\r\n                            minpower = core.Utils.arrayMin(powers),\r\n                            symbol = core.PARSER.divide(symbol, core.PARSER.parse(symbol.value + '^' + minpower));\r\n                }\r\n\r\n                var variable = keys(symbol.symbols).sort().pop(),\r\n                        sym = symbol.group === core.groups.PL ? symbol.symbols : symbol.symbols[variable],\r\n                        g = sym.group,\r\n                        powers = g === S ? [sym.power.toDecimal()] : keys(sym.symbols),\r\n                        rarr = [],\r\n                        max = core.Utils.arrayMax(powers); //maximum power and degree of polynomial to be solved\r\n\r\n                // Prepare the data\r\n                for(var i = 1; i <= max; i++) {\r\n                    var c = 0; //if there is no power then the hole must be filled with a zero\r\n                    if(powers.indexOf(i + '') !== -1) {\r\n                        if(g === S) {\r\n                            c = sym.multiplier;\r\n                        }\r\n                        else {\r\n                            c = sym.symbols[i].multiplier;\r\n                        }\r\n                    }\r\n                    // Insert the coeffient but from the front\r\n                    rarr.unshift(c);\r\n                }\r\n\r\n                rarr.push(symbol.symbols[CONST_HASH].multiplier);\r\n\r\n                if(sym.group === S)\r\n                    rarr[0] = sym.multiplier;//the symbol maybe of group CP with one variable\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else if(core.Utils.isArray(symbol)) {\r\n                var parr = symbol;\r\n                var rarr = [],\r\n                        powers = [],\r\n                        last_power = 0;\r\n                for(var i = 0; i < parr.length; i++) {\r\n\r\n                    var coeff = parr[i][0],\r\n                            pow = parr[i][1],\r\n                            d = pow - last_power - 1;\r\n                    //insert the zeros\r\n                    for(var j = 0; j < d; j++)\r\n                        rarr.unshift(0);\r\n\r\n                    rarr.unshift(coeff);\r\n                    if(pow !== 0)\r\n                        powers.push(pow);\r\n                    last_power = pow;\r\n                }\r\n                var max = Math.max.apply(undefined, powers);\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else {\r\n                throw new core.exceptions.NerdamerTypeError('Cannot calculate roots. Symbol must be a polynomial!');\r\n            }\r\n\r\n            function calcroots(rarr, powers, max) {\r\n                var MAXDEGREE = 100; // Degree of largest polynomial accepted by this script.\r\n\r\n                // Make a clone of the coefficients before appending the max power\r\n                var p = rarr.slice(0);\r\n\r\n                // Divide the string up into its individual entries, which--presumably--are separated by whitespace\r\n                rarr.unshift(max);\r\n\r\n                if(max > MAXDEGREE) {\r\n                    throw new core.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to \" + MAXDEGREE + \". \");\r\n                }\r\n\r\n                var zeroi = [], // Vector of imaginary components of roots\r\n                        degreePar = {};    // degreePar is a dummy variable for passing the parameter POLYDEGREE by reference\r\n                degreePar.Degree = max;\r\n\r\n                for(i = 0; i < max; i++) {\r\n                    zeroi.push(0);\r\n                }\r\n                var zeror = zeroi.slice(0); // Vector of real components of roots\r\n\r\n                // Find the roots\r\n                //--> Begin Jenkins-Traub\r\n\r\n                /*\r\n                 * A verbatim copy of Mr. David Binner's Jenkins-Traub port\r\n                 */\r\n                function QuadSD_ak1(NN, u, v, p, q, iPar) {\r\n                    // Divides p by the quadratic 1, u, v placing the quotient in q and the remainder in a, b\r\n                    // iPar is a dummy variable for passing in the two parameters--a and b--by reference\r\n                    q[0] = iPar.b = p[0];\r\n                    q[1] = iPar.a = -(u * iPar.b) + p[1];\r\n\r\n                    for(var i = 2; i < NN; i++) {\r\n                        q[i] = -(u * iPar.a + v * iPar.b) + p[i];\r\n                        iPar.b = iPar.a;\r\n                        iPar.a = q[i];\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function calcSC_ak1(DBL_EPSILON, N, a, b, iPar, K, u, v, qk) {\r\n                    // This routine calculates scalar quantities used to compute the next K polynomial and\r\n                    // new estimates of the quadratic coefficients.\r\n                    // calcSC -\tinteger variable set here indicating how the calculations are normalized\r\n                    // to avoid overflow.\r\n                    // iPar is a dummy variable for passing in the nine parameters--a1, a3, a7, c, d, e, f, g, and h --by reference\r\n\r\n                    // sdPar is a dummy variable for passing the two parameters--c and d--into QuadSD_ak1 by reference\r\n                    var sdPar = new Object(),\r\n                            // TYPE = 3 indicates the quadratic is almost a factor of K\r\n                            dumFlag = 3;\r\n\r\n                    // Synthetic division of K by the quadratic 1, u, v\r\n                    sdPar.b = sdPar.a = 0.0;\r\n                    QuadSD_ak1(N, u, v, K, qk, sdPar);\r\n                    iPar.c = sdPar.a;\r\n                    iPar.d = sdPar.b;\r\n\r\n                    if(Math.abs(iPar.c) <= (100.0 * DBL_EPSILON * Math.abs(K[N - 1]))) {\r\n                        if(Math.abs(iPar.d) <= (100.0 * DBL_EPSILON * Math.abs(K[N - 2])))\r\n                            return dumFlag;\r\n                    }\r\n\r\n                    iPar.h = v * b;\r\n                    if(Math.abs(iPar.d) >= Math.abs(iPar.c)) {\r\n                        // TYPE = 2 indicates that all formulas are divided by d\r\n                        dumFlag = 2;\r\n                        iPar.e = a / (iPar.d);\r\n                        iPar.f = (iPar.c) / (iPar.d);\r\n                        iPar.g = u * b;\r\n                        iPar.a3 = (iPar.e) * ((iPar.g) + a) + (iPar.h) * (b / (iPar.d));\r\n                        iPar.a1 = -a + (iPar.f) * b;\r\n                        iPar.a7 = (iPar.h) + ((iPar.f) + u) * a;\r\n                    }\r\n                    else {\r\n                        // TYPE = 1 indicates that all formulas are divided by c;\r\n                        dumFlag = 1;\r\n                        iPar.e = a / (iPar.c);\r\n                        iPar.f = (iPar.d) / (iPar.c);\r\n                        iPar.g = (iPar.e) * u;\r\n                        iPar.a3 = (iPar.e) * a + ((iPar.g) + (iPar.h) / (iPar.c)) * b;\r\n                        iPar.a1 = -(a * ((iPar.d) / (iPar.c))) + b;\r\n                        iPar.a7 = (iPar.g) * (iPar.d) + (iPar.h) * (iPar.f) + a;\r\n                    }\r\n                    return dumFlag;\r\n                }\r\n\r\n                function nextK_ak1(DBL_EPSILON, N, tFlag, a, b, iPar, K, qk, qp) {\r\n                    // Computes the next K polynomials using the scalars computed in calcSC_ak1\r\n                    // iPar is a dummy variable for passing in three parameters--a1, a3, and a7\r\n                    var temp;\r\n                    if(tFlag == 3) {\t// Use unscaled form of the recurrence\r\n                        K[1] = K[0] = 0.0;\r\n                        for(var i = 2; i < N; i++) {\r\n                            K[i] = qk[i - 2];\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    temp = ((tFlag == 1) ? b : a);\r\n                    if(Math.abs(iPar.a1) > (10.0 * DBL_EPSILON * Math.abs(temp))) {\r\n                        // Use scaled form of the recurrence\r\n                        iPar.a7 /= iPar.a1;\r\n                        iPar.a3 /= iPar.a1;\r\n                        K[0] = qp[0];\r\n                        K[1] = -(qp[0] * iPar.a7) + qp[1];\r\n                        for(var i = 2; i < N; i++)\r\n                            K[i] = -(qp[i - 1] * iPar.a7) + qk[i - 2] * iPar.a3 + qp[i];\r\n                    }\r\n                    else {\r\n                        // If a1 is nearly zero, then use a special form of the recurrence\r\n                        K[0] = 0.0;\r\n                        K[1] = -(qp[0] * iPar.a7);\r\n                        for(var i = 2; i < N; i++) {\r\n                            K[i] = -(qp[i - 1] * iPar.a7) + qk[i - 2] * iPar.a3;\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function newest_ak1(tFlag, iPar, a, a1, a3, a7, b, c, d, f, g, h, u, v, K, N, p) {\r\n                    // Compute new estimates of the quadratic coefficients using the scalars computed in calcSC_ak1\r\n                    // iPar is a dummy variable for passing in the two parameters--uu and vv--by reference\r\n                    // iPar.a = uu, iPar.b = vv\r\n\r\n                    var a4, a5, b1, b2, c1, c2, c3, c4, temp;\r\n                    iPar.b = iPar.a = 0.0;// The quadratic is zeroed\r\n\r\n                    if(tFlag != 3) {\r\n                        if(tFlag != 2) {\r\n                            a4 = a + u * b + h * f;\r\n                            a5 = c + (u + v * f) * d;\r\n                        }\r\n                        else {\r\n                            a4 = (a + g) * f + h;\r\n                            a5 = (f + u) * c + v * d;\r\n                        }\r\n\r\n                        // Evaluate new quadratic coefficients\r\n                        b1 = -(K[N - 1] / p[N]);\r\n                        b2 = -(K[N - 2] + b1 * p[N - 1]) / p[N];\r\n                        c1 = v * b2 * a1;\r\n                        c2 = b1 * a7;\r\n                        c3 = b1 * b1 * a3;\r\n                        c4 = -(c2 + c3) + c1;\r\n                        temp = -c4 + a5 + b1 * a4;\r\n                        if(temp != 0.0) {\r\n                            iPar.a = -((u * (c3 + c2) + v * (b1 * a1 + b2 * a7)) / temp) + u;\r\n                            iPar.b = v * (1.0 + c4 / temp);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function Quad_ak1(a, b1, c, iPar) {\r\n                    // Calculates the zeros of the quadratic a*Z^2 + b1*Z + c\r\n                    // The quadratic formula, modified to avoid overflow, is used to find the larger zero if the\r\n                    // zeros are real and both zeros are complex. The smaller real zero is found directly from\r\n                    // the product of the zeros c/a.\r\n\r\n                    // iPar is a dummy variable for passing in the four parameters--sr, si, lr, and li--by reference\r\n\r\n                    var b, d, e;\r\n                    iPar.sr = iPar.si = iPar.lr = iPar.li = 0.0;\r\n\r\n                    if(a == 0) {\r\n                        iPar.sr = ((b1 != 0) ? -(c / b1) : iPar.sr);\r\n                        return;\r\n                    }\r\n                    if(c == 0) {\r\n                        iPar.lr = -(b1 / a);\r\n                        return;\r\n                    }\r\n\r\n                    // Compute discriminant avoiding overflow\r\n                    b = b1 / 2.0;\r\n                    if(Math.abs(b) < Math.abs(c)) {\r\n                        e = ((c >= 0) ? a : -a);\r\n                        e = -e + b * (b / Math.abs(c));\r\n                        d = Math.sqrt(Math.abs(e)) * Math.sqrt(Math.abs(c));\r\n                    }\r\n                    else {\r\n                        e = -((a / b) * (c / b)) + 1.0;\r\n                        d = Math.sqrt(Math.abs(e)) * (Math.abs(b));\r\n                    }\r\n\r\n                    if(e >= 0) {\r\n                        // Real zeros\r\n                        d = ((b >= 0) ? -d : d);\r\n                        iPar.lr = (-b + d) / a;\r\n                        iPar.sr = ((iPar.lr != 0) ? (c / (iPar.lr)) / a : iPar.sr);\r\n                    }\r\n                    else {\r\n                        // Complex conjugate zeros\r\n                        iPar.lr = iPar.sr = -(b / a);\r\n                        iPar.si = Math.abs(d / a);\r\n                        iPar.li = -(iPar.si);\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function QuadIT_ak1(DBL_EPSILON, N, iPar, uu, vv, qp, NN, sdPar, p, qk, calcPar, K) {\r\n                    // Variable-shift K-polynomial iteration for a quadratic factor converges only if the\r\n                    // zeros are equimodular or nearly so.\r\n                    // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                    // sdPar is a dummy variable for passing the two parameters--a and b--in by reference\r\n                    // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --in by reference\r\n\r\n                    // qPar is a dummy variable for passing the four parameters--szr, szi, lzr, and lzi--into Quad_ak1 by reference\r\n                    var qPar = new Object(),\r\n                            ee, mp, omp, relstp, t, u, ui, v, vi, zm,\r\n                            i, j = 0, tFlag, triedFlag = 0;   // Integer variables\r\n\r\n                    iPar.NZ = 0;// Number of zeros found\r\n                    u = uu; // uu and vv are coefficients of the starting quadratic\r\n                    v = vv;\r\n\r\n                    do {\r\n                        qPar.li = qPar.lr = qPar.si = qPar.sr = 0.0;\r\n                        Quad_ak1(1.0, u, v, qPar);\r\n                        iPar.szr = qPar.sr;\r\n                        iPar.szi = qPar.si;\r\n                        iPar.lzr = qPar.lr;\r\n                        iPar.lzi = qPar.li;\r\n\r\n                        // Return if roots of the quadratic are real and not close to multiple or nearly\r\n                        // equal and of opposite sign.\r\n                        if(Math.abs(Math.abs(iPar.szr) - Math.abs(iPar.lzr)) > 0.01 * Math.abs(iPar.lzr))\r\n                            break;\r\n\r\n                        // Evaluate polynomial by quadratic synthetic division\r\n\r\n                        QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n\r\n                        mp = Math.abs(-((iPar.szr) * (sdPar.b)) + (sdPar.a)) + Math.abs((iPar.szi) * (sdPar.b));\r\n\r\n                        // Compute a rigorous bound on the rounding error in evaluating p\r\n\r\n                        zm = Math.sqrt(Math.abs(v));\r\n                        ee = 2.0 * Math.abs(qp[0]);\r\n                        t = -((iPar.szr) * (sdPar.b));\r\n\r\n                        for(i = 1; i < N; i++) {\r\n                            ee = ee * zm + Math.abs(qp[i]);\r\n                        }\r\n\r\n                        ee = ee * zm + Math.abs(t + sdPar.a);\r\n                        ee = (9.0 * ee + 2.0 * Math.abs(t) - 7.0 * (Math.abs((sdPar.a) + t) + zm * Math.abs((sdPar.b)))) * DBL_EPSILON;\r\n\r\n                        // Iteration has converged sufficiently if the polynomial value is less than 20 times this bound\r\n                        if(mp <= 20.0 * ee) {\r\n                            iPar.NZ = 2;\r\n                            break;\r\n                        }\r\n\r\n                        j++;\r\n                        // Stop iteration after 20 steps\r\n                        if(j > 20)\r\n                            break;\r\n                        if(j >= 2) {\r\n                            if((relstp <= 0.01) && (mp >= omp) && (!triedFlag)) {\r\n                                // A cluster appears to be stalling the convergence. Five fixed shift\r\n                                // steps are taken with a u, v close to the cluster.\r\n                                relstp = ((relstp < DBL_EPSILON) ? Math.sqrt(DBL_EPSILON) : Math.sqrt(relstp));\r\n                                u -= u * relstp;\r\n                                v += v * relstp;\r\n\r\n                                QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                                for(i = 0; i < 5; i++) {\r\n                                    tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                                    nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                                }\r\n\r\n                                triedFlag = 1;\r\n                                j = 0;\r\n\r\n                            }\r\n                        }\r\n                        omp = mp;\r\n\r\n                        // Calculate next K polynomial and new u and v\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                        nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                        newest_ak1(tFlag, sdPar, sdPar.a, calcPar.a1, calcPar.a3, calcPar.a7, sdPar.b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                        ui = sdPar.a;\r\n                        vi = sdPar.b;\r\n\r\n                        // If vi is zero, the iteration is not converging\r\n                        if(vi != 0) {\r\n                            relstp = Math.abs((-v + vi) / vi);\r\n                            u = ui;\r\n                            v = vi;\r\n                        }\r\n                    }\r\n                    while(vi != 0);\r\n                    return;\r\n                }\r\n\r\n                function RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk) {\r\n                    // Variable-shift H-polynomial iteration for a real zero\r\n                    // sss\t- starting iterate = sdPar.a\r\n                    // NZ\t\t- number of zeros found = iPar.NZ\r\n                    // dumFlag\t- flag to indicate a pair of zeros near real axis, returned to iFlag\r\n\r\n                    var ee, kv, mp, ms, omp, pv, s, t,\r\n                            dumFlag, i, j, nm1 = N - 1;   // Integer variables\r\n\r\n                    iPar.NZ = j = dumFlag = 0;\r\n                    s = sdPar.a;\r\n\r\n                    for(; ; ) {\r\n                        pv = p[0];\r\n\r\n                        // Evaluate p at s\r\n                        qp[0] = pv;\r\n                        for(i = 1; i < NN; i++) {\r\n                            qp[i] = pv = pv * s + p[i];\r\n                        }\r\n                        mp = Math.abs(pv);\r\n\r\n                        // Compute a rigorous bound on the error in evaluating p\r\n                        ms = Math.abs(s);\r\n                        ee = 0.5 * Math.abs(qp[0]);\r\n                        for(i = 1; i < NN; i++) {\r\n                            ee = ee * ms + Math.abs(qp[i]);\r\n                        }\r\n\r\n                        // Iteration has converged sufficiently if the polynomial value is less than\r\n                        // 20 times this bound\r\n                        if(mp <= 20.0 * DBL_EPSILON * (2.0 * ee - mp)) {\r\n                            iPar.NZ = 1;\r\n                            iPar.szr = s;\r\n                            iPar.szi = 0.0;\r\n                            break;\r\n                        }\r\n                        j++;\r\n                        // Stop iteration after 10 steps\r\n                        if(j > 10)\r\n                            break;\r\n\r\n                        if(j >= 2) {\r\n                            if((Math.abs(t) <= 0.001 * Math.abs(-t + s)) && (mp > omp)) {\r\n                                // A cluster of zeros near the real axis has been encountered.\r\n                                // Return with iFlag set to initiate a quadratic iteration.\r\n                                dumFlag = 1;\r\n                                iPar.a = s;\r\n                                break;\r\n                            } // End if ((fabs(t) <= 0.001*fabs(s - t)) && (mp > omp))\r\n                        } //End if (j >= 2)\r\n\r\n                        // Return if the polynomial value has increased significantly\r\n                        omp = mp;\r\n\r\n                        // Compute t, the next polynomial and the new iterate\r\n                        qk[0] = kv = K[0];\r\n                        for(i = 1; i < N; i++) {\r\n                            qk[i] = kv = kv * s + K[i];\r\n                        }\r\n\r\n                        if(Math.abs(kv) > Math.abs(K[nm1]) * 10.0 * DBL_EPSILON) {\r\n                            // Use the scaled form of the recurrence if the value of K at s is non-zero\r\n                            t = -(pv / kv);\r\n                            K[0] = qp[0];\r\n                            for(i = 1; i < N; i++) {\r\n                                K[i] = t * qk[i - 1] + qp[i];\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Use unscaled form\r\n                            K[0] = 0.0;\r\n                            for(i = 1; i < N; i++)\r\n                                K[i] = qk[i - 1];\r\n                        }\r\n\r\n                        kv = K[0];\r\n                        for(i = 1; i < N; i++) {\r\n                            kv = kv * s + K[i];\r\n                        }\r\n                        t = ((Math.abs(kv) > (Math.abs(K[nm1]) * 10.0 * DBL_EPSILON)) ? -(pv / kv) : 0.0);\r\n                        s += t;\r\n                    }\r\n                    return dumFlag;\r\n                }\r\n\r\n                function Fxshfr_ak1(DBL_EPSILON, MDP1, L2, sr, v, K, N, p, NN, qp, u, iPar) {\r\n\r\n                    // Computes up to L2 fixed shift K-polynomials, testing for convergence in the linear or\r\n                    // quadratic case. Initiates one of the variable shift iterations and returns with the\r\n                    // number of zeros found.\r\n                    // L2\tlimit of fixed shift steps\r\n                    // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                    // NZ\tnumber of zeros found\r\n                    var sdPar = new Object(), // sdPar is a dummy variable for passing the two parameters--a and b--into QuadSD_ak1 by reference\r\n                            calcPar = new Object(),\r\n                            // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --into calcSC_ak1 by reference\r\n\r\n                            qk = new Array(MDP1),\r\n                            svk = new Array(MDP1),\r\n                            a, b, betas, betav, oss, ots, otv, ovv, s, ss, ts, tss, tv, tvv, ui, vi, vv,\r\n                            fflag, i, iFlag = 1, j, spass, stry, tFlag, vpass, vtry;     // Integer variables\r\n\r\n                    iPar.NZ = 0;\r\n                    betav = betas = 0.25;\r\n                    oss = sr;\r\n                    ovv = v;\r\n\r\n                    //Evaluate polynomial by synthetic division\r\n                    sdPar.b = sdPar.a = 0.0;\r\n                    QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                    a = sdPar.a;\r\n                    b = sdPar.b;\r\n                    calcPar.h = calcPar.g = calcPar.f = calcPar.e = calcPar.d = calcPar.c = calcPar.a7 = calcPar.a3 = calcPar.a1 = 0.0;\r\n                    tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                    for(j = 0; j < L2; j++) {\r\n                        fflag = 1;\r\n\r\n                        // Calculate next K polynomial and estimate v\r\n                        nextK_ak1(DBL_EPSILON, N, tFlag, a, b, calcPar, K, qk, qp);\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                        // Use sdPar for passing in uu and vv instead of defining a brand-new variable.\r\n                        // sdPar.a = ui, sdPar.b = vi\r\n                        newest_ak1(tFlag, sdPar, a, calcPar.a1, calcPar.a3, calcPar.a7, b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                        ui = sdPar.a;\r\n                        vv = vi = sdPar.b;\r\n\r\n                        // Estimate s\r\n                        ss = ((K[N - 1] != 0.0) ? -(p[N] / K[N - 1]) : 0.0);\r\n                        ts = tv = 1.0;\r\n\r\n                        if((j != 0) && (tFlag != 3)) {\r\n                            // Compute relative measures of convergence of s and v sequences\r\n                            tv = ((vv != 0.0) ? Math.abs((vv - ovv) / vv) : tv);\r\n                            ts = ((ss != 0.0) ? Math.abs((ss - oss) / ss) : ts);\r\n\r\n                            // If decreasing, multiply the two most recent convergence measures\r\n                            tvv = ((tv < otv) ? tv * otv : 1.0);\r\n                            tss = ((ts < ots) ? ts * ots : 1.0);\r\n\r\n                            // Compare with convergence criteria\r\n                            vpass = ((tvv < betav) ? 1 : 0);\r\n                            spass = ((tss < betas) ? 1 : 0);\r\n\r\n                            if((spass) || (vpass)) {\r\n\r\n                                // At least one sequence has passed the convergence test.\r\n                                // Store variables before iterating\r\n\r\n                                for(i = 0; i < N; i++) {\r\n                                    svk[i] = K[i];\r\n                                }\r\n                                s = ss;\r\n\r\n                                // Choose iteration according to the fastest converging sequence\r\n\r\n                                stry = vtry = 0;\r\n\r\n                                for(; ; ) {\r\n                                    if((fflag && ((fflag = 0) == 0)) && ((spass) && (!vpass || (tss < tvv)))) {\r\n                                        ;// Do nothing. Provides a quick \"short circuit\".\r\n                                    }\r\n                                    else {\r\n                                        QuadIT_ak1(DBL_EPSILON, N, iPar, ui, vi, qp, NN, sdPar, p, qk, calcPar, K);\r\n                                        a = sdPar.a;\r\n                                        b = sdPar.b;\r\n\r\n                                        if((iPar.NZ) > 0)\r\n                                            return;\r\n\r\n                                        // Quadratic iteration has failed. Flag that it has been tried and decrease the\r\n                                        // convergence criterion\r\n                                        iFlag = vtry = 1;\r\n                                        betav *= 0.25;\r\n\r\n                                        // Try linear iteration if it has not been tried and the s sequence is converging\r\n                                        if(stry || (!spass)) {\r\n                                            iFlag = 0;\r\n                                        }\r\n                                        else {\r\n                                            for(i = 0; i < N; i++)\r\n                                                K[i] = svk[i];\r\n                                        }\r\n                                    }\r\n                                    //fflag = 0;\r\n                                    if(iFlag != 0) {\r\n                                        // Use sdPar for passing in s instead of defining a brand-new variable.\r\n                                        // sdPar.a = s\r\n                                        sdPar.a = s;\r\n                                        iFlag = RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk);\r\n                                        s = sdPar.a;\r\n\r\n                                        if((iPar.NZ) > 0)\r\n                                            return;\r\n\r\n                                        // Linear iteration has failed. Flag that it has been tried and decrease the\r\n                                        // convergence criterion\r\n                                        stry = 1;\r\n                                        betas *= 0.25;\r\n\r\n                                        if(iFlag != 0) {\r\n                                            // If linear iteration signals an almost double real zero, attempt quadratic iteration\r\n                                            ui = -(s + s);\r\n                                            vi = s * s;\r\n                                            continue;\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                    // Restore variables\r\n                                    for(i = 0; i < N; i++)\r\n                                        K[i] = svk[i];\r\n\r\n                                    // Try quadratic iteration if it has not been tried and the v sequence is converging\r\n                                    if(!vpass || vtry)\r\n                                        break;\t\t// Break out of infinite for loop\r\n\r\n                                }\r\n\r\n                                // Re-compute qp and scalar values to continue the second stage\r\n\r\n                                QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                                a = sdPar.a;\r\n                                b = sdPar.b;\r\n\r\n                                tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n                            }\r\n                        }\r\n                        ovv = vv;\r\n                        oss = ss;\r\n                        otv = tv;\r\n                        ots = ts;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function rpSolve(degPar, p, zeror, zeroi) {\r\n                    var N = degPar.Degree,\r\n                            RADFAC = 3.14159265358979323846 / 180, // Degrees-to-radians conversion factor = PI/180\r\n                            LB2 = Math.LN2, // Dummy variable to avoid re-calculating this value in loop below\r\n                            MDP1 = degPar.Degree + 1,\r\n                            K = new Array(MDP1),\r\n                            pt = new Array(MDP1),\r\n                            qp = new Array(MDP1),\r\n                            temp = new Array(MDP1),\r\n                            // qPar is a dummy variable for passing the four parameters--sr, si, lr, and li--by reference\r\n                            qPar = new Object(),\r\n                            // Fxshfr_Par is a dummy variable for passing parameters by reference : NZ, lzi, lzr, szi, szr);\r\n                            Fxshfr_Par = new Object(),\r\n                            bnd, DBL_EPSILON, df, dx, factor, ff, moduli_max, moduli_min, sc, x, xm,\r\n                            aa, bb, cc, sr, t, u, xxx,\r\n                            j, jj, l, NM1, NN, zerok;// Integer variables\r\n\r\n                    // Calculate the machine epsilon and store in the variable DBL_EPSILON.\r\n                    // To calculate this value, just use existing variables rather than create new ones that will be used only for this code block\r\n                    aa = 1.0;\r\n                    do {\r\n                        DBL_EPSILON = aa;\r\n                        aa /= 2;\r\n                        bb = 1.0 + aa;\r\n                    }\r\n                    while(bb > 1.0);\r\n\r\n                    var LO = Number.MIN_VALUE / DBL_EPSILON,\r\n                            cosr = Math.cos(94.0 * RADFAC), // = -0.069756474\r\n                            sinr = Math.sin(94.0 * RADFAC), // = 0.99756405\r\n                            xx = Math.sqrt(0.5), // = 0.70710678\r\n                            yy = -xx;\r\n\r\n                    Fxshfr_Par.NZ = j = 0;\r\n                    Fxshfr_Par.szr = Fxshfr_Par.szi = Fxshfr_Par.lzr = Fxshfr_Par.lzi = 0.0;\r\n\r\n                    // Remove zeros at the origin, if any\r\n                    while(p[N] == 0) {\r\n                        zeror[j] = zeroi[j] = 0;\r\n                        N--;\r\n                        j++;\r\n                    }\r\n                    NN = N + 1;\r\n\r\n                    // >>>>> Begin Main Loop <<<<<\r\n                    while(N >= 1) { // Main loop\r\n                        // Start the algorithm for one zero\r\n                        if(N <= 2) {\r\n                            // Calculate the final zero or pair of zeros\r\n                            if(N < 2) {\r\n                                zeror[degPar.Degree - 1] = -(p[1] / p[0]);\r\n                                zeroi[degPar.Degree - 1] = 0;\r\n                            }\r\n                            else {\r\n                                qPar.li = qPar.lr = qPar.si = qPar.sr = 0.0;\r\n                                Quad_ak1(p[0], p[1], p[2], qPar);\r\n                                zeror[degPar.Degree - 2] = qPar.sr;\r\n                                zeroi[degPar.Degree - 2] = qPar.si;\r\n                                zeror[degPar.Degree - 1] = qPar.lr;\r\n                                zeroi[degPar.Degree - 1] = qPar.li;\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        // Find the largest and smallest moduli of the coefficients\r\n                        moduli_max = 0.0;\r\n                        moduli_min = Number.MAX_VALUE;\r\n\r\n                        for(i = 0; i < NN; i++) {\r\n                            x = Math.abs(p[i]);\r\n                            if(x > moduli_max)\r\n                                moduli_max = x;\r\n                            if((x != 0) && (x < moduli_min))\r\n                                moduli_min = x;\r\n                        }\r\n\r\n                        // Scale if there are large or very small coefficients\r\n                        // Computes a scale factor to multiply the coefficients of the polynomial. The scaling\r\n                        // is done to avoid overflow and to avoid undetected underflow interfering with the\r\n                        // convergence criterion.\r\n                        // The factor is a power of the base.\r\n                        sc = LO / moduli_min;\r\n\r\n                        if(((sc <= 1.0) && (moduli_max >= 10)) || ((sc > 1.0) && (Number.MAX_VALUE / sc >= moduli_max))) {\r\n                            sc = ((sc == 0) ? Number.MIN_VALUE : sc);\r\n                            l = Math.floor(Math.log(sc) / LB2 + 0.5);\r\n                            factor = Math.pow(2.0, l);\r\n                            if(factor != 1.0) {\r\n                                for(i = 0; i < NN; i++)\r\n                                    p[i] *= factor;\r\n                            }\r\n                        }\r\n\r\n                        // Compute lower bound on moduli of zeros\r\n                        for(var i = 0; i < NN; i++)\r\n                            pt[i] = Math.abs(p[i]);\r\n                        pt[N] = -(pt[N]);\r\n                        NM1 = N - 1;\r\n\r\n                        // Compute upper estimate of bound\r\n                        x = Math.exp((Math.log(-pt[N]) - Math.log(pt[0])) / N);\r\n\r\n                        if(pt[NM1] != 0) {\r\n                            // If Newton step at the origin is better, use it\r\n                            xm = -pt[N] / pt[NM1];\r\n                            x = ((xm < x) ? xm : x);\r\n                        }\r\n\r\n                        // Chop the interval (0, x) until ff <= 0\r\n                        xm = x;\r\n                        do {\r\n                            x = xm;\r\n                            xm = 0.1 * x;\r\n                            ff = pt[0];\r\n                            for(var i = 1; i < NN; i++) {\r\n                                ff = ff * xm + pt[i];\r\n                            }\r\n                        }\r\n                        while(ff > 0); // End do-while loop\r\n\r\n                        dx = x;\r\n                        // Do Newton iteration until x converges to two decimal places\r\n\r\n                        do {\r\n                            df = ff = pt[0];\r\n                            for(var i = 1; i < N; i++) {\r\n                                ff = x * ff + pt[i];\r\n                                df = x * df + ff;\r\n                            } // End for i\r\n                            ff = x * ff + pt[N];\r\n                            dx = ff / df;\r\n                            x -= dx;\r\n                        }\r\n                        while(Math.abs(dx / x) > 0.005); // End do-while loop\r\n\r\n                        bnd = x;\r\n\r\n                        // Compute the derivative as the initial K polynomial and do 5 steps with no shift\r\n                        for(var i = 1; i < N; i++)\r\n                            K[i] = (N - i) * p[i] / N;\r\n                        K[0] = p[0];\r\n                        aa = p[N];\r\n                        bb = p[NM1];\r\n                        zerok = ((K[NM1] == 0) ? 1 : 0);\r\n\r\n                        for(jj = 0; jj < 5; jj++) {\r\n                            cc = K[NM1];\r\n                            if(zerok) {\r\n                                // Use unscaled form of recurrence\r\n                                for(var i = 0; i < NM1; i++) {\r\n                                    j = NM1 - i;\r\n                                    K[j] = K[j - 1];\r\n                                } // End for i\r\n                                K[0] = 0;\r\n                                zerok = ((K[NM1] == 0) ? 1 : 0);\r\n                            }\r\n                            else {\r\n                                // Used scaled form of recurrence if value of K at 0 is nonzero\r\n                                t = -aa / cc;\r\n                                for(var i = 0; i < NM1; i++) {\r\n                                    j = NM1 - i;\r\n                                    K[j] = t * K[j - 1] + p[j];\r\n                                } // End for i\r\n                                K[0] = p[0];\r\n                                zerok = ((Math.abs(K[NM1]) <= Math.abs(bb) * DBL_EPSILON * 10.0) ? 1 : 0);\r\n                            }\r\n                        }\r\n\r\n                        // Save K for restarts with new shifts\r\n                        for(var i = 0; i < N; i++)\r\n                            temp[i] = K[i];\r\n\r\n                        // Loop to select the quadratic corresponding to each new shift\r\n                        for(jj = 1; jj <= 20; jj++) {\r\n\r\n                            // Quadratic corresponds to a double shift to a non-real point and its\r\n                            // complex conjugate. The point has modulus BND and amplitude rotated\r\n                            // by 94 degrees from the previous shift.\r\n\r\n                            xxx = -(sinr * yy) + cosr * xx;\r\n                            yy = sinr * xx + cosr * yy;\r\n                            xx = xxx;\r\n                            sr = bnd * xx;\r\n                            u = -(2.0 * sr);\r\n\r\n                            // Second stage calculation, fixed quadratic\r\n                            Fxshfr_ak1(DBL_EPSILON, MDP1, 20 * jj, sr, bnd, K, N, p, NN, qp, u, Fxshfr_Par);\r\n\r\n                            if(Fxshfr_Par.NZ != 0) {\r\n                                // The second stage jumps directly to one of the third stage iterations and\r\n                                // returns here if successful. Deflate the polynomial, store the zero or\r\n                                // zeros, and return to the main algorithm.\r\n                                j = degPar.Degree - N;\r\n                                zeror[j] = Fxshfr_Par.szr;\r\n                                zeroi[j] = Fxshfr_Par.szi;\r\n                                NN = NN - Fxshfr_Par.NZ;\r\n                                N = NN - 1;\r\n                                for(var i = 0; i < NN; i++)\r\n                                    p[i] = qp[i];\r\n                                if(Fxshfr_Par.NZ != 1) {\r\n                                    zeror[j + 1] = Fxshfr_Par.lzr;\r\n                                    zeroi[j + 1] = Fxshfr_Par.lzi;\r\n                                }\r\n                                break;\r\n                            }\r\n                            else {\r\n                                // If the iteration is unsuccessful, another quadratic is chosen after restoring K\r\n                                for(var i = 0; i < N; i++) {\r\n                                    K[i] = temp[i];\r\n                                }\r\n                            }\r\n                        }\r\n                        // Return with failure if no convergence with 20 shifts\r\n                        if(jj > 20) {\r\n                            degPar.Degree -= N;\r\n                            break;\r\n                        }\r\n                    }\r\n                    // >>>>> End Main Loop <<<<<\r\n                    return;\r\n                }\r\n                //--> End Jenkins-Traub\r\n                rpSolve(degreePar, p, zeror, zeroi);\r\n\r\n                var l = zeroi.length;\r\n                //format the output\r\n                for(i = 0; i < l; i++) {\r\n                    // We round the imaginary part to avoid having something crazy like 5.67e-16.\r\n                    var img = round(zeroi[i], decp + 8),\r\n                            real = round(zeror[i], decp + 8);\r\n                    // Did the rounding pay off? If the rounding did nothing more than chop off a few digits then no.\r\n                    // If the rounding results in a a number at least 3 digits shorter we'll keep it else we'll keep \r\n                    // the original otherwise the rounding was worth it.\r\n                    real = decp - String(real).length > 2 ? real : zeror[i];\r\n                    var sign = img < 0 ? '-' : '';\r\n\r\n                    // Remove the zeroes\r\n                    if(real === 0) {\r\n                        real = '';\r\n                    }\r\n                    if(img === 0) {\r\n                        img = '';\r\n                    }\r\n\r\n                    // Remove 1 as the multiplier and discard imaginary part if there isn't one.\r\n                    img = Math.abs(img) === 1 ? sign + 'i' : (img ? img + '*i' : '');\r\n\r\n                    var num = (real && img) ? real + '+' + img : real + img;\r\n                    zeror[i] = num.replace(/\\+\\-/g, '-');\r\n                }\r\n                return zeror;\r\n            }\r\n        },\r\n        roots: function (symbol) {\r\n\r\n            if(symbol.isConstant(true, true)) {\r\n                return core.Utils.nroots(symbol);\r\n            }\r\n            var roots = __.proots(symbol).map(function (x) {\r\n                return _.parse(x);\r\n            });\r\n            return core.Vector.fromArray(roots);\r\n        },\r\n        froot: function (f, guess, dx) {\r\n            var newtonraph = function (xn) {\r\n                var mesh = 1e-12,\r\n                        // If the derivative was already provided then don't recalculate.\r\n                        df = dx ? dx : core.Utils.build(core.Calculus.diff(f.clone())),\r\n                        // If the function was passed in as a function then don't recalculate.\r\n                        fn = f instanceof Function ? f : core.Utils.build(f),\r\n                        max = 10000,\r\n                        done = false,\r\n                        safety = 0;\r\n                while(!done) {\r\n                    var x = xn - (fn(xn) / df(xn));\r\n                    //absolute values for both x & xn ensures that we indeed have the radius    \r\n                    var r = Math.abs(x) - Math.abs(xn),\r\n                            delta = Math.abs(r);\r\n                    xn = x;\r\n\r\n                    if(delta < mesh)\r\n                        done = true;\r\n                    else if(safety > max) {\r\n                        xn = null;\r\n                        done = true;\r\n                    }\r\n\r\n                    safety++;\r\n                }\r\n                return xn;\r\n            };\r\n            return newtonraph(Number(guess));\r\n        },\r\n        quad: function (a, b, c) {\r\n            var q = function (a, b, c, sign) {\r\n                return _.parse('-(' + b + '+' + sign + '*sqrt((' + b + ')^2-4*(' + a + ')*(' + c + ')))/(2*' + a + ')');\r\n            };\r\n            return [q(a, b, c, 1), q(a, b, c, -1)];\r\n        },\r\n        sumProd: function (a, b) {\r\n            return __.quad(-b, a, -1).map(function (x) {\r\n                return x.invert();\r\n            });\r\n        },\r\n        coeffs: function (symbol, wrt, coeffs) {\r\n            wrt = String(wrt);\r\n            symbol = _.expand(symbol);\r\n            coeffs = coeffs || [new Symbol(0)];\r\n            //we cannot get coeffs for group EX\r\n            if(symbol.group === EX && symbol.contains(wrt, true))\r\n                _.error('Unable to get coefficients using expression ' + symbol.toString());\r\n            var vars = variables(symbol);\r\n            if(vars.length === 1 && vars[0] === wrt && !symbol.isImaginary()) {\r\n                var a = new Polynomial(symbol).coeffs.map(function (x) {\r\n                    return new Symbol(x);\r\n                });\r\n\r\n                for(var i = 0, l = a.length; i < l; i++) {\r\n                    var coeff = a[i],\r\n                            e = coeffs[i];\r\n                    if(e)\r\n                        coeff = _.add(e, coeff);\r\n                    coeffs[i] = coeff; //transfer it all over\r\n                }\r\n            }\r\n            else {\r\n                if(!wrt)\r\n                    _.error('Polynomial contains more than one variable. Please specify which variable is to be used!');\r\n                //if the variable isn't part of this polynomial then we're looking at x^0\r\n\r\n                if(vars.indexOf(wrt) === -1) {\r\n                    coeffs[0] = _.add(symbol, coeffs[0]);\r\n                }\r\n                else {\r\n                    coeffs = coeffs || [new Symbol(0)];\r\n                    if(symbol.group === CB) {\r\n                        var s = symbol.symbols[wrt];\r\n                        if(!s)\r\n                            _.error('Expression is not a polynomial!');\r\n                        var p = Number(s.power);\r\n                        coeff = _.divide(symbol.clone(), s.clone());\r\n                        if(coeff.contains(wrt, true) || p < 0 || !isInt(p))\r\n                            _.error('Expression is not a polynomial!');\r\n                        var e = coeffs[p];\r\n                        if(e)\r\n                            coeff = _.add(e, coeff);\r\n                        coeffs[p] = coeff;\r\n                    }\r\n                    else if(symbol.group === CP) {\r\n                        symbol.each(function (x) {\r\n                            __.coeffs(x.clone(), wrt, coeffs);\r\n                        }, true);\r\n                    }\r\n                }\r\n            }\r\n            //fill holes\r\n            for(var i = 0, l = coeffs.length; i < l; i++)\r\n                if(typeof coeffs[i] === 'undefined')\r\n                    coeffs[i] = new Symbol(0);\r\n\r\n            return coeffs;\r\n        },\r\n        /**\r\n         * Get's all the powers of a particular polynomial including the denominators. The denominators powers\r\n         * are returned as negative. All remaining polynomials are returned as zero order polynomials.\r\n         * for example polyPowers(x^2+1/x+y+t) will return [ '-1', 0, '2' ]\r\n         * @param {Symbol} e\r\n         * @param {String} for_variable\r\n         * @param {Array} powers\r\n         * @returns {Array} An array of the powers\r\n         */\r\n        //assumes you've already verified that it's a polynomial\r\n        polyPowers: function (e, for_variable, powers) {\r\n            powers = powers || [];\r\n            var g = g = e.group;\r\n            if(g === PL && for_variable === e.value) {\r\n                powers = powers.concat(keys(e.symbols));\r\n            }\r\n            else if(g === CP) {\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s];\r\n                    var g = symbol.group, v = symbol.value;\r\n                    if(g === S && for_variable === v)\r\n                        powers.push(symbol.power);\r\n                    else if(g === PL || g === CP)\r\n                        powers = __.polyPowers(symbol, for_variable, powers);\r\n                    else if(g === CB && symbol.contains(for_variable)) {\r\n                        var t = symbol.symbols[for_variable];\r\n                        if(t)\r\n                            powers.push((t.power));\r\n                    }\r\n                    else if(g === N || for_variable !== v)\r\n                        powers.push(0);\r\n                }\r\n            }\r\n            else if(g === CB && e.contains(for_variable)) {\r\n                powers.push(core.Utils.decompose_fn(e, for_variable, true).x.power);\r\n            }\r\n            return core.Utils.arrayUnique(powers).sort();\r\n        },\r\n        //The factor object\r\n        Factor: {\r\n            //splits the symbol in symbol and constant\r\n            split: function (symbol) {\r\n                var c = new Symbol(1); //the constants part\r\n                var s = new Symbol(1); //the symbolic part\r\n                __.Factor.factor(symbol, new Factors()).each(function (x) {\r\n                    var t = _.parse(x);\r\n                    if(x.isConstant(true)) {\r\n                        c = _.multiply(c, t);\r\n                    }\r\n                    else {\r\n                        s = _.multiply(s, t);\r\n                    }\r\n                });\r\n                return [c, s];\r\n            },\r\n            mix: function (o, include_negatives) {\r\n                var factors = keys(o);\r\n                var l = factors.length;\r\n                var m = [];//create a row which we'r going to be mixing\r\n                for(var i = 0; i < l; i++) {\r\n                    var factor = factors[i],\r\n                            p = o[factor];\r\n                    var ll = m.length;\r\n                    for(var j = 0; j < ll; j++) {\r\n                        var t = m[j] * factor;\r\n                        m.push(t);\r\n                        if(include_negatives)\r\n                            m.push(-t);\r\n                    }\r\n\r\n                    for(var j = 1; j <= p; j++)\r\n                        m.push(Math.pow(factor, j));\r\n                }\r\n                return m;\r\n            },\r\n            //TODO: this method is to replace common factoring\r\n            common: function (symbol, factors) {\r\n                try {\r\n                    if(symbol.group === CP) {\r\n                        //this may have the unfortunate side effect of expanding and factoring again\r\n                        //to only end up with the same result. \r\n                        //TODO: try to avoid this\r\n                        //collect the symbols and sort to have the longest first. Thinking is that the longest terms \r\n                        //has to contain the variable in order for it to be factorable\r\n                        var symbols = _.expand(symbol.clone(), true).collectSymbols(null, null, function (a, b) {\r\n                            return (b.length || 1) - (a.length || 1);\r\n                        });\r\n\r\n                        var map = {}; //create a map of common factors\r\n                        var coeffs = [];\r\n                        for(var i = 0; i < symbols.length; i++) {\r\n                            var sym = symbols[i];\r\n                            coeffs.push(sym.multiplier.clone());\r\n                            sym.each(function (x) {\r\n                                var p = Number(x.power);\r\n                                //This check exits since we have a symbolic power.\r\n                                //For the future... think about removing this check and modify for symbolic powers\r\n                                if(isNaN(p))\r\n                                    throw new Error('exiting');\r\n                                //loop through the symbols and lump together common terms\r\n                                if(x.value in map) {\r\n                                    if(p < map[x.value][0])\r\n                                        map[x.value][0] = p;\r\n                                    map[x.value][1].push(x);\r\n                                }\r\n                                else\r\n                                    map[x.value] = [p, [x]];\r\n                            });\r\n                        }\r\n                        //the factor\r\n                        var factor = new Symbol(1);\r\n                        for(var x in map) {\r\n                            //if this factor is found in all terms since the length of \r\n                            //matching variable terms matches the number of original terms\r\n                            if(map[x][1].length === symbols.length) {\r\n                                //generate a symbol and multiply into the factor\r\n                                factor = _.multiply(factor, _.pow(new Symbol(x), new Symbol(map[x][0])));\r\n                            }\r\n                        }\r\n                        //get coefficient factor\r\n                        var c = core.Math2.QGCD.apply(null, coeffs);\r\n\r\n                        if(!c.equals(1)) {\r\n                            factors.add(new Symbol(c));\r\n                            for(var i = 0; i < symbols.length; i++) {\r\n                                symbols[i].multiplier = symbols[i].multiplier.divide(c);\r\n                            }\r\n                        }\r\n\r\n                        //if we actuall found any factors\r\n                        if(!factor.equals(1)) {\r\n                            factors.add(factor);\r\n                            symbol = new Symbol(0);\r\n                            for(var i = 0; i < symbols.length; i++) {\r\n                                symbol = _.add(symbol, _.divide(symbols[i], factor.clone()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    ;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            zeroes: function (symbol, factors) {\r\n                var exit = function () {\r\n                    throw new core.exceptions.ValueLimitExceededError('Exiting');\r\n                };\r\n                try {\r\n                    var vars, term, sum, p, e;\r\n                    symbol = _.expand(symbol.clone());\r\n                    e = symbol.toString();\r\n                    vars = variables(symbol);\r\n\r\n                    sum = new Symbol(0);\r\n\r\n                    var terms = [];\r\n                    var powers = [];\r\n\r\n                    //start setting each variable to zero\r\n                    for(var i = 0, l = vars.length; i < vars.length; i++) {\r\n                        var subs = {};\r\n                        //we want to create a subs object with all but the current variable set to zero\r\n                        for(var j = 0; j < l; j++)\r\n                            if(i !== j) //make sure we're not looking at the same variable\r\n                                subs[vars[j]] = 0;\r\n                        term = _.parse(e, subs);\r\n                        var tp = term.power;\r\n                        //the temporary power has to be an integer as well\r\n                        if(!isInt(tp))\r\n                            exit();\r\n                        terms.push(term);\r\n                        powers.push(term.power);\r\n                    }\r\n\r\n                    //get the gcd. This will be the p in (a^n+b^m)^p\r\n                    //if the gcd equals 1 meaning n = m then we need a tie breakder\r\n                    if(core.Utils.allSame(powers)) {\r\n                        //get p given x number of terms\r\n                        var n_terms = symbol.length;\r\n                        //the number of zeroes determines\r\n                        var n_zeroes = terms.length;\r\n                        if(n_zeroes === 2) {\r\n                            p = new Frac(powers[0] / (n_terms - 1));\r\n                        }\r\n                        if(n_zeroes === 3) {\r\n                            p = new Frac(powers[0] / Math.round((Math.sqrt(8 * n_terms - 1) - 3) / 2));\r\n                        }\r\n                        /*\r\n                         //get the lowest possible power\r\n                         //e.g. given b^4+2*a^2*b^2+a^4, the power we're looking for would be 2\r\n                         symbol.each(function(x) {\r\n                         if(x.group === CB)\r\n                         x.each(function(y) {\r\n                         if(!p || y.power.lessThan(p))\r\n                         //p = Number(y.power);\r\n                         p = y.power;\r\n                         });\r\n                         else if(!p || x.power.lessThan(p))\r\n                         //p = Number(x.power);\r\n                         p = x.power;\r\n                         });\r\n                         */\r\n                    }\r\n                    else\r\n                        //p is just the gcd of the powers\r\n                        p = core.Math2.QGCD.apply(null, powers);\r\n\r\n                    //if we don't have an integer then exit\r\n                    if(!isInt(p))\r\n                        exit();\r\n\r\n                    //build the factor\r\n                    for(var i = 0; i < terms.length; i++) {\r\n                        var t = terms[i];\r\n                        var n = t.power.clone().divide(p);\r\n                        t.multiplier = new Frac(Math.pow(t.multiplier, 1 / n));\r\n                        t.power = p.clone();\r\n                        sum = _.add(sum, t);\r\n                    }\r\n\r\n                    //by now we have the factor of zeroes. We'll know if we got it right because \r\n                    //we'll get a remainder of zero each time we divide by it\r\n                    if(sum.group !== CP)\r\n                        return symbol; //nothing to do\r\n\r\n                    while(true) {\r\n                        var d = __.div(symbol.clone(), sum.clone());\r\n                        if(d[1].equals(0)) {\r\n                            symbol = d[0];\r\n                            factors.add(sum.clone());\r\n                            if(symbol.equals(1)) //we've reached 1 so done.\r\n                                break;\r\n                        }\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                catch(e) {\r\n                }\r\n                ;\r\n\r\n                return symbol;\r\n            },\r\n            factor: function (symbol, factors) {\r\n                // Don't try to factor constants\r\n                if(symbol.isConstant()) {\r\n                    return core.Math2.factor(symbol);\r\n                }\r\n\r\n                var _symbol = _.parse(symbol);\r\n                var retval = __.Factor._factor(_symbol, factors);\r\n                if(retval.equals(symbol)) {\r\n                    return retval;\r\n                }\r\n\r\n                if(retval.group === CB) {\r\n                    var t = new Symbol(1);\r\n                    var p = _.parse(retval.power);\r\n                    //store the multiplier and strip it\r\n                    var m = _.parse(retval.multiplier);\r\n\r\n                    retval.toUnitMultiplier();\r\n\r\n                    /* \r\n                     * NOTE: for sign issues with factor START DEBUGGING HERE\r\n                     */\r\n                    //move the sign to t\r\n                    if(retval.multiplier.lessThan(0)) {\r\n                        t.negate();\r\n                        retval.negate();\r\n                    }\r\n\r\n                    retval.each(function (x) {\r\n                        // Related to #566. Since the symbol's group may not have been properly\r\n                        // updated, it's easier to just parse the symbol and have the parser \r\n                        // do the update for us.\r\n                        var factored = _.parse(__.Factor._factor(x));\r\n\r\n                        if(factored.group === CB) {\r\n                            // Include the multiplier\r\n                            m = _.multiply(m, Symbol.create(factored.multiplier));\r\n                            factored.each(function (y) {\r\n                                var _factored = _.parse(__.Factor._factor(y));\r\n                                t = _.multiply(t, _factored);\r\n                                if(_factored.group === CB) {\r\n                                    m = _.multiply(m, Symbol.create(_factored.multiplier));\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            t = _.multiply(t, factored);\r\n                        }\r\n                    });\r\n\r\n                    //put back the multiplier and power\r\n                    retval = _.pow(_.multiply(m, t), p);\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            quadFactor: function (symbol, factors) {\r\n                if(symbol.isPoly() && __.degree(symbol.equals(2))) {\r\n                    //We've  already checked that we're dealing with a polynomial\r\n                    var v = core.Utils.variables(symbol)[0]; //get the variable\r\n                    var coeffs = __.coeffs(symbol, v);\r\n                    //factor the lead coefficient\r\n                    var cf = __.Factor._factor(coeffs[2].clone());\r\n                    //check if we have factors\r\n                    if(cf.group === CB) {\r\n                        var symbols = cf.collectSymbols();\r\n                        //if the factors are greater than 2 we're done so exit\r\n                        if(symbols.length > 2)\r\n                            return symbol;\r\n                        //if we have two factors then attempt to factor the polynomial\r\n                        //let the factors be f1 and f1\r\n                        //let the factors be (ax+b)(cx+d)\r\n                        //let the coefficients be c1x^2+c2x+c3\r\n                        //then a(x1)+c(x2)=c2 and x1*x2=c3\r\n                        //we can solve for x1 and x2\r\n                        var c = _.multiply(_.parse(coeffs[0]), _.parse(symbols[0]));\r\n                        var b = _.parse(coeffs[1]).negate();\r\n                        var a = _.parse(symbols[1]);\r\n                        //solve the system\r\n                        var root = __.quad(a, b, c).filter(function (x) {\r\n                            if(core.Utils.isInt(x))\r\n                                return x;\r\n                        });\r\n                        //if we have one root then find the other one by dividing the constant\r\n                        if(root.length === 1) {\r\n                            var root1 = root[0];\r\n                            var root2 = _.divide(coeffs[0], _.parse(root1));\r\n                            if(core.Utils.isInt(root2)) {\r\n                                //we found them both\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[1], v, root2)));\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[0], v, root1)));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            cubeFactor: function (symbol, factors) {\r\n                if(symbol.isComposite()) {\r\n                    var symbols = symbol.collectSymbols();\r\n                    // The symbol should be in the form of a^3+-b^3. The length\r\n                    // should therefore only be two. If it's any different from this\r\n                    // then we're done\r\n                    if(symbols.length === 2) {\r\n                        // Store the signs and then strip them from the symbols\r\n                        var sign_a = symbols[0].sign();\r\n                        var a = symbols[0].clone().abs();\r\n                        var sign_b = symbols[1].sign();\r\n                        var b = symbols[1].clone().abs();\r\n                        // Check if they're cube\r\n                        if(a.isCube() && b.isCube()) {\r\n                            // Keep the negative sign on the right, meaning b is always negative.\r\n                            if(sign_a < sign_b) {\r\n                                // Swap the signs and then the values\r\n                                [sign_a, sign_b] = [sign_b, sign_a];\r\n                                [a, b] = [b, a];\r\n                            }\r\n\r\n                            // Get teh roots\r\n                            var m_root_a = _.parse(a.getNth(3));\r\n                            var m_root_b = _.parse(b.getNth(3));\r\n\r\n                            // Remove the cube for both\r\n                            var x = _.multiply(_.expand(_.pow(a.clone().toUnitMultiplier(), _.parse('1/3'))), m_root_a);\r\n                            var y = _.multiply(_.expand(_.pow(b.clone().toUnitMultiplier(), _.parse('1/3'))), m_root_b);\r\n\r\n                            if(sign_a === 1 && sign_b === -1) {\r\n                                // Apply difference of cubes rule\r\n                                factors.add(_.parse(format('(({0})-({1}))', x, y)));\r\n                                factors.add(_.parse(format('(({0})^2+({0})*({1})+({1})^2)', x, y)));\r\n                                symbol = Symbol(1);\r\n                            }\r\n                            else if(sign_a === 1 && sign_b === 1) {\r\n                                // Apply sum of cubes rule\r\n                                factors.add(_.parse(format('(({0})+({1}))', x, y)));\r\n                                factors.add(_.parse(format('(({0})^2-({0})*({1})+({1})^2)', x, y)));\r\n                                symbol = Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            _factor: function (symbol, factors) {\r\n                //some items cannot be factored any further so return those right away\r\n                if(symbol.group === FN) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.group === S && arg.isSimple()) {\r\n                        return symbol;\r\n                    }\r\n                }\r\n                else if(symbol.group === S && symbol.isSimple()) {\r\n                    return symbol;\r\n                }\r\n\r\n                // Expand the symbol to get it in a predictable form. If this step\r\n                // is skipped some factors are missed.\r\n                //if(symbol.group === CP && !(even(symbol.power) && symbol.multiplier.lessThan(0))) {\r\n                if(symbol.group === CP) {\r\n                    symbol.distributeMultiplier(true);\r\n                    var t = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        if((x.group === CP && x.power.greaterThan(1) || x.group === CB))\r\n                            x = _.expand(x);\r\n                        t = _.add(t, x);\r\n                    });\r\n                    t.power = symbol.power;\r\n\r\n                    symbol = t;\r\n                }\r\n\r\n                if(symbol.group === FN && symbol.fname !== 'sqrt') {\r\n                    symbol = core.Utils.evaluate(symbol);\r\n                }\r\n\r\n                //make a copy of the symbol to return if something goes wrong\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    if(symbol.group === CB) {\r\n                        var p = _.parse(symbol.power);\r\n\r\n                        var den_array, num_array, den, num, dfact, nfact;\r\n                        //grab the denominator and strip the multiplier and power. Store them in an array\r\n                        den_array = __.Simplify.strip(symbol.getDenom());\r\n                        num_array = __.Simplify.strip(symbol.getNum());\r\n\r\n                        den = den_array.pop();\r\n                        num = num_array.pop();\r\n\r\n                        //if the numerator equals the symbol then we've hit the simplest form and then we're done\r\n                        if(num.equals(symbol)) {\r\n                            return symbol;\r\n                        }\r\n                        nfact = __.Factor.factor(num);\r\n                        dfact = __.Factor.factor(den);\r\n\r\n                        var n = __.Simplify.unstrip(num_array, nfact);\r\n                        var d = __.Simplify.unstrip(den_array, dfact);\r\n\r\n                        var retval = _.divide(n, d);\r\n\r\n                        return retval;\r\n                    }\r\n                    if(symbol.group === S) {\r\n                        return symbol; //absolutely nothing to do\r\n                    }\r\n\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol.equals(1))\r\n                            return symbol.clone();\r\n                        var ret = core.Math2.factor(symbol);\r\n                        return ret;\r\n                    }\r\n\r\n                    var p = symbol.power.clone();\r\n\r\n                    if(isInt(p) && !(p.lessThan(0) && symbol.group === FN)) {\r\n                        var sign = p.sign();\r\n                        symbol.toLinear();\r\n                        factors = factors || new Factors();\r\n                        var map = {};\r\n                        symbol = _.parse(core.Utils.subFunctions(symbol, map));\r\n                        if(keys(map).length > 0) { //it might have functions\r\n                            factors.preAdd = function (factor) {\r\n                                var ret = _.parse(factor, core.Utils.getFunctionsSubs(map));\r\n                                return ret;\r\n                            };\r\n                        }\r\n\r\n                        //strip the power\r\n                        if(!symbol.isLinear()) {\r\n                            factors.pFactor = symbol.power.toString();\r\n                            symbol.toLinear();\r\n                        }\r\n\r\n                        var vars = variables(symbol);\r\n                        //bypass for imaginary. TODO: find a better solution\r\n                        if(symbol.isImaginary()) {\r\n                            vars.push(core.Settings.IMAGINARY);\r\n                        }\r\n                        var multiVar = vars.length > 1;\r\n\r\n                        //minor optimization. Seems to cut factor time by half in some cases.\r\n                        if(multiVar) {\r\n                            var all_S = true, all_unit = true;\r\n                            symbol.each(function (x) {\r\n                                if(x.group !== S)\r\n                                    all_S = false;\r\n                                if(!x.multiplier.equals(1))\r\n                                    all_unit = false;\r\n                            });\r\n\r\n                            if(all_S && all_unit) {\r\n                                return _.pow(_.parse(symbol, core.Utils.getFunctionsSubs(map)), _.parse(p));\r\n                            }\r\n                        }\r\n\r\n                        //factor the coefficients\r\n                        var coeff_factors = new Factors();\r\n\r\n                        symbol = __.Factor.coeffFactor(symbol, coeff_factors);\r\n\r\n                        coeff_factors.each(function (x) {\r\n                            // If the factor was negative but was within a square then it becomes positive\r\n                            if(even(p) && x.lessThan(0)) {\r\n                                x.negate();\r\n                            }\r\n\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n\r\n                        //factor the power\r\n                        var power_factors = new Factors();\r\n                        symbol = __.Factor.powerFactor(symbol, power_factors);\r\n                        power_factors.each(function (x) {\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n\r\n                        if(!multiVar) {\r\n                            //pass in vars[0] for safety\r\n                            var v = vars[0];\r\n\r\n                            symbol = __.Factor.squareFree(symbol, factors, v);\r\n\r\n                            var t_factors = new Factors();\r\n\r\n                            symbol = __.Factor.trialAndError(symbol, t_factors, v);\r\n\r\n                            //generate a symbol based off the last factors\r\n                            var tf_symbol = t_factors.toSymbol();\r\n                            //if nothing was factored then return the factors\r\n                            if(tf_symbol.equals(untouched)) {\r\n                                return tf_symbol;\r\n                            }\r\n\r\n                            for(var x in t_factors.factors) {\r\n                                //store the current factor in t_factor\r\n                                var t_factor = t_factors.factors[x];\r\n                                factors.add(_.pow(t_factor, _.parse(p)));\r\n                            }\r\n                            //if we still don't have a factor and it's quadratic then let's just do a quad factor\r\n                            if(symbol.equals(untouched)) {\r\n                                symbol = __.Factor.quadFactor(symbol, factors);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            // Try sum and difference of cubes\r\n                            symbol = __.Factor.cubeFactor(symbol, factors);\r\n\r\n                            symbol = __.Factor.mfactor(symbol, factors);\r\n\r\n                            //put back the sign of power\r\n                            factors.each(function (x) {\r\n                                if(sign < 0)\r\n                                    x.power.negate();\r\n                            });\r\n                        }\r\n\r\n                        //last minute clean up\r\n                        symbol = _.parse(symbol, core.Utils.getFunctionsSubs(map));\r\n\r\n                        factors.add(_.pow(symbol, _.parse(p)));\r\n\r\n                        var retval = factors.toSymbol();\r\n\r\n                        return retval;\r\n                    }\r\n\r\n                    return symbol;\r\n                }\r\n                catch(e) {\r\n                    //no need to stop the show because something went wrong :). Just return the unfactored.\r\n                    return untouched;\r\n                }\r\n            },\r\n            reduce: function (symbol, factors) {\r\n                if(symbol.group === CP && symbol.length === 2) {\r\n                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                        return b.multiplier - a.multiplier;\r\n                    });\r\n                    if(symbols[0].power.equals(symbols[1].power)) {\r\n                        //x^n-a^n\r\n                        var n = _.parse(symbols[0].power),\r\n                                a = symbols[0].clone().toLinear(),\r\n                                b = symbols[1].clone().toLinear();\r\n\r\n                        //apply rule: (a-b)*sum(a^(n-i)*b^(i-1),1,n)\r\n                        factors.add(_.add(a.clone(), b.clone()));\r\n                        //flip the sign\r\n                        b.negate();\r\n                        //turn n into a number\r\n                        var nn = Number(n);\r\n                        //the remainder\r\n                        var result = new Symbol(0);\r\n                        for(var i = 1; i <= nn; i++) {\r\n                            var aa = _.pow(a.clone(), _.subtract(n.clone(), new Symbol(i))),\r\n                                    bb = _.pow(b.clone(), _.subtract(new Symbol(i), new Symbol(1)));\r\n                            result = _.add(result, _.multiply(aa, bb));\r\n                        }\r\n                        return result;\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Makes Symbol square free\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @@param {String} variable The variable which is being factored \r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            squareFree: function (symbol, factors, variable) {\r\n                if(symbol.isConstant() || symbol.group === S)\r\n                    return symbol;\r\n\r\n                var poly = new Polynomial(symbol, variable);\r\n                var sqfr = poly.squareFree();\r\n                var p = sqfr[2];\r\n                //if we found a square then the p entry in the array will be non-unit\r\n                if(p !== 1) {\r\n                    //make sure the remainder doesn't have factors\r\n                    var t = sqfr[1].toSymbol();\r\n                    t.power = t.power.multiply(new Frac(p));\r\n                    //send the factor to be fatored to be sure it's completely factored\r\n                    factors.add(__.Factor.factor(t));\r\n\r\n                    var retval = __.Factor.squareFree(sqfr[0].toSymbol(), factors);\r\n\r\n                    return retval;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Factors the powers such that the lowest power is a constant\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            powerFactor: function (symbol, factors) {\r\n                //only PL need apply\r\n                if(symbol.group !== PL || symbol.previousGroup === EX)\r\n                    return symbol;\r\n                var k = keys(symbol.symbols);\r\n                //we expect only numeric powers so return all else\r\n                if(!core.Utils.allNumeric(k))\r\n                    return symbol;\r\n\r\n                var d = core.Utils.arrayMin(k);\r\n                var retval = new Symbol(0);\r\n                var q = _.parse(symbol.value + '^' + d);\r\n                symbol.each(function (x) {\r\n                    x = _.divide(x, q.clone());\r\n                    retval = _.add(retval, x);\r\n                });\r\n\r\n                factors.add(q);\r\n                return retval;\r\n            },\r\n            /**\r\n             * Removes GCD from coefficients\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @returns {Symbol}\r\n             */\r\n            coeffFactor: function (symbol, factors) {\r\n                if(symbol.isComposite()) {\r\n                    var gcd = core.Math2.QGCD.apply(null, symbol.coeffs());\r\n\r\n                    if(!gcd.equals(1)) {\r\n                        symbol.each(function (x) {\r\n                            if(x.isComposite()) {\r\n                                x.each(function (y) {\r\n                                    y.multiplier = y.multiplier.divide(gcd);\r\n                                });\r\n                            }\r\n                            else\r\n                                x.multiplier = x.multiplier.divide(gcd);\r\n                        });\r\n                        symbol.updateHash();\r\n                    }\r\n                    else {\r\n                        // TODO: This should probably go to the prototype\r\n                        var power = function (symbol) {\r\n                            var p;\r\n                            if(symbol.group === CB) {\r\n                                p = 0;\r\n                                symbol.each(function (x) {\r\n                                    p += x.power;\r\n                                });\r\n                            }\r\n                            else {\r\n                                p = Number(symbol.power);\r\n                            }\r\n                            return p;\r\n                        };\r\n                        // Factor out negatives from the lead term\r\n                        var terms = symbol.collectSymbols(null, null, null, true).sort(function (a, b) {\r\n                            // Push constants to the back\r\n                            if(a.isConstant(true))\r\n                                return 1;\r\n                            return b.power - a.power;\r\n                        });\r\n\r\n                        var LT = terms[0];\r\n\r\n                        // Check if the LT is indeed the greatest\r\n                        if(power(LT) > power(terms[1]) || terms[1].isConstant(true)) {\r\n                            if(LT.multiplier.lessThan(0)) {\r\n                                // Although the symbol should always be linear at this point, remove the negative for squares\r\n                                // to be safe.\r\n                                factors.add(new Symbol(-1));\r\n\r\n                                symbol.each(function (x) {\r\n                                    x.negate();\r\n                                }, true);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    if(factors) {\r\n                        factors.add(new Symbol(gcd));\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            /**\r\n             * The name says it all :)\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @@param {String} variable \r\n             * @returns {Symbol}\r\n             */\r\n            trialAndError: function (symbol, factors, variable) {\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    // At temp holder for the factors. If all goes well then\r\n                    // they'll be moved to the actual factors.\r\n                    var factor_array = [];\r\n\r\n                    if(symbol.isConstant() || symbol.group === S)\r\n                        return symbol;\r\n                    var poly = new Polynomial(symbol, variable),\r\n                            cnst = poly.coeffs[0],\r\n                            cfactors = core.Math2.ifactor(cnst),\r\n                            roots = __.proots(symbol);\r\n                    for(var i = 0; i < roots.length; i++) {\r\n                        var r = roots[i],\r\n                                p = 1;\r\n                        if(!isNaN(r)) { //if it's a number\r\n                            for(var x in cfactors) {\r\n                                //check it's raised to a power\r\n                                var n = core.Utils.round(Math.log(x) / Math.log(Math.abs(r)), 8);\r\n                                if(isInt(n)) {\r\n                                    r = x; //x must be the root since n gave us a whole\r\n                                    p = n;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            var root = new Frac(r),\r\n                                    terms = [new Frac(root.num).negate()];\r\n                            terms[p] = new Frac(root.den);\r\n                            //convert to Frac. The den is coeff of LT and the num is coeff of constant\r\n                            var div = Polynomial.fromArray(terms, poly.variable).fill(),\r\n                                    t = poly.divide(div);\r\n                            if(t[1].equalsNumber(0)) { //if it's zero we have a root and divide it out\r\n                                poly = t[0];\r\n                                // factors.add(div.toSymbol());\r\n                                factor_array.push(div.toSymbol());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(!poly.equalsNumber(1)) {\r\n                        poly = __.Factor.search(poly, factors);\r\n                    }\r\n\r\n                    // Move the factors over since all went well.\r\n                    factor_array.forEach(function (x) {\r\n                        factors.add(x);\r\n                    });\r\n\r\n                    return poly.toSymbol();\r\n                }\r\n                catch(e) {\r\n                    return untouched;\r\n                }\r\n            },\r\n            search: function (poly, factors, base) {\r\n                base = base || 10; //I like 10 because numbers exhibit similar behaviours at 10\r\n                var v = poly.variable; //the polynmial variable name\r\n                /**\r\n                 * Attempt to remove a root by division given a number by first creating\r\n                 * a polynomial fromt he given information\r\n                 * @param {int} c1 - coeffient for the constant\r\n                 * @param {int} c2 - coefficient for the LT\r\n                 * @param {int} n - the number to be used to construct the polynomial\r\n                 * @param {int} p - the power at which to create the polynomial\r\n                 * @returns {null|Polynomial} - returns polynomial if successful otherwise null\r\n                 */\r\n                var check = function (c1, c2, n, p) {\r\n                    var candidate = Polynomial.fit(c1, c2, n, base, p, v);\r\n                    if(candidate && candidate.coeffs.length > 1) {\r\n                        var t = poly.divide(candidate);\r\n                        if(t[1].equalsNumber(0)) {\r\n                            factors.add(candidate.toSymbol());\r\n                            return [t[0], candidate];\r\n                        }\r\n                    }\r\n                    return null;\r\n                };\r\n                var cnst = poly.coeffs[0];\r\n                var cfactors = core.Math2.ifactor(cnst);\r\n                var lc = poly.lc();\r\n                var ltfactors = core.Math2.ifactor(lc);\r\n                var subbed = poly.sub(base);\r\n                var isubbed = core.Math2.ifactor(subbed);\r\n                var nfactors = __.Factor.mix(isubbed, subbed < 0);\r\n                var cp = Math.ceil(poly.coeffs.length / 2);\r\n                var lc_is_neg = lc.lessThan(0);\r\n                var cnst_is_neg = cnst.lessThan(0);\r\n                ltfactors['1'] = 1;\r\n                cfactors['1'] = 1;\r\n                while(cp--) {\r\n                    for(var x in ltfactors) {\r\n                        for(var y in cfactors) {\r\n                            for(var i = 0; i < nfactors.length; i++) {\r\n                                var factor_found = check(x, y, nfactors[i], cp);\r\n                                if(factor_found) {\r\n                                    poly = factor_found[0];\r\n                                    if(!core.Utils.isPrime(poly.sub(base)))\r\n                                        poly = __.Factor.search(poly, factors);\r\n                                    return poly;\r\n                                }\r\n                                else if(!factor_found) {\r\n                                    if(lc_is_neg && cnst_is_neg)\r\n                                        factor_found = check(-x, -y, nfactors[i], cp);\r\n                                    else if(lc_is_neg)\r\n                                        factor_found = check(-x, y, nfactors[i], cp); //check a negative lc\r\n                                    else if(cnst_is_neg)\r\n                                        factor_found = check(x, -y, nfactors[i], cp); //check a negative constant\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return poly;\r\n            },\r\n            /**\r\n             * Equivalent of square free factor for multivariate polynomials\r\n             * @param {type} symbol\r\n             * @param {type} factors\r\n             * @returns {AlgebraL#18.Factor.mSqfrFactor.symbol|Array|AlgebraL#18.__.Factor.mSqfrFactor.d}\r\n             */\r\n            mSqfrFactor: function (symbol, factors) {\r\n                if(symbol.group !== FN) {\r\n                    var vars = variables(symbol).reverse();\r\n\r\n                    // Loop through all the variable and remove the partial derivatives\r\n                    for(var i = 0; i < vars.length; i++) {\r\n                        do {\r\n                            if(vars[i] === symbol.value) {\r\n                                //the derivative tells us nothing since this symbol is already the factor\r\n                                factors.add(symbol);\r\n                                symbol = new Symbol(1);\r\n                                continue;\r\n                            }\r\n\r\n                            var diff = core.Calculus.diff(symbol, vars[i]);\r\n\r\n                            var d = __.Factor.coeffFactor(diff);\r\n\r\n                            if(d.equals(0))\r\n                                break;\r\n\r\n                            //trial division to see if factors have whole numbers. \r\n                            //This can be optimized by stopping as soon as can_divide is false\r\n                            //this will also need utilize big number at some point\r\n                            var can_divide = true;\r\n                            if(d.isConstant() && symbol.isComposite()) {\r\n                                //check the coefficients\r\n\r\n                                symbol.each(function (x) {\r\n                                    if(x.multiplier % d !== 0)\r\n                                        can_divide = false;\r\n                                }, true);\r\n                            }\r\n\r\n                            //if we can divide then do so\r\n                            if(can_divide) {\r\n\r\n                                var div = __.div(symbol, d.clone()),\r\n                                        is_factor = div[1].equals(0);\r\n\r\n                                if(div[0].isConstant()) {\r\n                                    factors.add(div[0]);\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else\r\n                                is_factor = false;\r\n\r\n                            if(is_factor) {\r\n                                factors.add(div[0]);\r\n                                symbol = d;\r\n                            }\r\n                        }\r\n                        while(is_factor)\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            //difference of squares factorization\r\n            sqdiff: function (symbol, factors) {\r\n                if(symbol.isConstant('all')) {\r\n                    // Nothing to do\r\n                    return symbol;\r\n                }\r\n\r\n                try {\r\n                    var remove_square = function (x) {\r\n                        return core.Utils.block('POSITIVE_MULTIPLIERS', function () {\r\n                            return Symbol.unwrapPARENS(math.sqrt(math.abs(x)));\r\n                        }, true);\r\n                    };\r\n                    var separated = core.Utils.separate(symbol.clone());\r\n\r\n                    var obj_array = [];\r\n\r\n                    //get the unique variables\r\n                    for(var x in separated) {\r\n                        if(x !== 'constants') {\r\n                            obj_array.push(separated[x]);\r\n                        }\r\n                    }\r\n                    obj_array.sort(function (a, b) {\r\n                        return b.power - a.power;\r\n                    });\r\n\r\n                    //if we have the same number of variables as unique variables then we can apply the difference of squares\r\n                    if(obj_array.length === 2) {\r\n                        var a, b;\r\n                        a = obj_array.pop();\r\n                        b = obj_array.pop();\r\n\r\n                        if(even(a.power) && even(b.power)\r\n                                && a.sign() === b.sign()\r\n                                && a.group === S && b.group === S) {\r\n                            throw new Error('Unable to factor');\r\n                        }\r\n                        ;\r\n\r\n                        if(a.isComposite() && b.power.equals(2)) {\r\n                            //remove the square from b\r\n                            b = remove_square(b);\r\n                            var f = __.Factor.factor(_.add(a, separated.constants));\r\n                            if(f.power.equals(2)) {\r\n                                f.toLinear();\r\n                                factors.add(_.subtract(f.clone(), b.clone()));\r\n                                factors.add(_.add(f, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            a = a.powSimp();\r\n                            b = b.powSimp();\r\n\r\n                            if((a.group === S || a.fname === '') && a.power.equals(2) && (b.group === S || b.fname === '') && b.power.equals(2) && !separated.constants) {\r\n                                if(a.multiplier.lessThan(0)) {\r\n                                    var t = b;\r\n                                    b = a;\r\n                                    a = t;\r\n                                }\r\n                                if(a.multiplier.greaterThan(0)) {\r\n                                    a = remove_square(a);\r\n                                    b = remove_square(b);\r\n                                }\r\n\r\n                                factors.add(_.subtract(a.clone(), b.clone()));\r\n                                factors.add(_.add(a, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    ;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            //factoring for multivariate\r\n            mfactor: function (symbol, factors) {\r\n\r\n                if(symbol.group === FN) {\r\n                    if(symbol.fname === 'sqrt') {\r\n                        var factors2 = new Factors(),\r\n                                arg = __.Factor.common(symbol.args[0].clone(), factors2);\r\n                        arg = __.Factor.coeffFactor(arg, factors2);\r\n                        symbol = _.multiply(_.symfunction('sqrt', [arg]), _.parse(symbol.multiplier));\r\n                        factors2.each(function (x) {\r\n                            symbol = _.multiply(symbol, _.parse(core.Utils.format('sqrt({0})', x)));\r\n                        });\r\n                    }\r\n                    else\r\n                        factors.add(symbol);\r\n                }\r\n                else {\r\n\r\n                    //square free factorization\r\n                    symbol = __.Factor.mSqfrFactor(symbol, factors);\r\n\r\n                    //try factor out common factors\r\n                    //symbol = __.Factor.common(symbol, factors);\r\n\r\n                    var vars = variables(symbol),\r\n                            symbols = symbol.collectSymbols().map(function (x) {\r\n                        return Symbol.unwrapSQRT(x);\r\n                    }),\r\n                            sorted = {},\r\n                            maxes = {},\r\n                            l = vars.length, n = symbols.length;\r\n                    //take all the variables in the symbol and organize by variable name\r\n                    //e.g. a^2+a^2+b*a -> {a: {a^3, a^2, b*a}, b: {b*a}}\r\n\r\n                    for(var i = 0; i < l; i++) {\r\n                        var v = vars[i];\r\n                        sorted[v] = new Symbol(0);\r\n                        for(var j = 0; j < n; j++) {\r\n                            var s = symbols[j];\r\n                            if(s.contains(v)) {\r\n                                var p = s.value === v ? s.power.toDecimal() : s.symbols[v].power.toDecimal();\r\n                                if(!maxes[v] || p < maxes[v])\r\n                                    maxes[v] = p;\r\n                                sorted[v] = _.add(sorted[v], s.clone());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for(var x in sorted) {\r\n                        var r = _.parse(x + '^' + maxes[x]);\r\n                        var div = _.divide(sorted[x], r);\r\n                        var new_factor = _.expand(div);\r\n\r\n                        if(new_factor.equals(1))\r\n                            break; //why divide by one. Just move \r\n                        var divided = __.div(symbol.clone(), new_factor);\r\n\r\n                        if(divided[0].equals(0)) {\r\n                            //cant factor anymore\r\n                            break;\r\n                        }\r\n\r\n                        // We potentially ended up with fractional coefficients when the\r\n                        // trial division was performed. We need to remove \r\n                        // This check will more then likely become superfluous with improvements\r\n                        // to polynomial division\r\n                        if(divided[1].equals(0)) {\r\n                            var has_fractions = false;\r\n\r\n                            divided[0].each(function (x) {\r\n                                if(!isInt(x.multiplier)) {\r\n                                    has_fractions = true;\r\n                                }\r\n                            });\r\n\r\n                            // The factor isn't really a factor and needs to be put back\r\n                            if(has_fractions) {\r\n                                divided[1] = _.expand(_.multiply(divided[1], new_factor));\r\n                                // Since the new factor is not just one, we exit.\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        var neg_numeric_factor = isInt(new_factor) && new_factor.lessThan(0);\r\n\r\n                        if(divided[1].equals(0) && !neg_numeric_factor) { //we found at least one factor\r\n\r\n                            //factors.add(new_factor);\r\n                            var d = __.div(symbol.clone(), divided[0].clone());\r\n                            var r = d[0];\r\n\r\n                            // Nothing left to do since we didn't get a reduction\r\n                            if(r.equals(0)) {\r\n                                return symbol;\r\n                            }\r\n\r\n                            symbol = d[1];\r\n                            //we don't want to just flip the sign. If the remainder is -1 then we accomplished nothing\r\n                            //and we just return the symbol;\r\n                            //If r equals zero then there's nothing left to do so we're done\r\n\r\n                            if(r.equals(-1) && !symbol.equals(0))\r\n                                return symbol;\r\n\r\n                            var factor = divided[0];\r\n\r\n                            if(symbol.equals(factor)) {\r\n                                var rem = __.Factor.reduce(factor, factors);\r\n\r\n                                if(!symbol.equals(rem))\r\n                                    return __.Factor.mfactor(rem, factors);\r\n\r\n                                return rem;\r\n                            }\r\n                            else {\r\n                                factors.add(factor);\r\n                                //if the remainder of the symbol is zero then we're done. TODO: Rethink this logic a bit.\r\n                                if(symbol.equals(0))\r\n                                    return r;\r\n                            }\r\n\r\n                            if(r.isConstant('all')) {\r\n                                factors.add(r);\r\n                                return r;\r\n                            }\r\n\r\n                            return __.Factor.mfactor(r, factors);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                //difference of squares factorization\r\n                symbol = __.Factor.sqdiff(symbol, factors);\r\n\r\n                //factors by fishing for zeroes\r\n                symbol = __.Factor.zeroes(symbol, factors);\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a set of \"equations\" is linear. \r\n         * @param {type} set\r\n         * @returns {Boolean}\r\n         */\r\n        allLinear: function (set) {\r\n            var l = set.length;\r\n            for(var i = 0; i < l; i++) {\r\n                if(!__.isLinear(set[i]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        },\r\n        /*\r\n         * Checks to see if the \"equation\" is linear\r\n         * @param {Symbol} e\r\n         * @returns {boolean}\r\n         */\r\n        isLinear: function (e) {\r\n            var status = false, g = e.group;\r\n            if(g === PL || g === CP) {\r\n                status = true;\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s], sg = symbol.group;\r\n                    if(sg === FN || sg === EX) {\r\n                        status = false;\r\n                    }\r\n                    if(sg === CB) {\r\n                        //needs further checking since it might be imaginary\r\n                        status = variables(symbol).length === 1;\r\n                    }\r\n                    else {\r\n                        if(sg === PL || sg === CP)\r\n                            status = __.isLinear(symbol);\r\n                        else {\r\n                            if(symbol.group !== N && symbol.power.toString() !== '1') {\r\n                                status = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(g === S && e.power === 1)\r\n                status = true;\r\n            return status;\r\n        },\r\n        gcd: function () {\r\n            var args;\r\n            if(arguments.length === 1 && arguments[0] instanceof core.Vector)\r\n                args = arguments[0].elements;\r\n            else\r\n                args = core.Utils.arguments2Array(arguments);\r\n\r\n            //short-circuit early\r\n            if(args.length === 0)\r\n                return new Symbol(1);\r\n            else if(args.length === 1)\r\n                return args[0];\r\n\r\n            var appeared = [], evaluate = false;\r\n            for(var i = 0; i < args.length; i++) {\r\n                if(args[i].group === FN && args[i].fname === 'gcd')\r\n                {\r\n                    //compress gcd(a,gcd(b,c)) into gcd(a,b,c)\r\n                    args = args.concat(arguments[i].args);\r\n                    //do not keep gcd in args\r\n                    args.splice(i, 1);\r\n                }\r\n                else\r\n                {\r\n                    //Look if there are any common variables such that\r\n                    //gcd(a,b) => gcd(a,b); gcd(a,a) => a\r\n                    var vars = variables(args[i]);\r\n                    if(core.Utils.haveIntersection(vars, appeared))\r\n                    {\r\n                        //Ok, there are common variables\r\n                        evaluate = true;\r\n                        break;\r\n                    }\r\n                    else\r\n                        appeared = appeared.concat(vars);\r\n                }\r\n            }\r\n\r\n            //appeared.length is 0 when all arguments are group N\r\n            if(evaluate || appeared.length === 0) {\r\n                //TODO: distribute exponent so that (a^-1*b^-1)^-1 => a*b\r\n                if(args.every(function (symbol) {\r\n                    return symbol.getDenom().equals(1)\r\n                })) {\r\n                    var aggregate = args[0];\r\n\r\n                    for(var i = 1; i < args.length; i++) {\r\n                        aggregate = __.gcd_(args[i], aggregate);\r\n                    }\r\n                    return aggregate;\r\n                }\r\n                else {\r\n                    //gcd_ cannot handle denominators correctly\r\n                    return _.divide(__.gcd.apply(null, args.map(function (symbol) {\r\n                        return symbol.getNum();\r\n                    })),\r\n                            __.lcm.apply(null, args.map(function (symbol) {\r\n                                return symbol.getDenom();\r\n                            })));\r\n                }\r\n            }\r\n            else\r\n                return _.symfunction('gcd', args);\r\n        },\r\n        gcd_: function (a, b) {\r\n            if(a.group === FN || a.group === P)\r\n                a = core.Utils.block('PARSE2NUMBER', function () {\r\n                    return _.parse(a);\r\n                });\r\n\r\n            if(b.group === FN)\r\n                b = core.Utils.block('PARSE2NUMBER', function () {\r\n                    return _.parse(b);\r\n                });\r\n\r\n            if(a.isConstant() && b.isConstant()) {\r\n                // return core.Math2.QGCD(new Frac(+a), new Frac(+b));\r\n                return new Symbol(core.Math2.QGCD(new Frac(+a), new Frac(+b)));\r\n            }\r\n\r\n            var den = _.multiply(a.getDenom() || new Symbol(1), b.getDenom() || new Symbol(1)).invert();\r\n            a = _.multiply(a.clone(), den.clone());\r\n            b = _.multiply(b.clone(), den.clone());\r\n\r\n            //feels counter intuitive but it works. Issue #123 (nerdamer(\"gcd(x+y,(x+y)^2)\"))\r\n            a = _.expand(a);\r\n            b = _.expand(b);\r\n\r\n            if(a.group === CB || b.group === CB) {\r\n                var q = _.divide(a.clone(), b.clone()); //get the quotient\r\n                var t = _.multiply(b.clone(), q.getDenom().invert());//multiply by the denominator\r\n                //if they have a common factor then the result will not equal one \r\n                if(!t.equals(1))\r\n                    return t;\r\n            }\r\n\r\n            //just take the gcd of each component when either of them is in group EX\r\n            if(a.group === EX || b.group === EX)\r\n            {\r\n                var gcd_m = new Symbol(core.Math2.GCD(a.multiplier, b.multiplier));\r\n                var gcd_v = __.gcd_(a.value === CONST_HASH ? new Symbol(1) : _.parse(a.value), b.value === CONST_HASH ? new Symbol(1) : _.parse(b.value));\r\n                var gcd_p = __.gcd_(_.parse(a.power), _.parse(b.power));\r\n                return _.multiply(gcd_m, _.pow(gcd_v, gcd_p));\r\n            }\r\n\r\n            if(a.length < b.length) { //swap'm\r\n                var t = a;\r\n                a = b;\r\n                b = t;\r\n            }\r\n            var vars_a = variables(a), vars_b = variables(b);\r\n            if((vars_a.length === vars_b.length && vars_a.length === 1 && vars_a[0] === vars_b[0])\r\n                    || vars_a.length === 1 && vars_b.length === 0\r\n                    || vars_a.length === 0 && vars_b.length === 1) {\r\n                a = new Polynomial(a);\r\n                b = new Polynomial(b);\r\n                return _.divide(a.gcd(b).toSymbol(), den);\r\n            }\r\n            else {\r\n                //get the gcd of the multipiers\r\n                //get rid of gcd in coeffs\r\n                var multipliers = [];\r\n                a.each(function (x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n                b.each(function (x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n\r\n                var T;\r\n                while(!b.equals(0)) {\r\n                    var t = b.clone();\r\n                    a = a.clone();\r\n                    T = __.div(a, t);\r\n\r\n                    b = T[1];\r\n                    if(T[0].equals(0)) {\r\n                        //return _.multiply(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), b);\r\n                        return _.divide(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), den);\r\n                    }\r\n                    a = t;\r\n                }\r\n\r\n                var gcd = core.Math2.QGCD.apply(undefined, multipliers);\r\n\r\n                if(!gcd.equals(1)) {\r\n                    a.each(function (x) {\r\n                        x.multiplier = x.multiplier.divide(gcd);\r\n                    });\r\n                }\r\n\r\n                //return symbolic function for gcd in indeterminate form\r\n                if(a.equals(1) && !a.isConstant() && !b.isConstant())\r\n                    return _.divide(_.symfunction('gcd', arguments), den);\r\n\r\n                return _.divide(a, den);\r\n            }\r\n        },\r\n        lcm: function () {\r\n            //https://math.stackexchange.com/a/319310\r\n            //generalization of the 2-variable formula of lcm\r\n\r\n            var args;\r\n            if(arguments.length === 1)\r\n                if(arguments[0] instanceof core.Vector)\r\n                    args = arguments[0].elements;\r\n                else\r\n                    _.error('lcm expects either 1 vector or 2 or more arguments');\r\n            else\r\n                args = core.Utils.arguments2Array(arguments);\r\n\r\n            //product of all arguments\r\n            //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n            var numer = args.reduce(function (prev, curr) {\r\n                return _.multiply(prev, curr.clone())\r\n            }, new Symbol(1));\r\n\r\n            //gcd of complementary terms\r\n            var denom_args =\r\n                    //https://stackoverflow.com/a/18223072\r\n                //take all complementary terms, e.g.\r\n                //[a,b,c] => [a*b, b*c, a*c]\r\n                //[a,b,c,d] => [a*b*c, a*b*d, a*c*d, b*c*d]\r\n                (function (input, size) {\r\n                        size = Number(size);\r\n                        var results = [], result, mask, i, total = Math.pow(2, input.length);\r\n                        for(mask = size; mask < total; mask++) {\r\n                            result = [];\r\n                            i = input.length - 1;\r\n\r\n                            do {\r\n                                if((mask & (1 << i)) !== 0) {\r\n                                    result.push(input[i]);\r\n                                }\r\n                            }\r\n                            while(i--);\r\n\r\n                            if(result.length === size) {\r\n                                results.push(result);\r\n                            }\r\n                        }\r\n                        return results;\r\n                        //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n                    })(arguments, arguments.length - 1).map(function (x) {\r\n                return x.reduce(function (prev, curr) {\r\n                    return _.multiply(prev, curr.clone())\r\n                }, new Symbol(1))\r\n            });\r\n\r\n            var denom;\r\n            //don't eat the gcd term if all arguments are symbols\r\n            if(args.every(function (x) {\r\n                return core.Utils.isVariableSymbol(x)\r\n            }))\r\n                denom = _.symfunction('gcd', core.Utils.arrayUnique(denom_args));\r\n            else\r\n                denom = __.gcd.apply(null, denom_args);\r\n            //divide product of all arguments by gcd of complementary terms\r\n            var div = _.divide(numer, denom);\r\n            return div;\r\n        },\r\n        /**\r\n         * Divides one expression by another\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Array}\r\n         */\r\n        divide: function (symbol1, symbol2) {\r\n            var result, remainder, factored, den;\r\n            factored = core.Algebra.Factor.factor(symbol1.clone());\r\n            den = factored.getDenom();\r\n            if(!den.isConstant('all')) {\r\n                symbol1 = _.expand(Symbol.unwrapPARENS(_.multiply(factored, den.clone())));\r\n            }\r\n            else\r\n                //reset the denominator since we're not dividing by it anymore\r\n                den = new Symbol(1);\r\n            result = __.div(symbol1, symbol2);\r\n            remainder = _.divide(result[1], symbol2);\r\n            return _.divide(_.add(result[0], remainder), den);\r\n        },\r\n        div: function (symbol1, symbol2) {\r\n            // If all else fails then assume that division failed with\r\n            // a remainder of zero and the original quotient\r\n            var fail = [new Symbol(0), symbol1.clone()];\r\n\r\n            try {\r\n\r\n                // Division by constants\r\n                if(symbol2.isConstant('all')) {\r\n                    symbol1.each(function (x) {\r\n                        x.multiplier = x.multiplier.divide(symbol2.multiplier);\r\n                    });\r\n                    return [symbol1, new Symbol(0)];\r\n                }\r\n                // So that factorized symbols don't affect the result\r\n                symbol1 = _.expand(symbol1);\r\n                symbol2 = _.expand(symbol2);\r\n                // Special case. May need revisiting\r\n                if(symbol1.group === S && symbol2.group === CP) {\r\n                    var x = symbol1.value;\r\n                    var f = core.Utils.decompose_fn(symbol2.clone(), x, true);\r\n                    if(symbol1.isLinear() && f.x && f.x.isLinear() && symbol2.isLinear()) {\r\n                        var k = Symbol.create(symbol1.multiplier);\r\n                        return [_.divide(k.clone(), f.a.clone()), _.divide(_.multiply(k, f.b), f.a).negate()];\r\n                    }\r\n                }\r\n                if(symbol1.group === S && symbol2.group === S) {\r\n                    var r = _.divide(symbol1.clone(), symbol2.clone());\r\n                    if(r.isConstant()) //we have a whole\r\n                        return [r, new Symbol(0)];\r\n                    return [new Symbol(0), symbol1.clone()];\r\n                }\r\n                var symbol1_has_func = symbol1.hasFunc(),\r\n                        symbol2_has_func = symbol2.hasFunc(),\r\n                        parse_funcs = false;\r\n\r\n                //substitute out functions so we can treat them as regular variables\r\n                if(symbol1_has_func || symbol2_has_func) {\r\n                    parse_funcs = true;\r\n                    var map = {},\r\n                            symbol1 = _.parse(core.Utils.subFunctions(symbol1, map)),\r\n                            symbol2 = _.parse(core.Utils.subFunctions(symbol2, map)),\r\n                            subs = core.Utils.getFunctionsSubs(map);\r\n                }\r\n                //get a list of the variables\r\n                var vars = core.Utils.arrayUnique(variables(symbol1).concat(variables(symbol2))),\r\n                        quot, rem;\r\n\r\n                //treat imaginary numbers as variables\r\n                if(symbol1.isImaginary() || symbol2.isImaginary()) {\r\n                    vars.push(core.Settings.IMAGINARY);\r\n                }\r\n\r\n                if(vars.length === 1) {\r\n                    var q = new Polynomial(symbol1).divide(new Polynomial(symbol2));\r\n                    quot = q[0].toSymbol();\r\n                    rem = q[1].toSymbol();\r\n                }\r\n                else {\r\n                    vars.push(CONST_HASH); //this is for the numbers\r\n                    var reconvert = function (arr) {\r\n                        var symbol = new Symbol(0);\r\n                        for(var i = 0; i < arr.length; i++) {\r\n                            var x = arr[i].toSymbol();\r\n                            symbol = _.add(symbol, x);\r\n                        }\r\n                        return symbol;\r\n                    };\r\n\r\n                    // Silly Martin. This is why you document. I don't remember now\r\n                    var get_unique_max = function (term, any) {\r\n                        var max = Math.max.apply(null, term.terms),\r\n                                count = 0, idx;\r\n\r\n                        if(!any) {\r\n                            for(var i = 0; i < term.terms.length; i++) {\r\n                                if(term.terms[i].equals(max)) {\r\n                                    idx = i;\r\n                                    count++;\r\n                                }\r\n                                if(count > 1)\r\n                                    return;\r\n                            }\r\n                        }\r\n                        if(any) {\r\n                            for(i = 0; i < term.terms.length; i++)\r\n                                if(term.terms[i].equals(max)) {\r\n                                    idx = i;\r\n                                    break;\r\n                                }\r\n                        }\r\n                        return [max, idx, term];\r\n                    };\r\n\r\n                    // Tries to find an LT in the dividend that will satisfy division\r\n                    var get_det = function (s, lookat) {\r\n                        lookat = lookat || 0;\r\n                        var det = s[lookat], l = s.length;\r\n                        if(!det)\r\n                            return;\r\n                        //eliminate the first term if it doesn't apply\r\n                        var umax = get_unique_max(det);\r\n                        for(var i = lookat + 1; i < l; i++) {\r\n                            var term = s[i],\r\n                                    is_equal = det.sum.equals(term.sum);\r\n                            if(!is_equal && umax) {\r\n                                break;\r\n                            }\r\n                            if(is_equal) {\r\n                                // Check the differences of their maxes. The one with the biggest difference governs\r\n                                // e.g. x^2*y^3 vs x^2*y^3 is unclear but this isn't the case in x*y and x^2\r\n                                var max1, max2, idx1, idx2, l2 = det.terms.length;\r\n                                for(var j = 0; j < l2; j++) {\r\n                                    var item1 = det.terms[j], item2 = term.terms[j];\r\n                                    if(typeof max1 === 'undefined' || item1.greaterThan(max1)) {\r\n                                        max1 = item1;\r\n                                        idx1 = j;\r\n                                    }\r\n                                    if(typeof max2 === 'undefined' || item2.greaterThan(max2)) {\r\n                                        max2 = item2;\r\n                                        idx2 = j;\r\n                                    }\r\n                                }\r\n                                //check their differences\r\n                                var d1 = max1.subtract(term.terms[idx1]),\r\n                                        d2 = max2.subtract(det.terms[idx2]);\r\n                                if(d2 > d1) {\r\n                                    umax = [max2, idx2, term];\r\n                                    break;\r\n                                }\r\n                                if(d1 > d2) {\r\n                                    umax = [max1, idx1, det];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else {\r\n                                //check if it's a suitable pick to determine the order\r\n                                umax = get_unique_max(term);\r\n                                //if(umax) return umax;\r\n                                if(umax)\r\n                                    break;\r\n                            }\r\n                            umax = get_unique_max(term); //calculate a new unique max\r\n                        }\r\n\r\n                        //if still no umax then any will do since we have a tie\r\n                        if(!umax)\r\n                            return get_unique_max(s[0], true);\r\n                        var e, idx;\r\n                        for(var i = 0; i < s2.length; i++) {\r\n                            var cterm = s2[i].terms;\r\n                            //confirm that this is a good match for the denominator\r\n                            idx = umax[1];\r\n                            if(idx === cterm.length - 1)\r\n                                return;\r\n                            e = cterm[idx];\r\n                            if(!e.equals(0))\r\n                                break;\r\n                        }\r\n                        if(e.equals(0))\r\n                            return get_det(s, ++lookat); //look at the next term\r\n\r\n                        return umax;\r\n                    };\r\n\r\n                    var t_map = core.Utils.toMapObj(vars);\r\n                    var init_sort = function (a, b) {\r\n                        return b.sum.subtract(a.sum);\r\n                    };\r\n                    var is_larger = function (a, b) {\r\n                        if(!a || !b)\r\n                            return false; //it's empty so...\r\n                        for(var i = 0; i < a.terms.length; i++) {\r\n                            if(a.terms[i].lessThan(b.terms[i]))\r\n                                return false;\r\n                        }\r\n                        return true;\r\n                    };\r\n\r\n                    var s1 = symbol1.tBase(t_map).sort(init_sort),\r\n                            s2 = symbol2.tBase(t_map).sort(init_sort);\r\n                    var target = is_larger(s1[0], s2[0]) && s1[0].count > s2[0].count ? s2 : s1; //since the num is already larger than we can get the det from denom\r\n                    var det = get_det(target);//we'll begin by assuming that this will let us know which term \r\n                    var quotient = [];\r\n                    if(det) {\r\n                        var lead_var = det[1];\r\n                        var can_divide = function (a, b) {\r\n                            if(a[0].sum.equals(b[0].sum))\r\n                                return a.length >= b.length;\r\n                            return true;\r\n                        };\r\n\r\n                        var try_better_lead_var = function (s1, s2, lead_var) {\r\n                            var checked = [];\r\n                            for(var i = 0; i < s1.length; i++) {\r\n                                var t = s1[i];\r\n                                for(var j = 0; j < t.terms.length; j++) {\r\n                                    var cf = checked[j], tt = t.terms[j];\r\n                                    if(i === 0)\r\n                                        checked[j] = tt; //add the terms for the first one\r\n                                    else if(cf && !cf.equals(tt))\r\n                                        checked[j] = undefined;\r\n                                }\r\n                            }\r\n                            for(var i = 0; i < checked.length; i++) {\r\n                                var t = checked[i];\r\n                                if(t && !t.equals(0))\r\n                                    return i;\r\n                            }\r\n                            return lead_var;\r\n                        };\r\n                        var sf = function (a, b) {\r\n                            var l1 = a.len(), l2 = b.len();\r\n                            var blv = b.terms[lead_var], alv = a.terms[lead_var];\r\n                            if(l2 > l1 && blv.greaterThan(alv))\r\n                                return l2 - l1;\r\n                            return blv.subtract(alv);\r\n                        };\r\n\r\n                        //check to see if there's a better lead_var\r\n                        lead_var = try_better_lead_var(s1, s2, lead_var);\r\n                        //reorder both according to the max power\r\n                        s1.sort(sf); //sort them both according to the leading variable power\r\n                        s2.sort(sf);\r\n\r\n                        //try to adjust if den is larger\r\n                        var fdt = s2[0], fnt = s1[0];\r\n\r\n                        var den = new MVTerm(new Frac(1), [], fnt.map);\r\n                        if(fdt.sum.greaterThan(fnt.sum) && fnt.len() > 1) {\r\n                            for(var i = 0; i < fnt.terms.length; i++) {\r\n                                var d = fdt.terms[i].subtract(fnt.terms[i]);\r\n                                if(!d.equals(0)) {\r\n                                    var nd = d.add(new Frac(1));\r\n                                    den.terms[i] = d;\r\n                                    for(var j = 0; j < s1.length; j++) {\r\n                                        s1[j].terms[i] = s1[j].terms[i].add(nd);\r\n                                    }\r\n                                }\r\n                                else\r\n                                    den.terms[i] = new Frac(0);\r\n                            }\r\n                        }\r\n\r\n                        var dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                        var safety = 0;\r\n                        var max = 200;\r\n\r\n                        while(dividend_larger && can_divide(s1, s2)) {\r\n                            if(safety++ > max) {\r\n                                throw new core.exceptions.InfiniteLoopError('Unable to compute!');\r\n                            }\r\n\r\n                            var q = s1[0].divide(s2[0]);\r\n\r\n                            quotient.push(q); //add what's divided to the quotient\r\n                            s1.shift();//the first one is guaranteed to be gone so remove from dividend\r\n                            for(var i = 1; i < s2.length; i++) { //loop through the denominator\r\n                                var t = s2[i].multiply(q).generateImage(),\r\n                                        l2 = s1.length;\r\n                                //if we're subtracting from 0\r\n                                if(l2 === 0) {\r\n                                    t.coeff = t.coeff.neg();\r\n                                    s1.push(t);\r\n                                    s1.sort(sf);\r\n                                }\r\n\r\n                                for(var j = 0; j < l2; j++) {\r\n                                    var cur = s1[j];\r\n                                    if(cur.getImg() === t.getImg()) {\r\n                                        cur.coeff = cur.coeff.subtract(t.coeff);\r\n                                        if(cur.coeff.equals(0)) {\r\n                                            core.Utils.remove(s1, j);\r\n                                            j--; //adjust the iterator\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                    if(j === l2 - 1) {\r\n                                        t.coeff = t.coeff.neg();\r\n                                        s1.push(t);\r\n                                        s1.sort(sf);\r\n                                    }\r\n                                }\r\n                            }\r\n                            dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                            if(!dividend_larger && s1.length >= s2.length) {\r\n                                //One more try since there might be a terms that is larger than the LT of the divisor\r\n                                for(var i = 1; i < s1.length; i++) {\r\n                                    dividend_larger = is_larger(s1[i], s2[0]);\r\n                                    if(dividend_larger) {\r\n                                        //take it from its current position and move it to the front\r\n                                        s1.unshift(core.Utils.remove(s1, i));\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    quot = reconvert(quotient);\r\n                    rem = reconvert(s1);\r\n\r\n                    if(typeof den !== 'undefined') {\r\n                        den = den.toSymbol();\r\n                        quot = _.divide(quot, den.clone());\r\n                        rem = _.divide(rem, den);\r\n                    }\r\n                }\r\n\r\n                //put back the functions\r\n                if(parse_funcs) {\r\n                    quot = _.parse(quot.text(), subs);\r\n                    rem = _.parse(rem.text(), subs);\r\n                }\r\n\r\n                return [quot, rem];\r\n            }\r\n            catch(e) {\r\n                return fail;\r\n            }\r\n\r\n        },\r\n        line: function (v1, v2, x) {\r\n            if(core.Utils.isArray(v1))\r\n                v1 = core.Utils.convertToVector(v1);\r\n            if(core.Utils.isArray(v2))\r\n                v2 = core.Utils.convertToVector(v2);\r\n            x = _.parse(x || 'x');\r\n            if(!core.Utils.isVector(v1) || !core.Utils.isVector(v2))\r\n                _.error('Line expects a vector! Received \"' + v1 + '\" & \"' + v2 + '\"');\r\n            var dx = _.subtract(v2.e(1).clone(), v1.e(1).clone()),\r\n                    dy = _.subtract(v2.e(2).clone(), v1.e(2).clone()),\r\n                    m = _.divide(dy, dx),\r\n                    a = _.multiply(x, m.clone()),\r\n                    b = _.multiply(v1.e(1).clone(), m);\r\n            return _.add(_.subtract(a, b), v1.e(2).clone());\r\n        },\r\n        PartFrac: {\r\n            createTemplate: function (den, denom_factors, f_array, v) {\r\n                //clean up the denominator function by factors so it reduces nicely\r\n                den = __.Factor.factor(den);\r\n\r\n                //clean up factors. This is so inefficient but factors are wrapped in parens for safety\r\n                den.each(function (x, key) {\r\n                    if(x.group === FN && x.fname === '' && x.args[0].group === S) {\r\n                        var y = x.args[0];\r\n                        if(this.symbols) {\r\n                            delete this.symbols[key];\r\n                            this.symbols[y.value] = y;\r\n                        }\r\n                        else {\r\n                            den = x.args[0];\r\n                        }\r\n                    }\r\n                });\r\n\r\n                var factors, factors_vec, f, p, deg, degrees, m;\r\n                factors = denom_factors.collectFactors();\r\n                factors_vec = []; //a vector for the template\r\n                degrees = [];\r\n                m = new Symbol(1);\r\n\r\n                for(var i = 0; i < factors.length; i++) { //loop through the factors\r\n                    var factor = Symbol.unwrapPARENS(factors[i]);\r\n                    //if in he for P^n where P is polynomial and n = integer\r\n                    if(factor.power.greaterThan(1)) {\r\n                        p = Number(factor.power);\r\n                        f = factor.clone().toLinear(); //remove the power so we have only the function\r\n                        deg = Number(__.degree(f, v)); //get the degree of f\r\n                        //expand the factor\r\n                        for(var j = 0; j < p; j++) {\r\n                            var efactor = _.pow(f.clone(), new Symbol(j + 1));\r\n                            f_array.push(efactor.clone());\r\n                            var d = _.divide(den.clone(), efactor.clone());\r\n                            degrees.push(deg);\r\n                            factors_vec.push(d);\r\n                        }\r\n                    }\r\n                    /*\r\n                     Possible bug.\r\n                     Removed: causes 1/(20+24*x+4*x^2) to result in (-1/64)*(5+x)^(-1)+(1/64)*(1+x)^(-1)\r\n                     else if(factor.isConstant('all')) {\r\n                     m = _.multiply(m, factor);\r\n                     }\r\n                     */\r\n                    else {\r\n                        //get the degree of the factor so we tack it on tot he factor. This should probably be an array\r\n                        //but for now we note it on the symbol\r\n                        deg = Number(__.degree(factor, v));\r\n                        f_array.push(factor);\r\n                        var d = _.divide(den.clone(), factor.clone());\r\n                        d = _.expand(Symbol.unwrapPARENS(d));\r\n                        degrees.push(deg);\r\n                        factors_vec.push(d);\r\n                    }\r\n                }\r\n                //put back the constant\r\n                f_array = f_array.map(function (x) {\r\n                    return _.multiply(x, m.clone());\r\n                });\r\n                return [f_array, factors_vec, degrees];\r\n            },\r\n            partfrac: function (symbol, v, as_array) {\r\n\r\n                var vars = variables(symbol);\r\n\r\n                v = v || _.parse(vars[0]); //make wrt optional and assume first variable\r\n                try {\r\n                    var num, den, factors, tfactors, ofactors, nterms, degrees,\r\n                            dterms, max, M, c, powers, div, r, factors_vec, ks,\r\n                            template, tfactors;\r\n                    num = _.expand(symbol.getNum());\r\n                    den = _.expand(symbol.getDenom().toUnitMultiplier());\r\n                    //move the entire multipier to the numerator\r\n                    num.multiplier = symbol.multiplier;\r\n                    //we only have a meaningful change if n factors > 1. This means that\r\n                    //the returned group will be a CB\r\n                    //collect the terms wrt the x\r\n                    nterms = num.groupTerms(v);\r\n                    //divide out wholes if top is larger\r\n                    if(Number(__.degree(num, v)) >= Number(__.degree(den, v))) {\r\n                        div = __.div(num.clone(), _.expand(den.clone()));\r\n                        r = div[0]; //remove the wholes\r\n                        num = div[1]; //work with the remainder\r\n                        nterms = num.groupTerms(v); //recalculate the nterms\r\n                    }\r\n                    else\r\n                        r = new Symbol(0);\r\n\r\n                    if(Number(__.degree(den, v)) === 1) {\r\n                        var q = _.divide(num, den);\r\n                        if(as_array)\r\n                            return [r, q];\r\n                        return _.add(r, q);\r\n                    }\r\n                    //first factor the denominator. This means that the strength of this\r\n                    //algorithm depends on how well we can factor the denominator. \r\n                    ofactors = __.Factor.factor(den);\r\n                    //create the template. This method will create the template for solving \r\n                    //the partial fractions. So given x/(x-1)^2 the template creates A/(x-1)+B/(x-1)^2\r\n                    template = __.PartFrac.createTemplate(den.clone(), ofactors, [], v);\r\n                    tfactors = template[0]; //grab the factors\r\n                    factors_vec = template[1]; //grab the factor vectors\r\n                    degrees = template[2]; //grab the degrees\r\n                    //make note of the powers of each term\r\n                    powers = [nterms.length];\r\n                    //create the dterms vector\r\n                    dterms = [];\r\n                    factors = [];\r\n                    ks = [];\r\n                    var factor, deg;\r\n                    factors_vec.map(function (x, idx) {\r\n                        factor = tfactors[idx];\r\n                        deg = degrees[idx];\r\n                        for(var i = 0; i < deg; i++) {\r\n                            factors.push(factor.clone());\r\n                            var k = Symbol.create(v, i);\r\n                            var t = _.expand(_.multiply(x, k.clone())).groupTerms(v);\r\n                            //make a note of the power which corresponds to the length of the array\r\n                            var p = t.length;\r\n                            powers.push(p);\r\n                            dterms.push(t);\r\n                            ks.push(k.clone());\r\n                        }\r\n                    });\r\n                    //get the max power\r\n                    max = core.Utils.arrayMax(powers);\r\n\r\n                    //fill the holes and create a matrix\r\n                    c = new core.Matrix(core.Utils.fillHoles(nterms, max)).transpose();\r\n                    //for each of the factors we do the same\r\n                    M = new core.Matrix();\r\n                    for(var i = 0; i < dterms.length; i++) {\r\n                        M.elements.push(core.Utils.fillHoles(dterms[i], max));\r\n                    }\r\n\r\n                    //solve the system of equations\r\n                    var partials = _.multiply(M.transpose().invert(), c);\r\n                    //the results are backwards to reverse it\r\n                    //partials.elements.reverse();\r\n                    //convert it all back\r\n                    var retval = as_array ? [r] : r;\r\n                    partials.each(function (e, i) {\r\n                        var term = _.multiply(ks[i], _.divide(e, factors[i]));\r\n                        if(as_array)\r\n                            retval.push(term);\r\n                        else\r\n                            retval = _.add(retval, term);\r\n                    });\r\n\r\n                    //done\r\n                    return retval;\r\n                }\r\n                catch(e) {\r\n                    //try to group symbols\r\n                    try {\r\n                        if(symbol.isComposite()) {\r\n                            //group denominators\r\n                            var denominators = {};\r\n\r\n                            symbol.each(function (x) {\r\n                                var d = x.getDenom();\r\n                                var n = x.getNum();\r\n                                var e = denominators[d];\r\n                                denominators[d] = e ? _.add(e, n) : n;\r\n                            });\r\n\r\n                            var t = new Symbol(0);\r\n\r\n                            for(var x in denominators) {\r\n                                t = _.add(t, _.divide(denominators[x], _.parse(x)));\r\n                            }\r\n\r\n                            symbol = t;\r\n                        }\r\n                    }\r\n                    catch(e2) {\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        degree: function (symbol, v, o) {\r\n            o = o || {\r\n                nd: [], //numeric\r\n                sd: [], //symbolic\r\n                depth: 0 //call depth\r\n            };\r\n\r\n            if(!v) {\r\n                var vars = variables(symbol);\r\n                //The user must specify the variable for multivariate\r\n                if(vars.length > 1)\r\n                    throw new Error('You must specify the variable for multivariate polynomials!');\r\n                //if it's empty then we're dealing with a constant\r\n                if(vars.length === 0)\r\n                    return new Symbol(0);\r\n                //assume the variable for univariate\r\n                v = _.parse(vars[0]);\r\n            }\r\n\r\n            //store the group\r\n            var g = symbol.group;\r\n            //we're going to trust the user and assume no EX. Calling isPoly \r\n            //would eliminate this but no sense in checking twice. \r\n            if(symbol.isComposite()) {\r\n                symbol = symbol.clone();\r\n                symbol.distributeExponent();\r\n                symbol.each(function (x) {\r\n                    o.depth++; //mark a depth increase\r\n                    __.degree(x, v, o);\r\n                    o.depth--; //we're back\r\n                });\r\n            }\r\n            else if(symbol.group === CB) {\r\n                symbol.each(function (x) {\r\n                    o.depth++;\r\n                    __.degree(x, v, o);\r\n                    o.depth++;\r\n                });\r\n            }\r\n            else if(g === EX && symbol.value === v.value) {\r\n                o.sd.push(symbol.power.clone());\r\n            }\r\n            else if(g === S && symbol.value === v.value) {\r\n                o.nd.push(_.parse(symbol.power));\r\n            }\r\n            else\r\n                o.nd.push(new Symbol(0));\r\n\r\n            //get the max out of the array\r\n            var deg = o.nd.length > 0 ? core.Utils.arrayMax(o.nd) : undefined;\r\n\r\n            if(o.depth === 0 && o.sd.length > 0) {\r\n                if(deg !== undefined)\r\n                    o.sd.unshift(deg);\r\n                return _.symfunction('max', o.sd);\r\n            }\r\n            if(!core.Utils.isSymbol(deg))\r\n                deg = _.parse(deg);\r\n            //return the degree\r\n            return deg;\r\n        },\r\n        /**\r\n         * Attempts to complete the square of a polynomial\r\n         * @param {type} symbol\r\n         * @param {type} v\r\n         * @param {type} raw\r\n         * @throws {Error} \r\n         * @returns {Object|Symbol[]}\r\n         */\r\n        sqComplete: function (symbol, v, raw) {\r\n            if(!core.Utils.isSymbol(v))\r\n                v = _.parse(v);\r\n            var stop = function (msg) {\r\n                msg = msg || 'Stopping';\r\n                throw new core.exceptions.ValueLimitExceededError(msg);\r\n            };\r\n            //if not CP then nothing to do\r\n            if(!symbol.isPoly(true))\r\n                stop('Must be a polynomial!');\r\n\r\n            //declare vars\r\n            var deg, a, b, c, d, e, coeffs, sign, br, sym, sqrt_a;\r\n\r\n            br = core.Utils.inBrackets;\r\n            //make a copy\r\n            symbol = symbol.clone();\r\n            deg = core.Algebra.degree(symbol, v); //get the degree of polynomial\r\n            //must be in form ax^2 +/- bx +/- c\r\n            if(!deg.equals(2))\r\n                stop('Cannot complete square for degree ' + deg);\r\n            //get the coeffs\r\n            coeffs = core.Algebra.coeffs(symbol, v);\r\n            a = coeffs[2];\r\n            //store the sign\r\n            sign = coeffs[1].sign();\r\n            //divide the linear term by two and square it\r\n            b = _.divide(coeffs[1], new Symbol(2));\r\n            //add the difference to the constant\r\n            c = _.pow(b.clone(), new Symbol(2));\r\n            if(raw)\r\n                return [a, b, d];\r\n            sqrt_a = math.sqrt(a);\r\n            e = _.divide(math.sqrt(c), sqrt_a.clone());\r\n            //calculate d which is the constant\r\n            d = _.subtract(coeffs[0], _.pow(e.clone(), new Symbol(2)));\r\n            //compute the square part\r\n            sym = _.parse(br(sqrt_a.clone() + '*' + v + (sign < 0 ? '-' : '+') + e));\r\n            return {\r\n                a: sym,\r\n                c: d,\r\n                f: _.add(_.pow(sym.clone(), new Symbol(2)), d.clone())\r\n            };\r\n        },\r\n        Simplify: {\r\n            strip: function (symbol) {\r\n                var c = _.parse(symbol.multiplier);\r\n                symbol.toUnitMultiplier();\r\n                var p = _.parse(symbol.power);\r\n                symbol.toLinear();\r\n                return [c, p, symbol];\r\n            },\r\n            unstrip: function (cp, symbol) {\r\n                var c = cp[0];\r\n                var p = cp[1];\r\n                return _.multiply(c, _.pow(symbol, p));\r\n            },\r\n            complexSimp: function (num, den) {\r\n                var ac, bd, bc, ad, cd, r1, r2, i1, i2;\r\n                r1 = num.realpart();\r\n                i1 = num.imagpart();\r\n                r2 = den.realpart();\r\n                i2 = den.imagpart();\r\n                //apply complex arithmatic rule\r\n                ac = _.multiply(r1.clone(), r2.clone());\r\n                bd = _.multiply(i1.clone(), i2.clone());\r\n                bc = _.multiply(r2.clone(), i1);\r\n                ad = _.multiply(r1, i2.clone());\r\n                cd = _.add(_.pow(r2, new Symbol(2)), _.pow(i2, new Symbol(2)));\r\n\r\n                return _.divide(_.add(_.add(ac, bd), _.multiply(_.subtract(bc, ad), Symbol.imaginary())), cd);\r\n            },\r\n            trigSimp: function (symbol) {\r\n                if(symbol.containsFunction(['cos', 'sin', 'tan'])) {\r\n                    symbol = symbol.clone();\r\n                    //remove power and multiplier\r\n                    var sym_array = __.Simplify.strip(symbol);\r\n                    symbol = sym_array.pop();\r\n                    //the default return value is the symbol\r\n                    var retval = symbol.clone();\r\n\r\n                    //rewrite the symbol\r\n                    if(symbol.group === CP) {\r\n                        var sym = new Symbol(0);\r\n                        symbol.each(function (x) {\r\n                            //rewrite the function\r\n                            var tr = __.Simplify.trigSimp(x.fnTransform());\r\n                            sym = _.add(sym, tr);\r\n                        }, true);\r\n\r\n                        //put back the power and multiplier and return\r\n                        retval = _.pow(_.multiply(new Symbol(symbol.multiplier), sym), new Symbol(symbol.power));\r\n                    }\r\n                    else if(symbol.group === CB) {\r\n\r\n                        var n = symbol.getNum();\r\n                        var d = symbol.getDenom();\r\n\r\n                        //try for tangent\r\n                        if(n.fname === 'sin' && d.fname === 'cos' && n.args[0].equals(d.args[0]) && n.power.equals(d.power)) {\r\n                            retval = _.parse(core.Utils.format('({0})*({1})*tan({2})^({3})', d.multiplier, n.multiplier, n.args[0], n.power));\r\n                        }\r\n                        if(retval.group === CB) {\r\n                            var t = new Symbol(1);\r\n                            retval.each(function (x) {\r\n                                if(x.fname === 'tan') {\r\n                                    x = _.parse(core.Utils.format('({0})*sin({1})^({2})/cos({1})^({2})', x.multiplier, __.Simplify.simplify(x.args[0]), x.power));\r\n                                }\r\n                                t = _.multiply(t, x);\r\n                            });\r\n                            retval = t;\r\n                        }\r\n                    }\r\n\r\n\r\n                    retval = __.Simplify.unstrip(sym_array, retval).distributeMultiplier();\r\n\r\n                    symbol = retval;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            fracSimp: function (symbol) {\r\n                //try a quick simplify of imaginary numbers\r\n                var den = symbol.getDenom();\r\n                var num = symbol.getNum();\r\n\r\n                if(num.isImaginary() && den.isImaginary())\r\n                    symbol = __.Simplify.complexSimp(num, den);\r\n\r\n                if(symbol.isComposite()) {\r\n                    if(symbol.power > 1) {\r\n                        symbol = _.expand(symbol);\r\n                    }\r\n\r\n                    var symbols = symbol.collectSymbols();\r\n                    //assumption 1.\r\n                    //since it's a composite, it has a length of at least 1\r\n                    var retval, a, b, d1, d2, n1, n2, x, y, c, den, num;\r\n                    a = symbols.pop(); //grab the first symbol\r\n                    //loop through each term and make denominator common\r\n                    while(symbols.length) {\r\n                        b = symbols.pop(); //grab the second symbol\r\n                        d1 = _.parse(a.getDenom());\r\n                        d2 = _.parse(b.getDenom());\r\n                        n1 = a.getNum();\r\n                        n2 = b.getNum();\r\n                        c = _.multiply(d1.clone(), d2.clone());\r\n                        x = _.multiply(n1, d2);\r\n                        y = _.multiply(n2, d1);\r\n                        a = _.divide(_.add(x, y), c);\r\n                    }\r\n                    den = _.expand(a.getDenom());\r\n                    num = _.expand(a.getNum());\r\n\r\n                    //simplify imaginary\r\n                    if(num.isImaginary() && den.isImaginary()) {\r\n                        retval = __.Simplify.complexSimp(num, den);\r\n                    }\r\n                    else {\r\n                        retval = _.divide(num, den);\r\n                    }\r\n\r\n                    //we've already hit the simplest form so return that\r\n                    if(retval.equals(symbol)) {\r\n                        return symbol;\r\n                    }\r\n\r\n                    //otherwise simplify it some more\r\n                    return __.Simplify.simplify(retval);\r\n                }\r\n                return symbol;\r\n            },\r\n            ratSimp: function (symbol) {\r\n                if(symbol.group === CB) {\r\n                    var den = symbol.getDenom();\r\n                    var num = symbol.getNum().distributeMultiplier();\r\n                    var d = __.Simplify.fracSimp(den);\r\n                    var n = __.Simplify.fracSimp(num);\r\n                    symbol = _.divide(n, d);\r\n                }\r\n                return symbol;\r\n            },\r\n            sqrtSimp: function (symbol, sym_array) {\r\n                var retval;\r\n                if(symbol.isSQRT()) {\r\n                    var factored = __.Factor.factor(symbol.args[0].clone());\r\n                    var m = _.parse(factored.multiplier);\r\n                    var sign = m.sign();\r\n\r\n                    var retval = _.sqrt(m.abs());\r\n                    var arg;\r\n\r\n                    if(isInt(retval)) {\r\n\r\n                        if(factored.group === CB) {\r\n                            var rem = new Symbol(1);\r\n\r\n                            factored.each(function (x) {\r\n                                if(x.group === N) {\r\n                                    var trial = _.sqrt(x.clone());\r\n\r\n                                    // Multiply back sqrt if it's an integer otherwise just put back the number\r\n                                    if(isInt(trial)) {\r\n                                        retval = _.multiply(retval, trial);\r\n                                    }\r\n                                    else {\r\n                                        rem = _.multiply(rem, x);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    rem = _.multiply(rem, x);\r\n                                }\r\n\r\n                            });\r\n                            var t = _.multiply(rem, _.parse(sign));\r\n                            arg = _.sqrt(t.clone());\r\n\r\n                            // Expand if it's imaginary\r\n                            if(arg.isImaginary) {\r\n                                arg = _.sqrt(_.expand(t.clone()));\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Strip the multiplier\r\n                            arg = _.sqrt(factored.clone().toUnitMultiplier());\r\n                        }\r\n                        return _.multiply(retval, arg);\r\n\r\n                    }\r\n\r\n                }\r\n                else if(symbol.isComposite() && symbol.isLinear()) {\r\n                    retval = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        retval = _.add(retval, __.Simplify.sqrtSimp(x));\r\n                    }, true);\r\n                    // Put back the multiplier\r\n                    retval = _.multiply(retval, _.parse(symbol.multiplier));\r\n                }\r\n                else if(symbol.group === CB) {\r\n                    retval = _.parse(symbol.multiplier);\r\n                    symbol.each(function (x) {\r\n                        var simp = __.Simplify.sqrtSimp(x);\r\n                        retval = _.multiply(retval, simp);\r\n\r\n                    }, true);\r\n                    // Put back the power\r\n                    retval = _.pow(retval, _.parse(symbol.power));\r\n                }\r\n\r\n                return retval ? retval : _.parse(symbol);\r\n            },\r\n            /**\r\n             * Unused. The goal is to substitute out patterns but it currently doesn't work.\r\n             * @param {Symbol} symbol\r\n             * @return {Array} The symbol and the matched patterns\r\n             */\r\n            patternSub: function (symbol) {\r\n                var patterns = {};\r\n\r\n                var has_CP = function (symbol) {\r\n                    var found = false;\r\n                    symbol.each(function (x) {\r\n                        if(x.group === CP) {\r\n                            found = true;\r\n                        }\r\n                        else if(x.symbols) {\r\n                            found = has_CP(x);\r\n                        }\r\n                    });\r\n\r\n                    return found;\r\n                };\r\n\r\n                var collect = function (sym) {\r\n                    // We loop through each symbol looking for anything in the simplest\r\n                    // form of ax+byz+...\r\n                    sym.each(function (x) {\r\n                        // Items of group N,P,S, need to apply\r\n                        if(!x.symbols && x.group !== FN) {\r\n                            return;\r\n                        }\r\n\r\n                        // Check to see if it has any symbols of group CP\r\n                        // Get the patterns in that symbol instead if it has anything of group CP\r\n                        if(has_CP(x)) {\r\n                            collect(x);\r\n                        }\r\n                        else {\r\n                            if(!patterns[x.value]) {\r\n                                var u = core.Utils.getU(symbol);\r\n                                // Get a u value and mark it for subsitution\r\n                                patterns[x.value] = u;\r\n                                symbol = symbol.sub(x.value, u);\r\n                            }\r\n                        }\r\n                    }, true);\r\n                };\r\n\r\n                // Collect a list of patterns\r\n                collect(symbol);\r\n\r\n                return [symbol, patterns];\r\n            },\r\n            simplify: function (symbol) {\r\n                //remove the multiplier to make calculation easier;\r\n                var sym_array = __.Simplify.strip(symbol);\r\n                symbol = sym_array.pop();\r\n                //remove gcd from denominator\r\n                symbol = __.Simplify.fracSimp(symbol);\r\n\r\n                //nothing more to do\r\n                if(symbol.isConstant() || symbol.group === core.groups.S) {\r\n                    sym_array.push(symbol);\r\n                    var ret = __.Simplify.unstrip(sym_array, symbol);\r\n                    return ret;\r\n                }\r\n\r\n                //var patterns;\r\n\r\n                var simplified = symbol.clone(); //make a copy\r\n\r\n                //[simplified, patterns] = __.Simplify.patternSub(symbol);\r\n\r\n                // Simplify sqrt within the symbol\r\n//                simplified = __.Simplify.sqrtSimp(simplified, sym_array);\r\n\r\n                // Try trig simplificatons e.g. cos(x)^2+sin(x)^2\r\n                simplified = __.Simplify.trigSimp(simplified);\r\n\r\n                // Simplify common denominators\r\n                simplified = __.Simplify.ratSimp(simplified);\r\n\r\n                // First go for the \"cheapest\" simplification which may eliminate \r\n                // your problems right away. factor -> evaluate. Remember\r\n                // that there's no need to expand since factor already does that\r\n\r\n                simplified = __.Factor.factor(simplified);\r\n\r\n                //If the simplfied is a sum then we can make a few more simplifications\r\n                //e.g. simplify(1/(x-1)+1/(1-x)) as per issue #431\r\n                if(simplified.group === core.groups.CP && simplified.isLinear()) {\r\n                    var m = simplified.multiplier.clone();\r\n                    simplified.toUnitMultiplier(); //strip the multiplier\r\n                    var r = new Symbol(0);\r\n                    //return the sum of simplifications\r\n                    simplified.each(function (x) {\r\n                        var s = __.Simplify.simplify(x);\r\n                        r = _.add(r, s);\r\n                    });\r\n                    simplified = r;\r\n                    //put back the multiplier\r\n                    r.multiplier = r.multiplier.multiply(m);\r\n                }\r\n\r\n                //place back multiplier and return\r\n                var retval = __.Simplify.unstrip(sym_array, simplified);\r\n\r\n                // Back substitute\r\n                /*\r\n                 for(var x in patterns) {\r\n                 retval = retval.sub(patterns[x], x);\r\n                 }\r\n                 */\r\n\r\n                return retval;\r\n            }\r\n        },\r\n\r\n        Classes: {\r\n            Polynomial: Polynomial,\r\n            Factors: Factors,\r\n            MVTerm: MVTerm\r\n        }\r\n    };\r\n\r\n    // Add a link to simplify\r\n    core.Expression.prototype.simplify = function () {\r\n        return __.Simplify.simplify(this.symbol);\r\n    };\r\n\r\n    nerdamer.useAlgebraDiv = function () {\r\n        var divide = __.divideFn = _.divide;\r\n        var calls = 0; //keep track of how many calls were made\r\n        _.divide = function (a, b) {\r\n            calls++;\r\n            var ans;\r\n            if(calls === 1) //check if this is the first call. If it is use algebra divide\r\n                ans = core.Algebra.divide(a, b);\r\n            else //otherwise use parser divide\r\n                ans = divide(a, b);\r\n            calls = 0; //reset the number of calls back to none\r\n            return ans;\r\n        };\r\n    };\r\n\r\n    nerdamer.useParserDiv = function () {\r\n        if(__.divideFn)\r\n            _.divide = __.divideFn;\r\n        delete __.divideFn;\r\n    };\r\n\r\n    nerdamer.register([\r\n        {\r\n            name: 'factor',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Factor.factor;\r\n            }\r\n        },\r\n        {\r\n            name: 'simplify',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Simplify.simplify;\r\n            }\r\n        },\r\n        {\r\n            name: 'gcd',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function () {\r\n                return __.gcd;\r\n            }\r\n        },\r\n        {\r\n            name: 'lcm',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function () {\r\n                return __.lcm;\r\n            }\r\n        },\r\n        {\r\n            name: 'roots',\r\n            visible: true,\r\n            numargs: -1,\r\n            build: function () {\r\n                return __.roots;\r\n            }\r\n        },\r\n        {\r\n            name: 'divide',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function () {\r\n                return __.divide;\r\n            }\r\n        },\r\n        {\r\n            name: 'div',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function () {\r\n                return __.div;\r\n            }\r\n        },\r\n        {\r\n            name: 'partfrac',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.PartFrac.partfrac;\r\n            }\r\n        },\r\n        {\r\n            name: 'deg',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.degree;\r\n            }\r\n        },\r\n        {\r\n            name: 'coeffs',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                var f = function () {\r\n                    var coeffs = __.coeffs.apply(__, arguments);\r\n                    return new core.Vector(coeffs);\r\n                };\r\n                return f;\r\n            }\r\n        },\r\n        {\r\n            name: 'line',\r\n            visible: true,\r\n            numargs: [2, 3],\r\n            build: function () {\r\n                return __.line;\r\n            }\r\n        },\r\n        {\r\n            name: 'sqcomp',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                var f = function (x, v) {\r\n                    try {\r\n                        v = v || variables(x)[0];\r\n                        var sq = __.sqComplete(x.clone(), v);\r\n                        return sq.f;\r\n                    }\r\n                    catch(e) {\r\n                        return x;\r\n                    }\r\n                };\r\n                return f;\r\n            }\r\n        }\r\n    ]);\r\n    nerdamer.api();\r\n})();","var nerdamer=function(e){\"use strict\";var d=new P,S=e.bigInt,k=e.bigDec;k.set({precision:250});var t={},o=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],M={},F={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:\"i\",FUNCTION_MODULES:[Math],ALLOW_CHARS:[\"π\"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:\"^\",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,ALIASES:{\"π\":\"pi\",\"∞\":\"Infinity\"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,VECTOR:\"vector\",PARENTHESIS:\"parens\",SQRT:\"sqrt\",ABS:\"abs\",FACTORIAL:\"factorial\",DOUBLEFACTORIAL:\"dfactorial\",LONG_PI:\"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196\",LONG_E:\"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901\",PI:Math.PI,E:Math.E,LOG:\"log\",LOG10:\"log10\",LOG10_LATEX:\"log_{10}\",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};!function(){F.CACHE.roots={};for(var e=2;e<=40;e++)for(var t=2;t<=40;t++){var n=S(e).pow(t);F.CACHE.roots[n+\"-\"+t]=e}}();function n(t){function e(e){this.name=t,this.message=void 0!==e?e:\"\",(e=new Error(this.message)).name=this.name,this.stack=e.stack}return e.prototype=Object.create(Error.prototype),e}function r(e){return-1!==f.indexOf(e)}function i(e){return e instanceof O}function A(e){return(e=ne(e)?e.multiplier:e).lessThan(0)}function c(e){return Math.min.apply(void 0,e)}function s(e,t){if(ae(e))for(var n=e.length,r=0;r<n;r++)t.call(e,r);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)}function a(e){for(var t=e.length,n=[],r=0;r<t;r++){var i=e[r];-1===n.indexOf(i)&&n.push(i)}return n}function u(e){for(var t=o[o.length-1]||2;t<e;t++)g(t)&&o.push(t)}var D=t.N=1,B=t.P=2,G=t.S=3,V=t.EX=4,H=t.FN=5,j=t.PL=6,Z=t.CB=7,X=t.CP=8,l=F.CONST_HASH=\"#\",$=F.PARENTHESIS,z=F.SQRT,Q=F.ABS,Y=F.FACTORIAL,W=F.DOUBLEFACTORIAL,p=[],J={},f=[],h=[],K=function(e,t){if(!F.suppress_errors)throw new(t||Error)(e)},w=function(e){for(var t=e[0],n=1,r=e.length;n<r;n++)if(!e[n].equals(t))return!1;return!0},ee=function(e){h.push(e),F.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},m=function(e,t){if((t=t||\"variable\",-1===F.ALLOW_CHARS.indexOf(e))&&!F.VALIDATION_REGEX.test(e))throw new U(e+\" is not a valid \"+t+\" name\")},y=function(e){var t,n,r,i=Math.sign(e);return e=Math.abs(e),/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)&&(r=(r=(n=String(e).toLowerCase().split(\"e\")).pop())/(t=Math.abs(r)),n=n[0].split(\".\"),e=-1==r?(t-=n[0].length)<0?n[0].slice(0,t)+\".\"+n[0].slice(t)+(2===n.length?n[1]:\"\"):\"0.\"+new Array(t+1).join(\"0\")+n.join(\"\"):((r=n[1])&&(t-=r.length),t<0?n[0]+r.slice(0,t)+\".\"+r.slice(t):n.join(\"\")+new Array(t+1).join(\"0\"))),i<0?\"-\"+e:e},g=function(e){for(var t=Math.floor(Math.sqrt(e)),n=2;n<=t;n++)if(e%n==0)return!1;return!0},te=function(e){return/^\\d+\\.?\\d*$/.test(e)},v=function(e){return ne(e)?v(e.multiplier.toDecimal()):e%1!=0},ne=function(e){return e instanceof De},b=function(e,t,n){if(n=n||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},ne(e)){var r=e.group,i=e.previousGroup;if(r===V&&b(e.power,t,n),r===X||r===Z||i===X||i===Z)for(var s in e.symbols)b(e.symbols[s],t,n);else if(r===G||i===G)\"e\"!==e.value&&\"pi\"!==e.value&&e.value!==F.IMAGINARY&&n.add(e.value);else if(r===j||i===j)b(pe(e.symbols),t,n);else if(r===V)isNaN(e.value)||n.add(e.value),b(e.power,t,n);else if(r===H&&!t)for(var o=0;o<e.args.length;o++)b(e.args[o],t,n)}return n.c.sort()},N=function(e,n){e=d.expand(e),n=n||{};function t(e,t){n[e]||(n[e]=new De(0)),n[e]=d.add(n[e],t.clone())}return e.each(function(e){if(e.isConstant(\"all\"))t(\"constants\",e);else if(e.group===G)t(e.value,e);else if(e.group!==H||e.fname!==Q&&\"\"!==e.fname){if(e.group===V||e.group===H)throw new Error(\"Unable to separate. Term cannot be a function!\");t(b(e).join(\" \"),e)}else N(e.args[0])}),n},re=function(e){return e instanceof Ve},ie=function(e){return e instanceof He},se=function(e){return e instanceof je},oe=function(e){return e.group===D||e.group===B},ae=function(e){return Array.isArray(e)},ue=function(e){return/^[-+]?\\d+e?\\+?\\d*$/gim.test(e.toString())},le=function(e){return e&&String(e)},E=function(e){return\"(\"+e+\")\"},ce=function(){var n=[].slice.call(arguments);return n.shift().replace(/{(\\d+)}/g,function(e,t){t=n[t];return\"function\"==typeof t?t():t})},q=Object.keys,pe=function(e,t,n){for(var r in e)break;return t?r:n?{key:r,obj:e[r]}:e[r]},fe=function(e,t,n){return m(e),r(e)?null:(t=t||b(d.parse(n)),d.functions[e]=[d.mapped_function,t.length,{name:e,params:t,body:n}],n)},he=function(e,t,n){var r,i;return t=String(t),e.group===X?(i=d.expand(e.clone()).stripVar(t),r=d.subtract(e.clone(),i.clone()),i=i):r=e.clone(),e=r.stripVar(t),t=d.divide(r.clone(),e.clone()),i=i||new De(0),n?{a:e,x:t,ax:r,b:i}:[e,t,r,i]},me=function(e,t){return ue(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t=void 0===t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},ge=function(e){return e%2==0},de=function(e){return 1/(e%1)%2==0},ve=function(e,t){var n=typeof t;\"function\"==n&&\"undefined\"!=n||(t=function(e,t){return e===t});for(var r=[];e.length;){var i=e[0];if(1===e.length){r.push(i);break}var s=[];r.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return r},x=function(e){function t(e){-1===f.indexOf(e)&&f.push(e)}\"string\"==typeof e?t(e):s(e,function(e){t(e)})},we=function(e,t){var n;return ae(e)?n=e.splice(t,1)[0]:(n=e[t],delete e[t]),n},ye=function(e,t,n,r){var i=F[e];F[e]=void 0===n||!!n;r=t.call(r);return F[e]=i,r},be=function(e){return[].slice.call(e)},Se=function(e,t){return ye(\"PARSE2NUMBER\",function(){return d.parse(e,t)},!0)},C=function(e){if(ae(e)){for(var t=new Ve([]),n=0;n<e.length;n++)t.elements.push(C(e[n]));return t}return ne(e)?e:d.parse(e)},Me=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==D)return!1;return!0},Ne=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},Ee=function(e,n,r){(n.isComposite()&&!e.isComposite()||n.isLinear()&&!e.isLinear())&&([e,n]=[n,e]);var i=new De(0);return e.isLinear()?e.each(function(t){var e;n.isComposite()?n.isLinear()?n.each(function(e){e=d.multiply(d.parse(t),d.parse(e)),e=d.expand(d.parse(e),r);i=d.add(i,e)},!0):i=d.add(i,d.multiply(t,d.parse(n))):(e=d.multiply(d.parse(t),d.parse(n)),i=d.add(i,d.expand(e,r)))},!0):i=d.multiply(e,n),i},qe=n(\"DivisionByZero\"),xe=n(\"ParseError\"),Ae=n(\"UndefinedError\"),Ce=n(\"OutOfFunctionDomainError\"),L=n(\"MaximumIterationsReached\"),I=n(\"NerdamerTypeError\"),Le=n(\"ParityError\"),Ie=n(\"OperatorError\"),Ue=n(\"OutOfRangeError\"),_e=n(\"DimensionError\"),U=n(\"InvalidVariableNameError\"),_=n(\"ValueLimitExceededError\"),Re=n(\"NerdamerValueError\"),R=n(\"SolveError\"),e=n(\"InfiniteLoopError\"),Oe=n(\"UnexpectedTokenError\"),e={DivisionByZero:qe,ParseError:xe,OutOfFunctionDomainError:Ce,UndefinedError:Ae,MaximumIterationsReached:L,NerdamerTypeError:I,ParityError:Le,OperatorError:Ie,OutOfRangeError:Ue,DimensionError:_e,InvalidVariableNameError:U,ValueLimitExceededError:_,NerdamerValueError:Re,SolveError:R,InfiniteLoopError:e,UnexpectedTokenError:Oe},Te={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),t=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return 0<=e?t:-t},diff:function(t){return function(e){return(t(e+.001)-t(e-.001))/.002}},median:function(...e){e.sort(function(e,t){return e-t});var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),n=1/t.pop(),r=0,i=t.length;r<i;r++)n=1/(t.pop()+n);return e.sign*(e.whole+n)},continuedFraction:function(e,t){t=t||20;for(var n=Math.sign(e),r=Math.abs(e),i=Math.floor(r),s=r-i,o=0,a=!1,u={whole:i,sign:n,fractions:[]};!a&&0!==s;){var l=1/s,c=Math.floor(l);if(1e7<c)if(Te.fromContinued(u)-e<=Number.EPSILON)break;u.fractions.push(c),((s=l-c)<=1e-14||t-1<=o)&&(a=!0),o++}n=u.fractions.length-1;return 1===u.fractions[n]&&(u.fractions.pop(),u.fractions[--n]++),u},bigpow:function(e,t){e instanceof Fe||(e=Fe.create(e)),t instanceof Fe||(t=Fe.create(t));var n,r=new Fe(0);return t.isInteger()?(r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString())):(n=Fe.create(Math.pow(e.num,t.num)),e=Fe.create(Math.pow(e.den,t.num)),r.num=Te.nthroot(n,t.den.toString()),r.den=Te.nthroot(e,t.den)),r},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*Te.gamma(1-e));--e;for(var n=t[0],r=1;r<9;r++)n+=t[r]/(e+r);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*n},bigfactorial:function(e){for(var t=new S(1),n=2;n<=e;n++)t=t.times(n);return new Fe(t)},bigLog:function(e){var t=[\"-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375\",\"0\",\"24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375\",\"369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000\",\"24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375\",\"399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625\",\"1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777\",\"5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000\",\"76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875\",\"3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375\",\"22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375\",\"14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808\",\"1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625\",\"139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375\",\"1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875\",\"9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000\",\"9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771\",\"5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875\",\"246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375\",\"133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875\",\"705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383\",\"101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625\",\"10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000\",\"1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875\",\"525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375\",\"9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601\",\"407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000\",\"2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625\",\"186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625\",\"664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875\",\"2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032\",\"124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875\",\"827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625\",\"17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375\",\"137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000\",\"746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431\",\"64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375\",\"2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125\",\"74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125\",\"35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131\",\"102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625\",\"10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000\",\"248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375\",\"7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375\",\"3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117\",\"218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000\",\"5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375\",\"15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375\",\"5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625\",\"4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744\",\"38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125\",\"573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875\",\"23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375\",\"58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000\",\"728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093\",\"86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625\",\"2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125\",\"139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125\",\"16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853\",\"34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625\",\"345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000\",\"1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625\",\"274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125\",\"7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889\",\"5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000\",\"2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875\",\"521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625\",\"66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375\",\"335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608\",\"20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625\",\"2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625\",\"31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875\",\"432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000\",\"1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071\",\"5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875\",\"451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625\",\"1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125\",\"3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819\",\"155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375\",\"46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000\",\"3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375\",\"1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625\",\"84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627\",\"802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000\",\"25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875\",\"732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875\",\"22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375\",\"21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688\",\"76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625\",\"40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625\",\"200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375\",\"488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000\",\"8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239\",\"58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625\",\"2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625\",\"27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875\",\"2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797\",\"6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875\",\"82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000\",\"584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625\",\"4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625\",\"3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333\",\"1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000\",\"328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875\",\"2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125\",\"636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125\",\"266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776\",\"3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125\",\"499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375\",\"8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375\",\"51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000\",\"2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687\",\"937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125\",\"5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875\",\"58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625\",\"2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647\",\"150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875\",\"162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000\",\"27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625\",\"1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875\",\"8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037\",\"84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000\",\"1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625\",\"4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625\",\"362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125\",\"8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384\",\"1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125\",\"88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625\",\"752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875\",\"15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000\",\"17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357\",\"39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875\",\"18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625\",\"46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875\",\"23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397\",\"538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875\",\"24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000\",\"166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125\",\"142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625\",\"380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577\",\"79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000\",\"26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625\",\"71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375\",\"342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125\",\"190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288\",\"15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125\",\"36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375\",\"1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625\",\"7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000\",\"15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581\",\"2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125\",\"441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875\",\"91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875\",\"167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473\",\"22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125\",\"1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000\",\"25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875\",\"616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125\",\"979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419\",\"1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000\",\"614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125\",\"106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375\",\"1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625\",\"983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464\",\"30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625\",\"33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875\",\"9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375\",\"396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000\",\"1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357\",\"559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375\",\"365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875\",\"59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125\",\"13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147\",\"1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625\",\"281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000\",\"228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125\",\"2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375\",\"1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733\",\"1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000\",\"158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375\",\"12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375\",\"578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375\",\"8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984\",\"12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625\",\"683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375\",\"1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625\",\"546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000\",\"2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253\",\"6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625\",\"13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625\",\"1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"];if(t[e])return Fe.quick.apply(null,t[e].split(\"/\"));e=new Fe(e);for(var n=new Fe(0),r=e.subtract(new Fe(1)),i=e.add(new Fe(1)),s=0;s<80;s++)var o=new Fe(2*s+1),a=Te.bigpow(r.divide(i),o),a=o.clone().invert().multiply(a),n=n.add(a);return n.multiply(new Fe(2))},factorial:function(e){var t=e%1==0;if(t&&e<0)return NaN;if(!t)return Te.gamma(e+1);for(var n=1,r=2;r<=e;r++)n*=r;return n},dfactorial:function(e){if(ue(e)){var t=e%2==0,n=t?e/2:(e+1)/2,r=new Fe(1);if(t)for(var i=1;i<=n;i++)r=r.multiply(new Fe(2).multiply(new Fe(i)));else for(i=1;i<=n;i++)r=r.multiply(new Fe(2).multiply(new Fe(i)).subtract(new Fe(1)))}else r=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*Te.gamma(1+e/2);return r},GCD:function(){for(var e=a([].slice.call(arguments).map(function(e){return Math.abs(e)})).sort(),t=Math.abs(e.shift()),n=e.length;0<n--;)for(var r=Math.abs(e.shift());;){if(0===(t%=r)){t=r;break}if(0===(r%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],n=1;n<e.length;n++){var r=e[n],i=t.isNegative()&&r.isNegative()?-1:1,t=r.gcd(t);i<0&&t.negate()}return t},LCM:function(e,t){return e*t/Te.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var n,r=Te.ifactor(e),i=new De;for(n in i.symbols={},i.group=Z,r){var s=new De(1);s.group=B,s.value=n,s.power=new De(r[n]),i.symbols[n]=s}return i.updateHash(),1===e&&(i=new De(e)),t<0&&i.negate(),i},sfactor:function(e,t){t=t||{};var n=Math.floor(Math.sqrt(e));o[o.length-1]<n&&e<1e6&&u(n);for(var r=o.length,i=0;i<r;i++)for(var s=o[i];e%s==0;)e/=s,t[s]=(t[s]||0)+1;return 1<e&&(t[e]=1),t},ifactor:function(a){var t=new S(a);if(\"0\"===(a=String(a)))return{0:1};var e=(a=new S(a)).sign?-1:1;a=a.abs();var n={};if(a.lt(\"65536\"))n=Te.sfactor(a,n);else{var r=function(e){e.isPrime()?n[e]=(n[e]||0)+1:n=Te.sfactor(e,n)};try{for(var u=1e3,l=0;!a.abs().equals(1);){if(a.isPrime()){r(a);break}var i=function e(t){for(var n=new S(t),r=2,i=new S(t),s=new S(1);s.equals(1);){for(var o=0;o<=r&&s.equals(1);o++){if(l++>u)throw new Error(\"stopping\");i=i.pow(2).add(1).mod(a),s=S.gcd(i.minus(n).abs(),a)}r*=2,n=i}return s.equals(a)?e(t+1):s}(2);r(i),a=a.divide(i)}}catch(e){n={},r(t)}}return-1==e&&(e=c(q(n)),n[\"-\"+e]=n[e],delete n[e]),n},boxfactor:function(e,t){t=t||200;for(var n,r,i=Math.floor(5/12*e),s=0,o=!1;n=Math.floor(e/i),0!=(r=e%i);){if(o)return[e,1];i=Math.max(r,i-r),o=t<++s}return[n,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e);for(var t=ge(e)?t:Math.abs(t),n=0,r=1,i=1,s=2;s<=e;s++)i=n+r,n=r,r=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,t,n,r){function i(e,t,n){var r=e(t);return r=isNaN(r)?e(1===n?t+1e-12:t-1e-12):r}r=r||1e-4;var s=Math.abs(Math.floor((n-t)/r));s%2!=0&&s++;for(var o=(n-t)/s,a=i(e,t,1),u=!1,l=t+o,c=1;c<s;c++)a+=(u?2:4)*i(e,l,1),u=!u,l+=o;return(a+i(e,l,2))*(o/3)},num_integrate:function(t,n,r,e,i){if(i<0)throw new Error(\"max depth cannot be negative\");function s(e,t,n,r,i){var s={maxDepthCount:0,nanEncountered:!1};void 0===r&&(r=1e-9),void 0===i&&(i=45);var o=e(t),a=e(.5*(t+n)),u=e(n),r=function e(t,n,r,i,s,o,a,u,l,c,p){if(p.nanEncountered)return NaN;var f,h,m,g=r-n,d=t(n+.25*g),v=t(r-.25*g);if(isNaN(d))p.nanEncountered=!0;else if(isNaN(v))p.nanEncountered=!0;else if(a=((h=(m=g*(i+4*d+s)/12)+(f=g*(s+4*v+o)/12))-a)/15,!(p.maxDepthCount>1e3*l))return l<c?(p.maxDepthCount++,h+a):Math.abs(a)<u?h+a:(m=e(t,n,g=n+.5*g,i,d,s,m,.5*u,l,c+1,p),isNaN(m)?(p.nanEncountered=!0,NaN):(c=e(t,g,r,s,v,o,f,.5*u,l,c+1,p),isNaN(c)?(p.nanEncountered=!0,NaN):m+c))}(e,t,n,o,a,u,(o+4*a+u)*(n-t)/6,r,i,1,s);if(0<s.maxDepthCount&&ee(\"integrate-adaptive-simpson: Warning: maximum recursion depth (\"+i+\") reached \"+s.maxDepthCount+\" times\"),s.nanEncountered)throw new Error(\"Function does not converge over interval!\");return r}var o;try{o=s(t,n,r,e,i)}catch(e){return Te.simpson(t,n,r)}return me(o,12)},Ci:function(e){for(var t=0,n=1;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,r)/(r*Te.factorial(r))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,n=0;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,1+r)/((1+r)*Te.factorial(1+r))}return t},Ei:function(e){if(0===Number(e))return-1/0;for(var t=0,n=1;n<30;n++)t+=Math.pow(e,n)/(n*Te.factorial(n));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,n,r=0,i=0;i<30;i++)n=1+(t=2*i),r+=Math.pow(e,n)/(n*n*Te.factorial(t));return r},Chi:function(e){var t=function(e){return(Math.cosh(e)-1)/e};return Math.log(e)+.5772156649015329+Te.num_integrate(t,.002,e,.001)},Li:function(e){return Te.Ei(Te.bigLog(e))},gamma_incomplete:function(e,t){for(var n=e-1,r=0,t=t||0,i=0;i<n;i++)r+=Math.pow(t,i)/Te.factorial(i);return Te.factorial(n)*Math.exp(-t)*r},step:function(e){return 0<e?1:e<0?0:.5},rect:function(e){return.5===(e=Math.abs(e))?e:.5<e?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return 1<=(e=Math.abs(e))?0:1-e},nthroot:function(e,t){if(e instanceof Fe||(e=new Fe(e.toString())),(t=!(t instanceof Fe)?new Fe(t.toString()):t).equals(1))return e;var n=e.divide(new Fe(2)),r=new Fe(1e-15),i=t.clone().invert(),s=t.subtract(new Fe(1));do{var o=Te.bigpow(n,s),a=i.multiply(e.divide(o).subtract(n)).toDecimal(25),o=Fe.create(a);if(u)break;var n=n.add(o),a=o.toDecimal(),u=!!l&&l===a,l=a}while(o.abs().gte(r));return n},sqrt:function(e){var t,n,r;e instanceof Fe||(e=new Fe(e));var i=0,s=!1,o=new Fe(1e-20),a=e.divide(new Fe(2));do{if(1e3<i)throw new Error(\"Unable to calculate square root for \"+e)}while(a=a.add(e.divide(a)).divide(new Fe(2)),a=new Fe(a.decimal(30)),t=e.subtract(a.multiply(a)),r=!!n&&n.equals(t),(t.clone().abs().lessThan(o)||r)&&(s=!0),n=t,i++,!s);return a}};function Pe(e,m,t,n){var r=\"hash\"===m,g=void 0,i=r?void 0:m,s=\"decimal\"===i||\"decimals\"===i;function o(e){switch(m){case\"decimals\":case\"decimal\":return g=g||function(e){return!1},e.valueOf();case\"recurring\":g=g||function(e){return-1!==e.indexOf(\"'\")};var t=e.toString();if(0===(f=/^-?\\d+(?:\\/\\d+)?$/.exec(t)).length)return t;var n=f[0].split(\"/\"),r=!1,i=Number(n[0]);i<0&&(i=-i,r=!0);var s=(s=Number(n[1]))||1,o=10*(i-(h=Math.floor(i/s))*s);for(h=h.toString()+\".\";o&&o<s;)o*=10,h+=\"0\";for(var a=\"\",u=[],l=0;;){if(void 0!==u[o])return(r?\"-\":\"\")+(h+a.slice(0,u[o])+\"'\"+a.slice(u[o])+\"'\").replace(\"'0'\",\"\").replace(/\\.$/,\"\");var c=Math.floor(o/s),p=o-c*s;u[o]=l,a+=c.toString(),l+=1,o=10*p}case\"mixed\":g=g||function(e){return-1!==e.indexOf(\"/\")};t=e.toString();if(0===(f=/^-?\\d+(?:\\/\\d+)?$/.exec(t)).length)return t;var n=f[0].split(\"/\"),t=new S(n[0]),f=new S(n[1]);f.equals(0)&&(f=new S(1));var t=t.divmod(f),h=t.quotient,f=t.remainder,t=\"-\"===n[0][0]||h.equals(0)||f.equals(0)?\"\":\"+\";return(h.equals(0)?\"\":h.toString())+t+(f.equals(0)?\"\":f.toString()+\"/\"+n[1]);case\"scientific\":return g=g||function(e){return!1},new T(e.valueOf()).toString(F.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return g=g||function(e){return-1!==e.indexOf(\"/\")},e.toString()}}if(s&&void 0===n&&(n=16),ne(e)){var a,u,l=\"\",c=\"\",p=\"\",f=e.group||t,h=e.value;switch(r||(\"-1\"==(a=o(e.multiplier))&&\"-1\"===String(e.multiplier)&&(p=\"-\",a=\"1\"),\"1\"!=a&&(l=a),\"1\"!=(u=e.power?o(e.power):\"\")&&(c=ne(u)?Pe(u,i):u)),f){case D:var l=\"\",d=n&&s?e.multiplier.toDecimal(n):o(e.multiplier),h=\"-1\"==String(e.multiplier)?\"1\":d,c=\"\";break;case j:h=e.collectSymbols().map(function(e){e=Pe(e,i,t,n);return e=\"0\"==e?\"\":e}).sort().join(\"+\").replace(/\\+\\-/g,\"-\");break;case X:h=e.collectSymbols().map(function(e){e=Pe(e,i,t,n);return e=\"0\"==e?\"\":e}).sort().join(\"+\").replace(/\\+\\-/g,\"-\");break;case Z:h=e.collectSymbols(function(e){var t=e.group;return(t===j||t===X)&&e.power.equals(1)&&e.multiplier.equals(1)?E(Pe(e,i)):Pe(e,i)}).join(\"*\");break;case V:var v=e.previousGroup,d=e.power.group;v===j&&(h=e.collectSymbols(Pe,i).join(\"+\").replace(\"+-\",\"-\")),v===D||v===G||v===H||r||(h=E(h)),d!==X&&d!==Z&&d!==j&&\"1\"==e.power.multiplier.toString()||!c||(c=E(c))}f===H&&(h=e.fname+E(e.args.map(function(e){return Pe(e,i)}).join(\",\"))),f===H&&e.fname in M&&(a=Pe(e.args[0]),u=Pe(e.args[1]),e.args[0].isComposite()&&(a=E(a)),e.args[1].isComposite()&&(u=E(u)),h=a+M[e.fname]+u),c&&f!==V&&g(c)&&(c=E(c)),((f===X||f===j)&&(l&&\"1\"!=l||\"-\"===p)||(f===Z||f===X||f===j)&&c&&\"1\"!=c||!r&&f===B&&-1==h||e.fname===$)&&(h=E(h));var w=p+(l=n&&(\"decimal\"===m||\"decimals\"===m&&l)?me(l,n):l);if(l&&g(l)&&(w=E(w)),l&&(w+=\"*\"),c=c<0?E(c):c){if(\"e\"===h&&F.E_TO_EXP)return w+\"exp\"+E(c);c=F.POWER_OPERATOR+c}f=w+(h=f===V&&\"-\"===h.charAt(0)?E(h):h);return(f=e.parens?E(f):f)+c}if(re(e)){for(var y=e.elements.length,w=[],b=0;b<y;b++)w.push(e.elements[b].text(m));return\"[\"+w.join(\",\")+\"]\"}try{return e.toString()}catch(e){return\"\"}}function ke(e){if(g(e))return[e];for(var t=e,n=1,r=[];n<t;){var i=e/n,s=Math.floor(i);if(i-s<=2220446049250313e-31&&1<n){if(g(n)&&(-1===o.indexOf(n)&&o.push(n),r.push(n)),g(s)){r.push(s);break}t=s}n++}return r.sort(function(e,t){return e-t})}function O(e){this.symbol=e}function T(e){return this instanceof T?((e=String(void 0===e?0:e)).startsWith(\"-\")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,T.isScientific(e)?this.fromScientific(e):this.convert(e),this):new T(e)}function T(e){return this instanceof T?((e=String(void 0===e?0:e)).startsWith(\"-\")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,T.isScientific(e)?this.fromScientific(e):this.convert(e),this):new T(e)}function Fe(t){if(t instanceof Fe)return t;if(void 0===t)return this;try{if(ue(t))try{this.num=S(t),this.den=S(1)}catch(e){return Fe.simple(t)}else{var e=t instanceof k?Be.quickConversion(t):Be.convert(t);this.num=new S(e[0]),this.den=new S(e[1])}}catch(e){return Fe.simple(t)}}function De(e){var t=\"Infinity\"===e;return this instanceof De?(e instanceof k&&(e=e.toString()),/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(e)||e instanceof k?(this.group=D,this.value=l,this.multiplier=new Fe(e)):(this.group=G,m(e),this.value=e,this.multiplier=new Fe(1),this.imaginary=e===F.IMAGINARY,this.isInfinity=t),this.power=new Fe(1),this):new De(e)}function P(){var C=this,n={},o={names:[],actions:[]};function x(e,t){this.start=e,this.end=t}function L(){this.elements=[]}function A(e,t,n){if(this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===A.OPERATOR){var r,i=E[e];for(r in i)this[r]=i[r]}else t===A.FUNCTION&&(this.precedence=A.MAX_PRECEDENCE,this.leftAssoc=!1)}x.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},x.prototype.text=function(){return Pe(this.start)+\":\"+Pe(this.end)},L.prototype.append=function(e){this.elements.push(e)},L.prototype.getItems=function(){return this.elements},L.prototype.toString=function(){return C.pretty_print(this.elements)},L.create=function(e){var t=new L;return e&&t.append(e),t},A.prototype.toString=function(){return this.value},A.prototype.toString=function(){return this.is_prefix?\"`\"+this.value:this.value},A.OPERATOR=\"OPERATOR\",A.VARIABLE_OR_LITERAL=\"VARIABLE_OR_LITERAL\",A.FUNCTION=\"FUNCTION\",A.UNIT=\"UNIT\",A.KEYWORD=\"KEYWORD\",A.MAX_PRECEDENCE=999,this.classes={Collection:L,Slice:x,Token:A};var b={prec:void 0,cos:function(e,t){var n=C.parse(Math.cos(e)*Math.cosh(t)),t=C.parse(Math.sin(e)*Math.sinh(t));return C.subtract(n,C.multiply(t,De.imaginary()))},sin:function(e,t){var n=C.parse(Math.sin(e)*Math.cosh(t)),t=C.parse(Math.cos(e)*Math.sinh(t));return C.subtract(n,C.multiply(t,De.imaginary()))},tan:function(e,t){var n=C.parse(Math.sin(2*e)/(Math.cos(2*e)+Math.cosh(2*t))),t=C.parse(Math.sinh(2*t)/(Math.cos(2*e)+Math.cosh(2*t)));return C.add(n,C.multiply(t,De.imaginary()))},sec:function(e,t){t=this.removeDen(this.cos(e,t));return C.subtract(t[0],C.multiply(t[1],De.imaginary()))},csc:function(e,t){t=this.removeDen(this.sin(e,t));return C.add(t[0],C.multiply(t[1],De.imaginary()))},cot:function(e,t){t=this.removeDen(this.tan(e,t));return C.subtract(t[0],C.multiply(t[1],De.imaginary()))},acos:function(e,t){var e=this.fromArray([e,t]),t=C.pow(e.clone(),new De(2)),t=C.expand(t),t=C.multiply(R(C.subtract(new De(1),t)),De.imaginary()),t=O(C.expand(C.add(e.clone(),t)));return C.expand(C.multiply(De.imaginary().negate(),t))},asin:function(e,t){return C.subtract(C.parse(\"pi/2\"),this.acos(e,t))},atan:function(e,t){if(e.equals(0)&&(t.equals(1)||t.equals(-1)))return C.parse(`${De.infinity()}*${F.IMAGINARY}*${t}`);var e=b.fromArray([e,t]),t=C.expand(C.multiply(De.imaginary(),e.clone())),e=O(C.expand(C.subtract(new De(1),t.clone()))),t=O(C.expand(C.add(new De(1),t.clone())));return C.expand(C.multiply(C.divide(De.imaginary(),new De(2)),C.subtract(e,t)))},asec:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.acos.apply(this,t)},acsc:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.asin.apply(this,t)},acot:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.atan.apply(this,t)},cosh:function(e,t){var n=C.parse(Math.cosh(e)*Math.cos(t)),t=C.parse(Math.sinh(e)*Math.sin(t));return C.add(n,C.multiply(t,De.imaginary()))},sinh:function(e,t){var n=C.parse(Math.sinh(e)*Math.cos(t)),t=C.parse(Math.cosh(e)*Math.sin(t));return C.add(n,C.multiply(t,De.imaginary()))},tanh:function(e,t){var n=C.parse(Math.sinh(2*e)/(Math.cos(2*t)+Math.cosh(2*e))),e=C.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*e)));return C.subtract(n,C.multiply(e,De.imaginary()))},sech:function(e,t){t=this.removeDen(this.cosh(e,t));return C.subtract(t[0],C.multiply(t[1],De.imaginary()))},csch:function(e,t){t=this.removeDen(this.sinh(e,t));return C.subtract(t[0],C.multiply(t[1],De.imaginary()))},coth:function(e,t){t=this.removeDen(this.tanh(e,t));return C.add(t[0],C.multiply(t[1],De.imaginary()))},acosh:function(e,t){var n=this.fromArray([e,t]),e=R(C.add(n.clone(),new De(1))),t=R(C.subtract(n.clone(),new De(1)));return C.expand(O(C.add(n,C.expand(C.multiply(e,t)))))},asinh:function(e,t){e=this.fromArray([e,t]),t=R(C.add(new De(1),C.expand(C.pow(e.clone(),new De(2)))));return C.expand(O(C.add(e,t)))},atanh:function(e,t){var e=this.fromArray([e,t]),t=O(C.add(e.clone(),new De(1))),e=O(C.subtract(new De(1),e));return C.expand(C.divide(C.subtract(t,e),new De(2)))},asech:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.acosh.apply(this,t)},acsch:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.asinh.apply(this,t)},acoth:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.atanh.apply(this,t)},sqrt:function(e){var t=e.realpart(),n=e.imagpart(),e=De.hyp(t,n),t=C.add(t.clone(),e),e=R(C.multiply(new De(2),t.clone()));return C.add(C.divide(t.clone(),e.clone()),C.multiply(C.divide(n,e),De.imaginary()))},log:function(e,t){var n=O(De.hyp(e,t)),e=F.USE_BIG?De(k.atan2(t.multiplier.toDecimal(),e.multiplier.toDecimal())):Math.atan2(t,e),e=C.parse(e);return C.add(n,C.multiply(De.imaginary(),e))},erf(e,t){return C.symfunction(\"erf\",[e])},removeDen:function(e){var t,n=ae(e)?(t=e[0],e[1]):(t=e.realpart(),e.imagpart()),e=Math.pow(t,2)+Math.pow(n,2);return[C.parse(t/e),C.parse(n/e)]},fromArray:function(e){return C.add(e[0],C.multiply(De.imaginary(),e[1]))},evaluate:function(e,t){var n,r,i=e.power.sign();return e.power=e.power.abs(),e.power.greaterThan(1)&&(e=C.expand(e)),r=i<0?(n=(r=this.removeDen(e))[0],r[1]):(n=e.realpart(),e.imagpart()),n.isConstant(\"all\")&&r.isConstant(\"all\")?this[t].call(this,n,r):C.symfunction(t,[e])}},I=this.trig={cos:function(e){if(e.equals(\"pi\")&&e.multiplier.den.equals(2))return new De(0);if(F.PARSE2NUMBER){if(e.equals(new De(F.PI/2)))return new De(0);if(e.isConstant())return F.USE_BIG?new De(k.cos(e.multiplier.toDecimal())):new De(Math.cos(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"cos\")}if(e.equals(0))return new De(1);var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.abs();return e.multiplier=i,e.isPi()&&e.isLinear()&&(ue(i)?t=new De(ge(i)?1:-1):(Number(i.num),2===(i=Number(i.den))?t=new De(0):3===i?(t=C.parse(\"1/2\"),n=!0):4===i?(t=C.parse(\"1/sqrt(2)\"),n=!0):6===i?(t=C.parse(\"sqrt(3)/2\"),n=!0):t=C.symfunction(\"cos\",[e]))),!n||2!==r&&3!==r||t.negate(),t=t||C.symfunction(\"cos\",[e])},sin:function(e){if(F.PARSE2NUMBER){if(e.isConstant())return e%Math.PI==0?new De(0):F.USE_BIG?new De(k.sin(e.multiplier.toDecimal())):new De(Math.sin(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"sin\")}if(e.equals(0))return new De(0);var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();return e.multiplier=s,e.equals(\"pi\")?t=new De(0):e.isPi()&&e.isLinear()&&(ue(s)?t=new De(0):(s.num,2==(s=s.den)?(t=new De(1),n=!0):3==s?(t=C.parse(\"sqrt(3)/2\"),n=!0):4==s?(t=C.parse(\"1/sqrt(2)\"),n=!0):6==s?(t=C.parse(\"1/2\"),n=!0):t=C.multiply(new De(i),C.symfunction(\"sin\",[e])))),t=t||C.multiply(new De(i),C.symfunction(\"sin\",[e])),!n||3!==r&&4!==r||t.negate(),t},tan:function(e){if(F.PARSE2NUMBER){if(e%Math.PI==0&&e.isLinear())return new De(0);if(e.isConstant())return F.USE_BIG?new De(k.tan(e.multiplier.toDecimal())):new De(Math.tan(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"tan\")}var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear())if(ue(i))t=new De(0);else{i.num;i=i.den;if(2==i)throw new Ae(\"tan is undefined for \"+e.toString());3==i?(t=C.parse(\"sqrt(3)\"),n=!0):4==i?(t=new De(1),n=!0):6==i?(t=C.parse(\"1/sqrt(3)\"),n=!0):t=C.symfunction(\"tan\",[e])}return t=t||C.symfunction(\"tan\",[e]),!n||2!==r&&4!==r||t.negate(),t},sec:function(e){if(F.PARSE2NUMBER)return e.isConstant()?F.USE_BIG?new De(new k(1).dividedBy(k.cos(e.multiplier.toDecimal()))):new De(Te.sec(e.valueOf())):e.isImaginary()?b.evaluate(e,\"sec\"):C.parse(ce(\"1/cos({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.abs();if(e.multiplier=i,e.isPi()&&e.isLinear())if(ue(i))t=new De(ge(i)?1:-1);else{i.num;i=i.den;if(2==i)throw new Ae(\"sec is undefined for \"+e.toString());3==i?(t=new De(2),n=!0):4==i?(t=C.parse(\"sqrt(2)\"),n=!0):6==i?(t=C.parse(\"2/sqrt(3)\"),n=!0):t=C.symfunction(\"sec\",[e])}return!n||2!==r&&3!==r||t.negate(),t=t||C.symfunction(\"sec\",[e])},csc:function(e){if(F.PARSE2NUMBER)return e.isConstant()?F.USE_BIG?new De(new k(1).dividedBy(k.sin(e.multiplier.toDecimal()))):new De(Te.csc(e.valueOf())):e.isImaginary()?b.evaluate(e,\"csc\"):C.parse(ce(\"1/sin({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();if(e.multiplier=s,e.isPi()&&e.isLinear()){if(ue(s))throw new Ae(\"csc is undefined for \"+e.toString());s.num;s=s.den;2==s?(t=new De(1),n=!0):3==s?(t=C.parse(\"2/sqrt(3)\"),n=!0):4==s?(t=C.parse(\"sqrt(2)\"),n=!0):6==s?(t=new De(2),n=!0):t=C.multiply(new De(i),C.symfunction(\"csc\",[e]))}return t=t||C.multiply(new De(i),C.symfunction(\"csc\",[e])),!n||3!==r&&4!==r||t.negate(),t},cot:function(e){if(F.PARSE2NUMBER)return e%(Math.PI/2)==0?new De(0):e.isConstant()?F.USE_BIG?new De(new k(1).dividedBy(k.tan(e.multiplier.toDecimal()))):new De(Te.cot(e.valueOf())):e.isImaginary()?b.evaluate(e,\"cot\"):C.parse(ce(\"1/tan({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear()){if(ue(i))throw new Ae(\"cot is undefined for \"+e.toString());i.num;i=i.den;2==i?t=new De(0):3==i?(t=C.parse(\"1/sqrt(3)\"),n=!0):4==i?(t=new De(1),n=!0):6==i?(t=C.parse(\"sqrt(3)\"),n=!0):t=C.symfunction(\"cot\",[e])}return t=t||C.symfunction(\"cot\",[e]),!n||2!==r&&4!==r||t.negate(),t},acos:function(e){if(F.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=e.toString();return T(Se(`pi/2-asin(${t})`))}return F.USE_BIG?new De(k.acos(e.multiplier.toDecimal())):new De(Math.acos(e.valueOf()))}if(e.isImaginary())return b.evaluate(e,\"acos\")}return C.symfunction(\"acos\",arguments)},asin:function(e){if(F.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=F.IMAGINARY,n=e.multiplier.toDecimal();return T(Se(`${t}*log(sqrt(1-${n}^2)-${t}*${n})`))}return F.USE_BIG?new De(k.asin(e.multiplier.toDecimal())):new De(Math.asin(e.valueOf()))}if(e.isImaginary())return b.evaluate(e,\"asin\")}return C.symfunction(\"asin\",arguments)},atan:function(e){var t;if(e.equals(0))t=new De(0);else{if(F.PARSE2NUMBER)return e.isConstant()?F.USE_BIG?new De(k.atan(e.multiplier.toDecimal())):new De(Math.atan(e.valueOf())):e.isImaginary()?b.evaluate(e,\"atan\"):C.symfunction(\"atan\",arguments);t=e.equals(-1)?C.parse(\"-pi/4\"):C.symfunction(\"atan\",arguments)}return t},asec:function(e){if(F.PARSE2NUMBER){if(e.equals(0))throw new Ce(\"Input is out of the domain of sec!\");if(e.isConstant())return I.acos(e.invert());if(e.isImaginary())return b.evaluate(e,\"asec\")}return C.symfunction(\"asec\",arguments)},acsc:function(e){if(F.PARSE2NUMBER){if(e.isConstant())return I.asin(e.invert());if(e.isImaginary())return b.evaluate(e,\"acsc\")}return C.symfunction(\"acsc\",arguments)},acot:function(e){if(F.PARSE2NUMBER){if(e.isConstant())return new C.add(C.parse(\"pi/2\"),I.atan(e).negate());if(e.isImaginary())return b.evaluate(e,\"acot\")}return C.symfunction(\"acot\",arguments)},atan2:function(e,t){if(e.equals(0)&&t.equals(0))throw new Ae(\"atan2 is undefined for 0, 0\");return F.PARSE2NUMBER&&e.isConstant()&&t.isConstant()?new De(Math.atan2(e,t)):C.symfunction(\"atan2\",arguments)}},e=this.trigh={cosh:function(e){if(F.PARSE2NUMBER){if(e.isConstant())return new De(Math.cosh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"cosh\")}return C.symfunction(\"cosh\",arguments)},sinh:function(e){if(F.PARSE2NUMBER){if(e.isConstant())return new De(Math.sinh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"sinh\")}return C.symfunction(\"sinh\",arguments)},tanh:function(e){if(F.PARSE2NUMBER){if(e.isConstant())return new De(Math.tanh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"tanh\")}return C.symfunction(\"tanh\",arguments)},sech:function(e){return F.PARSE2NUMBER?e.isConstant()?new De(Math.sech(e.valueOf())):e.isImaginary()?b.evaluate(e,\"sech\"):C.parse(ce(\"1/cosh({0})\",e)):C.symfunction(\"sech\",arguments)},csch:function(e){return F.PARSE2NUMBER?e.isConstant()?new De(Math.csch(e.valueOf())):e.isImaginary()?b.evaluate(e,\"csch\"):C.parse(ce(\"1/sinh({0})\",e)):C.symfunction(\"csch\",arguments)},coth:function(e){return F.PARSE2NUMBER?e.isConstant()?new De(Math.coth(e.valueOf())):e.isImaginary()?b.evaluate(e,\"coth\"):C.parse(ce(\"1/tanh({0})\",e)):C.symfunction(\"coth\",arguments)},acosh:function(e){e=F.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acosh\"):F.PARSE2NUMBER?Se(C.parse(ce(F.LOG+\"(({0})+sqrt(({0})^2-1))\",e.toString()))):C.symfunction(\"acosh\",arguments);return e},asinh:function(e){e=F.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"asinh\"):F.PARSE2NUMBER?Se(C.parse(ce(F.LOG+\"(({0})+sqrt(({0})^2+1))\",e.toString()))):C.symfunction(\"asinh\",arguments);return e},atanh:function(e){e=F.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"atanh\"):F.PARSE2NUMBER?Se(C.parse(ce(\"(1/2)*\"+F.LOG+\"((1+({0}))/(1-({0})))\",e.toString()))):C.symfunction(\"atanh\",arguments);return e},asech:function(e){e=F.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"asech\"):F.PARSE2NUMBER?Se(O(C.add(e.clone().invert(),R(C.subtract(C.pow(e,new De(-2)),new De(1)))))):C.symfunction(\"asech\",arguments);return e},acsch:function(e){e=F.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acsch\"):F.PARSE2NUMBER?Se(C.parse(ce(F.LOG+\"((1+sqrt(1+({0})^2))/({0}))\",e.toString()))):C.symfunction(\"acsch\",arguments);return e},acoth:function(e){e=F.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acoth\"):F.PARSE2NUMBER?e.equals(1)?De.infinity():Se(C.divide(O(C.divide(C.add(e.clone(),new De(1)),C.subtract(e.clone(),new De(1)))),new De(2))):C.symfunction(\"acoth\",arguments);return e}},E={\"\\\\\":{precedence:8,operator:\"\\\\\",action:\"slash\",prefix:!0,postfix:!(this.units={}),leftAssoc:!0,operation:function(e){return e}},\"!!\":{precedence:7,operator:\"!!\",action:\"dfactorial\",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(e){return C.symfunction(F.DOUBLEFACTORIAL,[e])}},\"!\":{precedence:7,operator:\"!\",action:\"factorial\",prefix:!1,postfix:!0,leftAssoc:!0,operation:u},\"^\":{precedence:6,operator:\"^\",action:\"pow\",prefix:!1,postfix:!1,leftAssoc:!0},\"**\":{precedence:6,operator:\"**\",action:\"pow\",prefix:!1,postfix:!1,leftAssoc:!0},\"%\":{precedence:4,operator:\"%\",action:\"percent\",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:\"mod\",overloadLeftAssoc:!1,operation:function(e){return C.divide(e,new De(100))}},\"*\":{precedence:4,operator:\"*\",action:\"multiply\",prefix:!1,postfix:!1,leftAssoc:!1},\"/\":{precedence:4,operator:\"/\",action:\"divide\",prefix:!1,postfix:!1,leftAssoc:!1},\"+\":{precedence:3,operator:\"+\",action:\"add\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:\"plus\",action:\"add\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},\"-\":{precedence:3,operator:\"-\",action:\"subtract\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},\"=\":{precedence:2,operator:\"=\",action:\"equals\",prefix:!1,postfix:!1,leftAssoc:!1},\"==\":{precedence:1,operator:\"==\",action:\"eq\",prefix:!1,postfix:!1,leftAssoc:!1},\"<\":{precedence:1,operator:\"<\",action:\"lt\",prefix:!1,postfix:!1,leftAssoc:!1},\"<=\":{precedence:1,operator:\"<=\",action:\"lte\",prefix:!1,postfix:!1,leftAssoc:!1},\">\":{precedence:1,operator:\">\",action:\"gt\",prefix:!1,postfix:!1,leftAssoc:!1},\"=>\":{precedence:1,operator:\"=>\",action:\"gte\",prefix:!1,postfix:!1,leftAssoc:!1},\",\":{precedence:0,operator:\",\",action:\"comma\",prefix:!1,postfix:!1,leftAssoc:!1},\":\":{precedence:0,operator:\",\",action:\"assign\",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:\"slice\"},\":=\":{precedence:0,operator:\",\",action:\"function_assign\",prefix:!1,postfix:!1,leftAssoc:!0}},q={\"(\":{type:\"round\",id:1,is_open:!0,is_close:!1},\")\":{type:\"round\",id:2,is_open:!1,is_close:!0},\"[\":{type:\"square\",id:3,is_open:!0,is_close:!1,maps_to:\"vector\"},\"]\":{type:\"square\",id:4,is_open:!1,is_close:!0},\"{\":{type:\"curly\",id:5,is_open:!0,is_close:!1,maps_to:\"Set\"},\"}\":{type:\"curly\",id:6,is_open:!1,is_close:!0}},U=this.functions={cos:[I.cos,1],sin:[I.sin,1],tan:[I.tan,1],sec:[I.sec,1],csc:[I.csc,1],cot:[I.cot,1],acos:[I.acos,1],asin:[I.asin,1],atan:[I.atan,1],arccos:[I.acos,1],arcsin:[I.asin,1],arctan:[I.atan,1],asec:[I.asec,1],acsc:[I.acsc,1],acot:[I.acot,1],atan2:[I.atan2,2],acoth:[e.acoth,1],asech:[e.asech,1],acsch:[e.acsch,1],sinh:[e.sinh,1],cosh:[e.cosh,1],tanh:[e.tanh,1],asinh:[e.asinh,1],sech:[e.sech,1],csch:[e.csch,1],coth:[e.coth,1],acosh:[e.acosh,1],atanh:[e.atanh,1],log10:[,1],exp:[function(e){if(e.fname===F.LOG&&e.isLinear())return C.pow(e.args[0],De.create(e.multiplier));return C.parse(ce(\"e^({0})\",e))},1],radians:[function(e){return C.parse(ce(\"({0})*pi/180\",e))},1],degrees:[function(e){return C.parse(ce(\"({0})*180/pi\",e))},1],min:[function(){var e=[].slice.call(arguments);return w(e)?e[0]:Me(e)?new De(Math.min.apply(null,e)):F.SYMBOLIC_MIN_MAX&&Ne(e)?h(\"min\",e):C.symfunction(\"min\",e)},-1],max:[function(){var e=[].slice.call(arguments);return w(e)?e[0]:Me(e)?new De(Math.max.apply(null,e)):F.SYMBOLIC_MIN_MAX&&Ne(e)?h(\"max\",e):C.symfunction(\"max\",e)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(e){if(F.PARSE2NUMBER)return e.isConstant()?new De(Te.sinc(e)):C.parse(ce(\"sin({0})/({0})\",e));return C.symfunction(\"sinc\",[e])},1],tri:[,1],sign:[function(e){return e.isConstant(!0)?new De(Math.sign(Se(e))):C.symfunction(\"sign\",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[u,1],factorial:[u,1],continued_fraction:[function(e,t){e=Se(e);if(e.isConstant()){e=Te.continuedFraction(e,t),t=Ve.fromArray(e.fractions.map(function(e){return new De(e)}));return Ve.fromArray([new De(e.sign),new De(e.whole),t])}return C.symfunction(\"continued_fraction\",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[m,[1,2]],scientific:[function(e,t){return e.scientific=t||10,e},[1,2]],mod:[t,2],pfactor:[N,1],vector:[function(){return new Ve([].slice.call(arguments))},-1],matrix:[function(){return He.fromArray(arguments)},-1],Set:[function(){return je.fromArray(arguments)},-1],imatrix:[function(e){return He.identity(e)},-1],parens:[function(e){if(F.PARSE2NUMBER)return e;return C.symfunction(\"parens\",[e])},-1],sqrt:[R,1],cbrt:[i,1],nthroot:[s,2],log:[O,[1,2]],expand:[function(e,t){return T(e,t=t||{expand_denominator:!0,expand_functions:!0})},1],abs:[_,1],invert:[function(e){if(ie(e))return e.invert();K(\"invert expects a matrix\")},1],determinant:[function(e){if(ie(e))return e.determinant();return e},1],size:[function(e){var t;ie(e)?t=[new De(e.cols()),new De(e.rows())]:re(e)||se(e)?t=new De(e.elements.length):K(\"size expects a matrix or a vector\");return t},1],transpose:[function(e){if(ie(e))return e.transpose();K(\"function transpose expects a matrix\")},1],dot:[function(e,t){if(re(e)&&re(t))return e.dot(t);K(\"function dot expects 2 vectors\")},2],cross:[function(e,t){if(re(e)&&re(t))return e.cross(t);K(\"function cross expects 2 vectors\")},2],vecget:[function(e,t){return t.isConstant()&&ue(t)?e.elements[t]:C.symfunction(\"vecget\",arguments)},2],vecset:[function(e,t,n){return t.isConstant?(e.elements[t]=n,e):C.symfunction(\"vecset\",arguments)},3],vectrim:[function(e,n){return n=void 0===n?1e-14:n,e=e.clone(),n=Number(n),e.elements.sort(function(e,t){return t.group-e.group}),e.elements=ve(e.elements,function(e,t){return Number(C.subtract(Se(e),Se(t)).abs())<=n}),e},[1,2]],matget:[function(e,t,n){return t.isConstant()&&n.isConstant()?e.elements[t][n]:C.symfunction(\"matget\",arguments)},3],matset:[function(e,t,n,r){return e.elements[t][n]=r,e},4],matgetrow:[function(e,t){return t.isConstant()?new He(e.elements[t]):C.symfunction(\"matgetrow\",arguments)},2],matsetrow:[function(e,t,n){if(!t.isConstant())return C.symfunction(\"matsetrow\",arguments);if(e.elements[t].length!==n.elements.length)throw new _e(\"Matrix row must match row dimensions!\");e=e.clone();return e.elements[t]=n.clone().elements,e},3],matgetcol:[function(e,r){if(!r.isConstant())return C.symfunction(\"matgetcol\",arguments);r=Number(r);var i=He.fromArray([]);return e.each(function(e,t,n){n===r&&i.elements.push([e.clone()])}),i},2],matsetcol:[function(n,r,e){if(!r.isConstant())return C.symfunction(\"matsetcol\",arguments);if(r=Number(r),n.rows()!==e.elements.length)throw new _e(\"Matrix columns must match number of columns!\");return e.each(function(e,t){n.set(t-1,r,e.elements[0].clone())}),n},3],rationalize:[r,1],IF:[function(e,t,n){\"boolean\"!=typeof e&&oe(e)&&(e=!!Number(e));return e?t:n},3],is_in:[function(e,t){if(ie(e)){for(var n=0,r=e.rows();n<r;n++)for(var i=0,s=e.cols();i<s;i++)if(e.elements[n][i].equals(t))return new De(1)}else if(e.elements)for(n=0,r=e.elements.length;n<r;n++)if(e.elements[n].equals(t))return new De(1);return new De(0)},2],realpart:[l,1],imagpart:[c,1],conjugate:[p,1],arg:[f,1],polarform:[function(e){var t;return t=De.toPolarFormArray(e),e=t[1],t=t[0],e=C.parse(ce(\"e^({0}*({1}))\",F.IMAGINARY,e)),C.multiply(t,e)},1],rectform:[function(e){var t,n,r,i,s,o=e.clone();try{return t=he(e,\"e\",!0),n=C.divide(t.x.power,De.imaginary()),r=Se(I.tan(n)),C.pow(t.a,new De(2)),i=r.getDenom(!0),s=r.getNum(),De.hyp(s,i).equals(t.a)?C.add(i,C.multiply(De.imaginary(),s)):o}catch(e){return o}},1],sort:[function(e,n){n=n?n.toString():\"asc\";var r=function(e){return e.group===D?e.multiplier:e.group===H?\"\"===e.fname?r(e.args[0]):e.fname:e.group===G?e.power:e.value};return new Ve((re(e)?e.elements:e.collectSymbols()).sort(function(e,t){e=r(e),t=r(t);return\"desc\"===n?t-e:e-t}))},[1,2]],integer_part:[,1],union:[function(e,t){return e.union(t)},2],contains:[function(e,t){return e.contains(t)},2],intersection:[function(e,t){return e.intersection(t)},2],difference:[function(e,t){return e.difference(t)},2],intersects:[function(e,t){return new De(Number(e.intersects(t)))},2],is_subset:[function(e,t){return new De(Number(e.is_subset(t)))},2],print:[function(){be(arguments).map(function(e){console.log(e.toString())})},-1]};this.error=K;this.override=function(e,t){n[e]||(n[e]=[]),n[e].push(this[e]),this[e]=t},this.restore=function(e){this[e]&&(this[e]=n[e].pop())},this.extend=function(e,n,r){var i,s=this;\"function\"==typeof this[e]&&\"function\"==typeof n&&(i=this[e],this[e]=function(e,t){return ne(e)&&ne(t)&&!r?i.call(s,e,t):n.call(s,e,t,i)})},this.symfunction=function(e,t){var n=new De(e);return n.group=H,\"object\"==typeof t&&(t=[].slice.call(t)),n.args=t,n.fname=e===$?\"\":e,n.updateHash(),n},this.callfunction=function(e,t,n){var r=U[e];r||K(\"Nerdamer currently does not support the function \"+e);var i,s=r[1]||n,o=r[0];t instanceof Array||(t=void 0!==t?[t]:[]),-1!==s&&(i=(a=ae(s))?s[0]:s,n=a?s[1]:s,s=e+\" requires a {0} of {1} arguments. {2} provided!\",(a=t.length)<i&&K(ce(s,\"minimum\",i,a)),n<a&&K(ce(s,\"maximum\",n,a)));var a=Me(t);return o?o.apply(r[2],t):(o=function(e){for(var t=F.FUNCTION_MODULES,n=t.length,r=0;r<n;r++){var i=t[r];if(e in i)return i[e]}K(\"The function \"+e+\" is undefined!\")}(e),F.PARSE2NUMBER&&a?d(o.apply(o,t)):C.symfunction(e,t))},this.operator_filter_regex=(e=\"^\\\\\"+Object.keys(E).filter(function(e){if(1===e.length)return e}).join(\"\\\\\"),new RegExp(\"([\"+e+\"])\\\\s+([\"+e+\"])\")),this.setOperator=function(e,t,n){var r=e.operator;if(E[r]=e,t&&(this[e.action]=t),C[r]=e.operation,e.action||e.prefix||e.postif||(e.action=r),\"over\"===n||\"under\"===n){var i,s=e.precedence;for(i in E){var o=E[i];(\"over\"===n?o.precedence>=s:o.precedence>s)&&o.precedence++}}},this.getOperator=function(e){return E[e]},this.aliasOperator=function(e,t){var n,r={},i=E[e];for(n in i)r[n]=i[n];r.operator=t,this.setOperator(r)},this.getOperators=function(){return E},this.getBrackets=function(){return q};function a(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}this.initConstants=function(){this.CONSTANTS={E:new De(F.E),PI:new De(F.PI)}},this.pretty_print=function(e){if(Array.isArray(e)){var t=e.map(e=>C.pretty_print(e)).join(\", \");return\"vector\"===e.type?\"vector<\"+t+\">\":\"(\"+t+\")\"}return e.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){if(F.callPeekers)for(var t=this.peekers[e],n=be(arguments).slice(1).map(le),r=0;r<t.length;r++)t[r].apply(null,n)},this.tokenize=function(n){for(var e in n=(n=String(n)).trim().replace(/\\s+/g,\" \"),q){var t=new RegExp(q[e].is_close?\"\\\\s+\\\\\"+e:\"\\\\\"+e+\"\\\\s+\",\"g\");n=n.replace(t,e)}for(var u=0,r=n.length,i=0,s=[],o=[s],a=o[0],l=0,c=[],p=!1,f=function(e,t){var n=[];void 0!==e&&(n.type=e),n.column=t,o.push(n),a.push(n),a=n,l++},h=function(){o.pop(),a=o[--l]},m=function(e,t){(t=void 0===t?n.substring(i,e):t)in C.units?a.push(new A(t,A.UNIT,i)):\"\"!==t&&a.push(new A(t,A.VARIABLE_OR_LITERAL,i))},g=function(e){a.push(new A(e,A.FUNCTION,i))},d=function(e){i=e+1};u<r;u++){var v=n.charAt(u);if(v in E){m(u);var w=a[0]&&te(a[0]);p&&i<u&&\",\"!==v&&!(w&&\"*\"===v)&&(p=!1,h()),d(u+1);var y=function(e){for(var t=(e=void 0!==e?e:u)+1;n.charAt(t++)in E;);return n.substring(e,t-1)}(u),u=(i=i+y.length-2)-1;a.push.apply(a,function(e){for(var t=u-e.length,n=[],r=e.charAt(0),i=1,s=e.length;i<s;i++)var o=e.charAt(i),a=r+o,r=(a in E?a:(n.push(new A(r,A.OPERATOR,t+i)),o));return n.push(new A(r,A.OPERATOR,t+i)),n}(y))}else if(v in q){var b,S=q[v];if(S.is_open)c.push([S,i]),(b=n.substring(i,u))in U?g(b):\"\"!==b&&a.push(new A(b,A.VARIABLE_OR_LITERAL,i)),f(S.maps_to,u);else if(S.is_close){var M=c.pop();if(!M)throw new Le(\"Missing open bracket for bracket at: \"+(u+1));if(M[0].id!==S.id-1)throw new Le(\"Parity error\");m(u),h()}d(u)}else\" \"===v&&(M=n.substring(i,u),S=n.charAt(u+1),p?(M in E?a.push(new A(M,A.OPERATOR,u)):(m(void 0,M),h(),((v=S in E)&&\"-\"===E[S].value||!v)&&a.push(new A(\"*\",A.OPERATOR,u))),p=!1):(b=n.substring(i,u))in U?(p=!0,g(b),f()):b in E?a.push(new A(b,A.OPERATOR,u)):(m(void 0,b),S=n.charAt(u+1),\"\"===M||\"\"===S||M in E||S in E||a.push(new A(\"*\",A.OPERATOR,u))),d(u))}if(c.length){var N=c.pop();throw new Le(\"Missing closed bracket for bracket at \"+(N[1]+1))}return m(u),s},this.toRPN=function(e){for(var t=e.type,n=e.length,r=[],i=[],s=[],o=function(e,t){for(;e.length;)t.push(e.pop())},a=0;a<n;a++){var u=e[a];if(u.type!==A.OPERATOR)break;if(!u.prefix)throw new Ie(\"Not a prefix operator\");u.is_prefix=!0,i.push(u)}for(;a<n;a++){var l=e[a];if(l.type===A.OPERATOR){var c=l;for(c.overloaded&&(h=e[a+1])&&h.type===A.VARIABLE_OR_LITERAL&&(c.postfix=!1,c.action=c.overloadAction,c.leftAssoc=c.overloadLeftAssoc);i.length;){var p=i[i.length-1];if(!(p.precedence>c.precedence||!c.leftAssoc&&p.precedence===c.precedence))break;r.push(i.pop())}if((\"vector\"===t||\"set\"===t)&&\"vectorFn\"in c&&(c.action=c.vectorFn),c.postfix){var f=e[a-1];if(!f)throw new Ie(\"Unexpected prefix operator '\"+l.value+\"'! at \"+l.column);if(f.type===A.OPERATOR&&!f.postfix)throw new Ie(\"Unexpected prefix operator '\"+f.value+\"'! at \"+f.column)}else do{var h,m=!!(h=e[a+1])&&h.type===A.OPERATOR;if(m){if(!h.prefix)throw new Ie(\"A prefix operator was expected at \"+h.column);h.is_prefix=!0,s.push(h),a++}}while(m);for((c.is_prefix?s:i).push(c);s.length&&(c.leftAssoc||!c.leftAssoc&&s[s.length-1].precedence>=c.precedence);)i.push(s.pop())}else l.type===A.VARIABLE_OR_LITERAL?(0===r.length&&o(s,i),r.push(l),(f=i[i.length-1])&&f.leftAssoc||o(s,r)):l.type===A.FUNCTION?i.push(l):l.type===A.UNIT&&r.push(l);Array.isArray(l)&&(r.push(this.toRPN(l)),l.type&&r.push(new A(l.type,A.FUNCTION,l.column)))}return o(i,r),o(s,r),r},this.parseRPN=function(e,t){try{for(var n in t=t||{})t[n]=C.parse(t[n],{});F.PARSE2NUMBER&&(\"e\"in t||(t.e=new De(F.E)),\"pi\"in t||(t.pi=new De(F.PI)));for(var r=[],i=0,s=e.length;i<s;i++){var o=e[i];if(o=Array.isArray(o)?this.parseRPN(o,t):o)if(o.type===A.OPERATOR)if(o.is_prefix||o.postfix)r.push(o.operation(r.pop()));else{var a=r.pop(),u=r.pop();if(void 0===u)throw new Ie(o+\" is not a valid postfix operator at \"+o.column);var l=\"comma\"===o.action;u instanceof je&&!l&&(u=Ve.fromSet(u)),a instanceof je&&!l&&(a=Ve.fromSet(a)),this.callPeekers(\"pre_operator\",u,a,o);var c=C[o.action](u,a);this.callPeekers(\"post_operator\",c,u,a,o),r.push(c)}else if(o.type===A.FUNCTION){var p=r.pop(),f=p.parent;p instanceof L||(p=L.create(p));var h=o.value,m=p.getItems();this.callPeekers(\"pre_function\",h,m);var g=C.callfunction(h,m);this.callPeekers(\"post_function\",g,h,m);var d=r[r.length-1],v=e[i+1];if(!(v&&v.type===A.OPERATOR&&\",\"===v.value)&&g instanceof Ve&&d&&d.elements&&!(d instanceof L)){var w=r.pop(),y=g.elements[0];if(y.isConstant())if(y instanceof x)r.push(Ve.fromArray(w.elements.slice(y.start,y.end)));else{var b=Number(y),S=w.elements.length;if((b=b<0?S+b:b)<0||S<=b)throw new Ue(\"Index out of range \"+(o.column+1));var M=w.elements[b];w.getter=b,M.parent=w,r.push(M)}else w.getter=y,r.push(w),r.push(g)}else f&&(g.parent=f),r.push(g)}else{var N,E=o.value;E in F.ALIASES?o=C.parse(F.ALIASES[o]):o.type===A.VARIABLE_OR_LITERAL?o=new De(E):o.type===A.UNIT&&((o=new De(E)).isUnit=!0),E in C.CONSTANTS?(N=o,o=new De(C.CONSTANTS[E])):E in t&&E!==t[E].toString()?(N=o,o=t[E].clone()):E in J&&(N=o,o=J[E].clone()),N&&(o.subbed=N),r.push(o)}}var q=r[0];if(-1!==[\"undefined\",\"string\",\"number\"].indexOf(typeof q))throw new Oe(\"Unexpected token!\");return q}catch(t){throw[Ce].forEach(function(e){if(t instanceof e)throw new e(t.message+\": \"+o.column)}),new xe(t.message+\": \"+o.column)}},a.prototype.toString=function(){var e=this.left?this.left.toString()+\"---\":\"\",t=this.right?\"---\"+this.right.toString():\"\";return e+\"(\"+this.value+\")\"+t},a.prototype.toHTML=function(e,t){e=e||0,t=void 0===t?4:t;function n(e){return\" \".repeat(t*e)}var r=\"\",i=this.left?n(e+1)+\"<li>\\n\"+this.left.toHTML(e+2,t)+n(e+1)+\"</li> \\n\":\"\",s=this.right?n(e+1)+\"<li>\\n\"+this.right.toHTML(e+2,t)+n(e+1)+\"</li>\\n\":\"\",r=n(e)+'<div class=\"'+this.type.toLowerCase()+'\"><span>'+this.value+\"</span></div>\"+n(e)+\"\\n\";return(i||s)&&(r+=n(e)+\"<ul>\\n\"+i+s+n(e)+\"</ul>\\n\"),r+=\"\"},this.tree=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(Array.isArray(r))r=this.tree(r),t.push(r);else if(r.type===A.OPERATOR)r.is_prefix||r.postfix?(s=r.is_prefix?\"left\":\"right\",i=t.pop(),(r=new a(r))[s]=i):((r=new a(r)).right=t.pop(),r.left=t.pop()),t.push(r);else if(r.type===A.FUNCTION){r=new a(r);var i,s=t.pop();if(r.right=s,\"object\"===r.value)if(i=t[t.length-1]){for(;i.right;)i=i.right;i.right=r;continue}t.push(r)}else t.push(new a(r))}return t[0]},this.parse=function(e,t){e=function(e){e=String(e);for(var t=0;t<o.actions.length;t++)e=o.actions[t].call(this,e);for(e=e.replace(/\\s+/g,\" \"),e=(e=/e/gi.test(e)?e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi,function(e){return y(e)}):e).replace(F.IMPLIED_MULTIPLICATION_REGEX,function(){var e=arguments[4],t=arguments[1],n=arguments[2],r=arguments[3],i=\"\",s=\"*\";return t+(s=(i=!e.charAt(r).match(/[\\+\\-\\/\\*]/)?e.charAt(r-1):i).match(/[a-z]/i)?\"\":s)+n}).replace(/([a-z0-9_]+)/gi,function(e,t){return!(!1!==F.USE_MULTICHARACTER_VARS||t in U)&&isNaN(t)?t.split(\"\").join(\"*\"):t}).replace(/\\)\\(/g,\")*(\")||\"0\";;)if(e===(e=e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi,function(e,t,n,r,i){r=t||r,i=n||i;return r in U?r+i:r+\"*\"+i})))break;return e}(e),t=t||{};e=this.tokenize(e),e=this.toRPN(e);return this.parseRPN(e,t)},this.toObject=function(e){var a=function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i,s=e[n],o=s.value;s.type===A.VARIABLE_OR_LITERAL?t.push(new De(o)):s.type===A.FUNCTION?(n++,(i=C.symfunction(o,a(e[n]))).isConversion=!0,t.push(i)):s.type===A.OPERATOR?t.push(o):t.push(a(s))}return t};return a(C.tokenize(e))};function S(e){for(var t=0,n=[[]],r=0,i=e.length;r<i;r++)\",\"===e[r]?n[++t]=[]:n[t].push(e[r]);return n}function M(e){return e.replace(/^\\\\left\\((.+)\\\\right\\)$/g,function(e,t){return t||e})}function _(e){if(e.isInfinity)return De.infinity();if(e.multiplier.lessThan(0)&&e.multiplier.negate(),e.isImaginary()){var t=e.realpart(),n=e.imagpart();if(t.isConstant()&&n.isConstant())return R(C.add(C.pow(t,new De(2)),C.pow(n,new De(2))))}else if(oe(e)||ge(e.power))return e;var r;e.isComposite()&&(r=[],e.each(function(e){r.push(e.multiplier)}),Te.QGCD.apply(null,r).lessThan(0)&&(e.multiplier=e.multiplier.multiply(new Fe(-1)),e.distributeMultiplier()));n=C.parse(e.multiplier);return e.toUnitMultiplier(),C.multiply(n,C.symfunction(Q,[e]))}function u(e){if(re(e)){var n=new Ve;return e.each(function(e,t){n.set(t-1,u(e))}),n}if(ie(e)){var r=new He;return e.each(function(e,t,n){r.set(t,n,u(e))}),r}if(F.PARSE2NUMBER&&e.isConstant())return d(ue(e)?Te.bigfactorial(e):Te.gamma(e.multiplier.add(new Fe(1)).toDecimal()));if(e.isConstant()&&e.getDenom().equals(2)){var t,i=e.getNum(),s=e.multiplier.isNegative()?(s=C.subtract(i.negate(),new De(1)).multiplier.divide(new Fe(2)),t=C.pow(new De(-4),new De(s)).multiplier.multiply(Te.bigfactorial(s)),Te.bigfactorial(new Fe(2).multiply(s))):(s=C.add(i,new De(1)).multiplier.divide(new Fe(2)),t=Te.bigfactorial(new Fe(2).multiply(s)),C.pow(new De(4),new De(s)).multiplier.multiply(Te.bigfactorial(s))),s=t.divide(s);return C.multiply(C.parse(\"sqrt(pi)\"),new De(s))}return C.symfunction(Y,[e])}function t(e,t){if(e.isConstant()&&t.isConstant()){var n=new De(1);return n.multiplier=n.multiplier.multiply(e.multiplier.mod(t.multiplier)),n}n=C.divide(e.clone(),t.clone());return ue(n)?new De(0):C.symfunction(\"mod\",[e,t])}function r(e){if(e.isComposite()){var t,n,r,i,s=new De(0);return e.each(function(e){r=e.getNum(),i=e.getDenom(),n=s.getNum(),t=s.getDenom(),n=C.multiply(i,n),r=C.multiply(r,t),r=C.expand(C.add(n,r)),i=C.multiply(t,i),s=C.divide(r,i)},!0),s}return e}function R(e){if((e=!ne(e)?C.parse(e):e).group===V)return C.symfunction(z,[e]);var t=(e=\"\"===e.fname&&e.power.equals(1)?e.args[0]:e).multiplier.sign()<0;if(F.PARSE2NUMBER){if(e.isConstant()&&!t)return new De(k.sqrt(e.multiplier.toDecimal()));if(e.isImaginary())return b.sqrt(e);if(e.group===G)return C.symfunction(\"sqrt\",[e])}var n,r=e.isConstant();if(e.group===Z&&e.isLinear()){var i=R(De(e.multiplier));for(o in e.symbols){var s=e.symbols[o];i=C.multiply(i,R(s))}l=i}else if(e.fname===z){var o=e.args[0],a=e.multiplier;o.setPower(e.power.multiply(new Fe(.25))),l=o,a.equals(1)||(l=C.multiply(R(C.parse(a)),l))}else if(e.power.isInteger())if(e.multiplier<0&&e.group===G)var u=C.parse(e.multiplier).negate(),a=C.parse(e).toUnitMultiplier().negate(),l=C.multiply(C.symfunction(F.SQRT,[a]),R(u));else{u=e.power.sign();e.power=e.power.abs(),r&&e.multiplier.lessThan(0)&&(n=De.imaginary(),e.multiplier=e.multiplier.abs());var c=e.multiplier.toDecimal(),r=Math.abs(c),r=Math.sqrt(r);if(ue(r))i=new De(r);else if(ue(c)){var p=Te.ifactor(c),f=1;for(s in p){var h,m=(g=p[s])-g%2;m&&(h=Math.pow(s,m),f*=Math.pow(s,m/2),c/=h)}i=C.multiply(C.symfunction(z,[new De(c)]),new De(f))}else{for(var g,d=[new De(e.multiplier.num),new De(e.multiplier.den)],v=[new De(1),new De(1)],w=[new De(1),new De(1)],y=0;y<2;y++)N(g=d[y]).each(function(e){var t=(e=De.unwrapPARENS(e)).clone().toLinear(),n=Number(e.power),e=n%2;v[y]=C.multiply(v[y],C.pow(t,new De((n-e)/2))),w[y]=C.multiply(w[y],R(C.pow(t,new De(e))))});i=C.divide(C.multiply(v[0],w[0]),C.multiply(v[1],w[1]))}l=(e=e.toUnitMultiplier(!0)).isOne()?e:ge(e.power.toString())?C.pow(e.clone(),new De(.5)):C.symfunction(z,[e]),u<0&&l.power.negate(),i&&(l=C.multiply(i,l)),n&&(l=C.multiply(n,l))}else e.setPower(e.power.multiply(new Fe(.5))),l=e;return t&&F.PARSE2NUMBER?C.parse(l):l}function i(e){if(e.isConstant(!0))return s(e,new De(3));var t,n=e.power/3,r=C.pow(C.parse(e.multiplier),new De(1/3)),e=e.toUnitMultiplier();return ue(n)?t=C.pow(e.toLinear(),C.parse(n)):e.group===Z?(t=new De(1),e.each(function(e){t=C.multiply(t,i(e))})):t=C.symfunction(\"cbrt\",[e]),C.multiply(r,t)}function s(e,t,n,r){if((t=Se(C.parse(t))).equals(0))throw new Ae(\"Unable to calculate nthroots of zero\");if(e<0&&ge(t))throw new Error(\"Cannot calculate nthroot of negative number for even powers\");if(!e.isConstant(!0))return C.symfunction(\"nthroot\",arguments);void 0===r&&(r=!0),n=n||25;var i=(e=e.group!==D?Se(e):e).sign();if(i<0&&(e=_(e)),ue(e)&&t.isConstant()){var s,t=e<0x10000000000000000?Fe.create(Math.pow(e,1/t)):Te.nthroot(e,t);return r&&(s=new De(t)),s=new De(t.toDecimal(n)),C.multiply(new De(i),s)}}function N(e){if(e.greaterThan(9999999999998891e26)||e.equals(-1))return e;if(e.equals(Math.PI))return new De(Math.PI);if((e=Se(e.clone())).isConstant()){var t=new De(1),n=e.toString();if(ue(n)){var r,i=Te.ifactor(n);for(r in i)var s=i[r],t=C.multiply(t,C.symfunction(\"parens\",[new De(r).setPower(new Fe(s))]))}else{n=N(new De(e.multiplier.num)),e=N(new De(e.multiplier.den));t=C.multiply(C.symfunction(\"parens\",[n]),C.symfunction(\"parens\",[e]).invert())}}else t=C.symfunction(\"pfactor\",arguments);return t}function l(e){return e.realpart()}function c(e){return e.imagpart()}function p(e){var t=e.realpart(),e=e.imagpart();return C.add(t,C.multiply(e.negate(),De.imaginary()))}function f(e){var t=e.realpart(),e=e.imagpart();return t.isConstant()&&e.isConstant()?new De(Math.atan2(e,t)):C.symfunction(\"atan2\",[e,t])}function f(e){var t=e.realpart(),e=e.imagpart();return t.isConstant()&&e.isConstant()?e.equals(0)&&t.equals(-1)?C.parse(\"pi\"):e.equals(1)&&t.equals(0)?C.parse(\"pi/2\"):e.equals(1)&&t.equals(1)?C.parse(\"pi/4\"):new De(Math.atan2(e,t)):C.symfunction(\"atan2\",[e,t])}function h(e,t){var n,r;for(t.map(function(e){e.numVal=Se(e).multiplier});;){if((r=t.length)<2)return t[0];n=t.pop(),r=t[r-2],(\"min\"===e?n.numVal<r.numVal:n.numVal>r.numVal)&&(t.pop(),t.push(n))}}function O(e,t){if(e.equals(1))return new De(0);var n,r,i;if(e.fname===z&&e.multiplier.equals(1))return n=C.divide(O(e.args[0]),new De(2)),e.power.sign()<0&&n.negate(),n;if(e.equals(0))throw new Ae(F.LOG+\"(0) is undefined!\");return e.isImaginary()?b.evaluate(e,F.LOG):(e.isConstant()&&void 0!==t&&t.isConstant()?n=new De(Math.log(e)/Math.log(t)):e.group===V&&e.power.multiplier.lessThan(0)||\"-1\"===e.power.toString()?(e.power.negate(),n=O(e).negate()):\"e\"===e.value&&e.multiplier.equals(1)?(t=e.power,n=ne(t)?t:new De(t)):e.group===H&&\"exp\"===e.fname?(i=e.args[0],n=e.multiplier.equals(1)?C.multiply(i,new De(e.power)):C.symfunction(F.LOG,[e])):F.PARSE2NUMBER&&oe(e)?((e=C.parse(e)).multiplier.lessThan(0)&&(e.negate(),r=C.multiply(new De(Math.PI),new De(\"i\"))),n=new De(Math.log(e.multiplier.toDecimal())),r&&(n=C.add(n,r))):(e.power.equals(1)||e.contains(\"e\")||(i=e.group===V?e.power:new De(e.power),e.toLinear()),n=1<arguments.length&&w(arguments)?new De(1):C.symfunction(F.LOG,arguments),i&&(n=C.multiply(i,n))),n)}function m(e,t){var n=t&&t.isConstant()||void 0===t;if(e.isConstant()&&n){var r,n=e;return t&&t.lessThan(0)&&(t=_(t),n=(r=Number(e).toExponential().toString().split(\"e\"))[0],r=r[1]),t=new De(me(n,Number(t||0))),C.multiply(t,C.pow(new De(10),new De(r||0)))}return C.symfunction(\"round\",arguments)}function g(e){e%=2;return 0<=(e=e<0?2+e:e)&&e<=.5?1:.5<e&&e<=1?2:1<e&&e<=1.5?3:4}function d(t){if(!isFinite(t)){var e=Math.sign(t),n=new De(String(Math.abs(t)));return n.multiplier=n.multiplier.multiply(new Fe(e)),n}if(ne(t))return t;if(\"number\"==typeof t)try{t=Fe.simple(t)}catch(e){t=new Fe(t)}n=new De(0);return n.multiplier=t,n}function T(e,t){if(Array.isArray(e))return e.map(function(e){return T(e,t)});if(t=t||{},e.group===H&&\"\"===e.fname){var n=T(e.args[0],t),r=T(C.pow(n,C.parse(e.power)),t);return C.multiply(C.parse(e.multiplier),r).distributeMultiplier()}if(-1!==[D,B,G].indexOf(e.group))return e;r=e.clone();try{var i,s,o,a=e.multiplier.toString(),u=Number(e.power),l=e;if(e.isComposite()&&ue(e.power)&&0<e.power){var c=u-1,n=new De(0);e.each(function(e){n=C.add(n,T(C.parse(e),t))});for(var p=C.parse(n),f=0;f<c;f++)p=Ee(p,n,t);l=C.multiply(C.parse(a),p).distributeMultiplier()}else e.group===H&&!0===t.expand_functions?(i=[],e.args.forEach(function(e){i.push(T(e,t))}),l=C.pow(C.symfunction(e.fname,i),C.parse(e.power)),l=C.multiply(l,C.parse(e.multiplier))):e.isComposite()&&ue(e.power)&&e.power<0&&!0===t.expand_denominator?(e=e.invert(),(l=T(e,t)).invert()):e.group===Z?(s=function(e){switch(e.group){case X:return 0;case j:return 1;case Z:return 2;case H:return 3;default:return 4}},o=e.collectSymbols().sort(function(e,t){return s(t)-s(e)}).map(function(e){return T(C.pow(e,C.parse(u)),t)}),n=o.pop(),(l=n.isComposite()&&n.isLinear()?(o.forEach(function(e){n=Ee(n,e,t)}),n.isComposite()?(1<n.power&&(n=T(C.pow(n,C.parse(n.power)),t)),C.multiply(C.parse(a),n).distributeMultiplier()):n):(l=n,o.forEach(function(e){l=C.multiply(l,e)}),C.multiply(l,C.parse(a)).distributeMultiplier())).group===Z&&(l=C.parse(l))):l=e;return l}catch(e){return r}return r}function P(e){if(ne(e.power)||!e.power.absEquals(.5))return e;var t=e.power.sign(),e=R(e.group===B?new De(e.value):e.toLinear());return t<0&&e.invert(),e}this.toTeX=function(e,t){var n=!0===(t=t||{}).decimals?\"decimals\":void 0,r=\"string\"==typeof e?this.toObject(e):e,i=[],s=void 0===t.cdot?\"\\\\cdot\":t.cdot,r=function(e){for(var t=[];e.length;){var n,r,i=e.shift(),s=e[0],o=ae(s),a=\"-\"===s;\"^\"===i&&(\"+\"===s?e.shift():o&&\"+\"===s[0]&&s.shift(),o&&1===s.length&&e.unshift(e.shift()[0])),\"^\"===i&&(o&&\"-\"===s[0]||a)?(n=t.pop(),r=\"1\",\"*\"===(a=t[t.length-1])?(t.pop(),r=t.pop()):ae(a)&&(r=t.pop()),t.push(r,\"/\",n,i),(o?s:e).shift(),o&&1===s.length&&t.push(e.shift()[0])):t.push(i)}return t}(r);if(ae(r)){for(var o,a,u=[],l=0;l<r.length;l++)o=r[l],\"^\"===r[l+1]?(a=r[l+2],u.push(Ge.braces(this.toTeX([o]))+\"^\"+Ge.braces(this.toTeX([a]))),l+=2):u.push(o);r=u}for(var l=0,c=r.length;l<c;l++){var p=r[l];if(ne(p=\"*\"===p?s:p))if(p.group===H){var f,h=p.fname;if(h===z)g=\"\\\\sqrt\"+Ge.braces(this.toTeX(p.args));else if(h===Q)g=Ge.brackets(this.toTeX(p.args),\"abs\");else if(h===$)g=Ge.brackets(this.toTeX(p.args),\"parens\");else if(h===F.LOG10)g=\"\\\\\"+F.LOG10_LATEX+\"\\\\left( \"+this.toTeX(p.args)+\"\\\\right)\";else if(\"integrate\"===h)var m=S(p.args),g=\"\\\\int \"+(d=Ge.braces(this.toTeX(m[0])))+\"\\\\, d\"+(v=this.toTeX(m[1]));else if(\"defint\"===h){var m=S(p.args),d=Ge.braces(this.toTeX(m[0])),v=this.toTeX(m[3]);g=\"\\\\int\\\\limits_{\"+this.toTeX(m[1])+\"}^{\"+this.toTeX(m[2])+\"} \"+d+\"\\\\, d\"+v}else if(\"diff\"===h){m=S(p.args),v=\"\",d=Ge.braces(this.toTeX(m[0]));if(1===m.length){for(var w=[],y=0;y<m[0].length;y++)3===m[0][y].group&&w.push(m[0][y].value);w.sort(),v=0<w.length?\"\\\\frac{d}{d \"+w[0]+\"}\":\"\\\\frac{d}{d x}\"}else v=2===m.length?\"\\\\frac{d}{d \"+m[1]+\"}\":\"\\\\frac{d^{\"+m[2]+\"}}{d \"+this.toTeX(m[1])+\"^{\"+m[2]+\"}}\";g=v+\"\\\\left(\"+d+\"\\\\right)\"}else if(\"sum\"===h||\"product\"===h){var b=[[],[],[],[]],y=0;for(l=0;l<p.args.length;l++)\",\"!==p.args[l]?b[y].push(p.args[l]):y++;g=(\"sum\"===h?\"\\\\sum_\":\"\\\\prod_\")+Ge.braces(this.toTeX(b[1])+\" = \"+this.toTeX(b[2])),g+=\"^\"+Ge.braces(this.toTeX(b[3]))+Ge.braces(this.toTeX(b[0]))}else g=\"limit\"===h?(f=S(p.args).map(function(e){return Array.isArray(e)?C.toTeX(e.join(\"\")):C.toTeX(String(e))}),\"\\\\lim_\"+Ge.braces(f[1]+\"\\\\to \"+f[2])+\" \"+Ge.braces(f[0])):h===Y||h===W?this.toTeX(p.args)+(h===Y?\"!\":\"!!\"):Ge.latex(p,n);i.push(g)}else i.push(Ge.latex(p,n));else ae(p)?i.push(Ge.brackets(this.toTeX(p))):\"/\"===p?i.push(Ge.frac(M(i.pop()),M(this.toTeX([r[++l]])))):i.push(p)}return i.join(\" \")},this.expand=T,this.round=m,this.clean=function t(e){var n,r,i,s,o,a,u,l=e.group;return l===X?(r=e.getNum(),i=e.getDenom()||new De(1),s=Number(e.power),o=new De(1),1===Math.abs(s)&&(i.each(function(e){e.group===Z?o=C.multiply(o,t(e.getDenom())):e.power.lessThan(0)&&(o=C.multiply(o,t(e.clone().toUnitMultiplier())))}),a=new De(0),i.each(function(e){a=C.add(C.divide(e,o.clone()),a)}),o.invert(),r.isComposite()?(u=new De(0),r.each(function(e){u=C.add(C.multiply(t(e),o.clone()),u)})):u=C.multiply(o,r),n=C.divide(u,a))):l===Z?(n=new De(1),e.each(function(e){n=C.multiply(n,C.clean(e))})):l===H&&1===e.args.length&&e.args[0].isConstant()&&(n=ye(\"PARSE2NUMBER\",function(){return C.parse(e)},!0)),n=n||e},this.sqrt=R,this.cbrt=i,this.abs=_,this.log=O,this.rationalize=r,this.nthroot=s,this.arg=f,this.conjugate=p,this.imagpart=c,this.realpart=l,this.getFunction=function(e){return U[e][0]},this.addPreprocessor=function(e,t,n,r){var i=o.names,s=o.actions;if(\"function\"!=typeof t)throw new PreprocessorError(\"Incorrect parameters. Function expected!\");n?r?(i.splice(n,0,e),s.splice(n,0,t)):(i[n]=e,s[n]=t):(i.push(e),s.push(t))},this.getPreprocessors=function(){for(var e={},t=0,n=e.names.length;t<n;t++)e[e.names[t]]={order:t,action:e.actions[t]};return e},this.removePreprocessor=function(e,t){e=o.names.indexOf(e);t?(we(o.names,e),we(o.actions,e)):(o.names[e]=void 0,o.actions[e]=void 0)},this.mapped_function=function(){for(var e={},t=this.params,n=0;n<t.length;n++)e[t[n]]=String(arguments[n]);return C.parse(this.body,e)},this.add=function(i,n){var e=ne(i),t=ne(n);if(e&&t){if(i.unit||n.unit)return C.Unit.add(i,n);if(i.isInfinity||n.isInfinity){var r=i.multiplier.lessThan(0),s=n.multiplier.lessThan(0);if(i.isInfinity&&n.isInfinity&&r!==s)throw new Ae(\"(\"+i+\")+(\"+n+\") is not defined!\");var o=De.infinity();return s&&o.negate(),o}if(i.isComposite()&&i.isLinear()&&n.isComposite()&&n.isLinear()&&(i.distributeMultiplier(),n.distributeMultiplier(),n.length>i.length&&i.group===n.group&&([i,n]=[n,i])),i.multiplier.equals(0))return n;if(n.multiplier.equals(0))return i;if(i.isConstant()&&n.isConstant()&&F.PARSE2NUMBER)return h=new De(i.multiplier.add(n.multiplier).toDecimal(F.PRECISION));var a=i.group,u=n.group,l=i.power.toString(),c=n.power.toString();if(a<u||a===u&&c<l&&0<c)return this.add(n,i);a===Z&&u===j&&i.value===n.value&&(w=i,a=(i=n).group,u=(n=w).group,l=i.power.toString(),c=n.power.toString());var p,f,h,m=l===c,r=i.value,s=n.value,o=i.isComposite(),l=n.isComposite();if(o&&(p=Pe(i,\"hash\")),l&&(f=Pe(n,\"hash\")),a===X&&u===X&&n.isLinear()&&!i.isLinear()&&p!==f)return this.add(n,i);a===j&&u===j&&(r=p,s=f);var g,c=a===B&&u===D,l=i.value===n.multiplier.toString(),l=r===s||p===f&&void 0!==p||c&&l;if(l&&m&&a===u)if(c&&(n=n.convert(B)),a!==j||u!==G&&u!==B)if((h=i).multiplier.isOne()&&n.multiplier.isOne()&&a===X&&i.isLinear()&&n.isLinear())for(var d in n.symbols){var v=n.symbols[d];h.attach(v)}else h.multiplier=h.multiplier.add(n.multiplier);else i.distributeMultiplier(),h=i.attach(n);else if(l&&a!==j)a===X&&u===j?(n.insert(i,\"add\"),h=n):(h=De.shell(j).attach([i,n])).value=a===j?p:r;else if(o&&i.isLinear()){r=a===u,o=a===j&&u===j;if(o&&(r=i.value===n.value),i.distributeMultiplier(),n.isComposite()&&n.isLinear()&&r){for(var d in n.distributeMultiplier(),n.symbols){v=n.symbols[d];i.attach(v)}h=i}else o&&i.value!==f||a===j&&!l?(h=De.shell(X).attach([i,n])).updateHash():h=i.attach(n)}else a===H&&i.fname===z&&u!==V&&n.power.equals(.5)&&(g=n.multiplier.clone(),(n=R(n.toUnitMultiplier().toLinear())).multiplier=g),2===i.length&&2===n.length&&ge(i.power)&&ge(n.power)?h=C.add(T(i),T(n)):(h=De.shell(X).attach([i,n])).updateHash();return 1===(h=h.multiplier.equals(0)?new De(0):h).length&&(g=h.multiplier,(h=pe(h.symbols)).multiplier=h.multiplier.multiply(g)),h}t&&!e&&(w=i,i=n,n=w,w=t,t=e,e=w);var w=ie(n);if(e&&w){var y=new He;n.eachElement(function(e,t,n){y.set(t,n,C.add(i.clone(),e))}),n=y}else if(ie(i)&&w)n=i.add(n);else if(e&&re(n))n.each(function(e,t){n.elements[--t]=C.add(i.clone(),n.elements[t])});else if(re(i)&&re(n))n.each(function(e,t){n.elements[--t]=C.add(i.elements[t],n.elements[t])});else{if(re(i)&&ie(n))return C.add(n,i);if(ie(i)&&re(n)){if(n.elements.length===i.rows()){var y=new He,b=i.cols();return n.each(function(e,t){for(var n=[],r=0;r<b;r++)n.push(C.add(i.elements[t-1][r].clone(),e.clone()));y.elements.push(n)}),y}K(\"Dimensions must match!\")}}return n},this.subtract=function(i,r){var e=ne(i),t=ne(r);if(e&&t)return i.unit||r.unit?C.Unit.subtract(i,r):this.add(i,r.negate());if(t&&re(i))r=i.map(function(e){return C.subtract(e,r.clone())});else if(e&&re(r))r=r.map(function(e){return C.subtract(i.clone(),e)});else if(re(i)&&re(r))i.dimensions()===r.dimensions()?r=i.subtract(r):C.error(\"Unable to subtract vectors. Dimensions do not match.\");else if(ie(i)&&re(r)){if(r.elements.length===i.rows()){var s=new He,o=i.cols();return r.each(function(e,t){for(var n=[],r=0;r<o;r++)n.push(C.subtract(i.elements[t-1][r].clone(),e.clone()));s.elements.push(n)}),s}K(\"Dimensions must match!\")}else{if(re(i)&&ie(r)){var s=r.clone().negate();return C.add(s,i)}ie(i)&&ie(r)?r=i.subtract(r):ie(i)&&t?(s=new He,i.each(function(e,t,n){s.set(t,n,C.subtract(e,r.clone()))}),r=s):e&&ie(r)&&(s=new He,r.each(function(e,t,n){s.set(t,n,C.subtract(i.clone(),e))}),r=s)}return r},this.multiply=function(i,n){var e=ne(i),t=ne(n);if(e&&n instanceof L)return n.elements.push(i),n;if(e&&t){if(n.isUnit){var r=i.clone();return i.unit=n,r}if(i.unit||n.unit)return C.Unit.multiply(i,n);if(i.isInfinity||n.isInfinity){if(i.equals(0)||n.equals(0))throw new Ae(i+\"*\"+n+\" is undefined!\");if(n.power.lessThan(0)){if(i.isInfinity)throw new Ae(\"Infinity/Infinity is not defined!\");return new De(0)}var s=i.multiplier.multiply(n.multiplier).sign(),o=De.infinity();if(i.isConstant()||n.isConstant()||i.isInfinity&&n.isInfinity)return s<0&&o.negate(),o}if(i.isConstant()&&n.isConstant()&&F.PARSE2NUMBER)return new De(p=new k(i.multiplier.toDecimal()).times(new k(n.multiplier.toDecimal())).toFixed());if(i.isOne())return n.clone();if(n.isOne())return i.clone();if(i.multiplier.equals(0)||n.multiplier.equals(0))return new De(0);if(n.group>i.group&&n.group!==X)return this.multiply(n,i);i.group===Z&&n.group===j&&i.value===n.value&&(p=i,i=n,n=p);var a=i.group,u=n.group,l=n.multiplier.num,c=n.multiplier.den;a!==H||i.fname!==z||n.isConstant()||i.args[0].value!==n.value||i.args[0].multiplier.lessThan(0)?a===H&&i.fname===z&&i.multiplier.equals(1)&&i.power.equals(-1)&&n.isConstant()&&i.args[0].equals(n)&&(i=C.symfunction(z,[n.clone()]),n=new De(1)):(m=i.power,h=C.parse(i.multiplier),(i=C.multiply(h,i.args[0].clone())).setPower(new Fe(.5).multiply(m)),a=i.group);var p,f=i.value,o=n.value,s=new Fe(i.sign()),h=a===B&&u===D&&n.multiplier.equals(i.value),m=(h?new Fe(1).multiply(i.multiplier):i.multiplier.multiply(n.multiplier)).abs(),r=i.clone().toUnitMultiplier();if(n=n.clone().toUnitMultiplier(!0),a===H&&u===H){var g=i.args[0].clone(),d=n.args[0].clone();if(i.fname===z&&n.fname===z&&i.isLinear()&&n.isLinear()){var v=C.divide(g,d).invert();v.gt(1)&&ue(v)&&(r=C.multiply(i.args[0].clone(),R(v.clone())),n=new De(1))}else if(i.fname===Y&&n.fname===Y&&!g.isConstant()&&!d.isConstant()&&n.power<0){v=C.subtract(g.clone(),d.clone());if(v.isConstant())if(p=new De(1),v<0){for(var w=0,y=Math.abs(v);w<=y;w++){var b=C.add(g.clone(),new De(w));p=C.multiply(p,b)}r=C.multiply(C.pow(g,new De(i.power)),C.pow(p,new De(n.power))),n=new De(1)}else{for(w=0,y=Math.abs(v);w<=y;w++){b=C.add(d.clone(),new De(w));p=C.multiply(p,b)}r=C.multiply(C.pow(p,new De(i.power)),C.pow(d,new De(n.power))),n=new De(1)}}}if(f===o&&a===j&&a===u&&(f=i.text(\"hash\"),o=n.text(\"hash\")),(f=u===V&&n.previousGroup===j&&a===j?Pe(i,\"hash\",V):f)!==o&&!h||a===j&&(u===G||u===B||u===H)||a===j&&u===Z)if(a===Z&&i.isLinear())if(u===Z&&n.distributeExponent(),u===Z&&n.isLinear()){for(var b in n.symbols){var S=n.symbols[b];r=r.combine(S)}r.multiplier=r.multiplier.multiply(n.multiplier)}else r.combine(n);else a!==D?a===Z?(r.distributeExponent(),r.combine(n)):n.isOne()||(E=n.multiplier.clone(),n.toUnitMultiplier(),(r=De.shell(Z).combine([r,n])).multiplier=r.multiplier.multiply(E)):r=n.clone().toUnitMultiplier();else{var M=i.power,N=n.power,E=ne(M),q=ne(N),q=E||q;a===j&&u!==j&&n.previousGroup!==j&&M.equals(1)?(r=new De(0),i.each(function(e){r=C.add(r,C.multiply(e,n.clone()))},!0)):(r.power=q?C.add(ne(M)?M:new De(M),ne(N)?N:new De(N)):a===D?M:M.add(N),r.power.equals(0)&&(r=r.convert(D)),q&&r.convert(V),i.imaginary&&n.imaginary&&ge(r.power%2)&&(r=new De(1),m.negate()),r.group!==V&&r.previousGroup&&(r.previousGroup=void 0),r.multiplier=r.multiplier.multiply(n.multiplier))}r.group===B&&(a=Math.log(r.value),M=Math.log(l)/a,N=Math.log(c)/a,q=m.num/l,a=m.den/c,0!=M&&ue(M)&&ue(q)&&(r.power=r.power.add(new Fe(M)),m.num/=l),0!=N&&ue(N)&&ue(a)&&(r.power=r.power.subtract(new Fe(N)),m.den/=c)),1===r.length&&(p=r.multiplier,(r=pe(r.symbols)).multiplier=r.multiplier.multiply(p));c=r.power.toString();return ge(c)&&r.fname===z?(s*=r.sign(),c=r.power,r=r.args[0],r=C.multiply(new De(m),C.pow(r,new De(c.divide(new Fe(2))))),s<0&&r.negate()):(r.multiplier=r.multiplier.multiply(m).multiply(s),r.group===X&&r.isImaginary()&&r.distributeMultiplier()),r=r.group===B&&ue(r.power.toDecimal())?r.convert(D):r}t&&!e&&(p=i,i=n,n=p,p=t,t=e,e=p);s=ie(n),t=ie(i);if(e&&s){var x=new He;n.eachElement(function(e,t,n){x.set(t,n,C.multiply(i.clone(),e))}),n=x}else if(t&&s)n=i.multiply(n);else if(e&&re(n))n.each(function(e,t){n.elements[--t]=C.multiply(i.clone(),n.elements[t])});else if(re(i)&&re(n))n.each(function(e,t){n.elements[--t]=C.multiply(i.elements[t],n.elements[t])});else{if(re(i)&&ie(n))return this.multiply(n,i);if(ie(i)&&re(n)){if(n.elements.length===i.rows()){var x=new He,A=i.cols();return n.each(function(e,t){for(var n=[],r=0;r<A;r++)n.push(C.multiply(i.elements[t-1][r].clone(),e.clone()));x.elements.push(n)}),x}K(\"Dimensions must match!\")}}return n},this.divide=function(r,i){var e=ne(r),t=ne(i);if(e&&t){if(r.unit||i.unit)return C.Unit.divide(r,i);if(i.equals(0))throw new qe(\"Division by zero not allowed!\");return r.isConstant()&&i.isConstant()?(n=r.clone()).multiplier=n.multiplier.divide(i.multiplier):(i.invert(),n=C.multiply(r,i)),n}var n,s,o=re(r),a=re(i);return e&&a?i=i.map(function(e){return C.divide(r.clone(),e)}):o&&t?i=r.map(function(e){return C.divide(e,i.clone())}):o&&a?r.dimensions()===i.dimensions()?i=i.map(function(e,t){return C.divide(r.elements[--t],e)}):C.error(\"Cannot divide vectors. Dimensions do not match!\"):(n=ie(r),o=ie(i),n&&t?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.clone()))}),i=s):e&&o?(s=new He,i.eachElement(function(e,t,n){s.set(t,n,C.divide(r.clone(),e))}),i=s):n&&o?(s=new He,r.rows()===i.rows()&&r.cols()===i.cols()?(r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.elements[t][n]))}),i=s):C.error(\"Dimensions do not match!\")):n&&a&&(r.cols()===i.dimensions()?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.elements[t].clone()))}),i=s):C.error(\"Unable to divide matrix by vector.\"))),i},this.pow=function(r,i){var s,e=ne(r),t=ne(i);if(e&&t){if(r.unit||i.unit)return C.Unit.pow(r,i);if(r.group===H&&r.fname===Q&&ge(i)){var n=r.multiplier.clone(),o=C.pow(r.args[0],i);return o.multiplier=n,o}if(r.isInfinity||i.isInfinity){if(r.isInfinity&&i.isInfinity)throw new Ae(\"(\"+r+\")^(\"+i+\") is undefined!\");if(r.isConstant()&&i.isInfinity){if(r.equals(0)){if(i.lessThan(0))throw new Ae(\"0^Infinity is undefined!\");return new De(0)}if(r.equals(1))throw new Ae(\"1^\"+i.toString()+\" is undefined!\");if(i.lessThan(0))return new De(0);if(!r.lessThan(0))return De.infinity()}if(r.isInfinity&&i.isConstant()){if(i.equals(0))throw new Ae(r+\"^0 is undefined!\");return i.lessThan(0)?new De(0):C.multiply(De.infinity(),C.pow(new De(r.sign()),i.clone()))}}var a=r.equals(0),u=i.equals(0);if(a&&u)throw new Ae(\"0^0 is undefined!\");if(a&&i.isConstant()&&i.multiplier.greaterThan(0))return new De(0);if(u)return new De(1);var l,c=i.isConstant(),p=r.isConstant(),o=i.isInteger(),n=r.multiplier,a=r.clone();if(p&&c&&r.equals(0)&&i.lessThan(0))throw new Ae(\"Division by zero is not allowed!\");if(F.PARSE2NUMBER&&p&&c&&r.sign()<0&&de(i)){var f=Math.PI*i;return b=new De(Math.cos(f)),v=C.multiply(De.imaginary(),new De(Math.sin(f))),C.add(b,v)}if(F.PARSE2NUMBER&&r.isImaginary()&&c&&ue(i)&&!i.lessThan(0))if(b=r.realpart(),v=r.imagpart(),b.isConstant(\"all\")&&v.isConstant(\"all\"))return u=F.USE_BIG?De(k.atan2(d.multiplier.toDecimal(),y.multiplier.toDecimal()).times(i.toString())):Math.atan2(v,b)*i,l=new De(u),y=C.pow(De.hyp(b,v),i),f=C.multiply(y.clone(),C.trig.cos(l.clone())),u=C.multiply(y,C.trig.sin(l)),C.add(f,C.multiply(De.imaginary(),u));if(a.toUnitMultiplier(),a.group!==H||a.fname!==z||c?(A=n.sign(),de(i)&&A<0&&(a.negate(),(a=C.symfunction($,[a])).negate()),a.multiplyPower(i)):((N=a.args[0]).multiplyPower(new De(.5)),N.multiplier.multiply(a.multiplier),N.multiplyPower(i),a=N),p&&c&&F.PARSE2NUMBER)A<0&&(r.negate(),m=i.multiplier.den.equals(2)?new De(F.IMAGINARY):ue(i.multiplier)?ge(i.multiplier)?new De(1):new De(-1):ge(i.multiplier.den)?C.pow(C.symfunction($,[new De(A)]),i.clone()):new De(Math.pow(A,i.multiplier.num))),a=new De(Math.pow(r.multiplier.toDecimal(),i.multiplier.toDecimal())),m&&(a=C.multiply(a,m));else if(o&&!n.equals(1)){if(i.abs().gt(F.MAX_EXP))return i.sign()<0?new De(0):De.infinity();var h=i.multiplier.toDecimal(),m=Math.sign(h);h=Math.abs(h);var g=new Fe(1);g.num=n.num.pow(h),g.den=n.den.pow(h),m<0&&g.invert(),a.multiplier=a.multiplier.multiply(g)}else{var d,v,w,y,b,S,M,N,E,q,x,A=r.sign();i.isConstant()&&r.isConstant()&&!i.multiplier.den.equals(1)&&A<0?a=i.multiplier.den.equals(2)?(d=new De(F.IMAGINARY),r.negate(),i.lessThan(0)&&(d.negate(),i.negate()),C.multiply(C.pow(r,i),d)):((w=r.clone()).multiplier.negate(),a=C.pow(C.symfunction($,[new De(A)]),i.clone()),g=C.pow(new De(w.multiplier.num),i.clone()),d=C.pow(new De(w.multiplier.den),i.clone()),y=C.divide(g,d),C.multiply(a,y)):F.PARSE2NUMBER&&i.isImaginary()?(b=i.realpart(),v=i.imagpart(),w=r.clone().toLinear(),y=C.pow(w.clone(),b),E=O(w.clone()),b=I.cos(C.multiply(v.clone(),E)),E=C.multiply(I.sin(C.multiply(v,O(w))),De.imaginary()),a=C.multiply(y,C.add(b,E)),a=C.expand(C.parse(a))):(S=P(new De((E=r.group===D&&A<0)?n.num:Math.abs(n.num)).setPower(i.clone())),M=P(new De(n.den).setPower(i.clone()).invert()),r.imaginary&&(o?(N=Math.sign(i),h=_(i),a=new De(ge(q=h%4)?-1:F.IMAGINARY),(0===q||N<0&&1===q||0<N&&3===q)&&a.negate()):(o=i.multiplier.multiply(Fe.quick(1,2)),N=Math.pow(-1,o.num),a=ge(o.den)?new De(-1).setPower(o,!0):new De(N))),A<0&&!E&&a.negate(),c&&r.group!==V&&(A=ge(i.multiplier.den),E=ge(r.power),q=a.power.toDecimal(),c=ge(q),A&&E&&!c&&(a=1===q?C.symfunction(Q,[a]):ue(q)?C.multiply(C.symfunction(Q,[a.clone().toLinear()]),a.clone().setPower(new Fe(q-1))):(h=a.power,C.symfunction(Q,[a.toLinear()]).setPower(h)),F.POSITIVE_MULTIPLIERS&&a.fname===Q&&(a=a.args[0]))),i.equals(2)&&a.group===Z&&(x=new De(1),a.each(function(e){x=C.multiply(x,C.pow(e,i))}),a=x))}return a=P(a),(a=S&&M?C.multiply(a,function(e){if(e.group===B){var t=e.value,n=ke(t)[0];if(!n)return ee(\"Unable to compute prime factors. This should not happen. Please review and report.\"),e;t=new Fe(Math.log(t)/Math.log(n)).multiply(e.power);if(t.den>e.power.den)return e;e=ue(t)?De(Math.pow(n,t)):new De(n).setPower(t)}return e}(C.multiply(S,M))):a).fname===z?(M=((S=a.group===V)?a.power.multiplier:a.power).toString(),ge(M)&&(S=S?C.divide(a.power,new De(2)):new De(a.power.divide(new Fe(2))),n=a.multiplier,(a=C.pow(a.args[0],S)).multiplier=a.multiplier.multiply(n))):!F.IGNORE_E&&a.isE()&&a.group===V&&a.power.contains(\"pi\")&&a.power.contains(F.IMAGINARY)&&i.group===Z&&(l=i.stripVar(F.IMAGINARY),a=C.add(I.cos(l),C.multiply(De.imaginary(),I.sin(l)))),a}return re(r)&&t?r=r.map(function(e){return C.pow(e,i.clone())}):ie(r)&&t?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.pow(e,i.clone()))}),r=s):e&&ie(i)&&(s=new He,i.eachElement(function(e,t,n){s.set(t,n,C.pow(r.clone(),e))}),r=s),r},this.comma=function(e,t){return(e=!(e instanceof L)?L.create(e):e).append(t),e},this.mod=t,this.slice=function(e,t){return new x(e,t)},this.equals=function(e,t){return e.group===G||e.isLinear()||K(\"Cannot set equality for \"+e.toString()),J[e.value]=t.clone(),t},this.percent=function(e){return C.divide(e,new De(100))},this.assign=function(e,n){if(e instanceof L&&n instanceof L)return e.elements.map(function(e,t){return C.assign(e,n.elements[t])}),Ve.fromArray(n.elements);if(e.parent){var t=e.parent;return t.elements[t.getter]=n,delete t.getter,t}if(e.group!==G)throw new Re(\"Cannot complete operation. Incorrect LH value for \"+e);return J[e.value]=n},this.function_assign=function(e,t){var n=e.elements.pop();return fe(n,e.elements,t)};function v(e){return new De(!0===e?1:0)}this.eq=function(e,t){return v(e.equals(t))},this.gt=function(e,t){return v(e.gt(t))},this.gte=function(e,t){return v(e.gte(t))},this.lt=function(e,t){return v(e.lt(t))},this.lte=function(e,t){return v(e.lte(t))},this.factorial=function(e){return this.symfunction(Y,[e])},this.dfactorial=function(e){return this.symfunction(W,[e])}}F.FUNCTION_MODULES.push(Te),x(Te),Math.sign=Math.sign||function(e){return 0===(e=+e)||isNaN(e)?e:0<e?1:-1},Math.cosh=Math.cosh||function(e){e=Math.exp(e);return(e+1/e)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){e=Math.exp(e);return(e-1/e)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;e=Math.exp(2*e);return(e-1)/(e+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:0<e?Math.floor(e):Math.ceil(e)},ke(314146179365),O.getExpression=function(e,t){\"last\"!==e&&e||(e=p.length);e=p[(e=\"first\"===e?1:e)-1];return e&&new O(e)},(O.prototype={text:function(e,t){return t=t||19,e=e||\"decimals\",this.symbol.text_?this.symbol.text_(e):Pe(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):Ge.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(re(this.symbol)&&0===this.symbol.dimensions())return this;var e,t=arguments[0],n=1;\"string\"==typeof t?e=\"%\"===t.charAt(0)?O.getExpression(t.substr(1)).text():t:t instanceof O||ne(t)?e=t.text():(e=this.symbol.text(),n--);var r=arguments[n]||{};return new O(ye(\"PARSE2NUMBER\",function(){return d.parse(e,r)},!0))},buildFunction:function(e){return Ze.build(this.symbol,e)},isNumber:function(){return oe(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return Se(d.parse(this.symbol)).isImaginary()},variables:function(){return b(this.symbol)},toString:function(){try{return ae(this.symbol)?\"[\"+this.symbol.toString()+\"]\":this.symbol.toString()}catch(e){return\"\"}},toDecimal:function(e){F.precision=e;e=Pe(this.symbol,\"decimals\");return F.precision=void 0,e},isFraction:function(){return v(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,t){return new O(this.symbol.sub(d.parse(e),d.parse(t)))},operation:function(e,t){return i(t)?t=t.symbol:ne(t)||(t=d.parse(t)),new O(d[e](this.symbol.clone(),t.clone()))},add:function(e){return this.operation(\"add\",e)},subtract:function(e){return this.operation(\"subtract\",e)},multiply:function(e){return this.operation(\"multiply\",e)},divide:function(e){return this.operation(\"divide\",e)},pow:function(e){return this.operation(\"pow\",e)},expand:function(){return new O(d.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(ae(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){ne(e)||(e=d.parse(e));try{return d.subtract(this.symbol.clone(),e).equals(0)}catch(e){return!1}},lt:function(e){ne(e)||(e=d.parse(e));try{return Se(d.subtract(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}},gt:function(e){ne(e)||(e=d.parse(e));try{return Se(d.subtract(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new O(this.symbol.getNum())},denominator:function(){return new O(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}}).toTeX=O.prototype.latex,T.prototype={fromScientific:function(e){e=String(e).toLowerCase().split(\"e\");return this.coeff=e[0],this.exponent=e[1],this},convert:function(e){var t=e.split(\".\"),n=t[0]||\"\",e=t[1]||\"\",n=T.removeLeadingZeroes(n),e=T.removeTrailingZeroes(e),t=n.length,n=n+e,e=T.leadingZeroes(n).length;this.exponent=t-(e+1);n=T.removeLeadingZeroes(n);return this.coeff=n.charAt(0)+\".\"+(n.substr(1,n.length)||\"0\"),this},round:function(e){var t,n,r=this.copy();return 0===(e=Number(e))?r.coeff=r.coeff.charAt(0):(t=this.coeff.substring(0,e+1),e=(n=this.coeff.substring(e+1,e+3)).charAt(0),4<n.charAt(1)&&e++,r.coeff=t+e),r},copy:function(){var e=new T(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){e=void 0===e?this.coeff:T.round(this.coeff,e),e=0===this.exponent&&F.SCIENTIFIC_IGNORE_INTS?this.coeff:e+\"e\"+this.exponent;return(-1===this.sign?\"-\":\"\")+e}},T.isScientific=function(e){return/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)},T.leadingZeroes=function(e){e=e.match(/^(0*).*$/);return e?e[1]:\"\"},T.removeLeadingZeroes=function(e){e=e.match(/^0*(.*)$/);return e?e[1]:\"\"},T.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):\"\"},T.round=function(e,t){e=me(e,t),t-=String(e).split(\".\").pop().length;return 0<t&&(e+=new Array(1+t).join(0)),e},T.prototype={fromScientific:function(e){e=String(e).toLowerCase().split(\"e\");return this.coeff=e[0],this.exponent=e[1],this},convert:function(e){var t=e.split(\".\"),n=t[0]||\"\",r=t[1]||\"\",n=T.removeLeadingZeroes(n),r=T.removeTrailingZeroes(r),i=n.length,e=n+r,t=T.leadingZeroes(e).length;this.exponent=i-(t+1);e=T.removeLeadingZeroes(e);this.coeff=e.charAt(0)+\".\"+(e.substr(1,e.length)||\"0\");e=this.coeff.split(\".\")[1]||\"\";return this.decp=\"0\"===e?0:e.length,this.dec=r,this.wholes=n,this},round:function(e){var t,n,r=this.copy();return 0===(e=Number(e))?r.coeff=r.coeff.charAt(0):(t=this.coeff.substring(0,e+1),e=(n=this.coeff.substring(e+1,e+3)).charAt(0),4<n.charAt(1)&&e++,r.coeff=t+e),r},copy:function(){var e=new T(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;return t=F.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&0===this.exponent&&this.decp<e?0===this.decp?this.wholes:this.coeff:(t=void 0===e?this.coeff:T.round(this.coeff,Math.min(e,this.decp||1)),0===this.exponent?t:t+\"e\"+this.exponent),(-1===this.sign?\"-\":\"\")+t}},T.isScientific=function(e){return/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)},T.leadingZeroes=function(e){e=e.match(/^(0*).*$/);return e?e[1]:\"\"},T.removeLeadingZeroes=function(e){e=e.match(/^0*(.*)$/);return e?e[1]:\"\"},T.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):\"\"},Fe.create=function(e){if(e instanceof Fe)return e;var t=\"-\"===(e=e.toString()).charAt(0),e=new Fe(e=t?e.substr(1,e.length-1):e);return t&&e.negate(),e},Fe.isFrac=function(e){return e instanceof Fe},Fe.quick=function(e,t){var n=new Fe;return n.num=new S(e),n.den=new S(t),n},Fe.simple=function(e){for(var t=String(y(e)).split(\".\"),e=t.join(\"\"),n=1,r=(t[1]||\"\").length,i=0;i<r;i++)n+=\"0\";return Fe.quick(e,n).simplify()},Fe.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new qe(\"Division by zero not allowed!\");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,n=e.den,r=this.clone(),i=r.num,e=e.num;return t.equals(n)?r.num=i.add(e):(r.num=i.multiply(n).add(e.multiply(t)),r.den=t.multiply(n)),r.simplify()},mod:function(e){var t=this.clone(),e=e.clone();return t.num=t.num.multiply(e.den),t.den=t.den.multiply(e.den),e.num=e.num.multiply(this.den),e.den=e.den.multiply(this.den),t.num=t.num.mod(e.num),t.simplify()},simplify:function(){var e=S.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new Fe;return e.num=new S(this.num),e.den=new S(this.den),e},decimal:function(e){var t=this.num.isNegative()?\"-\":\"\";if(this.num.equals(this.den))return\"1\";e=e||F.PRECISION,e++;for(var n=[],r=this.num.abs(),i=this.den,s=0;s<e;s++){var o=r.divide(i),a=r.subtract(o.multiply(i));if(n.push(o),a.equals(0))break;r=a.times(10)}var u=n.shift();if(0===n.length)return t+u.toString();if(s===e){for(var l=[],s=0;s<2;s++)l.unshift(n.pop());n.push(Math.round(l.join(\".\")))}return t+(u.toString()+\".\"+n.join(\"\"))},toDecimal:function(e){return(e=e||F.PRECISION)?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new Fe(e));e=this.qcompare(e);return e[0].equals(e[1])},absEquals:function(e){isNaN(e)||(e=new Fe(e));e=this.qcompare(e);return e[0].abs().equals(e[1])},greaterThan:function(e){isNaN(e)||(e=new Fe(e));e=this.qcompare(e);return e[0].gt(e[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new Fe(e));e=this.qcompare(e);return e[0].lt(e[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e,t=this.den;return this.num.equals(0)||(e=this.num.isNegative(),this.den=this.num.abs(),this.num=t,e&&(this.num=this.num.multiply(-1))),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return Fe.quick(S.gcd(e.num,this.num),S.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+\"/\"+this.den.toString()},valueOf:function(){return F.USE_BIG?new k(this.num.toString()).div(new k(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},De.imaginary=function(){var e=new De(F.IMAGINARY);return e.imaginary=!0,e},De.infinity=function(e){var t=new De(\"Infinity\");return-1===e&&t.negate(),t},De.shell=function(e,t){t=new De(t);return t.group=e,t.symbols={},t.length=0,t},De.unwrapSQRT=function(e,t){var n,r=e.power;return e.fname===z&&(e.isLinear()||t)&&((n=e.args[0].clone()).power=n.power.multiply(new Fe(.5)),n.multiplier=n.multiplier.multiply(e.multiplier),e=n,t&&(e.power=r.multiply(new Fe(.5)))),e},De.hyp=function(e,t){return e=e||new De(0),t=t||new De(0),d.sqrt(d.add(d.pow(e.clone(),new De(2)),d.pow(t.clone(),new De(2))))},De.toPolarFormArray=function(e){var t=e.realpart(),e=e.imagpart();return[De.hyp(t,e),t.equals(0)?d.parse(\"pi/2\"):d.trig.atan(d.divide(e,t))]},De.unwrapPARENS=function(e){if(\"\"!==e.fname)return e;var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),\"\"===e.fname?De.unwrapPARENS(t):t},De.create=function(e,t){return d.parse(\"(\"+e+\")^(\"+(t=void 0===t?1:t)+\")\")},De.prototype={getNth:function(e){var t=Se(d.pow(d.parse(this.multiplier),d.parse(e).invert())),n=d.parse(me(t));return Se(d.pow(n,d.parse(e))).equals(d.parse(this.multiplier))?n:t},isToNth:function(t){var n,e=this.getNth(t),e=ue(e);return this.group===Z?(n=!0,this.each(function(e){e.isToNth(t)||(n=!1)})):n=this.group===D||ue(d.divide(d.parse(this.power),d.parse(t))),e&&n},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group!==Z)return this.clone();var t=[],e=this.multiplier.sign();this.each(function(e){e=e.power;if(ne(e)||e.equals(1))return this.clone();t.push(e)});var n,r=new Fe(c(t)),e=this.multiplier.sign(),i=this.multiplier.clone().abs(),s=Te.ifactor(i),o=new Fe(1),a=new Fe(1);for(n in s){var u=new Fe(s[n]);u.lessThan(r)||(u=u.divide(r).subtract(new Fe(1)),a=a.multiply(new Fe(n))),o=o.multiply(d.parse(E(n)+\"^\"+E(u)).multiplier)}var l=new De(a);this.each(function(e){(e=e.clone()).power=e.power.divide(r),l=d.multiply(l,e)});i=d.symfunction($,[l]);return i.power=r,i.multiplier=e<0?o.negate():o,i},equals:function(e){return ne(e)||(e=new De(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return ne(e)||(e=new De(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return ne(e)||(e=new De(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return ne(e)||(e=new De(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return ne(e)||(e=new De(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,n=this.power;if(!ue(n)||n<0)return!1;if(t===D||t===G||this.isConstant(!0))return!0;n=b(this);if(t===Z&&1===n.length){var r=n[0];if(!r)return!0;for(s in this.symbols){var i=this.symbols[s];if(i.group===H&&!i.args[0].isConstant())return!1;if(!i.contains(r)&&!i.isConstant(!0))return!1}return!0}if(this.isComposite()||t===Z&&e){if(!e&&1<n.length)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(t,e){var n;return this.group!==j&&this.group!==G||this.value!==t?this.group===Z&&this.isLinear()?(n=new De(1),this.each(function(e){e.contains(t,!0)||(n=d.multiply(n,e.clone()))}),n.multiplier=n.multiplier.multiply(this.multiplier)):this.group!==X||this.isLinear()?this.group===X&&this.isLinear()?(n=new De(0),this.each(function(e){e.contains(t)||((e=e.clone()).multiplier=e.multiplier.multiply(this.multiplier),n=d.add(n,e))}),n.equals(0)&&(n=new De(this.multiplier))):n=this.group===V&&this.power.contains(t,!0)||this.group===H&&this.contains(t)?new De(this.multiplier):this.clone():n=new De(this.multiplier):n=new De(e?0:this.multiplier),n},toArray:function(n,r){r=r||{arr:[],add:function(e,t){var n=this.arr[t];this.arr[t]=n?d.add(n,e):e}};var e=this.group;if(e===G&&this.contains(n))r.add(new De(this.multiplier),this.power);else if(e===Z){var t=this.stripVar(n),i=d.divide(this.clone(),t.clone()),i=i.isConstant()?0:i.power;r.add(t,i)}else if(e===j&&this.value===n)this.each(function(e,t){r.add(e.stripVar(n),t)});else if(e===X)this.each(function(e){e.toArray(n,r)});else{if(this.contains(n))throw new I(\"Cannot convert to array! Exiting\");r.add(this.clone(),0)}r=r.arr;for(var s=0;s<r.length;s++)r[s]||(r[s]=new De(0));return r},hasFunc:function(e){var t=this.group===H||this.group===V;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].hasFunc(e))return!0;return!1},sub:function(t,n){t=ne(t)?t.clone():d.parse(t),n=ne(n)?n.clone():d.parse(n),t.group!==D&&t.group!==B||K(\"Cannot substitute a number. Must be a variable\");var r,e=!1,i=t.multiplier.equals(1),s=this.multiplier.clone();if(this.value===t.value&&(this.group!==j&&t.group!==j||this.group===j&&t.group===j))(i||t.multiplier.equals(this.multiplier))&&(t.isLinear()?r=n:t.power.equals(this.power)&&(r=n,e=!0),t.multiplier.equals(this.multiplier)&&(s=new Fe(1)));else if(this.group===Z||this.previousGroup===Z)r=new De(1),this.each(function(e){e=d.parse(e.sub(t,n));r=d.multiply(r,e)});else if(this.isComposite()){var o=this.clone();if(t.isComposite()&&o.isComposite()&&o.isLinear()&&t.isLinear()){var a,u=function(e,t){for(var n in e.symbols){n=e.symbols[n];if(n.isComposite()&&u(n,t)||n.equals(t))return!0}return!1};for(a in t.symbols)if(!u(o,t.symbols[a]))return o.clone();r=d.add(d.subtract(o.clone(),t),n)}else r=new De(0),o.each(function(e){r=d.add(r,e.sub(t,n))})}else if(this.group===V)r=d.parse(this.value).sub(t,n);else if(this.group===H){for(var l=[],c=0;c<this.args.length;c++){var p=this.args[c];ne(p)||(p=d.parse(p)),l.push(p.sub(t,n))}r=d.symfunction(this.fname,l)}return r?(e||(e=this.group===V?this.power.sub(t,n):d.parse(this.power),r=d.pow(r,e)),r.multiplier=r.multiplier.multiply(s),r):this.clone()},isMonomial:function(){if(this.group===G)return!0;if(this.group!==Z)return!1;for(var e in this.symbols)if(this.symbols[e].group!==G)return!1;return!0},isPi:function(){return this.group===G&&\"pi\"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return\"e\"===this.value},isSQRT:function(){return this.fname===z},isConstant:function(t,n){if(n&&this.group===Z)for(var e in this.symbols)if(this.symbols[e].isConstant(!0))return!0;if(\"functions\"===t&&this.isComposite()){var r=!0;return this.each(function(e){e.isConstant(t,n)||(r=!1)},!0),r}if(\"all\"===t&&(this.isPi()||this.isE()))return!0;if(t&&this.group===H){for(var i=0;i<this.args.length;i++)if(!this.args[i].isConstant(t))return!1;return!0}return t?oe(this):this.value===l},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new De(0);if(this.isComposite()){var t=new De(0);return this.each(function(e){t=d.add(t,e.realpart())}),t}return this.isImaginary()?new De(0):this.clone()},imagpart:function(){if(this.group===G&&this.isImaginary())return new De(this.multiplier);if(this.isComposite()){var t=new De(0);return this.each(function(e){t=d.add(t,e.imagpart())}),t}return this.group===Z?this.stripVar(F.IMAGINARY):new De(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===G)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return this.group===Z&&this.symbols[e]?this.symbols[e].isLinear(e):!1}return this.power.equals(1)},containsFunction:function(e){if(\"string\"==typeof e&&(e=[e]),this.group===H&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===D&&this.multiplier.equals(1))return this;var t,n=this.power;return this.group!==V&&e.group===D?(t=e.multiplier,this.group!==D||t.isInteger()||this.convert(B),this.power=n.equals(1)?t.clone():n.multiply(t),this.group===B&&ue(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(D))):(this.group!==V&&(n=new De(n),this.convert(V)),this.power=d.multiply(n,e)),this},setPower:function(e,t){return this.group===D&&this.multiplier.equals(1)||(this.group!==V||ne(e)?(n=!1,ne(e)&&(e.group===D?e=e.multiplier:n=!0),n=n?V:B,this.power=e,this.group===D&&n&&this.convert(n,t)):(this.group=this.previousGroup,delete this.previousGroup,this.group===D?(this.multiplier=new Fe(this.value),this.value=l):this.power=e)),this;var n},isInverse:function(){return this.group===V?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,n=e||new De(0),r=[\"value\",\"group\",\"length\",\"previousGroup\",\"imaginary\",\"fname\",\"args\",\"isInfinity\",\"scientific\"],i=r.length;if(this.symbols)for(var s in n.symbols={},this.symbols)n.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[r[t]]&&(n[r[t]]=this[r[t]]);return n.power=this.power.clone(),n.multiplier=this.multiplier.clone(),this.isConversion&&(n.isConversion=this.isConversion),this.isUnit&&(n.isUnit=this.isUnit),n},toUnitMultiplier:function(e){return this.multiplier.num=new S(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new S(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new Fe(1)),this},each:function(e,t){if(this.symbols)for(var n in this.symbols){var r=this.symbols[n];if(r.group===j&&t)for(var i in r.symbols)e.call(n,r.symbols[i],i);else e.call(this,r,n)}else e.call(this,this,this.value)},valueOf:function(){return this.group===D?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:Pe(this,\"decimals\")},contains:function(e,t){e=String(e);var n=this.group;if(this.value===e)return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(n===H||this.previousGroup===H)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(n===V){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==X&&this.group!==j||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),ne(this.power)?this.power.negate():this.group===Z&&t?this.each(function(e){return e.invert()}):this.power&&this.group!==D&&this.power.negate(),this},distributeMultiplier:function(e){e=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&e&&this.group!==Z&&!this.multiplier.equals(1)){for(var t in this.symbols){t=this.symbols[t];t.multiplier=t.multiplier.multiply(this.multiplier),t.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e,t=this.power;for(e in this.symbols){var n=this.symbols[e];n.group===V?n.power=d.multiply(n.power,new De(t)):this.symbols[e].power=this.symbols[e].power.multiply(t)}this.toLinear()}return this},convert:function(e,t){var n;return H<e?(n=this.clone(),this.symbols={},(e===Z?n:this).toUnitMultiplier(),this.group===H&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1):e===V?this.group===D&&this.multiplier.equals(1)||(this.group!==V&&(this.previousGroup=this.group),this.group===D?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=Pe(this,\"hash\"),this.group=V):e===D?(n=this.multiplier.toDecimal(),this.symbols&&(this.symbols=void 0),new De(this.group===B?n*Math.pow(this.value,this.power):n).clone(this)):e===B&&this.group===D&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=B),this},insert:function(e,t){var n,r;return ne(e)||K(\"Object \"+e+\" is not of type Symbol!\"),this.symbols&&(r=this.group,H<r&&(r=(n=e.keyForGroup(r))in this.symbols&&this.symbols[n],\"add\"===t?(t=n,r?(this.symbols[t]=d.add(r,e),this.symbols[t].multiplier.equals(0)&&(delete this.symbols[t],this.length--,0===this.length&&(this.convert(D),this.multiplier=new Fe(0)))):(this.symbols[n]=e,this.length++)):(e.group===B&&ue(e.power)&&e.convert(D),e.group!==V?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),r&&((e=d.multiply(we(this.symbols,n),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new De(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[n]=e,this.length++)),0===this.length&&this.convert(D),this.group!==X&&this.group!==Z||this.updateHash())),this},attach:function(e){if(ae(e)){for(var t=0;t<e.length;t++)this.insert(e[t],\"add\");return this}return this.insert(e,\"add\")},combine:function(e){if(ae(e)){for(var t=0;t<e.length;t++)this.insert(e[t],\"multiply\");return this}return this.insert(e,\"multiply\")},updateHash:function(){if(this.group!==D)if(this.group===H){for(var e=\"\",t=this.args,n=this.fname===$,r=0;r<t.length;r++)e+=(0===r?\"\":\",\")+Pe(t[r]);var i=n?\"\":this.fname;this.value=i+(n?e:E(e))}else this.group!==G&&this.group!==j&&(this.value=Pe(this,\"hash\"))},keyForGroup:function(e){var t,n=this.group;if(n===D)t=this.value;else if(n===G||n===B)t=e===j?this.power.toDecimal():this.value;else if(n===H)t=e===j?this.power.toDecimal():Pe(this,\"hash\");else{if(n===j)return t=e===Z?Pe(this,\"hash\"):e===X?this.power.equals(1)?this.value:E(Pe(this,\"hash\"))+F.POWER_OPERATOR+this.power.toDecimal():e===j?this.power.toString():this.value;n===X?(e===X&&(t=Pe(this,\"hash\")),t=e===j?this.power.toDecimal():this.value):n===Z?t=e===j?this.power.toDecimal():Pe(this,\"hash\"):n===V&&(t=e===j?Pe(this.power):Pe(this,\"hash\"))}return t},collectSymbols:function(e,t,n,r){var i=[];if(this.symbols)for(var s in this.symbols){s=this.symbols[s];!r||s.group!==j&&s.group!==X?i.push(e?e(s,t):s):i=i.concat(s.collectSymbols())}else i.push(this);return i.sort(n=null===n?void 0:n)},latex:function(e){return Ge.latex(this,e)},text:function(e){return Pe(this,e)},isOne:function(e){return this.group===D?this.multiplier[e?\"absEquals\":\"equals\"](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===X||e===j||t===j||t===X},isCombination:function(){var e=this.group,t=this.previousGroup;return e===Z||t===Z},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return ne(e)||(e=new De(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e=this.clone();if((e=this.group===Z&&this.power.lessThan(0)?d.expand(e):e).power.lessThan(0)){var t,n=d.parse(e.multiplier.den);(t=e.toUnitMultiplier()).power.negate(),t=d.multiply(n,t)}else if(e.group===Z)for(var r in t=d.parse(e.multiplier.den),e.symbols)e.symbols[r].power<0&&(t=d.multiply(t,e.symbols[r].clone().invert()));else t=d.parse(e.multiplier.den);return t},getNum:function(){var t,e=this.clone();return(e=e.group===Z&&e.power.lessThan(0)?d.expand(e):e).power.greaterThan(0)&&e.group!==Z?t=d.multiply(d.parse(e.multiplier.num),e.toUnitMultiplier()):e.group===Z?(t=d.parse(e.multiplier.num),e.each(function(e){(0<e.power||e.group===V&&0<e.power.multiplier)&&(t=d.multiply(t,e.clone()))})):t=d.parse(e.multiplier.num),t},toString:function(){return this.text()}};var Be={convert:function(e,t){var n,r,i,s;return 0===e?s=[0,1]:e<1e-6||1e20<e?(n=this.quickConversion(Number(e)))[1]<=1e20?(i=e/(r=Math.abs(e)),(s=this.fullConversion(r.toFixed((n[1]+\"\").length-1)))[0]=s[0]*i):s=n:s=this.fullConversion(e),s},quickConversion:function(e){return function(e){T.isScientific(e)&&(e=y(e));var t=1===(n=(e=(n=\"\",\"-\"===(e=(t=\"string\"!=typeof(t=e)?t.toString():t).charAt(0))?(t=t.substr(1,t.length),n=\"-\"):\"+\"===e&&(t=t.substr(1,t.length)),{sign:n,value:t})).value.split(\".\")).length?n[0]:n[0]+n[1],n=n[1]?n[1].length:0,n=`1${\"0\".repeat(n)}`;return\"0\"!==t&&(t=t.replace(/^0+/,\"\")),[e.sign+t,n]}(e)},fullConversion:function(e){for(var t=!1,n=0,r=1,i=1,s=0,o=0,a=e;!t;){1e4<++o&&(t=!0);var u=Math.floor(a),l=n+u*i,c=r+u*s,u=a-u;u<1e-16&&(t=!0),a=1/u,n=i,r=s,i=l,s=c,(Math.abs(l/c-e)<1e-16||30<o)&&(t=!0)}return[l,c]}},Ge={parser:function(){var e,t=[\"classes\",\"setOperator\",\"getOperators\",\"getBrackets\",\"tokenize\",\"toRPN\",\"tree\",\"units\"],n=new P;for(e in n)-1===t.indexOf(e)&&delete n[e];return n.setOperator({precedence:8,operator:\"\\\\\",action:\"slash\",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.setOperator({precedence:8,operator:\"\\\\,\",action:\"slash_comma\",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.getBrackets()[\"{\"].maps_to=void 0,n}(),space:\"~\",dot:\" \\\\cdot \",latex:function(e,t){if((e=e.clone?e.clone():e)instanceof d.classes.Collection&&(e=e.elements),ae(e)){for(var n=[],r=0;r<e.length;r++){var i=e[r];ne(i)||(i=d.parse(i)),n.push(this.latex(i,t))}return this.brackets(n.join(\", \"),\"square\")}if(ie(e)){for(var s=\"\\\\begin{pmatrix}\\n\",r=0;r<e.elements.length;r++){for(var o=[],a=e.elements[r],u=0;u<a.length;u++)o.push(this.latex(a[u],t));s+=o.join(\" & \"),r<e.elements.length-1&&(s+=\"\\\\\\\\\\n\")}return s+=\"\\\\end{pmatrix}\"}if(re(e)){for(s=\"\\\\left[\",r=0;r<e.elements.length;r++)s+=this.latex(e.elements[r],t)+\" \"+(r!==e.elements.length-1?\",\\\\,\":\"\");return s+=\"\\\\right]\"}if(se(e)){for(s=\"\\\\{\",r=0;r<e.elements.length;r++)s+=this.latex(e.elements[r],t)+\" \"+(r!==e.elements.length-1?\",\\\\,\":\"\");return s+=\"\\\\}\"}var l,c=\"decimal\"===t||\"decimals\"===t,p=(e=e.clone()).power,f=A(p),h=e.multiplier.lessThan(0);if(e.group===B&&c)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),l=c?[String(e.multiplier.toDecimal()),\"\"]:[e.multiplier.num,e.multiplier.den];var m,g=this.value(e,f,t,h);f&&p.negate(),c?(m=ne(p)?Ge.latex(p,t):String(p.toDecimal()),\"1\"===String(m)&&(m=\"\")):m=ne(p)?this.latex(p,t):this.formatFrac(p,!0);p=[\"\",\"\"];return p[f?1:0]=m,((h?\"-\":\"\")+this.set(l,g,p,e.group===Z)).replace(/\\+\\-/gi,\"-\")},greek:{alpha:\"\\\\alpha\",beta:\"\\\\beta\",gamma:\"\\\\gamma\",delta:\"\\\\delta\",epsilon:\"\\\\epsilon\",zeta:\"\\\\zeta\",eta:\"\\\\eta\",theta:\"\\\\theta\",iota:\"\\\\iota\",kappa:\"\\\\kappa\",lambda:\"\\\\lambda\",mu:\"\\\\mu\",nu:\"\\\\nu\",xi:\"\\\\xi\",omnikron:\"\\\\omnikron\",pi:\"\\\\pi\",rho:\"\\\\rho\",sigma:\"\\\\sigma\",tau:\"\\\\tau\",upsilon:\"\\\\upsilon\",phi:\"\\\\phi\",chi:\"\\\\chi\",psi:\"\\\\psi\",omega:\"\\\\omega\",Gamma:\"\\\\Gamma\",Delta:\"\\\\Delta\",Epsilon:\"\\\\Epsilon\",Theta:\"\\\\Theta\",Lambda:\"\\\\Lambda\",Xi:\"\\\\Xi\",Pi:\"\\\\Pi\",Sigma:\"\\\\Sigma\",Phi:\"\\\\Phi\",Psi:\"\\\\Psi\",Omega:\"\\\\Omega\"},symbols:{arccos:\"\\\\arccos\",cos:\"\\\\cos\",csc:\"\\\\csc\",exp:\"\\\\exp\",ker:\"\\\\ker\",limsup:\"\\\\limsup\",min:\"\\\\min\",sinh:\"\\\\sinh\",arcsin:\"\\\\arcsin\",cosh:\"\\\\cosh\",deg:\"\\\\deg\",gcd:\"\\\\gcd\",lg:\"\\\\lg\",ln:\"\\\\ln\",Pr:\"\\\\Pr\",sqrt:\"\\\\sqrt\",sup:\"\\\\sup\",arctan:\"\\\\arctan\",cot:\"\\\\cot\",det:\"\\\\det\",hom:\"\\\\hom\",lim:\"\\\\lim\",log:\"\\\\log\",LN:\"\\\\LN\",sec:\"\\\\sec\",tan:\"\\\\tan\",arg:\"\\\\arg\",coth:\"\\\\coth\",dim:\"\\\\dim\",inf:\"\\\\inf\",liminf:\"\\\\liminf\",max:\"\\\\max\",sin:\"\\\\sin\",tanh:\"\\\\tanh\"},value:function(n,e,r,t){var i,s,o,a,u,l,c=n.group,p=n.previousGroup,f=[\"\",\"\"],h=e?1:0;if(n.isInfinity)f[h]=\"\\\\infty\";else if(c===G||c===B||p===G||p===B||p===D){(x=this.formatSubscripts(n.value)).replace&&(x=x.replace(/(.+)_$/,\"$1\\\\_\"));var m=String(x).split(\"_\"),e=this.greek[m[0]];e&&(m[0]=e,x=m.join(\"_\")),(n=this.symbols[m[0]])&&(m[0]=n,x=m.join(\"_\")),f[h]=x}else if(c===H||p===H){for(var g,d,v,w,y=[],m=n.fname,b=0;b<n.args.length;b++){var S,M=\"string\"==typeof(S=n.args[b])?S:this.latex(S,r);y.push(M)}m===z?f[h]=\"\\\\sqrt\"+this.braces(y.join(\",\")):m===Q?f[h]=this.brackets(y.join(\",\"),\"abs\"):m===$?f[h]=this.brackets(y.join(\",\"),\"parens\"):\"limit\"===m?f[h]=\" \\\\lim\\\\limits_{\"+y[1]+\" \\\\to \"+y[2]+\"} \"+y[0]:\"integrate\"===m?f[h]=\"\\\\int\"+this.braces(y[0])+this.braces(\"d\"+y[1]):\"defint\"===m?f[h]=\"\\\\int\\\\limits_\"+this.braces(y[1])+\"^\"+this.braces(y[2])+\" \"+y[0]+\" d\"+y[3]:m===Y||m===W?((S=n.args[0]).power.equals(1)&&(S.isComposite()||S.isCombination())&&(y[0]=this.brackets(y[0])),f[h]=y[0]+(m===Y?\"!\":\"!!\")):\"floor\"===m?f[h]=\"\\\\left \\\\lfloor\"+this.braces(y[0])+\"\\\\right \\\\rfloor\":\"ceil\"===m?f[h]=\"\\\\left \\\\lceil\"+this.braces(y[0])+\"\\\\right \\\\rceil\":m===F.LOG&&1<y.length?f[h]=\"\\\\mathrm\"+this.braces(F.LOG)+\"_\"+this.braces(y[1])+this.brackets(y[0]):m===F.LOG10?f[h]=\"\\\\mathrm\"+this.braces(F.LOG)+\"_\"+this.braces(10)+this.brackets(y[0]):\"sum\"===m?(g=y[0],d=y[1],v=y[2],w=y[3],f[h]=\"\\\\sum\\\\limits_{\"+this.braces(d)+\"=\"+this.braces(v)+\"}^\"+this.braces(w)+\" \"+this.braces(g)):\"product\"===m?(g=y[0],d=y[1],v=y[2],w=y[3],f[h]=\"\\\\prod\\\\limits_{\"+this.braces(d)+\"=\"+this.braces(v)+\"}^\"+this.braces(w)+\" \"+this.braces(g)):\"nthroot\"===m?f[h]=\"\\\\sqrt[\"+y[1]+\"]\"+this.braces(y[0]):\"mod\"===m?f[h]=y[0]+\" \\\\bmod \"+y[1]:\"realpart\"===m?f[h]=\"\\\\operatorname{Re}\"+this.brackets(y[0]):\"imagpart\"===m?f[h]=\"\\\\operatorname{Im}\"+this.brackets(y[0]):(m=\"\"!==m?\"\\\\mathrm\"+this.braces(m.replace(/_/g,\"\\\\_\")):\"\",n.isConversion?f[h]=m+this.brackets(y.join(\"\"),\"parens\"):f[h]=m+this.brackets(y.join(\",\"),\"parens\"))}else if(n.isComposite()){for(var N=n.collectSymbols().sort(c===X||p===X?function(e,t){return t.group-e.group}:function(e,t){e=ne(e.power)?-1:e.power;return(ne(t.power)?-1:t.power)-e}),E=[],q=N.length,b=0;b<q;b++)E.push(Ge.latex(N[b],r));var x=E.join(\"+\");f[h]=n.isLinear()&&n.multiplier.equals(1)&&!t?x:this.brackets(x,\"parens\")}else c!==Z&&p!==V&&p!==Z||(c===Z&&n.distributeExponent(),i=[],s=[],o=[],a=[],l=u=0,c=function(e,t,n){if(1<n&&0<t.length)for(var r=t.length,i=0;i<r;i++){var s=t[i],o=e[s];/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(o)||/^\\\\left\\(.+\\\\right\\)$/g.test(o)||(e[s]=Ge.brackets(o,\"parens\"))}return e},n.each(function(e){var t;A(e.power)?(t=Ge.latex(e.invert(),r),l++,e.isComposite()&&(1!=n.multiplier.den&&1==Math.abs(e.power)&&(t=Ge.brackets(t,\"parens\")),o.push(i.length)),i.push(t)):(t=Ge.latex(e,r),u++,e.isComposite()&&(1!=n.multiplier.num&&1==Math.abs(e.power)&&(t=Ge.brackets(t,\"parens\")),a.push(s.length)),s.push(t))}),c(s,a,u),f[0]=s.join(this.dot),c(i,o,l),f[1]=i.join(this.dot));return f},set:function(e,t,n,r){function i(e){return/^\\\\left\\(.+\\\\right\\)$/.test(e)}var s;n=n&&this.formatP(n),r&&(s=n[0],n[0]=\"\"),t=this.merge(t,n);var o=e[0],n=e[1],e=t[0],t=t[1];e&&1===Number(o)&&(o=\"\"),1===Number(n)&&(n=\"\");e=this.join(o,e,i(e)?\"\":this.dot),t=this.join(n,t,i(t)?\"\":this.dot);if(e&&t){t=this.frac(e,t);return t=r&&s?this.brackets(t)+s:t}return e},merge:function(e,t){for(var n=[],r=0;r<2;r++)n[r]=e[r]+t[r];return n},join:function(e,t,n){return e||t?e&&!t?e:t&&!e?t:e+n+t:\"\"},formatSubscripts:function(e){for(var t=e.toString().split(\"_\"),n=\"\";1<t.length;)0<t.length&&(n=\"_\"+this.braces(t.pop()+n));return t[0]+n},formatP:function(e){for(var t=0;t<2;t++){var n=e[t];n&&(e[t]=\"^\"+this.braces(n))}return e},formatFrac:function(e,t){var n=e.num.toString(),e=e.den.toString();return t&&\"1\"===n&&\"1\"===e?\"\":\"1\"===e?n:this.frac(n,e)},frac:function(e,t){return\"\\\\frac\"+this.braces(e)+this.braces(t)},braces:function(e){return\"{\"+e+\"}\"},brackets:function(e,t){t={parens:[\"(\",\")\"],square:[\"[\",\"]\"],brace:[\"{\",\"}\"],abs:[\"|\",\"|\"],angle:[\"\\\\langle\",\"\\\\rangle\"]}[t=t||\"parens\"];return\"\\\\left\"+t[0]+e+\"\\\\right\"+t[1]},filterTokens:function(e){var t=[];ae(e)&&(t.type=e.type);for(var n=[\"\\\\\",\"left\",\"right\",\"big\",\"Big\",\"large\",\"Large\"],r=0,i=e.length;r<i;r++){var s=e[r],o=e[r+1];\"\\\\\"===s.value&&\"\\\\\"===o.value?t.push(s):ae(s)?t.push(Ge.filterTokens(s)):-1===n.indexOf(s.value)&&t.push(s)}return t},parse:function(e){function t(e){return s[void 0===e?++a:a+=e]}function n(){return Ge.parse(t())}function r(e){return e in o?o[e]:\"*\"===e&&\"&\"===s[a+1].value?(t(2),\",\"):\"&\"===e?(t(),\",\"):\"\\\\\"===e?\"],[\":e}var i=\"\",s=this.filterTokens(e),o={cdot:\"\",times:\"\",infty:\"Infinity\"},a=0;for(u=s.length;a<u;a++){var u,l,c,p,f,h,m,g=s[a];\"frac\"===g.value?i+=n()+\"/\"+n():g.value in Ge.symbols?g.value===z&&\"vector\"===s[a+1].type&&\"Set\"===s[a+2].type?(f=n(),i+=n()+\"^\"+E(\"1/\"+f)):i+=g.value+n():\"int\"===g.value?(h=n(),a++,c=r((c=t().value).substring(1,c.length)),i+=\"integrate\"+E(h+\",\"+c)):\"int_\"===g.value?(u=n(),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),\"differentialD\"===(c=\",\"===(c=t().value)?t().value:c)&&(a++,c=t().value),\"mathrm\"===c&&(a++,c=t().value),i+=\"defint\"+E(h+\",\"+u+\",\"+l+\",\"+c)):g.value&&g.value.startsWith(\"int_\")?(u=g.value.replace(\"int_\",\"\"),console.log(\"uppernow\"),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),\"differentialD\"===(c=\",\"===(c=t().value)?t().value:c)&&(a++,c=t().value),\"mathrm\"===c&&(a++,c=t().value),i+=\"defint\"+E(h+\",\"+u+\",\"+l+\",\"+c)):\"mathrm\"===g.value?i+=(h=s[++a][0].value)+n():\"sum_\"===g.value||\"prod_\"===g.value?(p=\"sum_\"===g.value?\"sum\":\"product\",m=t(),a++,f=n(),h=n(),i+=p+E([h,r(m[0]),r(m[2]),r(f)].join(\",\"))):\"lim_\"===g.value?(m=t(),i+=\"limit\"+E([n(),r(m[0]),r(m[2])].join(\",\"))):\"begin\"===g.value?(m=t(),Array.isArray(m)&&\"matrix\"===m[0].value&&(i+=\"matrix([\")):\"end\"===g.value?(m=t(),Array.isArray(m)&&\"matrix\"===m[0].value&&(i+=\"])\")):Array.isArray(g)?i+=r(Ge.parse(g)):i+=r(g.value.toString())}return E(i)}};function Ve(e){re(e)?this.elements=e.items.slice(0):ae(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function He(){var e=arguments,t=e.length,n=[];if(ie(e))for(o=0;o<t;o++)n.push(e[o].slice(0));else for(var r,i,s,o=0;o<t;o++)r=e[o],re(r)&&(r=r.elements),s=(r=!ae(r)?[r]:r).length,i&&i!==s&&K(\"Unable to create Matrix. Row dimensions do not match!\"),n.push(r),i=s;this.elements=n}function je(e){if(this.elements=[],e=!re(e)?Ve.fromArray(arguments):e)for(var t=e.elements,n=0,r=t.length;n<r;n++)this.add(t[n])}Ve.arrayPrefill=function(e,t){var n=[];t=t||0;for(var r=0;r<e;r++)n[r]=t;return n},Ve.fromArray=function(e){var t=new Ve;return t.elements=e,t},Ve.fromSet=function(e){return Ve.fromArray(e.elements)},Ve.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){ne(t)||(t=new De(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return ye(\"SAFE\",function(){return d.pow(this.dot(this.clone()),new De(.5))},void 0,this)},eql:function(e){var t=this.elements.length,n=e.elements||e;if(t!==n.length)return!1;do{if(Math.abs(d.subtract(this.elements[t-1],n[t-1]).valueOf())>PRECISION)return!1}while(--t);return!0},clone:function(){for(var e=new Ve,t=this.elements.length,n=0;n<t;n++)e.elements.push(this.elements[n].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(n){var r=[];return this.each(function(e,t){r.push(n(e,t))}),new Ve(r)},each:function(e){for(var t,n=this.elements.length,r=n;e(this.elements[t=r-n],1+t),--n;);},toUnitVector:function(){return ye(\"SAFE\",function(){var t=this.modulus();return 0===t.valueOf()?this.clone():this.map(function(e){return d.divide(e,t)})},void 0,this)},angleFrom:function(o){return ye(\"SAFE\",function(){var n=o.elements||o;if(this.elements.length!==n.length)return null;var r=new De(0),i=new De(0),s=new De(0);this.each(function(e,t){r=d.add(r,d.multiply(e,n[t-1])),i=d.add(i,d.multiply(e,e)),s=d.add(s,d.multiply(n[t-1],n[t-1]))});var i=d.pow(i,new De(.5)),s=d.pow(s,new De(.5)),e=d.multiply(i,s);if(0===e.valueOf())return null;var t=d.divide(r,e),e=t.valueOf();return e<-1&&(t=-1),1<e&&(t=1),new De(Math.acos(t))},void 0,this)},isParallelTo:function(e){e=this.angleFrom(e).valueOf();return null===e?null:e<=PRECISION},isAntiparallelTo:function(e){e=this.angleFrom(e).valueOf();return null===e?null:Math.abs(e-Math.PI)<=PRECISION},isPerpendicularTo:function(e){e=this.dot(e);return null===e?null:Math.abs(e)<=PRECISION},add:function(e){return ye(\"SAFE\",function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map(function(e,t){return d.add(e,n[t-1])})},void 0,this)},subtract:function(e){return ye(\"SAFE\",function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map(function(e,t){return d.subtract(e,n[t-1])})},void 0,this)},multiply:function(t){return this.map(function(e){return e.clone()*t.clone()})},x:function(e){return this.multiply(e)},dot:function(r){return ye(\"SAFE\",function(){var e=r.elements||r,t=new De(0),n=this.elements.length;if(n!==e.length)return null;for(;t=d.add(t,d.multiply(this.elements[n-1],e[n-1])),--n;);return t},void 0,this)},cross:function(e){var t=e.elements||e;if(3!==this.elements.length||3!==t.length)return null;var n=this.elements;return ye(\"SAFE\",function(){return new Ve([d.subtract(d.multiply(n[1],t[2]),d.multiply(n[2],t[1])),d.subtract(d.multiply(n[2],t[0]),d.multiply(n[0],t[2])),d.subtract(d.multiply(n[0],t[1]),d.multiply(n[1],t[0]))])},void 0,this)},max:function(){for(var e,t=0,n=this.elements.length,r=n;e=r-n,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e]),--n;);return t},magnitude:function(){var t=new De(0);return this.each(function(e){t=d.add(t,d.pow(e,new De(2)))}),d.sqrt(t)},indexOf:function(e){for(var t,n=null,r=this.elements.length,i=r;t=i-r,null===n&&this.elements[t].valueOf()===e.valueOf()&&(n=1+t),--r;);return n},text:function(e){return Pe(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],n=0;n<this.elements.length;n++)t.push(Ge.latex.call(Ge,this.elements[n],e));return\"[\"+t.join(\", \")+\"]\"}},He.identity=function(e){for(var t=new He,n=0;n<e;n++){t.elements.push([]);for(var r=0;r<e;r++)t.set(n,r,new De(n===r?1:0))}return t},He.fromArray=function(e){function t(e){return He.apply(this,e)}return t.prototype=He.prototype,new t(e)},He.zeroMatrix=function(e,t){for(var n=new He,r=0;r<e;r++)n.elements.push(Ve.arrayPrefill(t,new De(0)));return n},(He.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(r,i){var s=new He;return this.each(function(e,t,n){s.set(t,n,r.call(s,e),i)}),s},set:function(e,t,n,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=r||ne(n)?n:new De(n)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),n=[];if(e>this.cols()||!e)return n;for(var r=0;r<t;r++)n.push(this.elements[r][e-1]);return n},eachElement:function(e){for(var t,n=this.rows(),r=this.cols(),i=0;i<n;i++)for(t=0;t<r;t++)e.call(this,this.elements[i][t],i,t)},determinant:function(){if(!this.isSquare())return null;for(var e,t=this.toRightTriangular(),n=t.elements[0][0],r=t.elements.length-1,i=r;n=d.multiply(n,t.elements[e=i-r+1][e]),--r;);return n},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows();t!==e.rows()&&K(\"Cannot augment matrix. Rows don't match.\");for(var n=0;n<t;n++)this.elements[n]=this.elements[n].concat(e.elements[n]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),n=new He,r=0;r<e;r++){n.elements[r]=[];for(var i=0;i<t;i++){var s=this.elements[r][i];n.elements[r][i]=ne(s)?s.clone():s}}return n},invert:function(){return this.isSquare()||K(\"Matrix is not square!\"),ye(\"SAFE\",function(){var e,t,n,r,i,s,o,a=this.elements.length,u=a,l=He.identity(a),c=this.augment(l).toRightTriangular(),p=c.elements[0].length,f=[];do{for(i=[],n=p,f[e=a-1]=[],s=c.elements[e][e];o=d.divide(c.elements[e][r=p-n],s.clone()),i.push(o),u<=r&&f[e].push(o),--n;);for(c.elements[e]=i,t=0;t<e;t++){for(i=[],n=p;i.push(d.subtract(c.elements[t][r=p-n].clone(),d.multiply(c.elements[e][r].clone(),c.elements[t][e].clone()))),--n;);c.elements[t]=i}}while(--a);return He.fromArray(f)},void 0,this)},toRightTriangular:function(){return ye(\"SAFE\",function(){var e,t,n,r=this.clone(),i=this.elements.length,s=i,o=this.elements[0].length;do{if(0===r.elements[t=s-i][t].valueOf())for(var a=1+t;a<s;a++)if((e=r.elements[a][t])&&0!==e.valueOf()){for(l=[],c=o;l.push(d.add(r.elements[t][n=o-c].clone(),r.elements[a][n].clone())),--c;);r.elements[t]=l;break}if(0!==r.elements[t][t].valueOf())for(a=1+t;a<s;a++){for(var u=d.divide(r.elements[a][t].clone(),r.elements[t][t].clone()),l=[],c=o;l.push((n=o-c)<=t?new De(0):d.subtract(r.elements[a][n].clone(),d.multiply(r.elements[t][n].clone(),u.clone()))),--c;);r.elements[a]=l}}while(--i);return r},void 0,this)},transpose:function(){var e,t,n,r=this.elements.length,i=this.elements[0].length,s=new He,o=i;do{for(s.elements[e=i-o]=[],t=r;s.elements[e][n=r-t]=this.elements[n][e].clone(),--t;);}while(--o);return s},canMultiplyFromLeft:function(e){e=(ie(e)?e.elements:e).length;return this.elements[0].length===e},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(g){return ye(\"SAFE\",function(){var e=g.elements||g;if(!this.canMultiplyFromLeft(e)){if(this.sameSize(g)){for(var t=new He,n=this.rows(),r=0;r<n;r++){var i=d.multiply(new Ve(this.elements[r]),new Ve(g.elements[r]));t.elements[r]=i.elements}return t}return null}var s,o,a,u,l,c=this.elements.length,p=c,f=e[0].length,h=this.elements[0].length,m=[];do{m[r=p-c]=[],s=f;do{for(o=f-s,a=new De(0),u=h;a=d.add(a,d.multiply(this.elements[r][l=h-u],e[l][o])),--u;);}while(m[r][o]=a,--s)}while(--c);return He.fromArray(m)},void 0,this)},add:function(i,s){var o=new He;return this.sameSize(i)&&this.eachElement(function(e,t,n){var r=d.add(e.clone(),i.elements[t][n].clone());s&&(r=s.call(o,r,e,i.elements[t][n])),o.set(t,n,r)}),o},subtract:function(i,s){var o=new He;return this.sameSize(i)&&this.eachElement(function(e,t,n){var r=d.subtract(e.clone(),i.elements[t][n].clone());s&&(r=s.call(o,r,e,i.elements[t][n])),o.set(t,n,r)}),o},negate:function(){return this.each(function(e){return e.negate()}),this},toVector:function(){if(1!==this.rows()&&1!==this.cols())return this;var e=new Ve;return e.elements=this.elements,e},toString:function(e,n){var t=this.rows(),r=[];for(var i=0;i<t;i++)r.push(\"[\"+this.elements[i].map(function(e){var t=n?e.multiplier.toDecimal():e.toString();return void 0!==e?t:\"\"}).join(\",\")+\"]\");return\"matrix\"+E(r.join(\",\"))},text:function(){return\"matrix(\"+this.elements.toString(\"\")+\")\"},latex:function(i){var s=this.cols(),o=this.elements;return ce(\"\\\\begin{vmatrix}{0}\\\\end{vmatrix}\",function(){var e,t=[];for(e in o){for(var n=[],r=0;r<s;r++)n.push(Ge.latex.call(Ge,o[e][r],i));t.push(n.join(\" & \"))}return t.join(\" \\\\cr \")})}}).each=He.prototype.eachElement,je.fromArray=function(e){function t(e){return je.apply(this,e)}return t.prototype=je.prototype,new t(e)},je.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var n=this.elements[t];if(e.equals(n))return!0}return!1},each:function(e){for(var t=this.elements,n=new je,r=0,i=t.length;r<i;r++){var s=t[r];e.call(this,s,n,r)}return n},clone:function(){var t=new je;return this.each(function(e){t.add(e.clone())}),t},union:function(e){var t=this.clone();return e.each(function(e){t.add(e)}),t},difference:function(e){var t=this.clone();return e.each(function(e){t.remove(e)}),t},remove:function(e){for(var t=0,n=this.elements.length;t<n;t++)if(this.elements[t].equals(e))return we(this.elements,t),!0;return!1},intersection:function(e){var t=new je,n=this;return e.each(function(e){n.contains(e)&&t.add(e)}),t},intersects:function(e){return 0<this.intersection(e).elements.length},is_subset:function(e){for(var t=e.elements,n=0,r=t.length;n<r;n++)if(!this.contains(t[n]))return!1;return!0},toString:function(){return\"{\"+this.elements.join(\",\")+\"}\"}};var Ze={dependencies:{_rename:{\"Math2.factorial\":\"factorial\"},factorial:{\"Math2.gamma\":Te.gamma},gamma_incomplete:{\"Math2.factorial\":Te.factorial},Li:{\"Math2.Ei\":Te.Ei,\"Math2.bigLog\":Te.bigLog,Frac:Fe},Ci:{\"Math2.factorial\":Te.factorial},Ei:{\"Math2.factorial\":Te.factorial},Si:{\"Math2.factorial\":Te.factorial},Shi:{\"Math2.factorial\":Te.factorial},Chi:{isInt:ue,nround:me,\"Math2.num_integrate\":Te.num_integrate},factor:{\"Math2.ifactor\":Te.ifactor,Symbol:De},num_integrate:{\"Math2.simpson\":Te.simpson,nround:me},fib:{even:ge}},reformat:{diff:function(e,t){var n=e.args[1].toString(),e=\"var f = \"+Ze.build(e.args[0].toString(),[n])+\";\";return t[1]+=\"var diff = \"+Te.diff.toString()+\";\",t[1]+=e,[\"diff(f)(\"+n+\")\",t]}},getProperName:function(e){return{continued_fraction:\"continuedFraction\"}[e]||e},compileDependencies:function(e,t){var n,r,i=Ze.dependencies[e],s=t&&t[1]?t[1]:\"\",o=t&&t[0]?t[0]:{};for(n in i)\"object\"!=typeof i[n]&&(s+=\"var \"+(1<(r=n.split(\".\")).length?r[1]:r[0])+\"=\"+i[n]+\";\",o[n]=r.pop());return[o,s]},getArgsDeps:function(e,t){for(var n=e.args,r=0;r<n.length;r++)e.args[r].each(function(e){e.group===H&&(t=Ze.compileDependencies(e.fname,t))});return t},build:function(e,t){e=ye(\"PARSE2NUMBER\",function(){return d.parse(e)},!0);var n=b(e),l=[],c=[],p=function(s,o){\"\"===s.fname&&(s=De.unwrapPARENS(s)),o=o||[];function e(e){return e=e in Math?\"Math.\"+e:(e=Ze.getProperName(e),-1===l.indexOf(e)&&(o.push(\"var \"+e+\" = \"+Te[e].toString()+\"; \"),l.push(e)),e),e+=E(s.args.map(function(e){return p(e,o)[0]}).join(\",\"))}var t,n,r=[],i=s.group,a=\"\",u=function(e){var t,e=e===Z?\"*\":\"+\",n=[];for(t in s.symbols){var r=s.symbols[t],i=p(r,o)[0];r.isComposite()&&(i=E(i)),n.push(i)}e=n.join(e);return e=e&&!s.multiplier.equals(1)?E(e):e};return i===D?r.push(s.multiplier.toDecimal()):s.multiplier.equals(-1)?a=\"-\":s.multiplier.equals(1)||r.push(s.multiplier.toDecimal()),i===G||i===B?t=s.value:i===H?(c=Ze.compileDependencies(s.fname,c),c=Ze.getArgsDeps(s,c),t=Ze.reformat[s.fname]?(n=Ze.reformat[s.fname](s,c),c=n[1],n[0]):e(s.fname)):i===V?(i=s.previousGroup)===D||i===G?t=s.value:i===H?(t=e(s.fname),c=Ze.compileDependencies(s.fname,c),c=Ze.getArgsDeps(s,c)):t=u(s.previousGroup):t=u(s.group),s.group===D||s.power.equals(1)||(u=p(d.parse(s.power)),o.push(u[1]),t=\"Math.pow\"+E(t+\",\"+u[0])),t&&r.push(a+t),[r.join(\"*\"),o.join(\"\").replace(/\\n+\\s+/g,\" \")]};t&&(n=t);var r,i=p(e);for(r in c[0]){var s=c[0][r];i[1]=i[1].replace(r,s),c[1]=c[1].replace(r,s)}return new Function(n,(c[1]||\"\")+i[1]+\" return \"+i[0]+\";\")}};x(d.CONSTANTS),x(d.functions),d.initConstants(),d.error||(d.error=K),F.LOG_FNS={log:d.functions.log,log10:d.functions.log10};function Xe(n,e,r,t){var i=!1,s=/^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(n);return s?nerdamer.setFunction(s[1],s[2].split(\",\"),s[3]):(n instanceof O&&(n=n.toString()),(r=!ae(r)?void 0===r?[]:[r]:r).forEach(function(e){var t;\"numer\"!==e?(t=d.functions[r])&&1===t[1]&&(n=`${e}(${n})`):i=!0}),s=ye(\"PARSE2NUMBER\",function(){return d.parse(n,e)},i||F.PARSE2NUMBER),t?p[t-1]=s:p.push(s),new O(s))}var x={allSame:w,allNumeric:function(e){for(var t=0;t<e.length;t++)if(!te(e[t]))return!1;return!0},arguments2Array:be,arrayAddSlices:function(e,t){t=t||20;var n=[];n.push(e[0]);for(var r=0;r<e.length-1;r++)for(var i=e[r],s=(e[r+1]-i)/t,o=0;o<t;o++)n.push(i+=s);return n},arrayClone:function(e){for(var t=[],n=e.length,r=0;r<n;r++)t[r]=e[r].clone();return t},arrayMax:function(e){return Math.max.apply(void 0,e)},arrayMin:c,arrayEqual:function(e,t){if(e.sort(),t.sort(),e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0},arrayUnique:a,arrayGetVariables:function(e){for(var t=b(e[0],null,null,!0),n=1,r=e.length;n<r;n++)t=t.concat(b(e[n]));return t=a(t).sort()},arraySum:function(e,t){for(var n=new De(0),r=0;r<e.length;r++)var i=e[r],n=d.add(n,ne(i)?i:d.parse(i));return t?Number(n):n},block:ye,build:Ze.build,clearU:function(e){e=f.indexOf(e);-1!==e&&(f[e]=void 0)},comboSort:function(e,t){for(var n=e.length,r=[],i=0;i<e.length;i++)r.push([e[i],t[i]]);r.sort(function(e,t){return e[0]-t[0]});for(var s=[],o=[],i=0;i<n;i++)s.push(r[i][0]),o.push(r[i][1]);return[s,o]},compare:function(e,t,n){for(var r,i={},s=0;s<n.length;s++)i[n[s]]=new De(Math.floor(5*Math.random())+1);return ye(\"PARSE2NUMBER\",function(){r=d.parse(e,i).equals(d.parse(t,i))}),r},convertToVector:C,customError:n,customType:function(e){return void 0!==e&&e.custom},decompose_fn:he,each:s,evaluate:Se,even:ge,evenFraction:de,fillHoles:function(e,t){t=t||e.length;for(var n=0;n<t;n++)e[n]||(e[n]=new De(0));return e},firstObject:pe,format:ce,generatePrimes:u,getCoeffs:function(e,r,t){var i=[];e.each(function(e){var t,n=e.contains(r)?(t=e.stripVar(r),d.divide(e.clone(),t.clone()).power.toDecimal()):(t=e,0),e=i[n];i[n]=e?d.add(e,t):t},!0);for(var n=0;n<i.length;n++)i[n]||(i[n]=new De(0));return i},getU:function(e){for(var t=\"u\",n=0,r=b(e);-1!==f.indexOf(t)||-1!==r.indexOf(t);)t=\"u\"+n++;for(var i=0,s=f.length;i<=s;i++)if(!f[i]){f[i]=t;break}return t},importFunctions:function(){var e,t={};for(e in d.functions)t[e]=d.functions[e][0];return t},inBrackets:E,isArray:ae,isExpression:i,isFraction:v,isInt:ue,isMatrix:ie,isNegative:A,isNumericSymbol:oe,isPrime:g,isReserved:r,isSymbol:ne,isVariableSymbol:function(e){return e.group===G&&e.multiplier.equals(1)&&e.power.equals(1)},isVector:re,keys:q,knownVariable:function(e,t){var n={};return n[e]=t,n},nroots:function(e){var t,n;if(e.group===H&&\"\"===e.fname?(t=De.unwrapPARENS(d.parse(e).toLinear()),n=d.parse(e.power)):e.group===B&&(t=d.parse(e.value),n=d.parse(e.power)),t&&n&&t.group===D&&n.group===D&&t.multiplier.isNegative()){for(var r=[],i=De.toPolarFormArray(Se(e))[0],s=d.arg(t),o=n.multiplier.den.toString(),a=n.multiplier.num.toString(),u=0;u<o;u++){var l=Se(d.parse(ce(\"(({0})+2*pi*({1}))/({2})\",s,u,o))).multiplier.toDecimal();r.push(Se(d.parse(ce(\"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\",i,o,F.IMAGINARY,l,a))))}return Ve.fromArray(r)}return e.isConstant(!0,!0)?(t=e.sign(),s=Se(e.abs()),r=[(n=d.sqrt(s)).clone(),n.negate()],t<0&&(r=r.map(function(e){return d.multiply(e,De.imaginary())}))):r=[d.parse(e)],Ve.fromArray(r)},remove:we,reserveNames:x,range:function(e,t,n){var r=[];n=n||1;for(var i=e;i<=t;i++)r.push(i*n);return r},round:me,sameSign:function(e,t){return e<0==t<0},scientificToDecimal:y,separate:N,stringReplace:function(e,t,n,r){return e.substr(0,t)+r+e.substr(n,e.length)},text:Pe,validateName:m,variables:b,warn:ee},$e={groups:t,Symbol:De,Expression:O,Frac:Fe,Vector:Ve,Matrix:He,Parser:P,Scientific:T,Fraction:Be,Math2:Te,LaTeX:Ge,Utils:x,PARSER:d,PARENTHESIS:$,Settings:F,err:K,bigInt:S,bigDec:k,exceptions:e};return Xe.rpn=function(e){return d.tokenize(d.toRPN(e))},Xe.convertToLaTeX=function(e,t){return d.toTeX(e,t)},Xe.convertFromLaTeX=function(e){e=Ge.parse(d.tokenize(e));return new O(d.parse(e))},Xe.version=function(t){if(t)try{return $e[t].version}catch(e){return\"No module named \"+t+\" found!\"}return\"1.1.12\"},Xe.getWarnings=function(){return h},Xe.setConstant=function(e,t){if(m(e),!r(e))if(\"delete\"===t||\"\"===t)delete d.CONSTANTS[e];else{if(isNaN(t))throw new I(\"Constant must be a number!\");d.CONSTANTS[e]=t}return this},Xe.getConstant=function(e){return String(d.constant[e])},Xe.setFunction=fe,Xe.getCore=function(){return $e},Xe.getExpression=Xe.getEquation=O.getExpression,Xe.reserved=function(e){return e?f:f.join(\", \")},Xe.clear=function(e,t){return\"all\"===e?p=[]:\"last\"===e?p.pop():\"first\"===e?p.shift():(e=e?e-1:p.length,!0===t?p[e]=void 0:we(p,e)),this},Xe.flush=function(){return this.clear(\"all\"),this},Xe.expressions=function(e,t,n){for(var r=e?{}:[],i=0;i<p.length;i++){var s=t?Ge.latex(p[i],n):Pe(p[i],n);e?r[i+1]=s:r.push(s)}return r},Xe.register=function(e){var t=this.getCore();if(ae(e))for(var n=0;n<e.length;n++)e&&this.register(e[n]);else if(e&&-1===F.exclude.indexOf(e.name)){if(e.dependencies)for(n=0;n<e.dependencies.length;n++)if(!t[e.dependencies[n]])throw new Error(ce(\"{0} requires {1} to be loaded!\",e.name,e.dependencies[n]));var r=e.parent,i=e.build.call(t);r&&(t[r]||(t[e.parent]={}),(\"nerdamer\"===r?this:t[r])[e.name]=i),e.visible&&(d.functions[e.name]=[i,e.numargs])}},Xe.validateName=m,Xe.validVarName=function(e){try{return m(e),-1===f.indexOf(e)}catch(e){return!1}},Xe.supported=function(){return q(d.functions)},Xe.numEquations=Xe.numExpressions=function(){return p.length},Xe.setVar=function(e,t){return m(e),e in d.CONSTANTS&&K(\"Cannot set value for constant \"+e),\"delete\"===t||\"\"===t?delete J[e]:J[e]=ne(t)?t:d.parse(t),this},Xe.getVar=function(e){return J[e]},Xe.clearVars=function(){return J={},this},Xe.load=function(e){return e.call(this),this},Xe.getVars=function(e,t){var n={};if(\"object\"===(e=e||\"text\"))n=J;else for(var r in J)\"latex\"===e?n[r]=J[r].latex(t):\"text\"===e&&(n[r]=J[r].text(t));return n},Xe.set=function(e,t){if(\"object\"==typeof e)for(var n in e)Xe.set(n,e[n]);-1!==[\"SAFE\"].indexOf(e)&&K(\"Cannot modify setting: \"+e),\"PRECISION\"===e?(k.set({precision:t}),21<(F.PRECISION=t)&&this.set(\"USE_BIG\",!0)):\"USE_LN\"===e&&!0===t?(F.LOG=\"LN\",F.LOG10=\"log\",d.functions.log=F.LOG_FNS.log10,d.functions.log[0]=function(e){return e.isConstant()?new De(Math.log10(e)):d.symfunction(F.LOG10,[e])},d.functions.LN=F.LOG_FNS.log,delete d.functions.log10):F[e]=t},Xe.get=function(e){return F[e]},Xe.api=function(e){for(var t in d.functions)t in Xe&&!e||(Xe[t]=function(n){return function(){for(var e=[].slice.call(arguments),t=0;t<e.length;t++)e[t]=d.parse(e[t]);return new O(ye(\"PARSE2NUMBER\",function(){return d.callfunction(n,e)}))}}(t))},Xe.replaceFunction=function(e,t,n){var r=d.functions[e],n=void 0===n?r[1]:n;d.functions[e]=[t.call(void 0,r[0],$e),n]},Xe.setOperator=function(e,t){d.setOperator(e,t)},Xe.getOperator=function(e){return d.getOperator(e)},Xe.aliasOperator=function(e,t){d.aliasOperator(e,t)},Xe.tree=function(e){return d.tree(d.toRPN(d.tokenize(e)))},Xe.htmlTree=function(e,t){return'<div class=\"tree\">\\n    <ul>\\n        <li>\\n'+this.tree(e).toHTML(3,t)+\"\\n        </li>\\n    </ul>\\n</div>\"},Xe.addPeeker=function(e,t){d.peekers[e]&&d.peekers[e].push(t)},Xe.removePeeker=function(e,t){we(d.peekers[e],t)},Xe.parse=function(e){return String(e).split(\";\").map(function(e){return d.parse(e)})},Xe.api(),Xe}({bigInt:function(){var Q=function(o){\"use strict\";var v=1e7,l=7,t=9007199254740992,n=m(t),c=Math.log(t);function u(e,t){return void 0===e?u[0]:void 0===t||10==+t?z(e):V(e,t)}function p(e,t){this.value=e,this.sign=t,this.isSmall=!1}function f(e){this.value=e,this.sign=e<0,this.isSmall=!0}function h(e){return-t<e&&e<t}function m(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function w(e){g(e);var t=e.length;if(t<4&&C(e,n)<0)switch(t){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*v;default:return e[0]+(e[1]+e[2]*v)*v}return e}function g(e){for(var t=e.length;0===e[--t];);e.length=t+1}function y(e){for(var t=new Array(e),n=-1;++n<e;)t[n]=0;return t}function d(e){return 0<e?Math.floor(e):Math.ceil(e)}function r(e,t){for(var n,r=e.length,i=t.length,s=new Array(r),o=0,a=v,u=0;u<i;u++)n=e[u]+t[u]+o,s[u]=n-(o=a<=n?1:0)*a;for(;u<r;)n=e[u]+o,s[u++]=n-(o=n===a?1:0)*a;return 0<o&&s.push(o),s}function b(e,t){return e.length>=t.length?r(e,t):r(t,e)}function i(e,t){for(var n,r=e.length,i=new Array(r),s=v,o=0;o<r;o++)n=e[o]-s+t,t=Math.floor(n/s),i[o]=n-t*s,t+=1;for(;0<t;)i[o++]=t%s,t=Math.floor(t/s);return i}function S(e,t){for(var n,r=e.length,i=t.length,s=new Array(r),o=0,a=v,u=0;u<i;u++)o=(n=e[u]-o-t[u])<0?(n+=a,1):0,s[u]=n;for(u=i;u<r;u++){if(!((n=e[u]-o)<0)){s[u++]=n;break}n+=a,s[u]=n}for(;u<r;u++)s[u]=e[u];return g(s),s}function s(e,t,n){for(var r,i=e.length,s=new Array(i),o=-t,a=v,u=0;u<i;u++)r=e[u]+o,o=Math.floor(r/a),s[u]=(r%=a)<0?r+a:r;return\"number\"==typeof(s=w(s))?new f(s=n?-s:s):new p(s,n)}function M(e,t){for(var n,r,i=e.length,s=t.length,o=y(i+s),a=v,u=0;u<i;++u)for(var l=e[u],c=0;c<s;++c)n=l*t[c]+o[u+c],r=Math.floor(n/a),o[u+c]=n-r*a,o[u+c+1]+=r;return g(o),o}function N(e,t){for(var n,r=e.length,i=new Array(r),s=v,o=0,a=0;a<r;a++)n=e[a]*t+o,o=Math.floor(n/s),i[a]=n-o*s;for(;0<o;)i[a++]=o%s,o=Math.floor(o/s);return i}function E(e,t){for(var n=[];0<t--;)n.push(0);return n.concat(e)}function a(e,t,n){return new p(e<v?N(t,e):M(t,m(e)),n)}function q(e){for(var t,n=e.length,r=y(n+n),i=v,s=0;s<n;s++){for(var o,a=0-(o=e[s])*o,u=s;u<n;u++)t=o*e[u]*2+r[s+u]+a,a=Math.floor(t/i),r[s+u]=t-a*i;r[s+n]=a}return g(r),r}function x(e,t){for(var n,r=e.length,i=y(r),s=v,o=0,a=r-1;0<=a;--a)o=(n=o*s+e[a])-(n=d(n/t))*t,i[a]=0|n;return[i,0|o]}function A(e,t){var n=z(t),r=e.value,i=n.value;if(0===i)throw new Error(\"Cannot divide by zero\");if(e.isSmall)return n.isSmall?[new f(d(r/i)),new f(r%i)]:[u[0],e];if(n.isSmall){if(1===i)return[e,u[0]];if(-1==i)return[e.negate(),u[0]];var s=Math.abs(i);if(s<v){var o=w((a=x(r,s))[0]),t=a[1];return e.sign&&(t=-t),\"number\"==typeof o?[new f(o=e.sign!==n.sign?-o:o),new f(t)]:[new p(o,e.sign!==n.sign),new f(t)]}i=m(s)}s=C(r,i);if(-1===s)return[u[0],e];if(0===s)return[u[e.sign===n.sign?1:-1],u[0]];o=(a=(r.length+i.length<=200?function(e,t){var n,r,i,s,o,a,u,l=e.length,c=t.length,p=v,f=y(t.length),h=t[c-1],m=Math.ceil(p/(2*h)),g=N(e,m),d=N(t,m);for(g.length<=l&&g.push(0),d.push(0),h=d[c-1],r=l-c;0<=r;r--){for(n=p-1,g[r+c]!==h&&(n=Math.floor((g[r+c]*p+g[r+c-1])/h)),a=d.length,o=s=i=0;o<a;o++)i+=n*d[o],u=Math.floor(i/p),s+=g[r+o]-(i-u*p),i=u,s=s<0?(g[r+o]=s+p,-1):(g[r+o]=s,0);for(;0!==s;){for(--n,o=i=0;o<a;o++)i=(i+=g[r+o]-p+d[o])<0?(g[r+o]=i+p,0):(g[r+o]=i,1);s+=i}f[r]=n}return g=x(g,m)[0],[w(f),w(g)]}:function(e,t){for(var n,r,i,s,o,a=e.length,u=t.length,l=[],c=[],p=v;a;)if(c.unshift(e[--a]),g(c),C(c,t)<0)l.push(0);else{for(i=c[(r=c.length)-1]*p+c[r-2],s=t[u-1]*p+t[u-2],u<r&&(i=(i+1)*p),n=Math.ceil(i/s);!(C(o=N(t,n),c)<=0)&&--n;);l.push(n),c=S(c,o)}return l.reverse(),[w(l),w(c)]})(r,i))[0];var n=e.sign!==n.sign,a=a[1],e=e.sign;return[o=\"number\"==typeof o?new f(o=n?-o:o):new p(o,n),a=\"number\"==typeof a?new f(a=e?-a:a):new p(a,e)]}function C(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;0<=n;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function L(e){e=e.abs();return!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function I(e,t){for(var n,r,i,s=e.prev(),o=s,a=0;o.isEven();)o=o.divide(2),a++;e:for(r=0;r<t.length;r++)if(!e.lesser(t[r])&&!(i=Q(t[r]).modPow(o,e)).equals(u[1])&&!i.equals(s)){for(n=a-1;0!=n;n--){if((i=i.square().mod(e)).isUnit())return!1;if(i.equals(s))continue e}return!1}return!0}p.prototype=Object.create(u.prototype),f.prototype=Object.create(u.prototype),p.prototype.plus=p.prototype.add=function(e){var t=z(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value,e=t.value;return t.isSmall?new p(i(n,Math.abs(e)),this.sign):new p(b(n,e),this.sign)},f.prototype.plus=f.prototype.add=function(e){var t=z(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());e=t.value;if(t.isSmall){if(h(n+e))return new f(n+e);e=m(Math.abs(e))}return new p(i(e,Math.abs(n)),n<0)},p.prototype.minus=p.prototype.subtract=function(e){var t=z(e);if(this.sign!==t.sign)return this.add(t.negate());var n,r=this.value,e=t.value;return t.isSmall?s(r,Math.abs(e),this.sign):(t=r,r=e,e=this.sign,0<=C(t,r)?n=S(t,r):(n=S(r,t),e=!e),\"number\"==typeof(n=w(n))?new f(n=e?-n:n):new p(n,e))},f.prototype.minus=f.prototype.subtract=function(e){var t=z(e),n=this.value;if(n<0!==t.sign)return this.add(t.negate());e=t.value;return t.isSmall?new f(n-e):s(e,Math.abs(n),0<=n)},p.prototype.negate=function(){return new p(this.value,!this.sign)},f.prototype.negate=function(){var e=this.sign,t=new f(-this.value);return t.sign=!e,t},p.prototype.abs=function(){return new p(this.value,!1)},f.prototype.abs=function(){return new f(Math.abs(this.value))},p.prototype.times=p.prototype.multiply=function(e){var t,n=z(e),r=this.value,i=n.value,e=this.sign!==n.sign;if(n.isSmall){if(0===i)return u[0];if(1===i)return this;if(-1===i)return this.negate();if((t=Math.abs(i))<v)return new p(N(r,t),e);i=m(t)}return n=r.length,t=i.length,new p((0<-.012*n-.012*t+15e-6*n*t?function e(t,n){if((r=Math.max(t.length,n.length))<=30)return M(t,n);var r=Math.ceil(r/2),i=t.slice(r),s=t.slice(0,r),o=n.slice(r),a=n.slice(0,r),t=e(s,a),n=e(i,o),o=e(b(s,i),b(a,o)),r=b(b(t,E(S(S(o,t),n),r)),E(n,2*r));return g(r),r}:M)(r,i),e)},f.prototype._multiplyBySmall=function(e){return h(e.value*this.value)?new f(e.value*this.value):a(Math.abs(e.value),m(Math.abs(this.value)),this.sign!==e.sign)},p.prototype._multiplyBySmall=function(e){return 0===e.value?u[0]:1===e.value?this:-1===e.value?this.negate():a(Math.abs(e.value),this.value,this.sign!==e.sign)},f.prototype.times=f.prototype.multiply=function(e){return z(e)._multiplyBySmall(this)},p.prototype.square=function(){return new p(q(this.value),!1)},f.prototype.square=function(){var e=this.value*this.value;return h(e)?new f(e):new p(q(m(Math.abs(this.value))),!1)},f.prototype.divmod=p.prototype.divmod=function(e){e=A(this,e);return{quotient:e[0],remainder:e[1]}},f.prototype.over=f.prototype.divide=p.prototype.over=p.prototype.divide=function(e){return A(this,e)[0]},f.prototype.remainder=f.prototype.mod=p.prototype.remainder=p.prototype.mod=function(e){return A(this,e)[1]},p.prototype.pow=function(e){var t,n,r,i=z(e),e=this.value,s=i.value;if(0===s)return u[1];if(0===e)return u[0];if(1===e)return u[1];if(-1===e)return i.isEven()?u[1]:u[-1];if(i.sign)return u[0];if(!i.isSmall)throw new Error(\"The exponent \"+i.toString()+\" is too large.\");if(this.isSmall&&h(t=Math.pow(e,s)))return new f(d(t));for(n=this,r=u[1];!0&s&&(r=r.times(n),--s),0!==s;)s/=2,n=n.square();return r},f.prototype.pow=p.prototype.pow,f.prototype.modPow=p.prototype.modPow=function(e,t){if(e=z(e),(t=z(t)).isZero())throw new Error(\"Cannot take modPow with modulus 0\");for(var n=u[1],r=this.mod(t);e.isPositive();){if(r.isZero())return u[0];e.isOdd()&&(n=n.multiply(r).mod(t)),e=e.divide(2),r=r.square().mod(t)}return n},p.prototype.compareAbs=function(e){var t=z(e),n=this.value,e=t.value;return t.isSmall?1:C(n,e)},f.prototype.compareAbs=function(e){var t=z(e),n=Math.abs(this.value),e=t.value;return t.isSmall?n===(e=Math.abs(e))?0:e<n?1:-1:-1},p.prototype.compareTo=p.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=z(e),n=this.value,e=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:C(n,e)*(this.sign?-1:1)},f.prototype.compareTo=f.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=z(e),n=this.value,e=t.value;return t.isSmall?n==e?0:e<n?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},f.prototype.eq=f.prototype.equals=p.prototype.eq=p.prototype.equals=function(e){return 0===this.compare(e)},f.prototype.neq=f.prototype.notEquals=p.prototype.neq=p.prototype.notEquals=function(e){return 0!==this.compare(e)},f.prototype.gt=f.prototype.greater=p.prototype.gt=p.prototype.greater=function(e){return 0<this.compare(e)},f.prototype.lt=f.prototype.lesser=p.prototype.lt=p.prototype.lesser=function(e){return this.compare(e)<0},f.prototype.geq=f.prototype.greaterOrEquals=p.prototype.geq=p.prototype.greaterOrEquals=function(e){return 0<=this.compare(e)},f.prototype.leq=f.prototype.lesserOrEquals=p.prototype.leq=p.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},p.prototype.isEven=function(){return 0==(1&this.value[0])},f.prototype.isEven=function(){return 0==(1&this.value)},p.prototype.isOdd=function(){return 1==(1&this.value[0])},f.prototype.isOdd=function(){return 1==(1&this.value)},p.prototype.isPositive=function(){return!this.sign},f.prototype.isPositive=function(){return 0<this.value},p.prototype.isNegative=function(){return this.sign},f.prototype.isNegative=function(){return this.value<0},p.prototype.isUnit=function(){return!1},f.prototype.isUnit=function(){return 1===Math.abs(this.value)},p.prototype.isZero=function(){return!1},f.prototype.isZero=function(){return 0===this.value},f.prototype.isDivisibleBy=p.prototype.isDivisibleBy=function(e){var t=z(e),e=t.value;return 0!==e&&(1===e||(2===e?this.isEven():this.mod(t).equals(u[0])))},f.prototype.isPrime=p.prototype.isPrime=function(e){var t=L(this);if(t!==o)return t;var n=this.abs(),t=n.bitLength();if(t<=64)return I(n,[2,325,9375,28178,450775,9780504,1795265022]);for(var t=Math.log(2)*t,r=Math.ceil(!0===e?2*Math.pow(t,2):t),i=[],s=0;s<r;s++)i.push(Q(s+2));return I(n,i)},f.prototype.isProbablePrime=p.prototype.isProbablePrime=function(e){var t=L(this);if(t!==o)return t;for(var n=this.abs(),r=e===o?5:e,i=[],s=0;s<r;s++)i.push(Q.randBetween(2,n.minus(2)));return I(n,i)},f.prototype.modInv=p.prototype.modInv=function(e){for(var t,n,r=Q.zero,i=Q.one,s=z(e),o=this.abs();!o.equals(Q.zero);)t=s.divide(o),n=s,s=o,i=r.subtract(t.multiply(r=i)),o=n.subtract(t.multiply(o));if(!s.equals(1))throw new Error(this.toString()+\" and \"+e.toString()+\" are not co-prime\");return-1===r.compare(0)&&(r=r.add(e)),this.isNegative()?r.negate():r},p.prototype.next=function(){var e=this.value;return this.sign?s(e,1,this.sign):new p(i(e,1),this.sign)},f.prototype.next=function(){var e=this.value;return e+1<t?new f(e+1):new p(n,!1)},p.prototype.prev=function(){var e=this.value;return this.sign?new p(i(e,1),!0):s(e,1,this.sign)},f.prototype.prev=function(){var e=this.value;return-t<e-1?new f(e-1):new p(n,!0)};for(var U=[1];2*U[U.length-1]<=v;)U.push(2*U[U.length-1]);var _=U.length,R=U[_-1];function O(e){return(\"number\"==typeof e||\"string\"==typeof e)&&+Math.abs(e)<=v||e instanceof p&&e.value.length<=1}function T(e,t,n){t=z(t);for(var r=e.isNegative(),i=t.isNegative(),s=r?e.not():e,o=i?t.not():t,a=0,u=0,l=null,c=null,p=[];!s.isZero()||!o.isZero();)a=(l=A(s,R))[1].toJSNumber(),r&&(a=R-1-a),u=(c=A(o,R))[1].toJSNumber(),s=l[0],o=c[0],p.push(n(a,u=i?R-1-u:u));for(var f=0!==n(r?1:0,i?1:0)?Q(-1):Q(0),h=p.length-1;0<=h;--h)f=f.multiply(R).add(Q(p[h]));return f}f.prototype.shiftLeft=p.prototype.shiftLeft=function(e){if(!O(e))throw new Error(String(e)+\" is too large for shifting.\");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;_<=e;)t=t.multiply(R),e-=_-1;return t.multiply(U[e])},f.prototype.shiftRight=p.prototype.shiftRight=function(e){var t;if(!O(e))throw new Error(String(e)+\" is too large for shifting.\");if((e=+e)<0)return this.shiftLeft(-e);for(var n=this;_<=e;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(t=A(n,R))[1].isNegative()?t[0].prev():t[0],e-=_-1}return(t=A(n,U[e]))[1].isNegative()?t[0].prev():t[0]},f.prototype.not=p.prototype.not=function(){return this.negate().prev()},f.prototype.and=p.prototype.and=function(e){return T(this,e,function(e,t){return e&t})},f.prototype.or=p.prototype.or=function(e){return T(this,e,function(e,t){return e|t})},f.prototype.xor=p.prototype.xor=function(e){return T(this,e,function(e,t){return e^t})};var P=1<<30,k=(v&-v)*(v&-v)|P;function F(e){e=e.value,e=\"number\"==typeof e?e|P:e[0]+e[1]*v|k;return e&-e}function D(e,t){return e=z(e),t=z(t),e.greater(t)?e:t}function B(e,t){return e=z(e),t=z(t),e.lesser(t)?e:t}function G(e,t){if(e=z(e).abs(),t=z(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var n,r,i=u[1];e.isEven()&&t.isEven();)n=Math.min(F(e),F(t)),e=e.divide(n),t=t.divide(n),i=i.multiply(n);for(;e.isEven();)e=e.divide(F(e));do{for(;t.isEven();)t=t.divide(F(t))}while(e.greater(t)&&(r=t,t=e,e=r),!(t=t.subtract(e)).isZero());return i.isUnit()?e:e.multiply(i)}f.prototype.bitLength=p.prototype.bitLength=function(){var e=this;return 0===(e=e.compareTo(Q(0))<0?e.negate().subtract(Q(1)):e).compareTo(Q(0))?Q(0):Q(function e(t,n){if(n.compareTo(t)<=0){var r=e(t,n.square(n)),i=r.p,r=r.e,n=i.multiply(n);return n.compareTo(t)<=0?{p:n,e:2*r+1}:{p:i,e:2*r}}return{p:Q(1),e:0}}(e,Q(2)).e).add(Q(1))};var V=function(e,t){for(var n=e.length,r=Math.abs(t),i=0;i<n;i++){var s=e[i].toLowerCase();if(\"-\"!==s&&/[a-z0-9]/.test(s))if(/[0-9]/.test(s)&&r<=+s){if(\"1\"!==s||1!==r)throw new Error(s+\" is not a valid digit in base \"+t+\".\")}else if(s.charCodeAt(0)-87>=r)throw new Error(s+\" is not a valid digit in base \"+t+\".\")}if(2<=t&&t<=36&&n<=c/Math.log(t)){var o=parseInt(e,t);if(isNaN(o))throw new Error(s+\" is not a valid digit in base \"+t+\".\");return new f(parseInt(e,t))}t=z(t);var a=[],o=\"-\"===e[0];for(i=o?1:0;i<e.length;i++){var u=(s=e[i].toLowerCase()).charCodeAt(0);if(48<=u&&u<=57)a.push(z(s));else if(97<=u&&u<=122)a.push(z(s.charCodeAt(0)-87));else{if(\"<\"!==s)throw new Error(s+\" is not a valid character\");for(u=i;\">\"!==e[++i];);a.push(z(e.slice(u+1,i)))}}return H(a,t,o)};function H(e,t,n){for(var r=u[0],i=u[1],s=e.length-1;0<=s;s--)r=r.add(e[s].times(i)),i=i.times(t);return n?r.negate():r}function j(e){return e<=35?\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(e):\"<\"+e+\">\"}function Z(e,t){if((t=Q(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var n=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return n.unshift([1]),{value:[].concat.apply([],n),isNegative:!1}}n=!1;if(e.isNegative()&&t.isPositive()&&(n=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:n};for(var r=[],i=e;i.isNegative()||0<=i.compareAbs(t);){var i=(s=i.divmod(t)).quotient,s=s.remainder;s.isNegative()&&(s=t.minus(s).abs(),i=i.next()),r.push(s.toJSNumber())}return r.push(i.toJSNumber()),{value:r.reverse(),isNegative:n}}function X(e,t){t=Z(e,t);return(t.isNegative?\"-\":\"\")+t.value.map(j).join(\"\")}function $(e){if(h(+e)){var t=+e;if(t===d(t))return new f(t);throw new Error(\"Invalid integer: \"+e)}var n=\"-\"===e[0],r=(e=n?e.slice(1):e).split(/e/i);if(2<r.length)throw new Error(\"Invalid integer: \"+r.join(\"e\"));if(2===r.length){var i=r[1];if((i=+(i=\"+\"===i[0]?i.slice(1):i))!==d(i)||!h(i))throw new Error(\"Invalid integer: \"+i+\" is not a valid exponent.\");t=r[0],r=t.indexOf(\".\");if(0<=r&&(i-=t.length-r-1,t=t.slice(0,r)+t.slice(r+1)),i<0)throw new Error(\"Cannot include negative exponent part for integers\");e=t+=new Array(i+1).join(\"0\")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error(\"Invalid integer: \"+e);for(var s=[],o=e.length,a=l,u=o-a;0<o;)s.push(+e.slice(u,o)),(u-=a)<0&&(u=0),o-=a;return g(s),new p(s,n)}function z(e){return\"number\"==typeof e?function(e){if(h(e)){if(e!==d(e))throw new Error(e+\" is not an integer.\");return new f(e)}return $(e.toString())}(e):\"string\"==typeof e?$(e):e}p.prototype.toArray=function(e){return Z(this,e)},f.prototype.toArray=function(e){return Z(this,e)},p.prototype.toString=function(e){if(10!==(e=e===o?10:e))return X(this,e);for(var t,n=this.value,r=n.length,i=String(n[--r]);0<=--r;)t=String(n[r]),i+=\"0000000\".slice(t.length)+t;return(this.sign?\"-\":\"\")+i},f.prototype.toString=function(e){return 10!=(e=e===o?10:e)?X(this,e):String(this.value)},p.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()},p.prototype.toJSNumber=p.prototype.valueOf=function(){return parseInt(this.toString(),10)},f.prototype.toJSNumber=f.prototype.valueOf=function(){return this.value};for(var e=0;e<1e3;e++)u[e]=new f(e),0<e&&(u[-e]=new f(-e));return u.one=u[1],u.zero=u[0],u.minusOne=u[-1],u.max=D,u.min=B,u.gcd=G,u.lcm=function(e,t){return e=z(e).abs(),t=z(t).abs(),e.divide(G(e,t)).multiply(t)},u.isInstance=function(e){return e instanceof p||e instanceof f},u.randBetween=function(e,t){var n=B(e=z(e),t=z(t)),r=D(e,t).subtract(n).add(1);if(r.isSmall)return n.add(Math.floor(Math.random()*r));for(var i=[],s=!0,o=r.value.length-1;0<=o;o--){var a=s?r.value[o]:v,u=d(Math.random()*a);i.unshift(u),u<a&&(s=!1)}return i=w(i),n.add(\"number\"==typeof i?new f(i):new p(i,!1))},u.fromArray=function(e,t,n){return H(e.map(z),z(t||10),n)},u}();return\"undefined\"!=typeof module&&module.hasOwnProperty(\"exports\")&&(module.exports=Q),\"function\"==typeof define&&define.amd&&define(\"big-integer\",[],function(){return Q}),Q}(),bigDec:function(e){\"use strict\";var c,L,t,s,o=9e15,m=1e9,g=\"0123456789abcdef\",r=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",i=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",a={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-o,maxE:o,crypto:!1},y=!0,u=\"[DecimalError] \",d=u+\"Invalid argument: \",l=u+\"Precision limit exceeded\",p=u+\"crypto unavailable\",I=Math.floor,v=Math.pow,f=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,h=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,w=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,b=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,U=1e7,_=7,S=r.length-1,M=i.length-1,N={name:\"[object Decimal]\"};function E(e){var t,n,r,i=e.length-1,s=\"\",o=e[0];if(0<i){for(s+=o,t=1;t<i;t++)r=e[t]+\"\",(n=_-r.length)&&(s+=V(n)),s+=r;o=e[t],(n=_-(r=o+\"\").length)&&(s+=V(n))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function q(e,t,n){if(e!==~~e||e<t||n<e)throw Error(d+e)}function x(e,t,n,r){for(var i,s,o=e[0];10<=o;o/=10)--t;return--t<0?(t+=_,i=0):(i=Math.ceil((t+1)/_),t%=_),o=v(10,_-t),s=e[i]%o|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),n<4&&99999==s||3<n&&49999==s||5e4==s||0==s):(n<4&&s+1==o||3<n&&s+1==o/2)&&(e[i+1]/o/100|0)==v(10,t-2)-1||(s==o/2||0==s)&&0==(e[i+1]/o/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),(r||n<4)&&9999==s||!r&&3<n&&4999==s):((r||n<4)&&s+1==o||!r&&3<n&&s+1==o/2)&&(e[i+1]/o/1e3|0)==v(10,t-3)-1}function A(e,t,n){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=g.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(void 0===s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}N.absoluteValue=N.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),P(e)},N.ceil=function(){return P(new this.constructor(this),this.e+1,2)},N.comparedTo=N.cmp=function(e){var t,n,r=this,i=r.d,s=(e=new r.constructor(e)).d,o=r.s,a=e.s;if(!i||!s)return o&&a?o!==a?o:i===s?0:!i^o<0?1:-1:NaN;if(!i[0]||!s[0])return i[0]?o:s[0]?-a:0;if(o!==a)return o;if(r.e!==e.e)return r.e>e.e^o<0?1:-1;for(t=0,n=(r=i.length)<(e=s.length)?r:e;t<n;++t)if(i[t]!==s[t])return i[t]>s[t]^o<0?1:-1;return r===e?0:e<r^o<0?1:-1},N.cosine=N.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+_,r.rounding=1,n=function(e,t){var n,r=t.d.length,r=r<32?(1/Y(4,n=Math.ceil(r/3))).toString():(n=16,\"2.3283064365386962890625e-10\");e.precision+=n,t=Q(e,1,t.times(r),new e(1));for(var i=n;i--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=n,t}(r,W(r,n)),r.precision=e,r.rounding=t,P(2==s||3==s?n.neg():n,e,t,!0)):new r(1):new r(NaN)},N.cubeRoot=N.cbrt=function(){var e,t,n,r,i,s,o,a,u,l,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(y=!1,(s=c.s*v(c.s*c,1/3))&&Math.abs(s)!=1/0?r=new p(s.toString()):(n=E(c.d),(s=((e=c.e)-n.length+1)%3)&&(n+=1==s||-2==s?\"0\":\"00\"),s=v(n,1/3),e=I((e+1)/3)-(e%3==(e<0?-1:2)),(r=new p(n=s==1/0?\"5e\"+e:(n=s.toExponential()).slice(0,n.indexOf(\"e\")+1)+e)).s=c.s),o=(e=p.precision)+3;;)if(l=(u=(a=r).times(a).times(a)).plus(c),r=C(l.plus(c).times(a),l.plus(u),o+2,1),E(a.d).slice(0,o)===(n=E(r.d)).slice(0,o)){if(\"9999\"!=(n=n.slice(o-3,o+1))&&(i||\"4999\"!=n)){+n&&(+n.slice(1)||\"5\"!=n.charAt(0))||(P(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!i&&(P(a,e+1,0),a.times(a).times(a).eq(c))){r=a;break}o+=4,i=1}return y=!0,P(r,e,p.rounding,t)},N.decimalPlaces=N.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=((e=t.length-1)-I(this.e/_))*_,e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},N.dividedBy=N.div=function(e){return C(this,new this.constructor(e))},N.dividedToIntegerBy=N.divToInt=function(e){var t=this.constructor;return P(C(this,new t(e),0,1,1),t.precision,t.rounding)},N.equals=N.eq=function(e){return 0===this.cmp(e)},N.floor=function(){return P(new this.constructor(this),this.e+1,3)},N.greaterThan=N.gt=function(e){return 0<this.cmp(e)},N.greaterThanOrEqualTo=N.gte=function(e){e=this.cmp(e);return 1==e||0===e},N.hyperbolicCosine=N.cosh=function(){var e,t,n,r=(a=this).constructor,i=new r(1);if(!a.isFinite())return new r(a.s?1/0:NaN);if(a.isZero())return i;t=r.precision,n=r.rounding,r.precision=t+Math.max(a.e,a.sd())+4,r.rounding=1;for(var s,o=(o=a.d.length)<32?(1/Y(4,e=Math.ceil(o/3))).toString():(e=16,\"2.3283064365386962890625e-10\"),a=Q(r,1,a.times(o),new r(1),!0),u=e,l=new r(8);u--;)s=a.times(a),a=i.minus(s.times(l.minus(s.times(l))));return P(a,r.precision=t,r.rounding=n,!0)},N.hyperbolicSine=N.sinh=function(){var e,t,n,r=(o=this).constructor;if(!o.isFinite()||o.isZero())return new r(o);if(e=r.precision,t=r.rounding,r.precision=e+Math.max(o.e,o.sd())+4,r.rounding=1,(n=o.d.length)<3)o=Q(r,2,o,o,!0);else for(var i,s=16<(s=1.4*Math.sqrt(n))?16:0|s,o=Q(r,2,o=o.times(1/Y(5,s)),o,!0),a=new r(5),u=new r(16),l=new r(20);s--;)i=o.times(o),o=o.times(a.plus(i.times(u.times(i).plus(l))));return P(o,r.precision=e,r.rounding=t,!0)},N.hyperbolicTangent=N.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,C(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},N.inverseCosine=N.acos=function(){var e=this,t=e.constructor,n=e.abs().cmp(1),r=t.precision,i=t.rounding;return-1!==n?0===n?e.isNeg()?B(t,r,i):new t(0):new t(NaN):e.isZero()?B(t,r+4,i).times(.5):(t.precision=r+6,t.rounding=1,e=e.asin(),n=B(t,r+4,i).times(.5),t.precision=r,t.rounding=i,n.minus(e))},N.inverseHyperbolicCosine=N.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,y=!1,n=n.times(n).minus(1).sqrt().plus(n),y=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},N.inverseHyperbolicSine=N.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,y=!1,n=n.times(n).plus(1).sqrt().plus(n),y=!0,r.precision=e,r.rounding=t,n.ln())},N.inverseHyperbolicTangent=N.atanh=function(){var e,t,n,r=this,i=r.constructor;return r.isFinite()?0<=r.e?new i(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(e=i.precision,t=i.rounding,n=r.sd(),Math.max(n,e)<2*-r.e-1?P(new i(r),e,t,!0):(i.precision=n=n-r.e,r=C(r.plus(1),new i(1).minus(r),n+e,1),i.precision=e+4,i.rounding=1,r=r.ln(),i.precision=e,i.rounding=t,r.times(.5))):new i(NaN)},N.inverseSine=N.asin=function(){var e,t,n,r=this,i=r.constructor;return r.isZero()?new i(r):(e=r.abs().cmp(1),t=i.precision,n=i.rounding,-1!==e?0===e?((e=B(i,t+4,n).times(.5)).s=r.s,e):new i(NaN):(i.precision=t+6,i.rounding=1,r=r.div(new i(1).minus(r.times(r)).sqrt().plus(1)).atan(),i.precision=t,i.rounding=n,r.times(2)))},N.inverseTangent=N.atan=function(){var e,t,n,r,i,s,o,a,u,l=this,c=l.constructor,p=c.precision,f=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&p+4<=M)return(o=B(c,p+4,f).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(p+4<=M)return(o=B(c,p+4,f).times(.5)).s=l.s,o}for(c.precision=a=p+10,c.rounding=1,e=n=Math.min(28,a/_+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(y=!1,t=Math.ceil(a/_),r=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(r+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),y=!0,P(o,c.precision=p,c.rounding=f,!0)},N.isFinite=function(){return!!this.d},N.isInteger=N.isInt=function(){return!!this.d&&I(this.e/_)>this.d.length-2},N.isNaN=function(){return!this.s},N.isNegative=N.isNeg=function(){return this.s<0},N.isPositive=N.isPos=function(){return 0<this.s},N.isZero=function(){return!!this.d&&0===this.d[0]},N.lessThan=N.lt=function(e){return this.cmp(e)<0},N.lessThanOrEqualTo=N.lte=function(e){return this.cmp(e)<1},N.logarithm=N.log=function(e){var t,n,r,i,s,o,a,u,l=this.constructor,c=l.precision,p=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new l(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(1<n.length)s=!0;else{for(i=n[0];i%10==0;)i/=10;s=1!==i}if(y=!1,o=X(this,a=c+5),r=t?D(l,a+10):X(e,a),x((u=C(o,r,a,1)).d,i=c,p))do{if(o=X(this,a+=10),r=t?D(l,a+10):X(e,a),u=C(o,r,a,1),!s){+E(u.d).slice(i+1,i+15)+1==1e14&&(u=P(u,c+1,0));break}}while(x(u.d,i+=10,p));return y=!0,P(u,c,p)},N.minus=N.sub=function(e){var t,n,r,i,s,o,a,u,l,c,p,f=this,h=f.constructor;if(e=new h(e),!f.d||!e.d)return f.s&&e.s?f.d?e.s=-e.s:e=new h(e.d||f.s!==e.s?f:NaN):e=new h(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.plus(e);if(l=f.d,p=e.d,a=h.precision,u=h.rounding,!l[0]||!p[0]){if(p[0])e.s=-e.s;else{if(!l[0])return new h(3===u?-0:0);e=new h(f)}return y?P(e,a,u):e}if(n=I(e.e/_),f=I(f.e/_),l=l.slice(),s=f-n){for(o=(c=s<0)?(t=l,s=-s,p.length):(t=p,n=f,l.length),s>(r=Math.max(Math.ceil(a/_),o)+2)&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for((c=(r=l.length)<(o=p.length))&&(o=r),r=0;r<o;r++)if(l[r]!=p[r]){c=l[r]<p[r];break}s=0}for(c&&(t=l,l=p,p=t,e.s=-e.s),o=l.length,r=p.length-o;0<r;--r)l[o++]=0;for(r=p.length;s<r;){if(l[--r]<p[r]){for(i=r;i&&0===l[--i];)l[i]=U-1;--l[i],l[r]+=U}l[r]-=p[r]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=F(l,n),y?P(e,a,u):e):new h(3===u?-0:0)},N.modulo=N.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?P(new r(n),r.precision,r.rounding):(y=!1,9==r.modulo?(t=C(n,e.abs(),0,3,1)).s*=e.s:t=C(n,e,0,r.modulo,1),t=t.times(e),y=!0,n.minus(t))},N.naturalExponential=N.exp=function(){return Z(this)},N.naturalLogarithm=N.ln=function(){return X(this)},N.negated=N.neg=function(){var e=new this.constructor(this);return e.s=-e.s,P(e)},N.plus=N.add=function(e){var t,n,r,i,s,o,a,u,l=this,c=l.constructor;if(e=new c(e),!l.d||!e.d)return l.s&&e.s?l.d||(e=new c(e.d||l.s===e.s?l:NaN)):e=new c(NaN),e;if(l.s!=e.s)return e.s=-e.s,l.minus(e);if(a=l.d,u=e.d,s=c.precision,o=c.rounding,!a[0]||!u[0])return u[0]||(e=new c(l)),y?P(e,s,o):e;if(c=I(l.e/_),l=I(e.e/_),a=a.slice(),r=c-l){for(i=r<0?(n=a,r=-r,u.length):(n=u,l=c,a.length),r>(i=(c=Math.ceil(s/_))>i?c+1:i+1)&&(r=i,n.length=1),n.reverse();r--;)n.push(0);n.reverse()}for((i=a.length)-(r=u.length)<0&&(r=i,n=u,u=a,a=n),t=0;r;)t=(a[--r]=a[r]+u[r]+t)/U|0,a[r]%=U;for(t&&(a.unshift(t),++l),i=a.length;0==a[--i];)a.pop();return e.d=a,e.e=F(a,l),y?P(e,s,o):e},N.precision=N.sd=function(e){var t;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(d+e);return this.d?(t=G(this.d),e&&this.e+1>t&&(t=this.e+1)):t=NaN,t},N.round=function(){var e=this.constructor;return P(new e(this),this.e+1,e.rounding)},N.sine=N.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+_,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return Q(e,2,t,t);n=16<(n=1.4*Math.sqrt(r))?16:0|n,t=Q(e,2,t=t.times(1/Y(5,n)),t);for(var i,s=new e(5),o=new e(16),a=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(r,W(r,n)),r.precision=e,r.rounding=t,P(2<s?n.neg():n,e,t,!0)):new r(NaN)},N.squareRoot=N.sqrt=function(){var e,t,n,r,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(y=!1,r=0==(l=Math.sqrt(+o))||l==1/0?(((t=E(a)).length+u)%2==0&&(t+=\"0\"),l=Math.sqrt(t),u=I((u+1)/2)-(u<0||u%2),new c(t=l==1/0?\"5e\"+u:(t=l.toExponential()).slice(0,t.indexOf(\"e\")+1)+u)):new c(l.toString()),n=(u=c.precision)+3;;)if(r=(s=r).plus(C(o,s,n+2,1)).times(.5),E(s.d).slice(0,n)===(t=E(r.d)).slice(0,n)){if(\"9999\"!=(t=t.slice(n-3,n+1))&&(i||\"4999\"!=t)){+t&&(+t.slice(1)||\"5\"!=t.charAt(0))||(P(r,u+1,1),e=!r.times(r).eq(o));break}if(!i&&(P(s,u+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}return y=!0,P(r,u,c.rounding,e)},N.tangent=N.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=C(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,P(2==s||4==s?n.neg():n,e,t,!0)):new r(NaN)},N.times=N.mul=function(e){var t,n,r,i,s,o,a,u,l,c=this.constructor,p=this.d,f=(e=new c(e)).d;if(e.s*=this.s,!(p&&p[0]&&f&&f[0]))return new c(!e.s||p&&!p[0]&&!f||f&&!f[0]&&!p?NaN:p&&f?0*e.s:e.s/0);for(n=I(this.e/_)+I(e.e/_),(u=p.length)<(l=f.length)&&(s=p,p=f,f=s,o=u,u=l,l=o),s=[],r=o=u+l;r--;)s.push(0);for(r=l;0<=--r;){for(t=0,i=u+r;r<i;)a=s[i]+f[r]*p[i-r-1]+t,s[i--]=a%U|0,t=a/U|0;s[i]=(s[i]+t)%U|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=F(s,n),y?P(e,c.precision,c.rounding):e},N.toBinary=function(e,t){return J(this,2,e,t)},N.toDecimalPlaces=N.toDP=function(e,t){var n=this.constructor,r=new n(this);return void 0===e?r:(q(e,0,m),void 0===t?t=n.rounding:q(t,0,8),P(r,e+r.e+1,t))},N.toExponential=function(e,t){var n=this,r=n.constructor,e=void 0===e?k(n,!0):(q(e,0,m),void 0===t?t=r.rounding:q(t,0,8),k(n=P(new r(n),e+1,t),!0,e+1));return n.isNeg()&&!n.isZero()?\"-\"+e:e},N.toFixed=function(e,t){var n=this,r=n.constructor,i=void 0===e?k(n):(q(e,0,m),void 0===t?t=r.rounding:q(t,0,8),k(i=P(new r(n),e+n.e+1,t),!1,e+i.e+1));return n.isNeg()&&!n.isZero()?\"-\"+i:i},N.toFraction=function(e){var t,n,r,i,s,o,a,u,l,c,p=this,f=p.d,h=p.constructor;if(!f)return new h(p);if(u=n=new h(1),r=a=new h(0),l=(s=(t=new h(r)).e=G(f)-p.e-1)%_,t.d[0]=v(10,l<0?_+l:l),null==e)e=0<s?t:u;else{if(!(o=new h(e)).isInt()||o.lt(u))throw Error(d+o);e=o.gt(t)?0<s?t:u:o}for(y=!1,o=new h(E(f)),l=h.precision,h.precision=s=f.length*_*2;c=C(o,t,0,1,1),1!=(i=n.plus(c.times(r))).cmp(e);)n=r,r=i,u=a.plus(c.times(i=u)),a=i,t=o.minus(c.times(i=t)),o=i;return i=C(e.minus(n),r,0,1,1),a=a.plus(i.times(u)),n=n.plus(i.times(r)),a.s=u.s=p.s,p=C(u,r,s,1).minus(p).abs().cmp(C(a,n,s,1).minus(p).abs())<1?[u,r]:[a,n],h.precision=l,y=!0,p},N.toHexadecimal=N.toHex=function(e,t){return J(this,16,e,t)},N.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);if(null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:q(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(y=!1,r=C(r,e,0,t,1).times(e),y=!0,P(r)):(e.s=r.s,r=e),r},N.toNumber=function(){return+this},N.toOctal=function(e,t){return J(this,8,e,t)},N.toPower=N.pow=function(e){var t,n,r,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(v(+a,l));if((a=new u(a)).eq(1))return a;if(r=u.precision,s=u.rounding,e.eq(1))return P(a,r,s);if((t=I(e.e/_))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return i=H(u,a,n,r),e.s<0?new u(1).div(i):P(i,r,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(n=v(+a,l))&&isFinite(n)?new u(n+\"\").e:I(l*(Math.log(\"0.\"+E(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(0<t?o/0:0):(y=!1,u.rounding=a.s=1,n=Math.min(12,(t+\"\").length),(i=Z(e.times(X(a,r+n)),r)).d&&x((i=P(i,r+5,1)).d,r,s)&&(+E((i=P(Z(e.times(X(a,(t=r+10)+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=P(i,r+1,0))),i.s=o,y=!0,P(i,r,u.rounding=s))},N.toPrecision=function(e,t){var n=this,r=n.constructor,e=void 0===e?k(n,n.e<=r.toExpNeg||n.e>=r.toExpPos):(q(e,1,m),void 0===t?t=r.rounding:q(t,0,8),k(n=P(new r(n),e,t),e<=n.e||n.e<=r.toExpNeg,e));return n.isNeg()&&!n.isZero()?\"-\"+e:e},N.toSignificantDigits=N.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(q(e,1,m),void 0===t?t=n.rounding:q(t,0,8)),P(new n(this),e,t)},N.toString=function(){var e=this.constructor,e=k(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()&&!this.isZero()?\"-\"+e:e},N.truncated=N.trunc=function(){return P(new this.constructor(this),this.e+1,1)},N.valueOf=N.toJSON=function(){var e=this.constructor,e=k(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()?\"-\"+e:e};var C=function(e,t,n,r,i,s){var o,a,u,l,c,p,f,h,m,g,d,v,w,y,b,S,M,N,E,q=e.constructor,x=e.s==t.s?1:-1,A=e.d,C=t.d;if(!(A&&A[0]&&C&&C[0]))return new q(e.s&&t.s&&(A?!C||A[0]!=C[0]:C)?A&&0==A[0]||!C?0*x:x/0:NaN);for(a=s?(c=1,e.e-t.e):(s=U,I(e.e/(c=_))-I(t.e/c)),N=C.length,S=A.length,m=(x=new q(x)).d=[],u=0;C[u]==(A[u]||0);u++);if(C[u]>(A[u]||0)&&a--,null==n?(w=n=q.precision,r=q.rounding):w=i?n+(e.e-t.e)+1:n,w<0)m.push(1),p=!0;else{if(w=w/c+2|0,u=0,1==N){for(C=C[l=0],w++;(u<S||l)&&w--;u++)y=l*s+(A[u]||0),m[u]=y/C|0,l=y%C|0;p=l||u<S}else{for(1<(l=s/(C[0]+1)|0)&&(C=R(C,l,s),A=R(A,l,s),N=C.length,S=A.length),d=(g=A.slice(0,b=N)).length;d<N;)g[d++]=0;for((E=C.slice()).unshift(0),M=C[0],C[1]>=s/2&&++M;l=0,(o=O(C,g,N,d))<0?(v=g[0],1<(l=(v=N!=d?v*s+(g[1]||0):v)/M|0)?1==(o=O(f=R(C,l=s<=l?s-1:l,s),g,h=f.length,d=g.length))&&(l--,T(f,N<h?E:C,h,s)):(0==l&&(o=l=1),f=C.slice()),(h=f.length)<d&&f.unshift(0),T(g,f,d,s),-1==o&&(o=O(C,g,N,d=g.length))<1&&(l++,T(g,N<d?E:C,d,s)),d=g.length):0===o&&(l++,g=[0]),m[u++]=l,o&&g[0]?g[d++]=A[b]||0:(g=[A[b]],d=1),(b++<S||void 0!==g[0])&&w--;);p=void 0!==g[0]}m[0]||m.shift()}if(1==c)x.e=a,L=p;else{for(u=1,l=m[0];10<=l;l/=10)u++;x.e=u+a*c-1,P(x,i?n+x.e+1:n,r,p)}return x};function R(e,t,n){var r,i=0,s=e.length;for(e=e.slice();s--;)r=e[s]*t+i,e[s]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function O(e,t,n,r){var i,s;if(n!=r)s=r<n?1:-1;else for(i=s=0;i<n;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function T(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&1<e.length;)e.shift()}function P(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor;e:if(null!=t){if(!(c=e.d))return e;for(i=1,a=c[0];10<=a;a/=10)i++;if((s=t-i)<0)s+=_,u=(l=c[p=0])/v(10,i-(o=t)-1)%10|0;else if((p=Math.ceil((s+1)/_))>=(a=c.length)){if(!r)break e;for(;a++<=p;)c.push(0);l=u=0,o=(s%=_)-_+(i=1)}else{for(l=a=c[p],i=1;10<=a;a/=10)i++;u=(o=(s%=_)-_+i)<0?0:l/v(10,i-o-1)%10|0}if(r=r||t<0||void 0!==c[p+1]||(o<0?l:l%v(10,i-o-1)),u=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):5<u||5==u&&(4==n||r||6==n&&(0<s?0<o?l/v(10,i-o):0:c[p-1])%10&1||n==(e.s<0?8:7)),t<1||!c[0])return c.length=0,u?(t-=e.e+1,c[0]=v(10,(_-t%_)%_),e.e=-t||0):c[0]=e.e=0,e;if(0==s?(c.length=p,a=1,p--):(c.length=p+1,a=v(10,_-s),c[p]=0<o?(l/v(10,i-o)%v(10,o)|0)*a:0),u)for(;;){if(0==p){for(s=1,o=c[0];10<=o;o/=10)s++;for(o=c[0]+=a,a=1;10<=o;o/=10)a++;s!=a&&(e.e++,c[0]==U&&(c[0]=1));break}if(c[p]+=a,c[p]!=U)break;c[p--]=0,a=1}for(s=c.length;0===c[--s];)c.pop()}return y&&(e.e>f.maxE?(e.d=null,e.e=NaN):e.e<f.minE&&(e.e=0,e.d=[0])),e}function k(e,t,n){if(!e.isFinite())return $(e);var r,i=e.e,s=E(e.d),o=s.length;return t?(n&&0<(r=n-o)?s=s.charAt(0)+\".\"+s.slice(1)+V(r):1<o&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(e.e<0?\"e\":\"e+\")+e.e):i<0?(s=\"0.\"+V(-i-1)+s,n&&0<(r=n-o)&&(s+=V(r))):o<=i?(s+=V(i+1-o),n&&0<(r=n-i-1)&&(s=s+\".\"+V(r))):((r=i+1)<o&&(s=s.slice(0,r)+\".\"+s.slice(r)),n&&0<(r=n-o)&&(i+1===o&&(s+=\".\"),s+=V(r))),s}function F(e,t){var n=e[0];for(t*=_;10<=n;n/=10)t++;return t}function D(e,t,n){if(S<t)throw y=!0,n&&(e.precision=n),Error(l);return P(new e(r),t,1,!0)}function B(e,t,n){if(M<t)throw Error(l);return P(new e(i),t,n,!0)}function G(e){var t=e.length-1,n=t*_+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];10<=t;t/=10)n++}return n}function V(e){for(var t=\"\";e--;)t+=\"0\";return t}function H(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/_+4);for(y=!1;;){if(n%2&&K((s=s.times(t)).d,o)&&(i=!0),0===(n=I(n/2))){n=s.d.length-1,i&&0===s.d[n]&&++s.d[n];break}K((t=t.times(t)).d,o)}return y=!0,s}function j(e){return 1&e.d[e.d.length-1]}function n(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;){if(!(r=new e(t[s])).s){i=r;break}i[n](r)&&(i=r)}return i}function Z(e,t){var n,r,i,s,o,a,u,l=0,c=0,p=0,f=e.constructor,h=f.rounding,m=f.precision;if(!e.d||!e.d[0]||17<e.e)return new f(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(u=null==t?(y=!1,m):t,a=new f(.03125);-2<e.e;)e=e.times(a),p+=5;for(u+=r=Math.log(v(2,p))/Math.LN10*2+5|0,n=s=o=new f(1),f.precision=u;;){if(s=P(s.times(e),u,1),n=n.times(++c),E((a=o.plus(C(s,n,u,1))).d).slice(0,u)===E(o.d).slice(0,u)){for(i=p;i--;)o=P(o.times(o),u,1);if(null!=t)return f.precision=m,o;if(!(l<3&&x(o.d,u-r,h,l)))return P(o,f.precision=m,h,y=!0);f.precision=u+=10,n=s=a=new f(1),c=0,l++}o=a}}function X(e,t){var n,r,i,s,o,a,u,l,c,p,f,h=1,m=e,g=m.d,d=m.constructor,v=d.rounding,w=d.precision;if(m.s<0||!g||!g[0]||!m.e&&1==g[0]&&1==g.length)return new d(g&&!g[0]?-1/0:1!=m.s?NaN:g?0:m);if(c=null==t?(y=!1,w):t,d.precision=c+=10,r=(n=E(g)).charAt(0),!(Math.abs(s=m.e)<15e14))return l=D(d,c+2,w).times(s+\"\"),m=X(new d(r+\".\"+n.slice(1)),c-10).plus(l),d.precision=w,null==t?P(m,w,v,y=!0):m;for(;r<7&&1!=r||1==r&&3<n.charAt(1);)r=(n=E((m=m.times(e)).d)).charAt(0),h++;for(s=m.e,1<r?(m=new d(\"0.\"+n),s++):m=new d(r+\".\"+n.slice(1)),u=o=m=C((p=m).minus(1),m.plus(1),c,1),f=P(m.times(m),c,1),i=3;;){if(o=P(o.times(f),c,1),E((l=u.plus(C(o,new d(i),c,1))).d).slice(0,c)===E(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(D(d,c+2,w).times(s+\"\"))),u=C(u,new d(h),c,1),null!=t)return d.precision=w,u;if(!x(u.d,c-10,v,a))return P(u,d.precision=w,v,y=!0);d.precision=c+=10,l=o=m=C(p.minus(1),p.plus(1),c,1),f=P(m.times(m),c,1),i=a=1}u=l,i+=2}}function $(e){return String(e.s*e.s/0)}function z(e,t){var n,r,i;for(0<(r=(t=-1<(n=t.indexOf(\".\"))?t.replace(\".\",\"\"):t).search(/e/i))?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%_,n<0&&(r+=_),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=_;r<i;)e.d.push(+t.slice(r,r+=_));t=t.slice(r),r=_-t.length}else r-=i;for(;r--;)t+=\"0\";e.d.push(+t),y&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function Q(e,t,n,r,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/_);for(y=!1,u=n.times(n),a=new e(r);;){if(o=C(a.times(u),new e(t++*t++),l,1),a=i?r.plus(o):r.minus(o),r=C(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(r)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=r,r=o,o=s}return y=!0,o.d.length=c+1,o}function Y(e,t){for(var n=e;--t;)n*=e;return n}function W(e,t){var n=t.s<0,r=B(e,e.precision,1),i=r.times(.5);if((t=t.abs()).lte(i))return s=n?4:1,t;if((e=t.divToInt(r)).isZero())s=n?3:2;else{if((t=t.minus(e.times(r))).lte(i))return s=j(e)?n?2:3:n?4:1,t;s=j(e)?n?1:4:n?3:2}return t.minus(r).abs()}function J(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor,h=void 0!==n;if(h?(q(n,1,m),void 0===r?r=f.rounding:q(r,0,8)):(n=f.precision,r=f.rounding),e.isFinite()){for(h?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,0<=(o=(l=k(e)).indexOf(\".\"))&&(l=l.replace(\".\",\"\"),(p=new f(1)).e=l.length-o,p.d=A(k(p),10,i),p.e=p.d.length),s=a=(c=A(l,10,i)).length;0==c[--a];)c.pop();if(c[0]){if(o<0?s--:((e=new f(e)).d=c,e.e=s,c=(e=C(e,p,n,r,0,i)).d,s=e.e,u=L),o=c[n],p=i/2,u=u||void 0!==c[n+1],u=r<4?(void 0!==o||u)&&(0===r||r===(e.s<0?3:2)):p<o||o===p&&(4===r||u||6===r&&1&c[n-1]||r===(e.s<0?8:7)),c.length=n,u)for(;++c[--n]>i-1;)c[n]=0,n||(++s,c.unshift(1));for(a=c.length;!c[a-1];--a);for(o=0,l=\"\";o<a;o++)l+=g.charAt(c[o]);if(h){if(1<a)if(16==t||8==t){for(o=16==t?4:3,--a;a%o;a++)l+=\"0\";for(a=(c=A(l,i,t)).length;!c[a-1];--a);for(o=1,l=\"1.\";o<a;o++)l+=g.charAt(c[o])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(s<0?\"p\":\"p+\")+s}else if(s<0){for(;++s;)l=\"0\"+l;l=\"0.\"+l}else if(++s>a)for(s-=a;s--;)l+=\"0\";else s<a&&(l=l.slice(0,s)+\".\"+l.slice(s))}else l=h?\"0p+0\":\"0\";l=(16==t?\"0x\":2==t?\"0b\":8==t?\"0o\":\"\")+l}else l=$(e);return e.s<0?\"-\"+l:l}function K(e,t){return e.length>t&&(e.length=t,1)}function ee(e){return new this(e).abs()}function te(e){return new this(e).acos()}function ne(e){return new this(e).acosh()}function re(e,t){return new this(e).plus(t)}function ie(e){return new this(e).asin()}function se(e){return new this(e).asinh()}function oe(e){return new this(e).atan()}function ae(e){return new this(e).atanh()}function ue(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?B(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=B(this,s,1).times(.5)).s=e.s:n=t.s<0?(this.precision=s,this.rounding=1,n=this.atan(C(e,t,s,1)),t=B(this,s,1),this.precision=r,this.rounding=i,e.s<0?n.minus(t):n.plus(t)):this.atan(C(e,t,s,1)):(n=B(this,s,1).times(0<t.s?.25:.75)).s=e.s:n=new this(NaN),n}function le(e){return new this(e).cbrt()}function ce(e){return P(e=new this(e),e.e+1,2)}function pe(e){if(!e||\"object\"!=typeof e)throw Error(u+\"Object expected\");for(var t,n,r=!0===e.defaults,i=[\"precision\",1,m,\"rounding\",0,8,\"toExpNeg\",-o,0,\"toExpPos\",0,o,\"maxE\",0,o,\"minE\",-o,0,\"modulo\",0,9],s=0;s<i.length;s+=3)if(t=i[s],r&&(this[t]=a[t]),void 0!==(n=e[t])){if(!(I(n)===n&&i[s+1]<=n&&n<=i[s+2]))throw Error(d+t+\": \"+n);this[t]=n}if(t=\"crypto\",r&&(this[t]=a[t]),void 0!==(n=e[t])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(d+t+\": \"+n);if(n){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(p);this[t]=!0}else this[t]=!1}return this}function fe(e){return new this(e).cos()}function he(e){return new this(e).cosh()}function me(e,t){return new this(e).div(t)}function ge(e){return new this(e).exp()}function de(e){return P(e=new this(e),e.e+1,3)}function ve(){var e,t,n=new this(0);for(y=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return y=!0,new this(1/0);n=t}return y=!0,n.sqrt()}function we(e){return e instanceof c||e&&\"[object Decimal]\"===e.name||!1}function ye(e){return new this(e).ln()}function be(e,t){return new this(e).log(t)}function Se(e){return new this(e).log(2)}function Me(e){return new this(e).log(10)}function Ne(){return n(this,arguments,\"lt\")}function Ee(){return n(this,arguments,\"gt\")}function qe(e,t){return new this(e).mod(t)}function xe(e,t){return new this(e).mul(t)}function Ae(e,t){return new this(e).pow(t)}function Ce(e){var t,n,r,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:q(e,1,m),r=Math.ceil(e/_),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)429e7<=(i=t[s])?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(p);for(t=crypto.randomBytes(r*=4);s<r;)214e7<=(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=r/4}else for(;s<r;)a[s++]=1e7*Math.random()|0;for(r=a[--s],e%=_,r&&e&&(i=v(10,_-e),a[s]=(r/i|0)*i);0===a[s];s--)a.pop();if(s<0)a=[n=0];else{for(n=-1;0===a[0];n-=_)a.shift();for(r=1,i=a[0];10<=i;i/=10)r++;r<_&&(n-=_-r)}return o.e=n,o.d=a,o}function Le(e){return P(e=new this(e),e.e+1,this.rounding)}function Ie(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Ue(e){return new this(e).sin()}function _e(e){return new this(e).sinh()}function Re(e){return new this(e).sqrt()}function Oe(e,t){return new this(e).sub(t)}function Te(e){return new this(e).tan()}function Pe(e){return new this(e).tanh()}function ke(e){return P(e=new this(e),e.e+1,1)}return(c=function e(t){var n,r,i;function s(e){var t,n,r,i=this;if(!(i instanceof s))return new s(e);if(e instanceof(i.constructor=s))return i.s=e.s,void(y?!e.d||e.e>s.maxE?(i.e=NaN,i.d=null):e.e<s.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d&&e.d.slice()));if(\"number\"==(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;10<=n;n/=10)t++;return void(y?s.maxE<t?(i.e=NaN,i.d=null):t<s.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):z(i,e.toString())}if(\"string\"!=r)throw Error(d+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),(b.test(e)?z:function(e,t){var n,r,i,s,o,a,u,l;if(\"Infinity\"===t||\"NaN\"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(h.test(t))l=16,t=t.toLowerCase();else if(f.test(t))l=2;else{if(!w.test(t))throw Error(d+t);l=8}for(s=0<=(i=(t=0<(i=t.search(/p/i))?(a=+t.slice(i+1),t.substring(2,i)):t.slice(2)).indexOf(\".\")),n=e.constructor,s&&(i=(o=(t=t.replace(\".\",\"\")).length)-i,r=H(n,new n(l),i,2*i)),i=l=(u=A(t,l,U)).length-1;0===u[i];--i)u.pop();return i<0?new n(0*e.s):(e.e=F(u,l),e.d=u,y=!1,s&&(e=C(e,r,4*o)),a&&(e=e.times(Math.abs(a)<54?v(2,a):c.pow(2,a))),y=!0,e)})(i,e)}if(s.prototype=N,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=pe,s.clone=e,s.isDecimal=we,s.abs=ee,s.acos=te,s.acosh=ne,s.add=re,s.asin=ie,s.asinh=se,s.atan=oe,s.atanh=ae,s.atan2=ue,s.cbrt=le,s.ceil=ce,s.cos=fe,s.cosh=he,s.div=me,s.exp=ge,s.floor=de,s.hypot=ve,s.ln=ye,s.log=be,s.log10=Me,s.log2=Se,s.max=Ne,s.min=Ee,s.mod=qe,s.mul=xe,s.pow=Ae,s.random=Ce,s.round=Le,s.sign=Ie,s.sin=Ue,s.sinh=_e,s.sqrt=Re,s.sub=Oe,s.tan=Te,s.tanh=Pe,s.trunc=ke,(t=void 0===t?{}:t)&&!0!==t.defaults)for(i=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return s.config(t),s}(a)).default=c.Decimal=c,r=new c(r),i=new c(i),\"function\"==typeof define&&define.amd?define(function(){return c}):\"undefined\"!=typeof module&&module.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(N[Symbol.for(\"nodejs.util.inspect.custom\")]=N.toString,N[Symbol.toStringTag]=\"Decimal\"),module.exports=c):(e=e||(\"undefined\"!=typeof self&&self&&self.self==self?self:window),t=e.Decimal,c.noConflict=function(){return e.Decimal=t,c},e.Decimal=c),c}(this)});\"undefined\"!=typeof module&&(module.exports=nerdamer),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus.js\")),function(){\"use strict\";var $=nerdamer.getCore(),H=$.PARSER,u=$.groups.N,c=$.groups.P,j=$.groups.S,p=$.groups.EX,x=$.groups.FN,y=$.groups.PL,Z=$.groups.CP,A=$.groups.CB,C=$.Utils.keys,L=$.Utils.even,X=$.Utils.variables,l=$.Utils.format,b=$.Utils.round,z=$.Frac,I=$.Utils.isInt,Q=$.Symbol,Y=$.Settings.CONST_HASH,f=$.Utils.importFunctions();$.Utils.evaluate;function W(e,t,n){if($.Utils.isSymbol(e))this.parse(e),this.variable=this.variable||t;else if(isNaN(e))\"string\"==typeof e&&this.parse(H.parse(e));else{if(n=n||0,void 0===t)throw new $.exceptions.InvalidVariableNameError(\"Polynomial expects a variable name when creating using order\");this.coeffs=[],this.coeffs[n]=e,this.fill(e)}}function U(){this.factors={},this.length=0}function J(e,t,n){this.terms=t||[],this.coeff=e,this.map=n,this.sum=new $.Frac(0),this.image=void 0}W.fromArray=function(e,t){if(void 0===t)throw new $.exceptions.InvalidVariableNameError(\"A variable name must be specified when creating polynomial from array\");var n=new W;return n.coeffs=e,n.variable=t,n},W.fit=function(e,t,n,r,i,s){var o=new Array(i+1),a=n-t;o[0]=t,a-=(o[i]=e)*Math.pow(r,i);for(var u=i-1;0<u;u--){var l=Math.pow(r,u),c=a/l,c=Math.sign(c)*Math.floor(Math.abs(c));a-=c*l,o[u]=c}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new z(o[u]);return W.fromArray(o,s)},W.prototype={parse:function(e,t){if(this.variable=X(e)[0],!e.isPoly())throw $.exceptions.NerdamerTypeError(\"Polynomial Expected! Received \"+$.Utils.text(e));if(t=t||[],(e=!e.power.absEquals(1)?H.expand(e):e).group===$.groups.N)t[0]=e.multiplier;else if(e.group===$.groups.S)t[e.power.toDecimal()]=e.multiplier;else for(var n in e.symbols){var r=e.symbols[n],n=r.power;if($.Utils.isSymbol(n))throw new $.exceptions.NerdamerTypeError(\"power cannot be a Symbol\");n=r.group===u?0:n.toDecimal(),r.symbols?this.parse(r,t):t[n]=r.multiplier}this.coeffs=t,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,n=0;n<t;n++)void 0===this.coeffs[n]&&(this.coeffs[n]=new z(e));return this},trim:function(){for(var e=this.coeffs.length;e--;){var t=this.coeffs[e],n=t.equals(0);if(!t||!n)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,n=0;n<t;n++){var r=this.coeffs[n];if(r<0){for(var i,s=n;s<t;s++)if(0<this.coeffs[s]){i=this.coeffs[s];break}if(i){for(;n<s;s--)this.coeffs[s]=this.coeffs[s].subtract(new z(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new z(e));r=this.coeffs[n]}}var o,a=r.mod(e),u=r.subtract(a).divide(e);u.equals(0)||(r=(r=this.coeffs[o=n+1]||new z(0)).add(u),this.coeffs[o]=new z(r),this.coeffs[n]=new z(a))}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new z(0),i=e.coeffs[n]||new z(0);this.coeffs[n]=r.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new z(0),i=e.coeffs[n]||new z(0);this.coeffs[n]=r.subtract(i)}return this},divide:function(e){for(var t=this.variable,n=$.Utils.arrayClone(this.coeffs),r=$.Utils.arrayClone(e.coeffs),i=n.length,s=r.length-1,o=[],a=0;a<i;a++){var u=i-(a+1),l=u-s,c=n[u].divide(r[s]);if(l<0)break;o[l]=c;for(var p=0;p<=s;p++)n[p+l]=n[p+l].subtract(r[p].multiply(c))}e=W.fromArray(n,t||\"x\").trim();return[W.fromArray(o,t||\"x\"),e]},multiply:function(e){for(var t=this.coeffs.length,n=e.coeffs.length,r=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<n;o++){var a=i+o,u=e.coeffs[o],l=r[a]||new z(0);r[a]=l.add(s.multiply(u))}return this.coeffs=r,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++)if(!this.coeffs[t].equals(0))return!1;return!0},sub:function(e){for(var t=new z(0),n=this.coeffs.length,r=0;r<n;r++){var i=this.coeffs[r];i.equals(0)||(t=t.add(i.multiply(new z(Math.pow(e,r)))))}return t},clone:function(){var e=new W;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,n=0;n<t;n++)this.coeffs[n]=this.coeffs[n].divide(e);return this},gcd:function(e){if(this.coeffs.length-1<e.coeffs.length-1)return e.gcd(this);for(var t=this;!e.isZero();){var n=e.clone();e=(t=t.clone()).divide(n)[1],t=n}var r=$.Math2.QGCD.apply(null,t.coeffs);if(!r.equals(1))for(var i=t.coeffs.length,s=0;s<i;s++)t.coeffs[s]=t.coeffs[s].divide(r);return t},diff:function(){for(var e=[],t=this.coeffs.length,n=1;n<t;n++)e.push(this.coeffs[n].multiply(new z(n)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,n=0;n<t;n++){var r=new z(n+1);e[r]=this.coeffs[n].divide(r)}return this.coeffs=e,this},gcf:function(e){for(var t=[],n=0;n<this.coeffs.length;n++){var r=this.coeffs[n];r.equals(0)||-1!==t.indexOf(r)||t.push(r)}var i=[$.Math2.QGCD.apply(void 0,t),function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t}(this.coeffs)].toDecimal();return e&&((e=[])[i[1]-1]=i[0],i=W.fromArray(e,this.variable).fill()),i},quad:function(e){var t=[];if(3<this.coeffs.length)throw new Error(\"Cannot calculate quadratic order of \"+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error(\"Polynomial array has no terms\");var n=this.coeffs[2]||0,r=this.coeffs[1]||0,i=r*r-4*n*this.coeffs[0];return i<0&&!e||(t[0]=(-r+Math.sqrt(i))/(2*n),t[1]=(-r-Math.sqrt(i))/(2*n)),t},squareFree:function(){for(var e=this.clone(),t=1,n=e.clone().diff(),r=e.clone().gcd(n),i=e.divide(r)[0],s=W.fromArray([new z(1)],e.variable);!r.equalsNumber(1);){var o=i.gcd(r),a=i.divide(o)[0];if(!a.equalsNumber(1)&&1<t){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,r=r.divide(i=o)[0]}return[s,i,t]},toSymbol:function(){var e=this.coeffs.length,t=this.variable;if(0===e)return new $.Symbol(0);for(var n=e-1,r=\"\",i=0;i<e;i++){var s=i===n?\"\":\"+\",o=this.coeffs[i];o.equals(0)||(r+=o+\"*\"+t+\"^\"+i+s)}return H.parse(r)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},Q.prototype.coeffs=function(e,t){t&&!this.isPoly(!0)&&H.error(\"Polynomial expected when requesting coefficients with order\"),e=e||[];var n,r=this.clone().distributeMultiplier();if(r.isComposite())for(var i in r.symbols){i=r.symbols[i];i.isComposite()?i.clone().distributeMultiplier().coeffs(e,t):t?e[i.isConstant()?0:i.power.toDecimal()]=i.multiplier:e.push(i.multiplier)}else t?e[r.isConstant(!0)?0:r.power.toDecimal()]=r.multiplier:r.group===A&&r.isImaginary()?(n=new Q(r.multiplier),r.each(function(e){(e.isConstant(!0)||e.imaginary)&&(n=H.multiply(n,e))}),e.push(n)):e.push(r.multiplier);if(t)for(var s=0;s<e.length;s++)void 0===e[s]&&(e[s]=new Q(0));return e},Q.prototype.tBase=function(e){if(void 0===e)throw new Error(\"Symbol.tBase requires a map object!\");for(var t=[],n=this.collectSymbols(null,null,null,!0),r=n.length,i=0;i<r;i++){var s=n[i],o=s.group,a=new J(s.multiplier,[],e);if(o===A)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},Q.prototype.altVar=function(e){var t=this.multiplier.toString(),n=this.power.toString();return(\"1\"===t?\"\":t+\"*\")+e+(\"1\"===n?\"\":\"^\"+n)},Q.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var n=this.symbols[t],t=e.symbols[t];if(!t)return!1;if(n.value!==t.value)return!1}return!0},Q.prototype.groupTerms=function(r){var i,s,o;r=String(r);var a=[];return this.each(function(e){if(e.group===y){o=e.groupTerms(r);for(var t=0;t<o.length;t++){var n=o[t];n&&(a[t]=n)}}else i=$.Utils.decompose_fn(e,r,!0),s=i.x.value===r?Number(i.x.power):0,a[s]=H.add(a[s]||new Q(0),i.a)}),a},Q.prototype.collectFactors=function(){var t=[];return this.group===A?this.each(function(e){t.push(e.clone())}):t.push(this.clone()),t},U.prototype.getNumberSymbolics=function(){var t=0;return this.each(function(e){e.isConstant(!0)||t++}),t},U.prototype.add=function(e){if(e.equals(0))return this;if(e.equals(-1)&&0<this.length){var t=$.Utils.firstObject(this.factors,null,!0);return this.add(H.symfunction($.Settings.PARENTHESIS,[t.obj]).negate()),delete this.factors[t.key],this.length--,this}if(e.group===A){var n=this;e.multiplier.equals(1)||n.add(new Q(e.multiplier)),e.each(function(e){n.add(e)})}else{this.preAdd&&(e=this.preAdd(e));t=(e=this.pFactor?H.pow(e,new Q(this.pFactor)):e).isConstant();if(t&&e.equals(1))return this;t=t?e.value:e.text();t in this.factors?(this.factors[t]=H.multiply(this.factors[t],e),this.factors[t].equals(1)&&(delete this.factors[t],this.length--)):(this.factors[t]=e,this.length++)}return this},U.prototype.toSymbol=function(){for(var e=new Q(1),t=Object.values(this.factors).sort(function(e,t){return e.group>t.group}),n=0,r=t.length;n<r;n++)var i=t[n],i=i.power.equals(1)&&\"\"!==i.fname?H.symfunction($.PARENTHESIS,[i]):i,e=H.multiply(e,i);return e=\"\"===e.fname?Q.unwrapPARENS(e):e},U.prototype.merge=function(e){for(var t in e)t in this.factors?this.factors[t]=H.multiply(this.factors[t],e[t]):this.factors[t]=e[t];return this},U.prototype.each=function(e){for(var t in this.factors){var n=this.factors[t];n.fname===$.PARENTHESIS&&n.isLinear()&&(n=n.args[0]),e.call(this,n,t)}return this},U.prototype.count=function(){return C(this.factors).length},U.prototype.clean=function(){try{var e=$.Settings.CONST_HASH;this.factors[e].lessThan(0)&&(this.factors[e].equals(-1)?delete this.factors[e]:this.factors[e].negate(),this.each(function(e){e.negate()}))}catch(e){}},U.prototype.toString=function(){return this.toSymbol().toString()},J.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},J.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var n=this.terms[t];this.getRevMap();n.equals(0)||e.push(this.rev_map[t])}return e.join(\" \")},J.prototype.len=function(){return void 0===this.count&&this.updateCount(),this.count},J.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var t=new Q(this.coeff),n=0;n<this.terms.length;n++){var r=e[n],i=this.terms[n];i.equals(0)||r===Y||((r=new Q(r)).power=i,t=H.multiply(t,r))}return t},J.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e,t={};for(e in this.map)t[this.map[e]]=e;return this.rev_map=t},J.prototype.generateImage=function(){return this.image=this.terms.join(\" \"),this},J.prototype.getImg=function(){return this.image||this.generateImage(),this.image},J.prototype.fill=function(){for(var e=this.map.length,t=0;t<e;t++)void 0===this.terms[t]?this.terms[t]=new $.Frac(0):this.sum=this.sum.add(this.terms[t]);return this},J.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,r=new J(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].subtract(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},J.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,r=new J(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].add(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},J.prototype.isZero=function(){return this.coeff.equals(0)},J.prototype.toString=function(){return\"{ coeff: \"+this.coeff.toString()+\", terms: [\"+this.terms.join(\",\")+\"]: sum: \"+this.sum.toString()+\", count: \"+this.count+\"}\"},$.Utils.toMapObj=function(e){for(var t=0,n={},r=0;r<e.length;r++){var i=e[r];void 0===n[i]&&(n[i]=t,t++)}return n.length=t,n},$.Utils.filledArray=function(e,t,n){for(var r=[];t--;)r[t]=n?new n(e):e;return r},$.Utils.arrSum=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t+=e[r];return t},$.Utils.haveIntersection=function(e,t){var n;return t.length>e.length&&(n=t,t=e,e=n),e.some(function(e){return-1<t.indexOf(e)})},$.Utils.subFunctions=function(e,r){r=r||{};var i=[];return e.each(function(e){var t,n;e.group===x||e.previousGroup===x?(t=$.Utils.text(e,\"hash\"),(n=r[t])?i.push(e.altVar(n)):(n=e.fname+C(r).length,r[t]=n,i.push(e.altVar(n)))):e.group===A||e.group===y||e.group===Z?i.push($.Utils.subFunctions(e,r)):i.push(e.text())}),e.group===Z||e.group===y?e.altVar($.Utils.inBrackets(i.join(\"+\"))):e.group===A?e.altVar($.Utils.inBrackets(i.join(\"*\"))):e.text()},$.Utils.getFunctionsSubs=function(e){var t,n={};for(t in e)n[e[t]]=H.parse(t);return n};var _=$.Algebra={version:\"1.4.6\",proots:function(e,l){l=l||7;function t(e,t,n){for(var r=function(e,t){var n=e.slice(0);if(e.unshift(t),100<t)throw new $.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to 100. \");var r=[],e={};for(e.Degree=t,p=0;p<t;p++)r.push(0);var i=r.slice(0);function V(e,t,n,r,i,s){i[0]=s.b=r[0],i[1]=s.a=-(t*s.b)+r[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+n*s.b)+r[o],s.b=s.a,s.a=i[o]}function H(e,t,n,r,i,s,o,a,u){var l=new Object,c=3;return l.b=l.a=0,V(t,o,a,s,u,l),i.c=l.a,i.d=l.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])||(i.h=a*r,Math.abs(i.d)>=Math.abs(i.c)?(c=2,i.e=n/i.d,i.f=i.c/i.d,i.g=o*r,i.a3=i.e*(i.g+n)+i.h*(r/i.d),i.a1=-n+i.f*r,i.a7=i.h+(i.f+o)*n):(c=1,i.e=n/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*n+(i.g+i.h/i.c)*r,i.a1=-(n*(i.d/i.c))+r,i.a7=i.g*i.d+i.h*i.f+n)),c}function j(e,t,n,r,i,s,o,a,u){if(3!=n)if(r=1==n?i:r,Math.abs(s.a1)>10*e*Math.abs(r)){s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-(u[0]*s.a7)+u[1];for(l=2;l<t;l++)o[l]=-(u[l-1]*s.a7)+a[l-2]*s.a3+u[l]}else{o[0]=0,o[1]=-(u[0]*s.a7);for(l=2;l<t;l++)o[l]=-(u[l-1]*s.a7)+a[l-2]*s.a3}else{o[1]=o[0]=0;for(var l=2;l<t;l++)o[l]=a[l-2]}}function Z(e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g,d){var v;t.b=t.a=0,3!=e&&(a=2!=e?(v=n+f*o+p*l,a+(f+h*l)*u):(v=(n+c)*l+p,(l+f)*a+h*u),u=-(m[g-1]/d[g]),0!=(v=-(i=h*(m=-(m[g-2]+u*d[g-1])/d[g])*r-((d=u*s)+(g=u*u*i)))+a+u*v)&&(t.a=-(f*(g+d)+h*(u*r+m*s))/v+f,t.b=h*(1+i/v)))}function X(e,t,n,r){var i,s,o;(r.sr=r.si=r.lr=r.li=0)!=e?0!=n?(i=t/2,s=Math.abs(i)<Math.abs(n)?(o=-(o=0<=n?e:-e)+i*(i/Math.abs(n)),Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(n))):(o=-e/i*(n/i)+1,Math.sqrt(Math.abs(o))*Math.abs(i)),0<=o?(r.lr=(-i+(s=0<=i?-s:s))/e,r.sr=0!=r.lr?n/r.lr/e:r.sr):(r.lr=r.sr=-i/e,r.si=Math.abs(s/e),r.li=-r.si)):r.lr=-t/e:r.sr=0!=t?-n/t:r.sr}function G(e,t,n,r,i,s,o,a,u,l,c,p){var f,h,m,g,d,v,w,y,b,S,M,N,E,q,x,A,C,L,I,U,_,R,O,T,P,k=new Object,F=new Object,D=new Array(t),B=new Array(t),G=1;for(p.NZ=0,g=m=.25,d=r,y=i,k.b=k.a=0,V(u,c,i,a,l,k),f=k.a,h=k.b,F.h=F.g=F.f=F.e=F.d=F.c=F.a7=F.a3=F.a1=0,O=H(e,o,f,h,F,s,c,i,D),U=0;U<n;U++){if(L=1,j(e,o,O,f,h,F,s,D,l),Z(O=H(e,o,f,h,F,s,c,i,D),k,f,F.a1,F.a3,F.a7,h,F.c,F.d,F.f,F.g,F.h,c,i,s,o,a),x=k.a,C=A=k.b,S=0!=s[o-1]?-(a[o]/s[o-1]):0,M=E=1,0!=U&&3!=O&&(T=(q=(E=0!=C?Math.abs((C-y)/C):E)<w?E*w:1)<g?1:0,(_=(N=(M=0!=S?Math.abs((S-d)/S):M)<v?M*v:1)<m?1:0)||T)){for(I=0;I<o;I++)B[I]=s[I];for(b=S,R=P=0;;){if(!L||0!=(L=0)||!_||T&&!(N<q)){if(!function(e,t,n,r,i,s,o,a,u,l,c,p){var f,h,m,g,d,v,w,y,b,S=new Object,M=0,N=0;n.NZ=0,g=r,v=i;do{if(S.li=S.lr=S.si=S.sr=0,X(1,g,v,S),n.szr=S.sr,n.szi=S.si,n.lzr=S.lr,n.lzi=S.li,Math.abs(Math.abs(n.szr)-Math.abs(n.lzr))>.01*Math.abs(n.lzr))break;for(V(o,g,v,u,s,a),w=Math.abs(-(n.szr*a.b)+a.a)+Math.abs(n.szi*a.b),y=Math.sqrt(Math.abs(v)),f=2*Math.abs(s[0]),d=-(n.szr*a.b),b=1;b<t;b++)f=f*y+Math.abs(s[b]);if(w<=20*(f=(9*(f=f*y+Math.abs(d+a.a))+2*Math.abs(d)-7*(Math.abs(a.a+d)+y*Math.abs(a.b)))*e)){n.NZ=2;break}if(20<++M)break;if(2<=M&&m<=.01&&h<=w&&!N){for(V(o,g-=g*(m=m<e?Math.sqrt(e):Math.sqrt(m)),v+=v*m,u,s,a),b=0;b<5;b++)j(e,t,H(e,t,a.a,a.b,c,p,g,v,l),a.a,a.b,c,p,l,s);N=1,M=0}}while(h=w,j(e,t,H(e,t,a.a,a.b,c,p,g,v,l),a.a,a.b,c,p,l,s),Z(H(e,t,a.a,a.b,c,p,g,v,l),a,a.a,c.a1,c.a3,c.a7,a.b,c.c,c.d,c.f,c.g,c.h,g,v,p,t,u),d=a.a,0!=(w=a.b)&&(m=Math.abs((-v+w)/w),g=d,v=w),0!=w)}(e,o,p,x,A,l,u,k,a,D,F,s),f=k.a,h=k.b,0<p.NZ)return;if(G=P=1,g*=.25,R||!_)G=0;else for(I=0;I<o;I++)s[I]=B[I]}if(0!=G){if(k.a=b,G=function(e,t,n,r,i,s,o,a,u){var l,c,p,f,h,m,g,d,v,w,y,b=r-1;for(t.NZ=y=v=0,g=n.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(p=Math.abs(m),f=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*f+Math.abs(o[w]);if(p<=20*e*(2*l-p)){t.NZ=1,t.szr=g,t.szi=0;break}if(10<++y)break;if(2<=y&&Math.abs(d)<=.001*Math.abs(-d+g)&&h<p){v=1,t.a=g;break}for(h=p,u[0]=c=a[0],w=1;w<r;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(d=-m/c,a[0]=o[0],w=1;w<r;w++)a[w]=d*u[w-1]+o[w];else for(a[0]=0,w=1;w<r;w++)a[w]=u[w-1];for(c=a[0],w=1;w<r;w++)c=c*g+a[w];g+=d=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0}return v}(e,p,k,o,a,u,l,s,D),b=k.a,0<p.NZ)return;if(R=1,m*=.25,0!=G){x=-(b+b),A=b*b;continue}}for(I=0;I<o;I++)s[I]=B[I];if(!T||P)break}V(u,c,i,a,l,k),O=H(e,o,f=k.a,h=k.b,F,s,c,i,D)}y=C,d=S,w=E,v=M}}!function(e,t,n,r){for(var i,s,o,a,u,l,c,p,f,h,m,g,d,v,w=e.Degree,y=.017453292519943295,b=Math.LN2,S=e.Degree+1,M=new Array(S),N=new Array(S),E=new Array(S),q=new Array(S),x=new Object,A=new Object,C=1;i=C,1<(l=1+(C/=2)););var L=Number.MIN_VALUE/i,I=Math.cos(94*y),U=Math.sin(94*y),_=Math.sqrt(.5),R=-_;for(A.NZ=f=0,A.szr=A.szi=A.lzr=A.lzi=0;0==t[w];)n[f]=r[f]=0,w--,f++;for(d=w+1;1<=w;){if(w<=2){w<2?(n[e.Degree-1]=-(t[1]/t[0]),r[e.Degree-1]=0):(X(t[x.li=x.lr=x.si=x.sr=0],t[1],t[2],x),n[e.Degree-2]=x.sr,r[e.Degree-2]=x.si,n[e.Degree-1]=x.lr,r[e.Degree-1]=x.li);break}for(a=0,u=Number.MAX_VALUE,O=0;O<d;O++)a<(T=Math.abs(t[O]))&&(a=T),0!=T&&T<u&&(u=T);if(((m=L/u)<=1&&10<=a||1<m&&Number.MAX_VALUE/m>=a)&&(m=0==m?Number.MIN_VALUE:m,m=Math.floor(Math.log(m)/b+.5),1!=(o=Math.pow(2,m))))for(O=0;O<d;O++)t[O]*=o;for(var O=0;O<d;O++)N[O]=Math.abs(t[O]);N[w]=-N[w],g=w-1,T=Math.exp((Math.log(-N[w])-Math.log(N[0]))/w),P=T=0!=N[g]?(P=-N[w]/N[g])<T?P:T:T;do{for(var T,P=.1*(T=P),k=N[0],O=1;O<d;O++)k=k*P+N[O]}while(0<k);0;do{for(var F=k=N[0],O=1;O<w;O++)F=T*F+(k=T*k+N[O])}while(T-=s=(k=T*k+N[w])/F,.005<Math.abs(s/T));for(var D=T,O=1;O<w;O++)M[O]=(w-O)*t[O]/w;for(M[0]=t[0],C=t[w],l=t[g],v=0==M[g]?1:0,h=0;h<5;h++)if(c=M[g],v){for(O=0;O<g;O++)M[f=g-O]=M[f-1];v=(M[0]=0)==M[g]?1:0}else{for(var B=-C/c,O=0;O<g;O++)M[f=g-O]=B*M[f-1]+t[f];M[0]=t[0],v=Math.abs(M[g])<=Math.abs(l)*i*10?1:0}for(O=0;O<w;O++)q[O]=M[O];for(h=1;h<=20;h++){if(p=-U*R+I*_,R=U*_+I*R,G(i,S,20*h,p=D*(_=p),D,M,w,t,d,E,-2*p,A),0!=A.NZ){n[f=e.Degree-w]=A.szr,r[f]=A.szi;for(w=(d-=A.NZ)-1,O=0;O<d;O++)t[O]=E[O];1!=A.NZ&&(n[f+1]=A.lzr,r[f+1]=A.lzi);break}for(O=0;O<w;O++)M[O]=q[O]}if(20<h){e.Degree-=w;break}}}(e,n,i,r);var s=r.length;for(p=0;p<s;p++){var o=b(r[p],l+8),a=b(i[p],l+8);a=2<l-String(a).length?a:i[p];var u=o<0?\"-\":\"\";0===a&&(a=\"\"),0===o&&(o=\"\"),o=1===Math.abs(o)?u+\"i\":o?o+\"*i\":\"\";o=a&&o?a+\"+\"+o:a+o;i[p]=o.replace(/\\+\\-/g,\"-\")}return i}(e,n).concat(s),i=0;i<0;i++)r.unshift(0);return r}var n,s=[];if(e instanceof Q&&e.isPoly()){if(e.distributeMultiplier(),e.group===y&&(n=$.Utils.arrayMin(C(e.symbols)),n=e.symbols[n].clone().toUnitMultiplier(),e=H.expand(H.divide(e,n)),s.push(0)),e.group===$.groups.S)return[0];e.group===$.groups.PL&&(a=C(e.symbols),r=$.Utils.arrayMin(a),e=$.PARSER.divide(e,$.PARSER.parse(e.value+\"^\"+r)));for(var r=C(e.symbols).sort().pop(),i=e.group===$.groups.PL?e.symbols:e.symbols[r],o=i.group,a=o===j?[i.power.toDecimal()]:C(i.symbols),u=[],c=$.Utils.arrayMax(a),p=1;p<=c;p++){var f=0;-1!==a.indexOf(p+\"\")&&(f=(o===j?i:i.symbols[p]).multiplier),u.unshift(f)}return u.push(e.symbols[Y].multiplier),i.group===j&&(u[0]=i.multiplier),t(u,0,c)}if($.Utils.isArray(e)){for(var h=e,u=[],a=[],m=0,p=0;p<h.length;p++){for(var g=h[p][0],d=h[p][1],v=d-m-1,w=0;w<v;w++)u.unshift(0);u.unshift(g),0!==d&&a.push(d),m=d}return t(u,0,c=Math.max.apply(void 0,a))}throw new $.exceptions.NerdamerTypeError(\"Cannot calculate roots. Symbol must be a polynomial!\")},roots:function(e){if(e.isConstant(!0,!0))return $.Utils.nroots(e);e=_.proots(e).map(function(e){return H.parse(e)});return $.Vector.fromArray(e)},froot:function(a,e,u){return function(e){for(var t=u||$.Utils.build($.Calculus.diff(a.clone())),n=a instanceof Function?a:$.Utils.build(a),r=!1,i=0;!r;){var s=e-n(e)/t(e),o=Math.abs(s)-Math.abs(e);e=s,Math.abs(o)<1e-12?r=!0:1e4<i&&(r=!(e=null)),i++}return e}(Number(e))},quad:function(e,t,n){function r(e,t,n,r){return H.parse(\"-(\"+t+\"+\"+r+\"*sqrt((\"+t+\")^2-4*(\"+e+\")*(\"+n+\")))/(2*\"+e+\")\")}return[r(e,t,n,1),r(e,t,n,-1)]},sumProd:function(e,t){return _.quad(-t,e,-1).map(function(e){return e.invert()})},coeffs:function(e,t,n){t=String(t),e=H.expand(e),n=n||[new Q(0)],e.group===p&&e.contains(t,!0)&&H.error(\"Unable to get coefficients using expression \"+e.toString());var r,i=X(e);if(1!==i.length||i[0]!==t||e.isImaginary())t||H.error(\"Polynomial contains more than one variable. Please specify which variable is to be used!\"),-1===i.indexOf(t)?n[0]=H.add(e,n[0]):(n=n||[new Q(0)],e.group===A?((r=e.symbols[t])||H.error(\"Expression is not a polynomial!\"),i=Number(r.power),((l=H.divide(e.clone(),r.clone())).contains(t,!0)||i<0||!I(i))&&H.error(\"Expression is not a polynomial!\"),(u=n[i])&&(l=H.add(u,l)),n[i]=l):e.group===Z&&e.each(function(e){_.coeffs(e.clone(),t,n)},!0));else for(var s=new W(e).coeffs.map(function(e){return new Q(e)}),o=0,a=s.length;o<a;o++){var u,l=s[o];(u=n[o])&&(l=H.add(u,l)),n[o]=l}for(o=0,a=n.length;o<a;o++)void 0===n[o]&&(n[o]=new Q(0));return n},polyPowers:function(e,t,n){if(n=n||[],(s=e.group)===y&&t===e.value)n=n.concat(C(e.symbols));else if(s===Z)for(var r in e.symbols){var i=e.symbols[r],s=i.group,r=i.value;s===j&&t===r?n.push(i.power):s===y||s===Z?n=_.polyPowers(i,t,n):s===A&&i.contains(t)?(i=i.symbols[t])&&n.push(i.power):s!==u&&t===r||n.push(0)}else s===A&&e.contains(t)&&n.push($.Utils.decompose_fn(e,t,!0).x.power);return $.Utils.arrayUnique(n).sort()},Factor:{split:function(e){var n=new Q(1),r=new Q(1);return _.Factor.factor(e,new U).each(function(e){var t=H.parse(e);e.isConstant(!0)?n=H.multiply(n,t):r=H.multiply(r,t)}),[n,r]},mix:function(e,t){for(var n=C(e),r=n.length,i=[],s=0;s<r;s++){for(var o=n[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(e,t){try{if(e.group===Z){for(var n=H.expand(e.clone(),!0).collectSymbols(null,null,function(e,t){return(t.length||1)-(e.length||1)}),r={},i=[],s=0;s<n.length;s++){var o=n[s];i.push(o.multiplier.clone()),o.each(function(e){var t=Number(e.power);if(isNaN(t))throw new Error(\"exiting\");e.value in r?(t<r[e.value][0]&&(r[e.value][0]=t),r[e.value][1].push(e)):r[e.value]=[t,[e]]})}var a,u=new Q(1);for(a in r)r[a][1].length===n.length&&(u=H.multiply(u,H.pow(new Q(a),new Q(r[a][0]))));var l=$.Math2.QGCD.apply(null,i);if(!l.equals(1)){t.add(new Q(l));for(s=0;s<n.length;s++)n[s].multiplier=n[s].multiplier.divide(l)}if(!u.equals(1)){t.add(u),e=new Q(0);for(s=0;s<n.length;s++)e=H.add(e,H.divide(n[s],u.clone()))}}}catch(e){}return e},zeroes:function(e,t){function n(){throw new $.exceptions.ValueLimitExceededError(\"Exiting\")}try{for(var r,i,s,o=(e=H.expand(e.clone())).toString(),a=X(e),u=new Q(0),l=[],c=[],p=0,f=a.length;p<a.length;p++){for(var h={},m=0;m<f;m++)p!==m&&(h[a[m]]=0);var g,d=(g=H.parse(o,h)).power;I(d)||n(),l.push(g),c.push(g.power)}$.Utils.allSame(c)?(i=e.length,2===(s=l.length)&&(r=new z(c[0]/(i-1))),3===s&&(r=new z(c[0]/Math.round((Math.sqrt(8*i-1)-3)/2)))):r=$.Math2.QGCD.apply(null,c),I(r)||n();for(p=0;p<l.length;p++){var v=l[p],w=v.power.clone().divide(r);v.multiplier=new z(Math.pow(v.multiplier,1/w)),v.power=r.clone(),u=H.add(u,v)}if(u.group!==Z)return e;for(;;){var y=_.div(e.clone(),u.clone());if(!y[1].equals(0))break;if(e=y[0],t.add(u.clone()),e.equals(1))break}}catch(o){}return e},factor:function(e,t){if(e.isConstant())return $.Math2.factor(e);var n,r,i=H.parse(e),t=_.Factor._factor(i,t);return t.equals(e)||t.group===A&&(n=new Q(1),e=H.parse(t.power),r=H.parse(t.multiplier),t.toUnitMultiplier(),t.multiplier.lessThan(0)&&(n.negate(),t.negate()),t.each(function(e){e=H.parse(_.Factor._factor(e));e.group===A?(r=H.multiply(r,Q.create(e.multiplier)),e.each(function(e){e=H.parse(_.Factor._factor(e));n=H.multiply(n,e),e.group===A&&(r=H.multiply(r,Q.create(e.multiplier)))})):n=H.multiply(n,e)}),t=H.pow(H.multiply(r,n),e)),t},quadFactor:function(e,t){if(e.isPoly()&&_.degree(e.equals(2))){var n=$.Utils.variables(e)[0],r=_.coeffs(e,n),i=_.Factor._factor(r[2].clone());if(i.group===A){var s=i.collectSymbols();if(2<s.length)return e;var o=H.multiply(H.parse(r[0]),H.parse(s[0])),a=H.parse(r[1]).negate(),i=H.parse(s[1]),o=_.quad(i,a,o).filter(function(e){if($.Utils.isInt(e))return e});1===o.length&&(o=o[0],r=H.divide(r[0],H.parse(o)),$.Utils.isInt(r)&&(t.add(H.parse(l(\"({0})*({1})+({2})\",s[1],n,r))),t.add(H.parse(l(\"({0})*({1})+({2})\",s[0],n,o))),e=new Q(1)))}}return e},cubeFactor:function(e,t){var n,r,i,s,o,a;return!e.isComposite()||2===(a=e.collectSymbols()).length&&(n=a[0].sign(),r=a[0].clone().abs(),i=a[1].sign(),s=a[1].clone().abs(),r.isCube()&&s.isCube()&&(n<i&&([n,i]=[i,n],[r,s]=[s,r]),o=H.parse(r.getNth(3)),a=H.parse(s.getNth(3)),o=H.multiply(H.expand(H.pow(r.clone().toUnitMultiplier(),H.parse(\"1/3\"))),o),a=H.multiply(H.expand(H.pow(s.clone().toUnitMultiplier(),H.parse(\"1/3\"))),a),1===n&&-1===i?(t.add(H.parse(l(\"(({0})-({1}))\",o,a))),t.add(H.parse(l(\"(({0})^2+({0})*({1})+({1})^2)\",o,a))),e=Q(1)):1===n&&1===i&&(t.add(H.parse(l(\"(({0})+({1}))\",o,a))),t.add(H.parse(l(\"(({0})^2-({0})*({1})+({1})^2)\",o,a))),e=Q(1)))),e},_factor:function(e,t){if(e.group===x){var n=e.args[0];if(n.group===j&&n.isSimple())return e}else if(e.group===j&&e.isSimple())return e;var r;e.group===Z&&(e.distributeMultiplier(!0),r=new Q(0),e.each(function(e){(e.group===Z&&e.power.greaterThan(1)||e.group===A)&&(e=H.expand(e)),r=H.add(r,e)}),r.power=e.power,e=r);n=(e=e.group===x&&\"sqrt\"!==e.fname?$.Utils.evaluate(e):e).clone();try{if(e.group===A){var i=H.parse(e.power),s=_.Simplify.strip(e.getDenom()),o=_.Simplify.strip(e.getNum()),a=s.pop(),u=o.pop();if(u.equals(e))return e;var l=_.Factor.factor(u),c=_.Factor.factor(a),p=_.Simplify.unstrip(o,l),f=_.Simplify.unstrip(s,c);return H.divide(p,f)}if(e.group===j)return e;if(e.isConstant())return e.equals(1)?e.clone():$.Math2.factor(e);i=e.power.clone();if(!I(i)||i.lessThan(0)&&e.group===x)return e;var h=i.sign();e.toLinear(),t=t||new U;var m={};e=H.parse($.Utils.subFunctions(e,m)),0<C(m).length&&(t.preAdd=function(e){return H.parse(e,$.Utils.getFunctionsSubs(m))}),e.isLinear()||(t.pFactor=e.power.toString(),e.toLinear());var g=X(e);e.isImaginary()&&g.push($.Settings.IMAGINARY);var d=1<g.length;if(d){var v=!0,w=!0;if(e.each(function(e){e.group!==j&&(v=!1),e.multiplier.equals(1)||(w=!1)}),v&&w)return H.pow(H.parse(e,$.Utils.getFunctionsSubs(m)),H.parse(i))}var y=new U;e=_.Factor.coeffFactor(e,y),y.each(function(e){L(i)&&e.lessThan(0)&&e.negate(),h<0&&e.invert(),t.add(e)});var b=new U;if(e=_.Factor.powerFactor(e,b),b.each(function(e){h<0&&e.invert(),t.add(e)}),d)e=_.Factor.cubeFactor(e,t),e=_.Factor.mfactor(e,t),t.each(function(e){h<0&&e.power.negate()});else{var S=g[0];e=_.Factor.squareFree(e,t,S);var M=new U;e=_.Factor.trialAndError(e,M,S);var N,E=M.toSymbol();if(E.equals(n))return E;for(N in M.factors){var q=M.factors[N];t.add(H.pow(q,H.parse(i)))}e.equals(n)&&(e=_.Factor.quadFactor(e,t))}return e=H.parse(e,$.Utils.getFunctionsSubs(m)),t.add(H.pow(e,H.parse(i))),t.toSymbol()}catch(e){return n}},reduce:function(e,t){if(e.group===Z&&2===e.length){var n=e.collectSymbols().sort(function(e,t){return t.multiplier-e.multiplier});if(n[0].power.equals(n[1].power)){var r=H.parse(n[0].power),i=n[0].clone().toLinear(),s=n[1].clone().toLinear();t.add(H.add(i.clone(),s.clone())),s.negate();for(var o=Number(r),a=new Q(0),u=1;u<=o;u++)var l=H.pow(i.clone(),H.subtract(r.clone(),new Q(u))),c=H.pow(s.clone(),H.subtract(new Q(u),new Q(1))),a=H.add(a,H.multiply(l,c));return a}}return e},squareFree:function(e,t,n){if(e.isConstant()||e.group===j)return e;var r=new W(e,n).squareFree(),n=r[2];if(1===n)return e;e=r[1].toSymbol();return e.power=e.power.multiply(new z(n)),t.add(_.Factor.factor(e)),_.Factor.squareFree(r[0].toSymbol(),t)},powerFactor:function(e,t){if(e.group!==y||e.previousGroup===p)return e;var n=C(e.symbols);if(!$.Utils.allNumeric(n))return e;var n=$.Utils.arrayMin(n),r=new Q(0),i=H.parse(e.value+\"^\"+n);return e.each(function(e){e=H.divide(e,i.clone()),r=H.add(r,e)}),t.add(i),r},coeffFactor:function(e,t){var n,r,i,s;return e.isComposite()&&((n=$.Math2.QGCD.apply(null,e.coeffs())).equals(1)?((r=function(e){var t;return e.group===A?(t=0,e.each(function(e){t+=e.power})):t=Number(e.power),t})(s=(i=e.collectSymbols(null,null,null,!0).sort(function(e,t){return e.isConstant(!0)?1:t.power-e.power}))[0])>r(i[1])||i[1].isConstant(!0))&&s.multiplier.lessThan(0)&&(t.add(new Q(-1)),e.each(function(e){e.negate()},!0)):(e.each(function(e){e.isComposite()?e.each(function(e){e.multiplier=e.multiplier.divide(n)}):e.multiplier=e.multiplier.divide(n)}),e.updateHash()),t&&t.add(new Q(n))),e},trialAndError:function(e,t,n){var r=e.clone();try{var i=[];if(e.isConstant()||e.group===j)return e;for(var s=new W(e,n),o=s.coeffs[0],a=$.Math2.ifactor(o),u=_.proots(e),l=0;l<u.length;l++){var c=u[l],p=1;if(!isNaN(c)){for(var f in a){var h=$.Utils.round(Math.log(f)/Math.log(Math.abs(c)),8);if(I(h)){c=f,p=h;break}}var m=new z(c),g=[new z(m.num).negate()];g[p]=new z(m.den);var d=W.fromArray(g,s.variable).fill(),v=s.divide(d);v[1].equalsNumber(0)&&(s=v[0],i.push(d.toSymbol()))}}return s.equalsNumber(1)||(s=_.Factor.search(s,t)),i.forEach(function(e){t.add(e)}),s.toSymbol()}catch(e){return r}},search:function(i,s,o){o=o||10;function e(e,t,n,r){if((n=W.fit(e,t,n,o,r,a))&&1<n.coeffs.length){r=i.divide(n);if(r[1].equalsNumber(0))return s.add(n.toSymbol()),[r[0],n]}return null}var a=i.variable,t=i.coeffs[0],n=$.Math2.ifactor(t),r=i.lc(),u=$.Math2.ifactor(r),l=i.sub(o),c=$.Math2.ifactor(l),p=_.Factor.mix(c,l<0),f=Math.ceil(i.coeffs.length/2),h=r.lessThan(0),m=t.lessThan(0);for(n[u[1]=1]=1;f--;)for(var g in u)for(var d in n)for(var v=0;v<p.length;v++){var w=e(g,d,p[v],f);if(w)return i=w[0],i=!$.Utils.isPrime(i.sub(o))?_.Factor.search(i,s):i;w||(h&&m?w=e(-g,-d,p[v],f):h?w=e(-g,d,p[v],f):m&&(w=e(g,-d,p[v],f)))}return i},mSqfrFactor:function(e,t){if(e.group!==x)for(var n=X(e).reverse(),r=0;r<n.length;r++)do{if(n[r]!==e.value){var i=$.Calculus.diff(e,n[r]),s=_.Factor.coeffFactor(i);if(s.equals(0))break;var o=!0;if(s.isConstant()&&e.isComposite()&&e.each(function(e){e.multiplier%s!=0&&(o=!1)},!0),o){var a=_.div(e,s.clone()),u=a[1].equals(0);if(a[0].isConstant()){t.add(a[0]);break}}else u=!1;u&&(t.add(a[0]),e=s)}else t.add(e),e=new Q(1)}while(u);return e},sqdiff:function(e,t){if(e.isConstant(\"all\"))return e;try{var n,r,i,s,o,a=function(e){return $.Utils.block(\"POSITIVE_MULTIPLIERS\",function(){return Q.unwrapPARENS(f.sqrt(f.abs(e)))},!0)},u=$.Utils.separate(e.clone()),l=[];for(n in u)\"constants\"!==n&&l.push(u[n]);if(l.sort(function(e,t){return t.power-e.power}),2===l.length){if(o=l.pop(),r=l.pop(),L(o.power)&&L(r.power)&&o.sign()===r.sign()&&o.group===j&&r.group===j)throw new Error(\"Unable to factor\");o.isComposite()&&r.power.equals(2)?(r=a(r),(i=_.Factor.factor(H.add(o,u.constants))).power.equals(2)&&(i.toLinear(),t.add(H.subtract(i.clone(),r.clone())),t.add(H.add(i,r)),e=new Q(1))):(o=o.powSimp(),r=r.powSimp(),o.group!==j&&\"\"!==o.fname||!o.power.equals(2)||r.group!==j&&\"\"!==r.fname||!r.power.equals(2)||u.constants||(o.multiplier.lessThan(0)&&(s=r,r=o,o=s),o.multiplier.greaterThan(0)&&(o=a(o),r=a(r)),t.add(H.subtract(o.clone(),r.clone())),t.add(H.add(o,r)),e=new Q(1)))}}catch(e){}return e},mfactor:function(t,e){if(t.group===x){var n,r;\"sqrt\"===t.fname?(n=new U,r=_.Factor.common(t.args[0].clone(),n),r=_.Factor.coeffFactor(r,n),t=H.multiply(H.symfunction(\"sqrt\",[r]),H.parse(t.multiplier)),n.each(function(e){t=H.multiply(t,H.parse($.Utils.format(\"sqrt({0})\",e)))})):e.add(t)}else{t=_.Factor.mSqfrFactor(t,e);for(var i,s=X(t),o=t.collectSymbols().map(function(e){return Q.unwrapSQRT(e)}),a={},u={},l=s.length,c=o.length,p=0;p<l;p++){var f=s[p];a[f]=new Q(0);for(var h=0;h<c;h++){var m,g=o[h];g.contains(f)&&(m=(g.value===f?g:g.symbols[f]).power.toDecimal(),(!u[f]||m<u[f])&&(u[f]=m),a[f]=H.add(a[f],g.clone()))}}for(i in a){var d=H.parse(i+\"^\"+u[i]),v=H.divide(a[i],d),w=H.expand(v);if(w.equals(1))break;v=_.div(t.clone(),w);if(v[0].equals(0))break;if(v[1].equals(0)){var y=!1;if(v[0].each(function(e){I(e.multiplier)||(y=!0)}),y){v[1]=H.expand(H.multiply(v[1],w));break}}w=I(w)&&w.lessThan(0);if(v[1].equals(0)&&!w){w=_.div(t.clone(),v[0].clone());if((d=w[0]).equals(0))return t;if(t=w[1],d.equals(-1)&&!t.equals(0))return t;w=v[0];if(t.equals(w)){v=_.Factor.reduce(w,e);return t.equals(v)?v:_.Factor.mfactor(v,e)}return(e.add(w),t.equals(0))?d:d.isConstant(\"all\")?(e.add(d),d):_.Factor.mfactor(d,e)}}}return t=_.Factor.sqdiff(t,e),t=_.Factor.zeroes(t,e)}},allLinear:function(e){for(var t=e.length,n=0;n<t;n++)if(!_.isLinear(e[n]))return!1;return!0},isLinear:function(e){var t=!1,n=e.group;if(n===y||n===Z)for(var r in t=!0,e.symbols){var i=e.symbols[r],r=i.group;if(r!==x&&r!==p||(t=!1),r===A)t=1===X(i).length;else if(r===y||r===Z)t=_.isLinear(i);else if(i.group!==u&&\"1\"!==i.power.toString()){t=!1;break}}else n===j&&1===e.power&&(t=!0);return t},gcd:function(){var e=1===arguments.length&&arguments[0]instanceof $.Vector?arguments[0].elements:$.Utils.arguments2Array(arguments);if(0===e.length)return new Q(1);if(1===e.length)return e[0];for(var t=[],n=!1,r=0;r<e.length;r++)if(e[r].group===x&&\"gcd\"===e[r].fname)(e=e.concat(arguments[r].args)).splice(r,1);else{var i=X(e[r]);if($.Utils.haveIntersection(i,t)){n=!0;break}t=t.concat(i)}if(n||0===t.length){if(e.every(function(e){return e.getDenom().equals(1)})){for(var s=e[0],r=1;r<e.length;r++)s=_.gcd_(e[r],s);return s}return H.divide(_.gcd.apply(null,e.map(function(e){return e.getNum()})),_.lcm.apply(null,e.map(function(e){return e.getDenom()})))}return H.symfunction(\"gcd\",e)},gcd_:function(e,t){if(e.group!==x&&e.group!==c||(e=$.Utils.block(\"PARSE2NUMBER\",function(){return H.parse(e)})),t.group===x&&(t=$.Utils.block(\"PARSE2NUMBER\",function(){return H.parse(t)})),e.isConstant()&&t.isConstant())return new Q($.Math2.QGCD(new z(+e),new z(+t)));var n=H.multiply(e.getDenom()||new Q(1),t.getDenom()||new Q(1)).invert();if(e=H.multiply(e.clone(),n.clone()),t=H.multiply(t.clone(),n.clone()),e=H.expand(e),t=H.expand(t),e.group===A||t.group===A){var r=H.divide(e.clone(),t.clone());if(!(u=H.multiply(t.clone(),r.getDenom().invert())).equals(1))return u}if(e.group===p||t.group===p){var r=new Q($.Math2.GCD(e.multiplier,t.multiplier)),i=_.gcd_(e.value===Y?new Q(1):H.parse(e.value),t.value===Y?new Q(1):H.parse(t.value)),s=_.gcd_(H.parse(e.power),H.parse(t.power));return H.multiply(r,H.pow(i,s))}e.length<t.length&&(u=e,e=t,t=u);i=X(e),s=X(t);if(i.length===s.length&&1===i.length&&i[0]===s[0]||1===i.length&&0===s.length||0===i.length&&1===s.length)return e=new W(e),t=new W(t),H.divide(e.gcd(t).toSymbol(),n);var o,a=[];for(e.each(function(e){a.push(e.multiplier)}),t.each(function(e){a.push(e.multiplier)});!t.equals(0);){var u=t.clone();if(e=e.clone(),o=_.div(e,u),t=o[1],o[0].equals(0))return H.divide(new Q($.Math2.QGCD(e.multiplier,t.multiplier)),n);e=u}var l=$.Math2.QGCD.apply(void 0,a);return l.equals(1)||e.each(function(e){e.multiplier=e.multiplier.divide(l)}),!e.equals(1)||e.isConstant()||t.isConstant()?H.divide(e,n):H.divide(H.symfunction(\"gcd\",arguments),n)},lcm:function(){var e;1===arguments.length?arguments[0]instanceof $.Vector?e=arguments[0].elements:H.error(\"lcm expects either 1 vector or 2 or more arguments\"):e=$.Utils.arguments2Array(arguments);var t=e.reduce(function(e,t){return H.multiply(e,t.clone())},new Q(1)),n=function(e,t){t=Number(t);for(var n,r,i=[],s=Math.pow(2,e.length),o=t;o<s;o++){for(n=[],r=e.length-1;0!=(o&1<<r)&&n.push(e[r]),r--;);n.length===t&&i.push(n)}return i}(arguments,arguments.length-1).map(function(e){return e.reduce(function(e,t){return H.multiply(e,t.clone())},new Q(1))}),n=e.every(function(e){return $.Utils.isVariableSymbol(e)})?H.symfunction(\"gcd\",$.Utils.arrayUnique(n)):_.gcd.apply(null,n);return H.divide(t,n)},divide:function(e,t){var n=$.Algebra.Factor.factor(e.clone()),r=n.getDenom();return r.isConstant(\"all\")?r=new Q(1):e=H.expand(Q.unwrapPARENS(H.multiply(n,r.clone()))),e=_.div(e,t),t=H.divide(e[1],t),H.divide(H.add(e[0],t),r)},div:function(e,t){var n,r,i=[new Q(0),e.clone()];try{if(t.isConstant(\"all\"))return e.each(function(e){e.multiplier=e.multiplier.divide(t.multiplier)}),[e,new Q(0)];if(e=H.expand(e),t=H.expand(t),e.group===j&&t.group===Z){var s=e.value,o=$.Utils.decompose_fn(t.clone(),s,!0);if(e.isLinear()&&o.x&&o.x.isLinear()&&t.isLinear()){var a=Q.create(e.multiplier);return[H.divide(a.clone(),o.a.clone()),H.divide(H.multiply(a,o.b),o.a).negate()]}}if(e.group===j&&t.group===j){var u=H.divide(e.clone(),t.clone());return u.isConstant()?[u,new Q(0)]:[new Q(0),e.clone()]}var l,c,p=e.hasFunc(),f=t.hasFunc(),h=!1;(p||f)&&(h=!0,l={},e=H.parse($.Utils.subFunctions(e,l)),t=H.parse($.Utils.subFunctions(t,l)),c=$.Utils.getFunctionsSubs(l));var m=$.Utils.arrayUnique(X(e).concat(X(t)));if((e.isImaginary()||t.isImaginary())&&m.push($.Settings.IMAGINARY),1===m.length)var g=(D=new W(e).divide(new W(t)))[0].toSymbol(),d=D[1].toSymbol();else{m.push(Y);var v=function(e){for(var t=new Q(0),n=0;n<e.length;n++)var r=e[n].toSymbol(),t=H.add(t,r);return t},b=function(e,t){var n,r=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)&&(n=s,i++),1<i)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)){n=s;break}return[r,n,e]},S=function(e,t){var n=e[t=t||0],r=e.length;if(n){for(var i,s=b(n),o=t+1;o<r;o++){var a=e[o],u=n.sum.equals(a.sum);if(!u&&s)break;if(u){for(var l,c,p,f,h=n.terms.length,m=0;m<h;m++){var g=n.terms[m],d=a.terms[m];void 0!==l&&!g.greaterThan(l)||(l=g,p=m),void 0!==c&&!d.greaterThan(c)||(c=d,f=m)}var v=l.subtract(a.terms[p]),u=c.subtract(n.terms[f]);if(v<u){s=[c,f,a];break}if(u<v){s=[l,p,n];break}}else if(s=b(a))break;s=b(a)}if(!s)return b(e[0],!0);for(o=0;o<E.length;o++){var w,y=E[o].terms;if((w=s[1])===y.length-1)return;if(!(i=y[w]).equals(0))break}return i.equals(0)?S(e,++t):s}},w=$.Utils.toMapObj(m),y=function(e,t){return t.sum.subtract(e.sum)},M=function(e,t){if(!e||!t)return!1;for(var n=0;n<e.terms.length;n++)if(e.terms[n].lessThan(t.terms[n]))return!1;return!0},N=e.tBase(w).sort(y),E=t.tBase(w).sort(y),q=M(N[0],E[0])&&N[0].count>E[0].count?E:N,x=S(q),A=[];if(x){var C=x[1],L=function(e,t){var n=e.len(),r=t.len(),t=t.terms[C],e=e.terms[C];return n<r&&t.greaterThan(e)?r-n:t.subtract(e)},C=function(e,t){for(var n=[],r=0;r<e.length;r++)for(var i=e[r],s=0;s<i.terms.length;s++){var o=n[s],a=i.terms[s];0===r?n[s]=a:o&&!o.equals(a)&&(n[s]=void 0)}for(r=0;r<n.length;r++)if((i=n[r])&&!i.equals(0))return r;return t}(N,C);N.sort(L),E.sort(L);var I=E[0],U=N[0],_=new J(new z(1),[],U.map);if(I.sum.greaterThan(U.sum)&&1<U.len())for(var R=0;R<U.terms.length;R++){var O=I.terms[R].subtract(U.terms[R]);if(O.equals(0))_.terms[R]=new z(0);else{var T=O.add(new z(1));_.terms[R]=O;for(var P=0;P<N.length;P++)N[P].terms[R]=N[P].terms[R].add(T)}}for(var k=M(N[0],E[0]),F=0;k&&(r=E,!(n=N)[0].sum.equals(r[0].sum)||n.length>=r.length);){if(200<F++)throw new $.exceptions.InfiniteLoopError(\"Unable to compute!\");var D=N[0].divide(E[0]);A.push(D),N.shift();for(R=1;R<E.length;R++){var B=E[R].multiply(D).generateImage(),G=N.length;0===G&&(B.coeff=B.coeff.neg(),N.push(B),N.sort(L));for(P=0;P<G;P++){var V=N[P];if(V.getImg()===B.getImg()){V.coeff=V.coeff.subtract(B.coeff),V.coeff.equals(0)&&($.Utils.remove(N,P),P--);break}P===G-1&&(B.coeff=B.coeff.neg(),N.push(B),N.sort(L))}}if(!(k=M(N[0],E[0]))&&N.length>=E.length)for(R=1;R<N.length;R++)if(k=M(N[R],E[0])){N.unshift($.Utils.remove(N,R));break}}}g=v(A),d=v(N),void 0!==_&&(_=_.toSymbol(),g=H.divide(g,_.clone()),d=H.divide(d,_))}return h&&(g=H.parse(g.text(),c),d=H.parse(d.text(),c)),[g,d]}catch(e){return i}},line:function(e,t,n){$.Utils.isArray(e)&&(e=$.Utils.convertToVector(e)),$.Utils.isArray(t)&&(t=$.Utils.convertToVector(t)),n=H.parse(n||\"x\"),$.Utils.isVector(e)&&$.Utils.isVector(t)||H.error('Line expects a vector! Received \"'+e+'\" & \"'+t+'\"');var r=H.subtract(t.e(1).clone(),e.e(1).clone()),t=H.subtract(t.e(2).clone(),e.e(2).clone()),r=H.divide(t,r),n=H.multiply(n,r.clone()),r=H.multiply(e.e(1).clone(),r);return H.add(H.subtract(n,r),e.e(2).clone())},PartFrac:{createTemplate:function(r,e,t,n){(r=_.Factor.factor(r)).each(function(e,t){var n;e.group===x&&\"\"===e.fname&&e.args[0].group===j&&(n=e.args[0],this.symbols?(delete this.symbols[t],this.symbols[n.value]=n):r=e.args[0])});for(var i=e.collectFactors(),s=[],o=[],a=new Q(1),u=0;u<i.length;u++){var l=Q.unwrapPARENS(i[u]);if(l.power.greaterThan(1))for(var c=Number(l.power),p=l.clone().toLinear(),f=Number(_.degree(p,n)),h=0;h<c;h++){var m=H.pow(p.clone(),new Q(h+1));t.push(m.clone());var g=H.divide(r.clone(),m.clone());o.push(f),s.push(g)}else{f=Number(_.degree(l,n)),t.push(l);g=H.divide(r.clone(),l.clone());g=H.expand(Q.unwrapPARENS(g)),o.push(f),s.push(g)}}return[t=t.map(function(e){return H.multiply(e,a.clone())}),s,o]},partfrac:function(t,o,n){var e=X(t);o=o||H.parse(e[0]);try{var a,r,i,u,l,c,s,p,f,h,m,g,d,v,w=H.expand(t.getNum()),y=H.expand(t.getDenom().toUnitMultiplier());if(w.multiplier=t.multiplier,i=w.groupTerms(o),Number(_.degree(w,o))>=Number(_.degree(y,o))?(p=(s=_.div(w.clone(),H.expand(y.clone())))[0],i=(w=s[1]).groupTerms(o)):p=new Q(0),1===Number(_.degree(y,o))){var b=H.divide(w,y);return n?[p,b]:H.add(p,b)}r=_.Factor.factor(y),m=_.PartFrac.createTemplate(y.clone(),r,[],o),g=m[0],f=m[1],u=m[2],c=[i.length],l=[],a=[],h=[],f.map(function(e,t){d=g[t],v=u[t];for(var n=0;n<v;n++){a.push(d.clone());var r=Q.create(o,n),i=H.expand(H.multiply(e,r.clone())).groupTerms(o),s=i.length;c.push(s),l.push(i),h.push(r.clone())}});for(var S=$.Utils.arrayMax(c),M=new $.Matrix($.Utils.fillHoles(i,S)).transpose(),N=new $.Matrix,E=0;E<l.length;E++)N.elements.push($.Utils.fillHoles(l[E],S));var q=H.multiply(N.transpose().invert(),M),x=n?[p]:p;return q.each(function(e,t){t=H.multiply(h[t],H.divide(e,a[t]));n?x.push(t):x=H.add(x,t)}),x}catch(e){try{if(t.isComposite()){var A={};t.each(function(e){var t=e.getDenom(),n=e.getNum(),e=A[t];A[t]=e?H.add(e,n):n});var C,L=new Q(0);for(C in A)L=H.add(L,H.divide(A[C],H.parse(C)));t=L}}catch(e){}}return t}},degree:function(e,t,n){if(n=n||{nd:[],sd:[],depth:0},!t){var r=X(e);if(1<r.length)throw new Error(\"You must specify the variable for multivariate polynomials!\");if(0===r.length)return new Q(0);t=H.parse(r[0])}r=e.group;e.isComposite()?((e=e.clone()).distributeExponent(),e.each(function(e){n.depth++,_.degree(e,t,n),n.depth--})):e.group===A?e.each(function(e){n.depth++,_.degree(e,t,n),n.depth++}):r===p&&e.value===t.value?n.sd.push(e.power.clone()):r===j&&e.value===t.value?n.nd.push(H.parse(e.power)):n.nd.push(new Q(0));e=0<n.nd.length?$.Utils.arrayMax(n.nd):void 0;return 0===n.depth&&0<n.sd.length?(void 0!==e&&n.sd.unshift(e),H.symfunction(\"max\",n.sd)):$.Utils.isSymbol(e)?e:H.parse(e)},sqComplete:function(e,t,n){$.Utils.isSymbol(t)||(t=H.parse(t));var r,i,s,o,a,u=function(e){throw new $.exceptions.ValueLimitExceededError(e=e||\"Stopping\")};return e.isPoly(!0)||u(\"Must be a polynomial!\"),o=$.Utils.inBrackets,e=e.clone(),(r=$.Algebra.degree(e,t)).equals(2)||u(\"Cannot complete square for degree \"+r),a=(s=$.Algebra.coeffs(e,t))[2],u=s[1].sign(),r=H.divide(s[1],new Q(2)),e=H.pow(r.clone(),new Q(2)),n?[a,r,i]:(a=f.sqrt(a),e=H.divide(f.sqrt(e),a.clone()),i=H.subtract(s[0],H.pow(e.clone(),new Q(2))),{a:e=H.parse(o(a.clone()+\"*\"+t+(u<0?\"-\":\"+\")+e)),c:i,f:H.add(H.pow(e.clone(),new Q(2)),i.clone())})},Simplify:{strip:function(e){var t=H.parse(e.multiplier);e.toUnitMultiplier();var n=H.parse(e.power);return e.toLinear(),[t,n,e]},unstrip:function(e,t){var n=e[0],e=e[1];return H.multiply(n,H.pow(t,e))},complexSimp:function(e,t){var n=e.realpart(),r=e.imagpart(),i=t.realpart(),s=t.imagpart(),e=H.multiply(n.clone(),i.clone()),t=H.multiply(r.clone(),s.clone()),r=H.multiply(i.clone(),r),n=H.multiply(n,s.clone()),s=H.add(H.pow(i,new Q(2)),H.pow(s,new Q(2)));return H.divide(H.add(H.add(e,t),H.multiply(H.subtract(r,n),Q.imaginary())),s)},trigSimp:function(e){var t,n,r,i,s,o;return e.containsFunction([\"cos\",\"sin\",\"tan\"])&&(e=e.clone(),n=(e=(t=_.Simplify.strip(e)).pop()).clone(),e.group===Z?(r=new Q(0),e.each(function(e){e=_.Simplify.trigSimp(e.fnTransform());r=H.add(r,e)},!0),n=H.pow(H.multiply(new Q(e.multiplier),r),new Q(e.power))):e.group===A&&(i=e.getNum(),s=e.getDenom(),(n=\"sin\"===i.fname&&\"cos\"===s.fname&&i.args[0].equals(s.args[0])&&i.power.equals(s.power)?H.parse($.Utils.format(\"({0})*({1})*tan({2})^({3})\",s.multiplier,i.multiplier,i.args[0],i.power)):n).group===A&&(o=new Q(1),n.each(function(e){\"tan\"===e.fname&&(e=H.parse($.Utils.format(\"({0})*sin({1})^({2})/cos({1})^({2})\",e.multiplier,_.Simplify.simplify(e.args[0]),e.power))),o=H.multiply(o,e)}),n=o)),e=n=_.Simplify.unstrip(t,n).distributeMultiplier()),e},fracSimp:function(e){var t=e.getDenom();if((e=(a=e.getNum()).isImaginary()&&t.isImaginary()?_.Simplify.complexSimp(a,t):e).isComposite()){for(var n,r,i,s,o,a,u=(e=1<e.power?H.expand(e):e).collectSymbols(),l=u.pop();u.length;)o=u.pop(),s=H.parse(l.getDenom()),i=H.parse(o.getDenom()),n=l.getNum(),r=o.getNum(),o=H.multiply(s.clone(),i.clone()),i=H.multiply(n,i),s=H.multiply(r,s),l=H.divide(H.add(i,s),o);return t=H.expand(l.getDenom()),(t=(a=H.expand(l.getNum())).isImaginary()&&t.isImaginary()?_.Simplify.complexSimp(a,t):H.divide(a,t)).equals(e)?e:_.Simplify.simplify(t)}return e},ratSimp:function(e){var t,n;return e.group===A&&(t=e.getDenom(),n=e.getNum().distributeMultiplier(),t=_.Simplify.fracSimp(t),n=_.Simplify.fracSimp(n),e=H.divide(n,t)),e},sqrtSimp:function(e,t){if(e.isSQRT()){var n,r,i=_.Factor.factor(e.args[0].clone()),s=H.parse(i.multiplier),o=s.sign(),a=H.sqrt(s.abs());if(I(a))return i.group===A?(n=new Q(1),i.each(function(e){var t;e.group===u?(t=H.sqrt(e.clone()),I(t)?a=H.multiply(a,t):n=H.multiply(n,e)):n=H.multiply(n,e)}),o=H.multiply(n,H.parse(o)),(r=H.sqrt(o.clone())).isImaginary&&(r=H.sqrt(H.expand(o.clone())))):r=H.sqrt(i.clone().toUnitMultiplier()),H.multiply(a,r)}else e.isComposite()&&e.isLinear()?(a=new Q(0),e.each(function(e){a=H.add(a,_.Simplify.sqrtSimp(e))},!0),a=H.multiply(a,H.parse(e.multiplier))):e.group===A&&(a=H.parse(e.multiplier),e.each(function(e){e=_.Simplify.sqrtSimp(e);a=H.multiply(a,e)},!0),a=H.pow(a,H.parse(e.power)));return a||H.parse(e)},patternSub:function(n){var r={},i=function(e){var t=!1;return e.each(function(e){e.group===Z?t=!0:e.symbols&&(t=i(e))}),t},s=function(e){e.each(function(e){var t;!e.symbols&&e.group!==x||(i(e)?s(e):r[e.value]||(t=$.Utils.getU(n),r[e.value]=t,n=n.sub(e.value,t)))},!0)};return s(n),[n,r]},simplify:function(e){var t=_.Simplify.strip(e);if(e=t.pop(),(e=_.Simplify.fracSimp(e)).isConstant()||e.group===$.groups.S)return t.push(e),_.Simplify.unstrip(t,e);var n,r=e.clone(),r=_.Simplify.trigSimp(r);return r=_.Simplify.ratSimp(r),(r=_.Factor.factor(r)).group===$.groups.CP&&r.isLinear()&&(e=r.multiplier.clone(),r.toUnitMultiplier(),n=new Q(0),r.each(function(e){e=_.Simplify.simplify(e);n=H.add(n,e)}),(r=n).multiplier=n.multiplier.multiply(e)),_.Simplify.unstrip(t,r)}},Classes:{Polynomial:W,Factors:U,MVTerm:J}};$.Expression.prototype.simplify=function(){return _.Simplify.simplify(this.symbol)},nerdamer.useAlgebraDiv=function(){var n=_.divideFn=H.divide,r=0;H.divide=function(e,t){t=1===++r?$.Algebra.divide(e,t):n(e,t);return r=0,t}},nerdamer.useParserDiv=function(){_.divideFn&&(H.divide=_.divideFn),delete _.divideFn},nerdamer.register([{name:\"factor\",visible:!0,numargs:1,build:function(){return _.Factor.factor}},{name:\"simplify\",visible:!0,numargs:1,build:function(){return _.Simplify.simplify}},{name:\"gcd\",visible:!0,numargs:[1],build:function(){return _.gcd}},{name:\"lcm\",visible:!0,numargs:[1],build:function(){return _.lcm}},{name:\"roots\",visible:!0,numargs:-1,build:function(){return _.roots}},{name:\"divide\",visible:!0,numargs:2,build:function(){return _.divide}},{name:\"div\",visible:!0,numargs:2,build:function(){return _.div}},{name:\"partfrac\",visible:!0,numargs:[1,2],build:function(){return _.PartFrac.partfrac}},{name:\"deg\",visible:!0,numargs:[1,2],build:function(){return _.degree}},{name:\"coeffs\",visible:!0,numargs:[1,2],build:function(){return function(){var e=_.coeffs.apply(_,arguments);return new $.Vector(e)}}},{name:\"line\",visible:!0,numargs:[2,3],build:function(){return _.line}},{name:\"sqcomp\",visible:!0,numargs:[1,2],build:function(){return function(t,e){try{return e=e||X(t)[0],_.sqComplete(t.clone(),e).f}catch(e){return t}}}}]),nerdamer.api()}(),\"undefined\"!=typeof module&&void 0===nerdamer&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Algebra.js\")),function(){\"use strict\";var ct=nerdamer.getCore(),pt=ct.PARSER,ft=ct.Frac,ht=ct.Settings,mt=ct.Utils.isSymbol,gt=ct.groups.FN,dt=ct.Symbol,m=ct.Utils.text,vt=ct.Utils.inBrackets,wt=ct.Utils.isInt,yt=ct.Utils.format,bt=ct.Utils.even,k=ct.Utils.evaluate,g=ct.groups.N,St=ct.groups.S,gt=ct.groups.FN,Mt=ct.groups.PL,Nt=ct.groups.CP,Et=ct.groups.CB,qt=ct.groups.EX,d=ct.groups.P,xt=ht.LOG,At=\"sqrt\",Ct=\"sin\",Lt=\"cos\",It=\"tan\",Ut=\"sec\",_t=\"csc\",Rt=\"cot\",Ot=\"asin\",Tt=\"atan\",Pt=\"sinh\",kt=\"cosh\",Ft=\"tanh\";function Dt(e){this.message=e||\"\"}Dt.prototype=new Error,dt.prototype.hasIntegral=function(){return this.containsFunction(\"integrate\")},dt.prototype.fnTransform=function(){if(this.group!==gt)return this;var e,t,n,r=this.args[0],i=new dt(this.multiplier),s=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case Pt:n=pt.parse(yt(\"(e^({0})-e^(-({0})))/2\",r));break;case kt:n=pt.parse(yt(\"(e^({0})+e^(-({0})))/2\",r));break;case Ft:n=pt.parse(yt(\"(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))\",r));break;case It:n=pt.parse(yt(\"sin({0})/cos({0})\",r));break;case _t:n=pt.parse(yt(\"1/sin({0})\",r));break;case Ut:n=pt.parse(yt(\"1/cos({0})\",r));break;default:n=s}else if(this.power.equals(2))switch(this.fname){case Ct:n=pt.parse(yt(\"1/2-cos(2*({0}))/2\",r));break;case Lt:n=pt.parse(yt(\"1/2+cos(2*({0}))/2\",r));break;case It:n=pt.parse(yt(\"sin({0})^2/cos({0})^2\",r));break;case kt:n=pt.parse(yt(\"1/2+cosh(2*({0}))/2\",r));break;case Pt:n=pt.parse(yt(\"-1/2+cosh(2*({0}))/2\",r));break;case Ft:n=pt.parse(yt(\"(1+cosh(2*({0})))/(-1+cosh(2*({0})))\",r));break;case Ut:n=pt.parse(yt(\"(1-cos(2*({0})))/(1+cos(2*({0})))+1\",r));break;default:n=s}else this.fname===Ut?n=pt.parse(yt(\"1/cos({0})^({1})\",this.args[0],this.power)):this.fname===_t?n=pt.parse(yt(\"1/sin({0})^({1})\",this.args[0],this.power)):this.fname===It?n=this.power.lessThan(0)?pt.parse(yt(\"cos({0})^(-({1}))/sin({0})^({1})\",this.args[0],this.power.negate())):pt.parse(yt(\"sin({0})^({1})/cos({0})^({1})\",this.args[0],this.power)):this.fname===Ct&&this.power.lessThan(0)?n=pt.parse(yt(\"csc({0})^(-({1}))\",this.args[0],this.power.negate())):this.fname===Lt&&this.power.lessThan(0)?n=pt.parse(yt(\"sec({0})^(-({1}))\",this.args[0],this.power.negate())):this.fname===Ct&&this.power.equals(3)?n=pt.parse(yt(\"(3*sin({0})-sin(3*({0})))/4\",this.args[0])):this.fname===Lt&&this.power.equals(3)?n=pt.parse(yt(\"(cos(3*({0}))+3*cos({0}))/4\",this.args[0])):this.fname!==Lt&&this.fname!==Ct||!bt(this.power)?n=s:(t=this.power/2,e=pt.pow(this.clone().toLinear(),pt.parse(2)).fnTransform(),t=pt.expand(pt.pow(e,pt.parse(t))),n=new dt(0),t.each(function(e){e=e.fnTransform();n=pt.add(n,e)},!0));return pt.multiply(n,i)},dt.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===St)return!1;if(this.fname&&(ct.Utils.in_trig(this.fname)||ct.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].hasTrig())return!0;return!1},ct.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},ct.Utils.toCommonDenominator=function(e){if(e.isComposite()&&e.isLinear()){var t=new dt(e.multiplier),n=new dt(1),r=new dt(0);return e.each(function(e){n=pt.multiply(n,e.getDenom())},!0),e.each(function(e){var t=e.getNum(),e=e.getDenom(),e=pt.multiply(t,pt.divide(n.clone(),e));r=pt.add(r,e)}),pt.multiply(t,ct.Algebra.divide(pt.expand(r),pt.expand(n)))}return e},ct.Utils.in_inverse_trig=function(e){return-1!==[Ot,\"acos\",Tt,\"acsc\",\"asec\",\"acot\"].indexOf(e)},ct.Utils.in_trig=function(e){return-1!==[Lt,Ct,It,Ut,_t,Rt].indexOf(e)},ct.Utils.in_htrig=function(e){return-1!==[Pt,kt,Ft,\"acsch\",\"asech\",\"acoth\"].indexOf(e)},ct.Matrix.jacobian=function(e,t){var i=new ct.Matrix;return(t=t||ct.Utils.arrayGetVariables(e)).forEach(function(n,r){e.forEach(function(e,t){e=ct.Calculus.diff(e.clone(),n);i.set(t,r,e)})}),i},ct.Matrix.prototype.max=function(){var t=new dt(0);return this.each(function(e){e=e.abs();e.gt(t)&&(t=e)}),t},ct.Matrix.cMatrix=function(n,e){var r=new ct.Matrix;return e.forEach(function(e,t){r.set(t,0,pt.parse(n))}),r};var Bt=ct.Utils.all_functions=function(e){for(var t=0,n=e.length;t<n;t++)if(e[t].group!==gt)return!1;return!0},l=ct.Utils.cosAsinBtranform=function(e,t){e=e.args[0],t=t.args[0];return pt.parse(yt(\"(sin(({0})+({1}))-sin(({0})-({1})))/2\",e,t))},c=ct.Utils.cosAsinAtranform=function(e,t){if(1!==Number(t.power))return pt.multiply(e,t);e=e.args[0];return pt.parse(yt(\"(sin(2*({0})))/2\",e))},p=ct.Utils.cosAsinBtranform=function(e,t){e=e.args[0],t=t.args[0];return pt.parse(yt(\"(cos(({0})+({1}))-cos(({0})-({1})))/2\",e,t))},Gt=ct.Utils.trigTransform=function(e){for(var t,n,r,i,s={},o=new dt(1),a=0,u=e.length;a<u;a++)(r=e[a]).group===gt?(n=r.fname)===Lt&&s.sin?(t=(s.sin.args[0].toString()!==r.args[0].toString()?l:c)(r,s.sin),delete s.sin,o=pt.multiply(o,t)):n===Ct&&s.cos?(t=(s.cos.args[0].toString()!==r.args[0].toString()?l:c)(r,s.cos),delete s.cos,o=pt.multiply(o,t)):n===Ct&&s.sin?(t=s.sin.args[0].toString()!==r.args[0].toString()?p(r,s.sin):pt.multiply(r,s.sin),delete s.sin,o=t):s[n]=r:o=pt.multiply(o,r);for(i in s)o=pt.multiply(o,s[i]);return o};ct.Settings.integration_depth=10,ct.Settings.max_lim_depth=10;var Vt=ct.Calculus={version:\"1.4.6\",sum:function(s,o,a,u){if(o.group!==ct.groups.S)throw new ct.exceptions.NerdamerTypeError(\"Index must be symbol. \"+m(o)+\" provided\");var e;return o=o.value,ct.Utils.isNumericSymbol(a)&&ct.Utils.isNumericSymbol(u)?(e=u-a<200?\"\":\"PARSE2NUMBER\",a=Number(a),u=Number(u),ct.Utils.block(e,function(){for(var e=s.text(),t={\"~\":!0},n=new ct.Symbol(0),r=a;r<=u;r++){t[o]=new dt(r);var i=pt.parse(e,t),n=pt.add(n,i)}return n})):pt.symfunction(\"sum\",arguments)},product:function(i,s,o,a){if(s.group!==ct.groups.S)throw new ct.exceptions.NerdamerTypeError(\"Index must be symbol. \"+m(s)+\" provided\");return s=s.value,ct.Utils.isNumericSymbol(o)&&ct.Utils.isNumericSymbol(a)?ct.Utils.block(a-o<200?\"\":\"PARSE2NUMBER\",function(){o=Number(o),a=Number(a.multiplier);for(var e=i.text(),t={},n=new ct.Symbol(1),r=o;r<=a;r++)t[s]=new dt(r),n=pt.multiply(n,pt.parse(e,t));return n}):pt.symfunction(\"product\",arguments)},diff:function(e,l,r){if(ct.Utils.isVector(e)){var t=new ct.Vector([]);return e.each(function(e){t.elements.push(Vt.diff(e,l,r))}),t}if(ct.Utils.isMatrix(e)){var i=new ct.Matrix;return e.each(function(e,t,n){i.set(t,n,Vt.diff(e,l,r))}),i}var n,s,c=mt(l)?l.text():l;return r=mt(r)?r.multiplier:r||1,void 0===c&&(c=ct.Utils.variables(e)[0]),e.group===gt&&e.fname===At&&(s=e.args[0],n=e.power.clone(),s.group===g&&s.group===d||(s.power=mt(s.power)?pt.multiply(s.power,pt.multiply(new dt(.5)),n):s.power.multiply(new ft(.5)).multiply(n),s.multiplier=s.multiplier.multiply(e.multiplier)),e=s),e=e.group!==gt||mt(e.power)?f(e):(n=f(pt.parse(e)),s=Vt.diff(e.args[0].clone(),c),pt.multiply(n,s)),e=1<r?Vt.diff(e,l,--r):e;function p(e){return e.value!==c&&!e.contains(c,!0)||(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new ft(1)),e.power.equals(0)&&(e=dt(e.multiplier))),e}function f(e){var t=e.group;if(t===g||t===St&&e.value!==c||t===d)e=dt(0);else if(t===St)e=p(e);else{if(t===Et){var n=e.multiplier.clone();e.toUnitMultiplier();var r=pt.multiply(function(e){for(var t=e.collectSymbols(),n=new dt(0),r=t.length,i=0;i<r;i++){for(var s=Vt.diff(t[i].clone(),c),o=0;o<r;o++)i!==o&&(s=pt.multiply(s,t[o].clone()));n=pt.add(n,s)}return n}(e),p(e));return r.multiplier=r.multiplier.multiply(n),r}if(t===gt&&e.power.equals(1))switch(e.fname){case xt:s=e.clone(),(e=e.args[0].clone()).power=e.power.negate(),e.multiplier=s.multiplier.divide(e.multiplier);break;case Lt:e.fname=Ct,e.multiplier.negate();break;case Ct:e.fname=Lt;break;case It:e.fname=Ut,e.power=new ft(2);break;case Ut:e=h(e,It);break;case _t:e=h(e,\"-cot\");break;case Rt:e.fname=_t,e.multiplier.negate(),e.power=new ft(2);break;case Ot:e=pt.parse(\"(sqrt(1-(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"acos\":e=pt.parse(\"-(sqrt(1-(\"+m(e.args[0])+\")^2))^(-1)\");break;case Tt:e=pt.parse(\"(1+(\"+m(e.args[0])+\")^2)^(-1)\");break;case\"abs\":n=e.multiplier.clone(),e.toUnitMultiplier(),(o=e.args[0].clone()).toUnitMultiplier(),(e=pt.parse(vt(m(e.args[0]))+\"/abs\"+vt(m(o)))).multiplier=n;break;case\"parens\":e=dt(1);break;case\"cosh\":e.fname=\"sinh\";break;case\"sinh\":e.fname=\"cosh\";break;case Ft:e.fname=\"sech\",e.power=new ft(2);break;case\"sech\":e=h(e,\"-tanh\");break;case\"csch\":var i=String(e.args[0]);return pt.parse(\"-coth(\"+i+\")*csch(\"+i+\")\");case\"coth\":i=String(e.args[0]);return pt.parse(\"-csch(\"+i+\")^2\");case\"asinh\":e=pt.parse(\"(sqrt(1+(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"acosh\":e=pt.parse(\"(sqrt(-1+(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"atanh\":e=pt.parse(\"(1-(\"+m(e.args[0])+\")^2)^(-1)\");break;case\"asech\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1/(\"+i+\")^2-1)*(\"+i+\")^2)\");break;case\"acoth\":e=pt.parse(\"-1/((\"+e.args[0]+\")^2-1)\");break;case\"acsch\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1/(\"+i+\")^2+1)*(\"+i+\")^2)\");break;case\"asec\":i=String(e.args[0]);e=pt.parse(\"1/(sqrt(1-1/(\"+i+\")^2)*(\"+i+\")^2)\");break;case\"acsc\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1-1/(\"+i+\")^2)*(\"+i+\")^2)\");break;case\"acot\":e=pt.parse(\"-1/((\"+e.args[0]+\")^2+1)\");break;case\"S\":i=String(e.args[0]);e=pt.parse(\"sin((pi*(\"+i+\")^2)/2)\");break;case\"C\":i=String(e.args[0]);e=pt.parse(\"cos((pi*(\"+i+\")^2)/2)\");break;case\"Si\":i=e.args[0];e=pt.parse(\"sin(\"+i+\")/(\"+i+\")\");break;case\"Shi\":i=e.args[0];e=pt.parse(\"sinh(\"+i+\")/(\"+i+\")\");break;case\"Ci\":i=e.args[0];e=pt.parse(\"cos(\"+i+\")/(\"+i+\")\");break;case\"Chi\":i=e.args[0];e=pt.parse(\"cosh(\"+i+\")/(\"+i+\")\");break;case\"Ei\":i=e.args[0];e=pt.parse(\"e^(\"+i+\")/(\"+i+\")\");break;case\"Li\":i=e.args[0];e=pt.parse(\"1/\"+ht.LOG+\"(\"+i+\")\");break;case\"erf\":e=pt.parse(\"(2*e^(-(\"+e.args[0]+\")^2))/sqrt(pi)\");break;case\"atan2\":var s=String(e.args[0]),i=String(e.args[1]);e=pt.parse(\"(\"+i+\")/((\"+i+\")^2+(\"+s+\")^2)\");break;case\"sign\":e=new dt(0);break;case\"sinc\":e=pt.parse(yt(\"(({0})*cos({0})-sin({0}))*({0})^(-2)\",e.args[0]));break;case ht.LOG10:e=pt.parse(\"1/((\"+e.args[0]+\")*\"+ht.LOG+\"(10))\");break;default:e=pt.symfunction(\"diff\",[e,l])}else if(t===qt||t===gt&&mt(e.power)){var r=t===qt?e.value:t===gt&&e.contains(c)?e.fname+vt(m(e.args[0])):e.value+vt(m(e.args[0])),o=(pt.multiply(pt.parse(xt+vt(r)),e.power.clone()),Vt.diff(pt.multiply(pt.parse(xt+vt(r)),e.power.clone()),c));e=pt.multiply(e,o)}else if(t!==gt||e.power.equals(1)){if(t===Nt||t===Mt){var a,t=e.clone(),u=new dt(0);for(a in e.symbols)u=pt.add(u,Vt.diff(e.symbols[a].clone(),c));e=pt.multiply(p(t),u)}}else(o=e.clone()).toLinear(),o.toUnitMultiplier(),e=pt.multiply(p(e.clone()),f(o))}return e.updateHash(),e}function h(e,t,n){return pt.multiply(e,pt.parse(t+vt(n||m(e.args[0]))))}},integration:{u_substitution:function(e,i){function t(e,t,n){var r=Vt.diff(t,i),r=n?n(e,t):pt.divide(e.clone(),r);return r.contains(i,!0)?null:r}function n(e,t){e=Vt.integrate(pt.symfunction(e,[new dt(u)]),u,0);return(e=e.sub(new dt(u),t)).updateHash(),e}var r,s=e[0].clone(),o=e[1].clone(),a=s.group,e=o.group,u=\"__u__\";if(a===gt&&e!==gt)return(r=t(o,(c=s.args[0]).clone()))?pt.multiply(r,n(s.fname,c)):(r=t(o,s))?Vt.integration.poly_integrate(s):void 0;if(e===gt&&a!==gt){if(r=t(s,(c=o.args[0]).clone()))return pt.multiply(r,n(o.fname,c))}else{if(a===gt&&e===gt)return(r=t(s.clone(),o.clone()))||(r=t(o.clone(),s.clone()))?pt.multiply(Vt.integration.poly_integrate(o),r):void 0;if(a===qt&&e!==qt){if(!(r=t(o,(p=s.power).clone()))){var l=Vt.integration.decompose_arg(p.clone(),i),c=Vt.diff(l[2].clone(),i),c=Vt.integration.decompose_arg(c.clone(),i);if(pt.multiply(l[1],c[1]).power.equals(o.power)){c=pt.divide(l[0].clone(),c[0].clone()),c=pt.multiply(c.clone(),pt.pow(new dt(s.value),pt.multiply(l[0],new dt(u)))),c=pt.multiply(c,new dt(u));return Vt.integration.by_parts(c,u,0,{}).sub(u,l[1].clone())}}l=Vt.integrate(s.sub(p.clone(),new dt(u)),u,0);return pt.multiply(l.sub(new dt(u),p),r)}if(e===qt&&a!==qt){r=t(s,(p=o.power).clone());l=Vt.integrate(o.sub(p,new dt(u)),u,0);return pt.multiply(l.sub(new dt(u),p),r)}if(s.isComposite()||o.isComposite()){var a=function(e,t){t=Vt.diff(t,i),e=ct.Algebra.Factor.factor(e),t=ct.Algebra.Factor.factor(t);return pt.divide(e,t)},l=s.isComposite()?s.clone().toLinear():s.clone(),p=o.isComposite()?o.clone().toLinear():o.clone();return(r=t(l.clone(),p.clone(),a))?pt.multiply(Vt.integration.poly_integrate(o),r):(r=t(p.clone(),l.clone(),a))?pt.multiply(Vt.integration.poly_integrate(s),r):void 0}}},poly_integrate:function(e){var t=e.power.toString(),n=e.multiplier.toDecimal(),e=e.toUnitMultiplier().toLinear();return-1===Number(t)?pt.multiply(new dt(n),pt.symfunction(xt,[e])):pt.parse(yt(\"({0})*({1})^(({2})+1)/(({2})+1)\",n,e,t))},stop:function(e){throw ct.Utils.warn(e=e||\"Unable to compute integral!\"),new Dt(e)},partial_fraction:function(e,t,n,r){var i;return mt(t)||(t=pt.parse(t)),i=new dt(0),(e=ct.Algebra.PartFrac.partfrac(e,t)).group===Et&&e.isLinear()?(e.each(function(e){e.isLinear()||Vt.integration.stop()}),e.each(function(e){i=pt.add(i,Vt.integrate(e,t,n,r))})):i=pt.add(i,Vt.integrate(e,t,n,r)),i},get_udv:function(e){function t(e){var t,n=e.group;n===gt?(t=e.fname,ct.Utils.in_trig(t)||ct.Utils.in_htrig(t)?r[3].push(e):ct.Utils.in_inverse_trig(t)?r[1].push(e):t===xt?r[0].push(e):Vt.integration.stop()):n===St||e.isComposite()&&e.isLinear()||n===Et&&e.isLinear()?r[2].push(e):n===qt||e.isComposite()&&!e.isLinear()?r[4].push(e):Vt.integration.stop()}var r=[[],[],[],[],[]];e.group===Et?e.each(function(e){t(dt.unwrapSQRT(e,!0))}):t(e);for(var n,i=new dt(1),s=0;s<5;s++){var o=r[s],a=o.length;if(0<a){if(1<a)for(var u=new dt(1),l=0;l<a;l++)u=pt.multiply(u,o[l].clone());else u=o[0].clone();n?i=pt.multiply(i,u):(n=u).multiplier=n.multiplier.multiply(e.multiplier)}}return[n,i]},trig_sub:function(e,t,n,r,i,s){(i=i||Vt.integration.decompose_arg(e.clone().toLinear(),t))[3],i[2];var o=i[0],a=i[1];if(a.power.equals(2)&&o.greaterThan(0)){t=ct.Utils.getU(e),i=pt.parse(It+vt(t)),o=pt.parse(Ut+vt(t)+\"^2\"),o=pt.multiply(e.sub(a,i),o),a=Vt.integrate(o,t,n,r).sub(i,a);return ct.Utils.clearU(i),a}},by_parts:function(e,t,n,r){var i,s,o,a,u,l;return r.previous=r.previous||[],o=(s=Vt.integration.get_udv(e))[0],i=s[1],u=(a=dt.unwrapSQRT(pt.expand(Vt.diff(o.clone(),t)),!0)).clone().stripVar(t),a=pt.divide(a,u.clone()),e=Vt.integrate(i.clone(),t,n||0),a=(s=pt.multiply(e.clone(),a)).toString(),-1!==r.previous.indexOf(a)&&ct.Utils.in_trig(o.fname)&&i.isE()?(r.is_cyclic=!0,new dt(1)):(r.previous.push(a),o=pt.multiply(o,e),e=s.multiplier.clone(),s.toUnitMultiplier(),(u=pt.multiply(Vt.integrate(s.clone(),t,n,r),u)).multiplier=u.multiplier.multiply(e),u=pt.subtract(o,u),r.is_cyclic&&(r.previous.pop(),0===r.previous.length&&(u=pt.expand(u),l=new dt(0),u.each(function(e){e.contains(t)||(l=pt.add(l,e.clone()))}),u=pt.divide(pt.subtract(u,l.clone()),pt.subtract(new dt(1),l)))),u)},decompose_arg:ct.Utils.decompose_fn},integrate:function(ot,at,ut,lt){var e;if(at||(e=ct.Utils.variables(ot),at=(at=1===e.length?e[0]:at)||\"x\"),ct.Utils.isVector(ot)){var t=new ct.Vector([]);return ot.each(function(e){t.elements.push(Vt.integrate(e,at))}),t}return isNaN(at)||pt.error(\"variable expected but received \"+at),ot.isConstant(!0)?pt.multiply(ot.clone(),pt.parse(at)):(lt=lt||{},ct.Utils.block(\"PARSE2NUMBER\",function(){ut=ut||0;var t,n=mt(at)?at.toString():at,e=(ce=dt.unwrapSQRT(ot.clone(),!0)).group;try{if(++ut>ct.Settings.integration_depth&&Vt.integration.stop(\"Maximum depth reached. Exiting!\"),ce.contains(n,!0)){if(e===St)t=Vt.integration.poly_integrate(ce,n,ut);else if(e===qt)if(ce.previousGroup===gt&&\"sqrt\"!==ce.fname&&ce.fname!==ht.PARENTHESIS&&Vt.integration.stop(),ce.contains(n)&&ce.previousGroup!==gt)ce.power.contains(n)?Vt.integration.stop():((We=Vt.diff(ce.clone().toLinear(),n)).contains(n)&&Vt.integration.stop(),t=Vt.integration.poly_integrate(ce,n,ut));else{if((f=Vt.diff(ce.power.clone(),n)).contains(n)){var r=f.stripVar(n);if((h=pt.divide(f.clone(),r.clone())).group===St&&h.isLinear())return r.multiplier=r.multiplier.divide(new ft(2)),pt.parse(yt(\"({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))\",r,n,ce.multiplier));Vt.integration.stop()}ce.isE()?f.isLinear()?t=ce:f.isE()&&f.power.group===St&&f.power.power.equals(1)?t=pt.multiply(pt.symfunction(\"Ei\",[ce.power.clone()]),ce.power):Vt.integration.stop():(g=pt.symfunction(xt,[pt.parse(ce.value)]),t=pt.divide(ce,g)),t=pt.divide(t,f)}else if(ce.isComposite()&&ce.isLinear()){var i=pt.parse(ce.multiplier);ce.toUnitMultiplier(),t=new dt(0),ce.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),t=pt.multiply(i,t)}else if(e===Nt)if((ce=ce.power.greaterThan(1)?pt.expand(ce):ce).power.equals(1))t=new dt(0),ce.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))},!0);else{var s=Number(ce.power),i=ce.multiplier.clone();ce.toUnitMultiplier();var o,a,u,l=ce.clone().toLinear(),c=(Ve=Vt.integration.decompose_arg(l,n))[3],p=Ve[2],f=Ve[0],h=Ve[1];if(-1===s&&h.group!==Mt&&h.power.equals(2)){var m,g,d,v,w,y,b,S,M,N,E,q=!wt(c)||0<c;t=h.group===St&&h.power.equals(2)&&q?(m=function(e){var t=new dt(1);return e.each(function(e){t=pt.multiply(t,\"abs\"===e.fname?e.args[0]:e)}),t},d=f.clone(),v=c.clone(),d=pt.pow(d,new dt(.5)),v=pt.pow(v,new dt(.5)),g=pt.multiply(m(v),m(d)),O=pt.symfunction(Tt,[pt.divide(pt.multiply(f,h.toLinear()),g.clone())]),pt.divide(O,g)):h.group===St&&h.isLinear()?pt.divide(Vt.integration.poly_integrate(ce),f):h.power.equals(4)?(E=vt,d=pt.parse(At+E(f)+\"*\"+n+\"^2\"),v=pt.parse(At+E(2)+\"*\"+E(f)+\"^\"+E(\"1/4\")+\"*\"+E(c)+\"^\"+E(\"1/4\")+\"*\"+n),w=pt.parse(At+E(c)),P=pt.add(pt.add(d.clone(),v.clone()),w.clone()),Z=pt.add(pt.subtract(d,v),w),y=pt.parse(At+E(2)+\"*\"+E(c)+\"^\"+E(\"3/4\")),b=pt.parse(At+E(c)+\"*\"+E(c)+\"^\"+E(\"1/4\")+\"*\"+n),S=pt.parse(\"2*\"+E(c)+\"*\"+At+E(2)+\"*\"+E(c)+\"^\"+E(\"1/4\")),M=pt.divide(pt.subtract(y.clone(),b.clone()),pt.multiply(S.clone(),Z)),N=pt.divide(pt.add(y,b),pt.multiply(S,P.clone())),pt.add(Vt.integrate(M,n,ut,lt),Vt.integrate(N,n,ut,lt))):Vt.integration.partial_fraction(ce,n,ut)}else if(-.5===s)h.group===St&&h.power.equals(2)&&p.multiplier.lessThan(0)&&!c.multiplier.lessThan(0)?(f.negate(),t=c.isConstant()&&f.isConstant()?(g=pt.symfunction(At,[f.clone()]),o=pt.symfunction(At,[pt.multiply(f.clone(),c)]),pt.divide(pt.symfunction(Ot,[pt.divide(p.toLinear(),o)]),g)):(a=pt.symfunction(At,[f]),u=pt.multiply(a.clone(),h.clone().toLinear()),pt.divide(pt.symfunction(Tt,[pt.divide(u,pt.symfunction(At,[l.clone()]))]),a))):Vt.integration.stop();else if(h.isLinear()&&h.group!==Mt)t=pt.divide(Vt.integration.poly_integrate(ce),f);else{if(h.power.equals(2)&&f.greaterThan(0)){var x=pt.parse(At+vt(f)),A=pt.parse(At+vt(c)),C=pt.multiply(x.clone(),A.clone()).invert(),L=pt.pow(c,new dt(ce.power)),I=ct.Utils.getU(ce);$e=pt.multiply(C,h.clone().toLinear());var U=pt.parse(Tt+vt($e)),_=2*(Math.abs(ce.power)-1),R=Vt.integrate(pt.parse(Lt+vt(I)+\"^\"+_));return ct.Utils.clearU(I),pt.multiply(R.sub(I,U),L)}if(ce.group===Et||ce.power.lessThan(0)){var O=ce.clone().toLinear(),T=ct.Algebra.Factor.factor(O).toString()!==O.toString();if(ct.Algebra.degree(O,pt.parse(n)).equals(2)&&!T)try{var P,k,F=ct.Algebra.sqComplete(O,n);$e=ct.Utils.getU(O),P=F.f.sub(F.a,$e),k=pt.pow(P,pt.parse(ce.power)),t=Vt.integrate(k,$e).sub($e,F.a)}catch(e){Vt.integration.stop()}else t=Vt.integration.partial_fraction(ce,n,ut,lt)}else t=Vt.integration.by_parts(ce,n,ut,lt)}t.multiplier=t.multiplier.multiply(i)}else if(e===gt){var D=ce.args[0],i=ce.multiplier.clone();ce.toUnitMultiplier();var B,G,V,H,j,Z,X,$,z,f=(Ve=Vt.integration.decompose_arg(D,n))[0],h=Ve[1],Q=ce.fname;if(Q===xt||Q===Ot||\"acos\"===Q||Q===Tt&&h.isLinear()){var Y,s=ce.power.toString();wt(s)&&(ut-=s),t=D.isComposite()?($e=ct.Utils.getU(ce),O=pt.pow(pt.parse(xt+vt($e)),new dt(s)),Ce=Vt.diff(D,n),Y=pt.multiply(O,Ce),R=Vt.integrate(Y,$e,ut,lt),pt.multiply(pt.parse(i),R.sub($e,D))):pt.multiply(pt.parse(i),Vt.integration.by_parts(ce,n,ut,lt))}else{if(Q===It&&ce.power.lessThan(0))return(Je=ce.clone()).power.negate(),Je.fname=Rt,pt.multiply(pt.parse(i),Vt.integrate(Je,n,ut));if(!f.contains(n,!0)&&ce.isLinear())if(\"abs\"===Q)(h=pt.divide(D.clone(),f.clone())).group!==St||h.power.lessThan(0)?Vt.integration.stop():t=ct.Utils.even(h.power)?Vt.integrate(D,n,ut):((z=Vt.integrate(h,n,ut)).power=z.power.subtract(new ft(1)),pt.multiply(pt.multiply(pt.symfunction(\"abs\",[h.toLinear()]),z),f));else{var W=ce.args[0].group,J=Vt.integration.decompose_arg(D,n);switch((W!==Nt&&W!==St&&W!==Et||!J[1].power.equals(1)||D.hasFunc())&&Vt.integration.stop(),Q){case Lt:t=pt.symfunction(Ct,[D]);break;case Ct:(t=pt.symfunction(Lt,[D])).negate();break;case It:t=pt.parse(yt(ht.LOG+\"(sec({0}))\",D));break;case Ut:t=pt.parse(yt(ht.LOG+\"(tan({0})+sec({0}))\",D));break;case _t:t=pt.parse(yt(\"-\"+ht.LOG+\"(csc({0})+cot({0}))\",D));break;case Rt:t=pt.parse(yt(ht.LOG+\"(sin({0}))\",D));break;case Pt:t=pt.symfunction(kt,[D]);break;case kt:t=pt.symfunction(Pt,[D]);break;case Ft:t=pt.parse(yt(ht.LOG+\"(cosh({0}))\",D));break;case\"asec\":case\"acsc\":case\"acot\":case\"asech\":case\"acsch\":case\"acoth\":t=Vt.integration.by_parts(ce,n,ut,lt);break;case\"sech\":t=pt.parse(yt(\"atan(sinh({0}))\",D));break;case\"csch\":t=pt.parse(yt(ht.LOG+\"(tanh(({0})/2))\",D));break;case\"coth\":t=pt.parse(yt(ht.LOG+\"(sinh({0}))\",D));break;case\"exp\":t=Vt.integrate(pt.parse(yt(\"e^({0})\",D)),n,ut);break;case\"S\":var D=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(D,n))[1],ee=Se[0],te=Se[3];t=pt.parse(yt(\"(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)\",ee,te,h));break;case\"C\":D=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(D,n))[1],ee=Se[0],te=Se[3];t=pt.parse(yt(\"(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)\",ee,te,K));break;case\"erf\":D=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(D,n))[1],ee=Se[0];t=pt.parse(yt(\"e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))\",ee,K,D));break;case\"sign\":t=pt.multiply(ce.clone(),D.clone());break;default:Vt.integration.stop()}t=pt.divide(t,f)}else h.isLinear()?Q===Lt||Q===Ct?(s=Number(ce.power),t=s<0?(ce.fname=Q===Ct?_t:Ut,ce.invert().updateHash(),Vt.integrate(ce,n,ut)):(D=ce.args[0],B=ce.clone(),G=ce.clone(),Ie=new dt((s-1)/s),V=pt.multiply(f.clone(),new dt(s)).invert(),B.power=B.power.subtract(new ft(1)),G.power=G.power.subtract(new ft(2)),We=pt.symfunction(Q===Lt?Ct:Lt,[D.clone()]),Q===Ct&&We.negate(),pt.add(pt.multiply(pt.multiply(V,B),We),pt.multiply(Ie,Vt.integrate(pt.parse(G),n,ut))))):Q===It||Q===Rt?ce.args[0].isLinear(n)&&(_=ce.power.subtract(new ft(1)).toString(),nt=ce.clone().toUnitMultiplier(),$=pt.parse(yt((Q===Rt?\"-\":\"\")+\"1/({2}*{0})*{3}({1})^({0})\",_,D,f,Q)),nt.power=nt.power.subtract(new ft(2)),nt.power.equals(0)&&(nt=pt.parse(nt)),t=pt.subtract($,Vt.integrate(nt,n,ut))):Q===Ut||Q===_t?(H=ce.power.subtract(new ft(1)).toString(),j=ce.power.subtract(new ft(2)).toString(),Z=Q===Ut?It:Rt,nt=ce.clone().toUnitMultiplier(),X=yt((Q===_t?\"-\":\"\")+\"1/({0}*{1})*{4}({3})^({2})*{5}({3})\",f,H,j,D,Q,Z),$=pt.parse(X),nt.power=nt.power.subtract(new ft(2)),nt.power.equals(0)&&(nt=pt.parse(nt)),t=pt.add($,pt.multiply(new dt(j/H),Vt.integrate(nt,n,ut)))):Q!==kt&&Q!==Pt||!ce.power.equals(2)?Vt.integration.stop():t=Vt.integrate(ce.fnTransform(),n,ut):Vt.integration.stop();t.multiplier=t.multiplier.multiply(i)}}else if(e===Mt)t=Vt.integration.partial_fraction(ce,n,ut);else if(e===Et){var ne=(ce=ce.getDenom().group===St?pt.expand(ce):ce).stripVar(n),re=pt.divide(ce.clone(),ne.clone());if(ne.contains(n)&&(re=pt.multiply(re,ne),ne=new dt(1)),re.group!==Et){if(re.equals(1))return Vt.integrate(pt.expand(ce),n,ut);re.clone().toLinear().isPoly(!0)&&1<ct.Utils.variables(re).length&&(re=ct.Algebra.Factor.factor(re)),t=Vt.integrate(re,n,ut)}else{var ie=re.collectSymbols().sort(function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group}).map(function(e){e=dt.unwrapSQRT(e,!0);return\"exp\"===e.fname?pt.parse(yt(\"({1})*e^({0})\",e.args[0],e.multiplier)):e}),se=ie.length;if(ce.power<0){if(2===se)return Vt.integrate(pt.expand(ce),n,ut,lt)}else if(2===se){try{t=Vt.integration.u_substitution(ie,n)}catch(e){}if(!t){var oe,ae,ue,le,ce,pe,fe,he,me,ge,de,ve,we,ye,be,Se,Me,Ne,Ee,qe,xe,Ae,Ce,Le,Ie,Ue,_e,Re,Oe,Te,Pe=ie[0].group,ke=ie[1].group,Fe=ie[0],De=ie[1],Be=Fe.fname,Ge=De.fname;if(ce=pt.multiply(Fe.clone(),De.clone()),Pe===gt&&ke===gt)if(Be===xt||Ge===xt)t=Vt.integration.by_parts(ce.clone(),n,ut,lt);else{ie.sort(function(e,t){return t.fname>e.fname});var Ve,He=Fe.args[0];He.isLinear()&&(He.group===Nt||He.group===Et||He.group===St)||Vt.integration.stop(),h=(Ve=Vt.integration.decompose_arg(He,n))[1],f=Ve[0],h.isLinear()||Vt.integration.stop();var je,Ze=De.args[0];if(He.equals(Ze))if(Be===Ct&&Ge===Lt||Be===Lt&&Ge===Ct)if(Fe.power.lessThan(0)&&Vt.integration.stop(),Be===Ct&&Fe.power.add(De.power).equals(0))Fe.fname=It,Fe.updateHash(),t=Vt.integrate(Fe,n,ut);else if(bt(Fe.power)&&Ge===Lt&&De.power.lessThan(0)){var _=Number(Fe.power)/2,Xe=pt.parse(yt(\"(1-cos({0})^2)^({1})\",Fe.args[0],_));t=Vt.integrate(pt.expand(pt.multiply(Xe,De.clone())),n,ut,lt)}else if(bt(Fe.power)&&Ge===Ct&&De.power.lessThan(0)){_=Number(Fe.power)/2,Xe=pt.parse(yt(\"(1-sin({0})^2)^({1})\",Fe.args[0],_));t=Vt.integrate(pt.expand(pt.multiply(Xe,De.clone())),n,ut,lt)}else{var $e,ze=ct.Utils.even(Fe.power),Qe=ct.Utils.even(De.power);if(t=new dt(0),ze&&Qe){var Ye=function(e){var t=e.power/2,t=e.fname===Lt?\"((1/2)+(cos(2*(\"+e.args[0]+\"))/2))^\"+t:\"((1/2)-(cos(2*(\"+e.args[0]+\"))/2))^\"+t;return pt.parse(t)},f=Ye(Fe),c=Ye(De),We=pt.multiply(f,c);return(Je=pt.expand(We)).each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),pt.multiply(t,ne)}nt=ze?($e=Fe,De):($e=De,Fe);var Je,Ke=$e.fname===Lt?-1:1,et=((_=nt.power)-1)/2,tt=pt.parse(\"(1-\"+$e.fname+ct.Utils.inBrackets(He)+\"^2)^\"+et);(Je=pt.expand(pt.multiply(new dt(Ke),pt.multiply($e.clone(),tt)))).each(function(e){t=pt.add(t,Vt.integration.poly_integrate(e.clone()))})}else Be===Ut&&Ge===It&&h.isLinear()&&De.isLinear()?t=pt.parse(yt(\"sec({0})^({1})/({1})\",Fe.args[0],Fe.power)):Be===It&&Ge===Ut&&h.isLinear()?Fe.isLinear()&&De.isLinear()?t=pt.divide(pt.symfunction(Ut,[He.clone()]),f):bt(Fe.power)?(s=Number(Fe.power)/2,We=pt.parse(yt(\"(sec({0})^2-1)^({1})\",Fe.args[0],s)),t=Vt.integrate(pt.expand(pt.multiply(We,De)),n,ut)):Vt.integration.stop():t=Be===Ut&&Ge===Lt?(Fe.fname=Lt,Fe.invert().updateHash(),Vt.integrate(pt.multiply(Fe,De),n,ut)):Be===Ct&&Ge===_t?(De.fname=Ct,De.invert().updateHash(),Vt.integrate(pt.multiply(Fe,De),n,ut)):(We=Be!==It||Ge!==Lt&&Ge!==Ct||!De.power.lessThan(0)?pt.multiply(Fe.fnTransform(),De.fnTransform()):pt.multiply(Fe.fnTransform(),De),Vt.integrate(pt.expand(We),n,ut));else Be!==Ct&&Be!==Lt||Ge!==Ct&&Ge!==Lt?Vt.integration.stop():Fe.isLinear()&&De.isLinear()?t=Fe.args[0].isLinear()&&De.args[0].isLinear()?(Ge===Ct?(p=Fe.args[0],je=De.args[0]):(je=Fe.args[0],p=De.args[0]),O=pt.parse(yt(\"(sin(({1})+({0}))+sin(({1})-({0})))/2\",p.toString(),je.toString())),Vt.integrate(O,n,ut)):(st=Gt(ie),Vt.integrate(pt.expand(st),n,ut)):(st=new dt(1),ie.map(function(e){e=e.fnTransform();st=pt.multiply(st,e)}),We=pt.expand(st),(t=Vt.integrate(We,n,ut)).hasIntegral()&&(t=Vt.integrate(Gt(st.collectSymbols()),n,ut)))}else Pe===gt&&ke===St?(oe=Fe.isLinear(),Fe.fname===Lt&&oe&&De.power.equals(-1)?t=pt.symfunction(\"Ci\",[Fe.args[0]]):Fe.fname===Lt&&De.power.equals(-1)?t=Vt.integrate(pt.multiply(Fe.fnTransform(),De.clone()),n,ut):Fe.fname===kt&&oe&&De.power.equals(-1)?t=pt.symfunction(\"Chi\",[Fe.args[0]]):Fe.fname===kt&&De.power.equals(-1)?t=Vt.integrate(pt.multiply(Fe.fnTransform(),De.clone()),n,ut):Fe.fname===Ct&&oe&&De.power.equals(-1)?t=pt.symfunction(\"Si\",[Fe.args[0]]):Fe.fname===Ct&&De.power.equals(-1)?t=Vt.integrate(pt.multiply(Fe.fnTransform(),De.clone()),n,ut):Fe.fname===Pt&&oe&&De.power.equals(-1)?t=pt.symfunction(\"Shi\",[Fe.args[0]]):Fe.fname===Pt&&De.power.equals(-1)?t=Vt.integrate(pt.multiply(Fe.fnTransform(),De.clone()),n,ut):Fe.fname===xt&&De.power.equals(-1)?t=Vt.integration.poly_integrate(Fe,n,ut):\"erf\"===Fe.fname?De.power.equals(1)&&(ee=(Se=Vt.integration.decompose_arg(Fe.args[0],n))[0],K=Se[1],D=Fe.args[0].toString(),t=pt.parse(yt(\"(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)\",ee,K,D))):t=Vt.integration.by_parts(ce,n,ut,lt)):Pe===qt&&ke===St?(h=Be===xt?Vt.integration.decompose_arg(Fe.args[0],n)[1]:null,t=Fe.isE()&&(Fe.power.group===St||Fe.power.group===Et)&&De.power.equals(-1)?pt.symfunction(\"Ei\",[Fe.power.clone()]):Be===xt&&h.value===De.value?Vt.integration.poly_integrate(Fe,n,ut):Vt.integration.by_parts(ce,n,ut,lt)):Pe===Mt&&ke===St?(ce=De.value===Fe.value&&Fe.power.equals(-1)?(ae=Math.min.apply(null,ct.Utils.keys(Fe.symbols)),ue=Math.min(ae,De.power),(le=De.clone()).power=new ft(ue),De=pt.divide(De,le.clone()),We=new dt(0),Fe.each(function(e){We=pt.add(We,pt.divide(e.clone(),le.clone()))}),We.multiplier=Fe.multiplier,pt.divide(De,We)):pt.expand(ce),t=Vt.integration.partial_fraction(ce,n,ut)):Pe===Nt&&ke===St?(O=Fe.clone().toLinear(),pe=ct.Algebra.degree(O,pt.parse(n)).equals(1),Fe.power.equals(-.5)?(f=(Ve=Vt.integration.decompose_arg(Fe.clone().toLinear(),n))[0].negate(),h=Ve[1],c=Ve[3],xe=Number(Fe.power),Ae=Number(De.power),wt(Ae)&&ct.Utils.even(Ae)&&h.power.equals(2)?(Me=pt.divide(pt.multiply(pt.pow(c.clone(),new dt(2)),pt.symfunction(At,[pt.divide(c.clone(),f.clone())])),pt.pow(f.clone(),new dt(2))),Me=pt.multiply(Me,pt.symfunction(At,[c]).invert()),(fe=pt.parse(\"sin(u)\")).power=fe.power.multiply(De.power),R=Vt.integrate(fe,\"u\",ut),he=pt.parse(\"asin(sqrt(\"+f+\"/\"+c+\")*\"+n+\")\"),t=pt.multiply(Me,R.sub(new dt(\"u\"),he))):-.5===xe&&(me=function(e,t){t=pt.parse(Vt.integrate(e,n,ut,lt).sub(n,yt(t,n)));if(!t.hasIntegral())return t},-1===Ae?t=me(pt.expand(pt.expand(pt.pow(pt.multiply(Fe.invert(),De.invert()),new dt(2)))).invert(),\"sqrt(1-1/({0})^2)\"):-2===Ae&&(t=me(pt.sqrt(pt.expand(pt.divide(pt.pow(ce,new dt(2)).invert(),pt.pow(new dt(n),new dt(2))).negate())).invert(),\"sqrt(1-1/({0})^2)\")))):Fe.power.equals(-1)&&De.isLinear()&&pe?t=Vt.integration.partial_fraction(ce,n,ut):!Fe.power.lessThan(0)&&wt(Fe.power)?(ge=pt.expand(Fe),t=new dt(0),ge.each(function(e){e.group===Mt?e.each(function(e){t=pt.add(t,Vt.integrate(pt.multiply(De.clone(),e),n,ut))}):t=pt.add(t,Vt.integrate(pt.multiply(De.clone(),e),n,ut))})):Fe.power.lessThan(-2)?t=Vt.integration.by_parts(ce,n,ut,lt):Fe.power.lessThan(0)&&De.power.greaterThan(1)?(f=(Ve=Vt.integration.decompose_arg(Fe.clone().toLinear(),n))[0].negate(),h=Ve[1],c=Ve[3],l=Fe.clone().toLinear(),t=h.group!==Mt&&h.isLinear()?(s=Number(De.power),$e=new dt(Ce=\"_u_\"),de=pt.expand(pt.divide(pt.pow(pt.subtract($e.clone(),c.clone()),new dt(s)),$e.clone())),(ve={})[Ce]=l,we=pt.parse(de,ve),Vt.integrate(we,n,0)):De.power.greaterThan(h.power)||De.power.equals(h.power)?(ye=new ct.Algebra.Classes.Factors,Fe=ct.Algebra.Factor.coeffFactor(Fe.invert(),ye),(be=ct.Algebra.divide(De,Fe)).group!==Et?(t=new dt(0),be.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),ye.each(function(e){t=pt.divide(t,e)}),pt.expand(t)):Vt.integration.by_parts(ce,n,ut,lt)):Vt.integration.partial_fraction(ce,n,ut)):Fe.power.den.equals(2)?(f=(Se=Vt.integration.decompose_arg(Fe.clone().toLinear(),n))[3],h=Se[1],c=Se[0],je=Se[2],t=h.power.equals(2)&&c.lessThan(0)?(f.equals(1)||(ne=pt.multiply(ne,pt.pow(f,new dt(2)))),$e=n,Me=pt.divide(pt.pow(c.clone().negate(),new dt(.5)),pt.pow(f,new dt(.5))),Ce=pt.symfunction(Lt,[new dt($e)]),Ne=pt.pow(pt.symfunction(Lt,[new dt($e)]),new dt(Fe.power.num)),Ee=pt.pow(pt.symfunction(Ct,[new dt($e)]),new dt(De.power)),qe=pt.multiply(pt.multiply(Ne,Ce),Ee),(R=Vt.integrate(qe,$e,ut)).sub($e,pt.symfunction(Ot,[pt.multiply(new dt(n),Me)]))):Vt.integration.partial_fraction(ce,n,ut,lt)):pe&&(t=Vt.integration.partial_fraction(ce,n,ut))):Fe.isComposite()&&De.isComposite()?(t=new dt(0),Fe.power.greaterThan(0)&&De.power.greaterThan(0)?(Je=pt.expand(ce)).each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))},!0):(xe=Number(Fe.power),Ae=Number(De.power),xe<0&&0<Ae&&(We=Fe,Fe=De,De=We),-1===xe&&-1===Ae?t=Vt.integration.partial_fraction(ce,n):Fe.each(function(e){e=pt.multiply(e,De.clone()),e=Vt.integrate(e,n,ut);t=pt.add(t,e)}))):Pe===Nt&&ie[0].power.greaterThan(0)?(Fe=pt.expand(Fe),t=new dt(0),Fe.each(function(e){t=pt.add(t,Vt.integrate(pt.multiply(e,De.clone()),n,ut))},!0)):Pe===gt&&ke===qt&&ct.Utils.in_htrig(Fe.fname)?(Fe=Fe.fnTransform(),t=Vt.integrate(pt.expand(pt.multiply(Fe,De)),n,ut)):Pe===gt&&ke===Nt||ke===gt&&Pe===Nt?(ke===gt&&Pe===Nt&&(We=Fe,Fe=De,De=We),Ce=dt.unwrapSQRT(Vt.diff(Fe.clone(),n),!0),Le=dt.unwrapSQRT(De,!0),Ce.power.equals(Le.power)?(s=new dt(De.power),Ue=Ce.clone().toLinear(),_e=De.clone().toLinear(),(Ie=ct.Algebra.divide(Ue.toLinear(),_e)).isConstant()&&(Re=pt.pow(Ie,s.negate()),t=pt.multiply(Re,Vt.integration.poly_integrate(Fe.clone())))):t=Vt.integration.by_parts(ce,n,ut,lt)):(Oe=Fe.clone().toLinear(),Te=De.clone().toLinear(),t=Pe===qt&&ke===qt&&Fe.power.contains(n)&&De.power.contains(n)&&!Oe.contains(n)&&!Te.contains(n)?pt.parse(yt(\"(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))\",Oe.toString(),Te.toString(),Fe.power.multiplier.toString(),De.power.multiplier.toString(),n)):Vt.integration.by_parts(ce,n,ut,lt))}}else if(3===se&&(ie[2].group===St&&ie[2].power.lessThan(2)||ie[0].group===Nt)){var nt,rt=ie[0];rt.group===Nt?(rt.power.greaterThan(1)&&(rt=pt.expand(rt)),nt=pt.multiply(ie[1],ie[2]),t=new dt(0),rt.each(function(e){e=pt.multiply(e,nt.clone()),e=Vt.integrate(e,n,ut);t=pt.add(t,e)},!0)):t=Vt.integration.by_parts(ce,n,ut,lt)}else if(Bt(ie)){for(var We=new dt(1),it=0,se=ie.length;it<se;it++)We=pt.multiply(We,ie[it].fnTransform());We=pt.expand(We),t=Vt.integrate(We,n,ut)}else{var st=Gt(ie);t=Vt.integrate(pt.expand(st),n,ut)}}t=pt.multiply(t,ne)}}else t=pt.multiply(ce.clone(),pt.parse(n));if(t)return t}catch(e){if(!(e instanceof Dt||e instanceof ct.exceptions.DivisionByZero))throw e}return pt.symfunction(\"integrate\",[ot,at])},!1))},defint:function(e,t,n,r){r=r||\"x\";function i(t,e,n){try{return pt.parse(t,e)}catch(e){return Vt.Limit.limit(t,r,n)}}var s,o,a=ct.Utils.variables(e),u=e.hasTrig();return 1!==a.length||r||(r=a[0]),u||(s=Vt.integrate(e,r)),u||s.hasIntegral()?1===a.length&&t.isConstant()&&n.isConstant()?(o=ct.Utils.build(e),new dt(ct.Math2.num_integrate(o,Number(t),Number(n)))):pt.symfunction(\"defint\",[e,t,n,r]):(o={},(e={})[r]=n,o[r]=t,n=i(s,e,n),t=i(s,o,t),pt.subtract(n,t))},Limit:{interval:function(e,t){return pt.parse(yt(\"[{0}, {1}]\",e,t))},diverges:function(){return Vt.Limit.interval(\"-Infinity\",\"Infinity\")},divide:function(e,t,n,r,i){if(!(i++>ht.max_lim_depth)){e.clone();var s=t.clone();if(\"abs\"===t.fname){var o=e.sign(),a=r.sign();if(r.isInfinity)return pt.multiply(new dt(o),new dt(a));if(r.equals(0)){var a=pt.parse(e.multiplier),u=pt.parse(t.multiplier);return pt.divide(pt.multiply(a,Vt.Limit.interval(\"-1\",\"1\")),u)}Vt.Limit.diverges()}var l=function(e){if(ct.Utils.isVector(e)){for(var t=0;t<e.elements.length;t++)if(!e.elements[t].isInfinity)return!1;return!0}return e.isInfinity},c=function(e,t){return!ct.Utils.isVector(e)&&e.equals(t)};do{var p,f,h=k(Vt.Limit.limit(e.clone(),n,r,i)),m=k(Vt.Limit.limit(t.clone(),n,r,i)),g=l(h)&&l(m)||c(h,0)&&c(m,0)}while(g&&(p=Vt.diff(e.clone(),n),f=Vt.diff(t.clone(),n),e=(f=pt.expand(pt.divide(p,f))).getNum(),t=f.getDenom()),g);u=m.equals(0),s=Number(s.power);return r.isConstant(!0)&&u?dt.infinity(ct.Utils.even(s)&&h.lessThan(0)?-1:void 0):u?Vt.Limit.diverges():pt.divide(h,m)}},rewriteToLog:function(e){var t=e.power.clone();return e.toLinear(),pt.pow(new dt(\"e\"),pt.multiply(t,pt.symfunction(ht.LOG+\"\",[e])))},getSubbed:function(t,e,n){var r;t.group===qt&&(t=Vt.rewriteToLog(t));try{r=t.sub(e,n)}catch(e){r=t}return r},isInterval:function(e){return ct.Utils.isVector(e)},isConvergent:function(e){return!(Vt.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction(\"limit\"))},limit:function(t,n,r,i){if(t.isLinear()&&t.isComposite()){var s=new dt(0);return t.each(function(e){s=pt.add(s,Vt.Limit.limit(e,n,r,i))},!0),s}if(t=ct.Algebra.Simplify.simplify(t),i=i||1,!(i++>ht.max_lim_depth)){var e=pt.parse(t.multiplier);t.toUnitMultiplier();try{if(t.isConstant(!0))d=t;else{var o={};o[n]=r;try{var a=pt.parse(t.sub(n,r),o);(a.isConstant(!0)||a.isInfinity)&&(d=a)}catch(e){}if(!d){var u,l=t.getNum(),c=t.getDenom();if(c.isConstant(!0)){if(t.group===qt){var p,f,h,m,g,d,v=t.clone().toLinear(),w=(t.power.clone(),v.getNum()),y=v.getDenom(),b=ct.Utils.decompose_fn(y,n,!0);d=w.group===St&&w.multiplier.isOne()&&b.ax.group===St&&b.b.isConstant(!0)&&b.a.isOne()&&b.b.isConstant(!0)?pt.parse(yt(\"(1/e^({0}))\",b.b)):(f=(p=Vt.Limit.rewriteToLog(t.clone())).power.clone(),h=p.clone().toLinear(),m=Vt.Limit.limit(h,n,r,i),g=Vt.Limit.limit(f,n,r,i),pt.pow(m,g))}else if(t.group===gt&&1===t.args.length){var S,M=Vt.Limit.limit(t.args[0],n,r,i);if(ct.Utils.isVector(M))return d=M.map(function(e){return t.clone().args[0]=e,Vt.Limit.limit(pt.symfunction(t.fname,[e]),n,r,i)}),pt.multiply(e,d);if(M.isConstant(!0)){var N=pt.symfunction(t.fname,[M]);try{k(N),S=!0}catch(e){S=!1}}if(S)d=N;else if(Vt.Limit.isConvergent(M))if(t.fname===xt)switch(M.toString()){case\"0\":d=dt.infinity().negate();break;case\"Infinity\":case\"-Infinity\":d=dt.infinity()}else if(t.fname!==Lt&&t.fname!==Ct||!r.isInfinity){if(t.fname===It){var E=t.args[0],q=E.getNum(),x=E.getDenom(),A=q.toUnitMultiplier();(r.isInfinity||A.equals(\"pi\")&&x.equals(2))&&(d=divergent())}else if(t.fname===ht.FACTORIAL&&M.isInfinity)return dt.infinity()}else d=Vt.Limit.interval(-1,1)}else if(t.group===St){if(0<t.power)return pt.parse(t,o);d=ct.Utils.even(t.power)?dt.infinity():Vt.Limit.diverges()}else if(t.group===Et){for(var v=(U=t.collectSymbols().sort(function(e,t){return e.group-t.group})).pop(),C=k(Vt.Limit.limit(v,n,r,i));U.length;){var L=U.pop(),I=k(Vt.Limit.limit(L,n,r,i));C.isInfinity||!Vt.Limit.isConvergent(C)&&I.equals(0)||C.equals(0)&&Vt.Limit.isConvergent(I)?((L=L.containsFunction(xt)?[v,v=L][0]:L).invert(),C=C.isInfinity&&I.isInfinity?dt.infinity():Vt.Limit.divide(v,L,n,r,i)):(C=pt.multiply(C,I),v=pt.multiply(v,L))}d=C}else if(t.isComposite()){t.isLinear()||(t=pt.expand(t)),d=new dt(0);for(var U=t.collectSymbols().sort(function(e,t){return t.group-e.group}),_=[],R=new dt(0),O=0,T=U.length;O<T;O++)(P=U[O].clone()).group===gt||P.group===Et&&P.hasFunc()?R=pt.add(R,P):_.push(P);_.unshift(R),1!==_.length&&(U=_);for(O=0,T=U.length;O<T;O++){var P=U[O];try{u=Vt.Limit.limit(P,n,r,i)}catch(e){u=Vt.Limit.diverges()}try{d=pt.add(d,u)}catch(e){if(i++>ht.max_lim_depth)return;d=Vt.Limit.limit(Vt.diff(t,n),n,r,i)}}}}else d=Vt.Limit.divide(l,c,n,r,i)}}d=d||pt.symfunction(\"limit\",[t,n,r])}catch(e){d=pt.symfunction(\"limit\",[t,n,r])}return pt.multiply(e,d)}}},Fresnel:{S:function(e){return e.isConstant(!0)?Vt.defint(pt.parse(\"sin(pi*x^2/2)\"),dt(0),e,\"x\"):pt.symfunction(\"S\",arguments)},C:function(e){return e.isConstant(!0)?Vt.defint(pt.parse(\"cos(pi*x^2/2)\"),dt(0),e,\"x\"):pt.symfunction(\"C\",arguments)}}};nerdamer.register([{name:\"diff\",visible:!0,numargs:[1,3],build:function(){return Vt.diff}},{name:\"sum\",visible:!0,numargs:4,build:function(){return Vt.sum}},{name:\"product\",visible:!0,numargs:4,build:function(){return Vt.product}},{name:\"integrate\",visible:!0,numargs:[1,2],build:function(){return Vt.integrate}},{name:\"defint\",visible:!0,numargs:[3,4],build:function(){return Vt.defint}},{name:\"S\",visible:!0,numargs:1,build:function(){return Vt.Fresnel.S}},{name:\"C\",visible:!0,numargs:1,build:function(){return Vt.Fresnel.C}},{name:\"limit\",visible:!0,numargs:[3,4],build:function(){return Vt.Limit.limit}}]),nerdamer.api()}(),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus.js\"),require(\"./Algebra.js\")),function(){var t,G=nerdamer.getCore(),V=G.PARSER,H=G.Algebra,j=G.Calculus,Z=j.integration.decompose_arg,X=G.Utils.evaluate,E=G.Utils.remove,c=G.Utils.format,$=G.Utils.build,f=G.Utils.knownVariable,z=G.Symbol,Q=G.Utils.isSymbol,l=G.Utils.variables,Y=G.groups.S,W=G.groups.PL,J=G.groups.CB,K=G.groups.CP,ee=G.groups.FN,te=G.Settings,s=G.Utils.range,ne=G.Utils.isArray;function re(e,t){if(t.isConstant()&&e.isConstant()&&!e.equals(t)||e.equals(G.Settings.IMAGINARY)||t.equals(G.Settings.IMAGINARY))throw new G.exceptions.NerdamerValueError(e.toString()+\" does not equal \"+t.toString());this.LHS=e,this.RHS=t}G.Settings.SOLVE_RADIUS=1e3,G.Settings.ROOTS_PER_SIDE=10,G.Settings.make_pi_conversions=!1,G.Settings.STEP_SIZE=.1,G.Settings.EPSILON=1e-13,G.Settings.MAX_NEWTON_ITERATIONS=200,G.Settings.MAX_NON_LINEAR_TRIES=12,G.Settings.NON_LINEAR_JUMP_AT=50,G.Settings.NON_LINEAR_JUMP_SIZE=100,G.Settings.NON_LINEAR_START=.01,G.Settings.NEWTON_SLICES=200,G.Settings.NEWTON_EPSILON=2*Number.EPSILON,G.Settings.SOLUTION_PROXIMITY=1e-14,G.Settings.FILTER_SOLUTIONS=!0,G.Settings.MAX_SOLVE_DEPTH=10,G.Settings.ZERO_EPSILON=1e-9,G.Settings.MAX_BISECTION_ITER=2e3,G.Settings.BI_SECTION_EPSILON=1e-12,G.Symbol.prototype.hasTrig=function(){return this.containsFunction([\"cos\",\"sin\",\"tan\",\"cot\",\"csc\",\"sec\"])},G.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var e in this.symbols){var t=this.symbols[e];if(t.group===W&&t.hasNegativeTerms()||this.symbols[e].power.lessThan(0))return!0}return!1},re.prototype={toString:function(){return this.LHS.toString()+\"=\"+this.RHS.toString()},text:function(e){return this.LHS.text(e)+\"=\"+this.RHS.text(e)},toLHS:function(e){var t=(n=(e=void 0===e)?this.removeDenom():this.clone()).LHS,n=n.RHS;t.isConstant(!0)&&!n.isConstant(!0)&&([t,n]=[n,t]);n=V.subtract(t,n);return e?V.expand(n):n},removeDenom:function(){var e=this.LHS.clone(),t=this.RHS.clone(),n=V.multiply(e.getDenom(),t.getDenom());if(e=V.expand(V.multiply(e,n.clone())),(t=V.expand(V.multiply(t,n))).group===K&&t.group!==K&&(r=e,e=t,t=r),e.group===J){var r=new z(e.multiplier),i=t.clone();e.each(function(e){e.power.lessThan(0)?i=V.divide(i,e):r=V.multiply(r,e)}),e=r,t=i}else if(e.group===K)for(var s in e.symbols){var o=e.symbols[s];if(o.group===J)for(var a in o.symbols){a=o.symbols[a];if(a.power.lessThan(0))return new re(V.expand(V.multiply(a.clone().toLinear(),e)),V.expand(V.multiply(a.clone().toLinear(),t)))}}return new re(e,t)},clone:function(){return new re(this.LHS.clone(),this.RHS.clone())},sub:function(e,t){var n=this.clone();return n.LHS=n.LHS.sub(e.clone(),t.clone()),n.RHS=n.RHS.sub(e.clone(),t.clone()),n},isZero:function(){return G.Utils.evaluate(this.toLHS()).equals(0)},latex:function(e){return[this.LHS.latex(e),this.RHS.latex(e)].join(\"=\")}},V.equals=function(e,t){return new re(e,t)},t=V.functions.simplify[0],V.functions.simplify[0]=function(e){return e instanceof re?(e.LHS=t(e.LHS),e.RHS=t(e.RHS),e):t(e)},G.Expression.prototype.equals=function(e){return e instanceof G.Expression&&(e=e.symbol),new re(this.symbol,e)},G.Expression.prototype.solveFor=function(e){var t;if(this.symbol instanceof re){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(e))return new G.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(e))return new G.Expression(this.symbol.RHS);t=this.symbol.toLHS()}else t=this.symbol;return oe(t,e).map(function(e){return new G.Expression(e)})},G.Expression.prototype.expand=function(){if(this.symbol instanceof re){var e=this.symbol.clone();return e.RHS=V.expand(e.RHS),e.LHS=V.expand(e.LHS),new G.Expression(e)}return new G.Expression(V.expand(this.symbol))},G.Expression.prototype.variables=function(){return this.symbol instanceof re?G.Utils.arrayUnique(l(this.symbol.LHS).concat(l(this.symbol.RHS))):l(this.symbol)};function e(e,t){return V.equals(e,t)}G.Equation=re;var ie=G.Utils.checkAll=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return!1;return!0},se=G.Solve={version:\"2.0.3\",solutions:[],solve:function(e,t){t=oe(e,String(t));return new G.Vector(t)},toLHS:function(e,t){return Q(e)?e:(e instanceof re||((n=e.split(\"=\"))[1]=n[1]||\"0\",e=new re(V.parse(n[0]),V.parse(n[1]))),e.toLHS(t));var n},solveCircle:function(e,t){for(var n=t.map(function(e){return V.parse(e)}),r=[],i=[],s=0;s<e.length;s++){for(var o=[],a=0;a<n.length;a++)o.push(Number(G.Algebra.degree(e[s],n[a])));o.push(G.Utils.arraySum(o,!0)),r.push(o)}var u,l,c=e[0],p=e[1];return r[0][2]>r[1][2]&&([p,c]=[c,p],[r[1],r[0]]=[r[0],r[1]]),1===r[0][0]&&2===r[0][2]&&2===r[1][0]&&4===r[1][2]&&(u=t[0],l=t[1],t=oe(V.parse(p,f(u,oe(V.parse(c),u)[0])),l).map(function(e){return e.toString()}),p=[oe(V.parse(c,f(l,t[0])))[0].toString()],t[1]&&p.push(oe(V.parse(c,f(l,t[1])))[0].toString()),te.SOLUTIONS_AS_OBJECT?((i={})[u]=p,i[l]=t):(t.unshift(l),p.unshift(u),i=[p,t])),i},solveNonLinearSystem:function(e,t,r){if(t<0)return[];r=void 0===r?G.Settings.NON_LINEAR_START:r;var i=G.Settings.MAX_NON_LINEAR_TRIES,s=Math.floor(i/2);t=void 0===t?i:t;var o,a,u,l,c,p=G.Settings.NON_LINEAR_JUMP_AT,f=G.Settings.NON_LINEAR_JUMP_SIZE,h=!0,m=G.Utils.arrayGetVariables(e),i=G.Matrix.jacobian(e,m,function(e){return $(e,m)},!0),g=G.Settings.MAX_NEWTON_ITERATIONS,d=e.map(function(e){return $(e,m)}),v=i.map(function(e){return $(e,m)},!0),w=G.Matrix.cMatrix(0,m),y=G.Matrix.cMatrix(r,m),b=0;do{if(g<b)break;o=function(e,n){return e.map(function(e,t){return Number(n.get(t,0))})}(m,y),l=y.clone(),d.forEach(function(e,t){y.set(t,0,e.apply(null,o))});var S=new G.Matrix;if(v.each(function(e,t,n){e=e.apply(null,o);S.set(t,n,e)}),S=S.invert(),c=(a=V.multiply(S,y).negate()).subtract(w,function(e){return V.parse(Number(e))}),w=l.add(a,function(e){return V.parse(Number(e))}),y=w,p<=b&&1<u){t===s&&(r=0);var M=s<t?1:-1;return n=t%Math.floor(s)+1,r+=M*n*f,se.solveNonLinearSystem(e,--t,r)}}while((M=u,b++,u=c.max(),Number(u)!==Number(M))&&Number(u)>=Number.EPSILON);return h?se.systemSolutions(y,m,!0,function(e){return G.Utils.round(Number(e),14)}):[]},systemSolutions:function(e,r,i,s){var o=G.Settings.SOLUTIONS_AS_OBJECT?{}:[];return e.each(function(e,t){var n=(i?V.expand(e):e).valueOf();s&&(n=s.call(e,n));t=r[t];G.Settings.SOLUTIONS_AS_OBJECT?o[t]=n:o.push([t,n])}),o},solveSystemBySubstitution:function(e){var t=l(e[0]),n=l(e[1]);return 2===e.length&&2===t.length&&G.Utils.arrayEqual(t,n)?se.solveCircle(e,t):[]},solveSystem:function(e,t){for(var n=0;n<e.length;n++)e[n]=se.toLHS(e[n]);var r,i=e.length,s=new G.Matrix,o=new G.Matrix,a=!1;if(void 0===t){if(!H.allLinear(e))try{return se.solveNonLinearSystem(e)}catch(h){if(h instanceof G.exceptions.DivisionByZero)return se.solveSystemBySubstitution(e)}if((r=G.Utils.arrayGetVariables(e)).length<e.length){for(var u=[],l=e.length,n=0;n<l-1;n++)u.push(V.parse(e[n]));var c={},p=se.solveSystem(u,r);Array.isArray(p)?p.forEach(function(e){c[e[0]]=e[1]}):c=p;for(var f=!0,n=l-1;n<l;n++)V.parse(e[n],c).equals(0)||(f=!1);if(f)return p}for(n=0;n<r.length;n++)nerdamer.setVar(r[n],\"delete\");for(n=0;n<i;n++){for(var h=e[n],m=0;m<r.length;m++){var g=r[m],d=[];h.each(function(e){e.contains(g)&&(d=d.concat(e.coeffs()))});var v=G.Utils.arraySum(d);s.set(n,m,v)}var w=h.clone();r.map(function(e){w=w.stripVar(e,!0)}),o.set(n,0,w.negate())}}else for(r=t,a=!0,n=0;n<i;n++){o.set(n,0,new z(0));for(h=V.expand(e[n]).collectSymbols(),m=0;m<t.length;m++){s.set(n,m,new z(0));for(var g=t[m],y=0;y<h.length;y++){for(var b,S=h[y],M=!1,N=0;N<t.length;N++)S.contains(t[N])&&(M&&G.err(\"Multiple variables found for term \"+S),M=!0);S.contains(g)&&(b=Z(E(h,y),g),s.set(n,m,V.add(s.get(n,m),b[0])))}}for(y=0;y<h.length;y++)o.set(n,0,V.add(o.get(n,0),h[y]))}if(r.length!==e.length||s.determinant().equals(0))throw new G.exceptions.SolveError(\"System does not have a distinct solution\");p=(s=s.invert()).multiply(o);return G.Utils.isArray(t)&&p.each(function(e){return e.negate()}),se.systemSolutions(p,r,a)},quad:function(e,t,n){e=V.subtract(V.pow(t.clone(),z(2)),V.multiply(V.multiply(n.clone(),e.clone()),z(4))),e=V.pow(e,z(.5)),n=V.parse(V.multiply(new z(2),n.clone()));return[V.parse(c(\"(-({0})+({1}))/({2})\",t,e,n)),V.parse(c(\"(-({0})-({1}))/({2})\",t,e,n))]},cubic:function(e,t,n,r){r=r.text(),n=n.text(),t=t.text(),e=`(-(${n})^3/(27*(${r})^3)+(${n})*(${t})/(6*(${r})^2)-(${e.text()})/(2*(${r})))`,t=`((${t})/(3*(${r}))-(${n})^2/(9*(${r})^2))`,n=`((${e})+sqrt((${e})^2+(${t})^3))^(1/3)+((${e})-sqrt((${e})^2+(${t})^3))^(1/3)-(${`(${n})/(3*(${r}))`})`,r=\"1/2+sqrt(3)/2*i\";return[V.parse(n),V.parse(`(${n})(${r})`),V.parse(`(${n})(${r})^2`)]},quartic:function(e,t,n,r,i){var s,o,a,u={};return G.Utils.arrayUnique(l(i).concat(l(r)).concat(l(n)).concat(l(t)).concat(l(e))).map(function(e){u[e]=1}),i=i.toString(),r=r.toString(),n=n.toString(),t=t.toString(),e=e.toString(),s=V.parse(c(\"(8*({0})*({2})-3*({1})^2)/(8*({0})^2)\",i,r,n)).toString(),o=V.parse(c(\"(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)\",i,r,n,t)).toString(),a=V.parse(c(\"12*({0})*({4})-3*({1})*({3})+({2})^2\",i,r,n,t,e)).toString(),e=V.parse(c(\"2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})\",i,r,n,t,e)).toString(),e=V.parse(c(\"((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)\",a,e)).toString(),Y=V.parse(c(\"(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)\",i,s,e,a)).toString(),[V.parse(c(\"-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))\",i,r,s,o,Y)),V.parse(c(\"-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))\",i,r,s,o,Y)),V.parse(c(\"-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))\",i,r,s,o,Y)),V.parse(c(\"-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))\",i,r,s,o,Y))]},divideAndConquer:function(e,t){var n=[],e=G.Algebra.Factor.factor(e);return e.group===J&&e.each(function(e){e=z.unwrapPARENS(e),n=n.concat(oe(e,t))}),n},csolve:function(u,l){return G.Utils.block(\"IGNORE_E\",function(){var e=[],t=G.Utils.decompose_fn(u,l,!0);if(t.x.group===Y)for(var n,r=V.parse(t.x.power),i=Number(r),s=V.pow(V.divide(t.b.negate(),t.a),r.invert()),s=(t=z.toPolarFormArray(s))[0],o=(t[1],s.toString()),a=(r.toString(),0);a<i;a++)n=c(\"({0})*e^(2*{1}*pi*{2}*{3})\",o,a,r,G.Settings.IMAGINARY),n=V.parse(n),e.push(n);return e},!0)},getPoints:function(e,t,u){t=t||.01,u=u||[];var l=$(e),n=Math.round(0),r=l(n),c=r/Math.abs(r),i=G.Settings.ROOTS_PER_SIDE,r=i;u.push(Math.floor(n/2)),u.push(Math.abs(n)),u.push(n),e.each(function(e){e.containsFunction(G.Settings.LOG)&&u.push(.1)});e=s(-G.Settings.SOLVE_RADIUS,n,t),n=s(n,G.Settings.SOLVE_RADIUS,t),t=function(e,t){for(var n,r,i,s=[],o=0,a=e.length;o<a;o++)n=e[o],i=(r=l(n))/Math.abs(r),isNaN(r)||!isFinite(r)||s.length>t||(i!==c&&s.push(n),c=i);u=u.concat(s)};return t(e,r),t(n,i),u},bisection:function(e,t){var n=e-1,r=e+1;if(Math.sign(t(n))!==Math.sign(t(r))){var i,s,o=0;do{if(i=Math.abs(r-n),o++>G.Settings.MAX_BISECTION_ITER||isNaN(i))return}while(s=(n+r)/2,0<t(n)*t(s)?n=s:r=s,i>=te.EPSILON);var a=(n+r)/2,e=t(a);if(!isNaN(e)&&Math.abs(e)<=G.Settings.BI_SECTION_EPSILON)return G.Utils.round(a,13)}},Newton:function(e,t,n){var r=G.Settings.MAX_NEWTON_ITERATIONS,i=0,s=e;do{var o=t(s);if(0===s&&0===o){a=0;break}if(r<++i)return;var a=s-o/n(s),o=Math.abs(a-s),s=a}while(o>te.NEWTON_EPSILON);if(Math.abs(t(a))<=te.EPSILON)return a},rewrite:function(e,t,n){var r,i;t=t||new z(0),e.isComposite()&&e.isLinear()?(r=[],i=[],e.each(function(e){(\"sqrt\"===(e=e.clone()).fname&&e.contains(n)?r:i).push(e)},!0),1===r.length&&(t=V.expand(V.pow(V.subtract(t,G.Utils.arraySum(i)),new z(2))),e=V.expand(V.pow(z.unwrapSQRT(r[0]),new z(2))))):e=z.unwrapSQRT(V.expand(e));var s=0,o=e.length;if(e.group===K&&e.contains(n)&&e.isLinear()){e.distributeMultiplier();var a=new z(0);return e.each(function(e){e.contains(n)?(s++,a=V.add(a,e.clone())):t=V.subtract(t,e.clone())}),e=a,s!==o?se.rewrite(e,t,n):[e,t]}if(e.group===J&&e.contains(n)&&e.isLinear()){if(e.multiplier.lessThan(0)&&(e.multiplier=e.multiplier.multiply(new G.Frac(-1)),t.multiplier=t.multiplier.multiply(new G.Frac(-1))),t.equals(0))return new z(0);a=new z(1);return e.each(function(e){e.contains(n)?a=V.multiply(a,e.clone()):t=V.divide(t,e.clone())}),se.rewrite(e=a,t,n)}if(!e.isLinear()&&e.contains(n)){o=V.parse(e.power.clone().invert());return e=V.pow(e,o.clone()),t=V.pow(V.expand(t),o.clone()),se.rewrite(e,t,n)}if(e.group===ee||e.group===Y||e.group===W)return[e,t]},sqrtSolve:function(n,r){var t=new z(0),i=new z(0);if(n.isComposite()&&(n.each(function(e){\"sqrt\"===e.fname&&e.contains(r)?t=V.add(t,e.clone()):i=V.add(i,e.clone())}),!t.equals(0))){var e=V.expand(V.multiply(V.parse(n.multiplier),V.subtract(V.pow(i,new z(2)),V.pow(t,new z(2)))));return oe(e,r).filter(function(e){if(e.isImaginary())return e;var t={};return t[r]=e,X(n,t).equals(0)?e:void 0})}}},oe=function(n,p,i,t,e){if(t=t||0,t++>te.MAX_SOLVE_DEPTH)return i;if(n instanceof re){if(n.isZero())return[new z(0)];if(n.LHS.equals(p)&&!n.RHS.contains(p))return[n.RHS];if(n.RHS.equals(p)&&!n.LHS.contains(p))return[n.LHS]}if(n instanceof G.Vector&&(n=n.elements),p=p||\"x\",ne(n))return se.solveSystem.apply(void 0,arguments);i=i||[];var s={},r={};if(r[p]=0,Q(n)&&!0===X(n.getDenom(),r).equals(0))return i;var o=function(e,t){var n,r=Q(e);void 0===e||\"number\"==typeof e&&isNaN(e)||(ne(e)?e.forEach(function(e){o(e)}):\"null\"!==e.valueOf()&&(\"function\"==typeof G.Settings.PRE_ADD_SOLUTION&&(e=G.Settings.PRE_ADD_SOLUTION(e)),r||(e=V.parse(e)),G.Settings.make_pi_conversions&&t&&(r=(n=V.divide(e.clone(),new z(Math.PI))).multiplier,t=Math.abs(r.num),r=Math.abs(r.den),t<10&&r<10&&(e=V.multiply(n,new z(\"pi\")))),n=e.toString(),s[n]||i.push(e),s[n]=!0))};if(n.group===Y&&n.contains(p)){try{var a={};a[p]=0,X(e,a,\"numer\"),o(new z(0))}catch(e){}return i}if(n.group===J){var u=n.getNum();if(u.group!==J)return oe(u,p,i,t,e);var l=String(p);return u.each(function(e){e.contains(l)&&oe(e,p,i,t,n)}),i}n.group===ee&&\"sqrt\"===n.fname&&(n=V.pow(z.unwrapSQRT(n),new z(2)));var c=(G.Utils.isSymbol(n)?n:se.toLHS(n,!1)).getNum(),r=G.Utils.variables(c),a=r.length;if((c=G.Utils.isInt(c.power)&&0<c.power?V.parse(c).toLinear():c).group===Y||c.group===J&&c.contains(p))return[new z(0)];function f(e){var t=new z(0),n=new z(0);return e.each(function(e){e.contains(p,!0)?t=V.add(t,e.clone()):n=V.subtract(n,e.clone())}),[t,n]}var h,m={},g=function(n){var e=(n=V.expand(n,{expand_denominator:!0,expand_functions:!0})).clone();if(n.symbols)for(var t in n.symbols){var r=n.symbols[t],i=r.getDenom();if(!i.isConstant(!0)&&n.isComposite()){var s=new z(0);return n.each(function(e){s=V.add(s,V.multiply(e,i.clone()))}),g(V.multiply(V.parse(n.multiplier),s))}var o=Z(r,p),a=o[1].fname===G.Settings.SQRT,u=z.unwrapSQRT(o[1]),t=u.power.clone();if(!Q(t)&&!t.equals(.5))if(t.den.gt(1)){if(a)return n=V.subtract(n,r.clone()),n=V.add(n,V.multiply(o[0].clone(),u)),g(n);u=m[t.den];m[t.den]=u?u++:1}else{if(-1===t.sign()){var l=V.parse(p+\"^\"+Math.abs(t));return n.each(function(e,t){e.contains(p)&&(n.symbols[t]=V.multiply(e,l.clone()))}),m={},g(V.parse(n))}if(r.group===W){r=G.Utils.arrayMin(G.Utils.keys(r.symbols));if(r<0){var l=V.parse(p+\"^\"+Math.abs(r)),c=new z(0);return e.each(function(e){c=V.add(c,V.multiply(e.clone(),l.clone()))},!0),c}}}}return n};if(se.inverseFunctionSolve=function(e,t,n){var r=Z(t.args[0],p);if(r[1].group===Y)return V.divide(V.symfunction(e,[V.divide(n,V.parse(t.multiplier))]),r[0])},(c=g(c)).equals(0))return[c];var d,v,u=G.Utils.keys(m);if(1===u.length&&(h=u[0],c.each(function(e,t){var n,r;!e.contains(p)||(e=(r=(n=Z(e,p))[1]).power).den.gt(1)&&(r.power=e.multiply(new G.Frac(h)),c.symbols[t]=V.multiply(r,n[0]))}),c=V.parse(c)),o(se.sqrtSolve(c,p)),1===a)if(c.isPoly(!0)){var w=new G.Algebra.Classes.Factors;if(G.Algebra.Factor.factor(c,w),1<w.getNumberSymbolics())for(var y in w.factors)o(oe(w.factors[y],p));else{var b,S,M=(b=G.Utils.getCoeffs(c,p)).length-1,a=!1;r[0]===p&&(ie(b,function(e){return e.group!==G.groups.N})&&(r=G.Algebra.proots(c),ie(r,function(e){return!G.Utils.isInt(e)})&&(a=!0,r.map(function(e){o(new z(e))}))),a||((n=V.parse(n))instanceof G.Equation&&(n=n.toLHS()),1===M?o(V.divide(b[0],b[1].negate())):2===M?o(V.expand(se.quad.apply(void 0,b))):3===M?(i=[],S=G.Algebra.Factor.factor(n),0<(i=[]).length?o(i):o(se.cubic.apply(void 0,b))):H.proots(c).map(o)))}}else try{for(var N,E,q=c.hasTrig(),x=se.getPoints(c,.1),A=se.getPoints(c,.05),C=se.getPoints(c,.01),L=G.Utils.arrayUnique(x.concat(A).concat(C)).sort(function(e,t){return e-t}),I=$(c.clone()),U=[],_=0;_<L.length;_++)N=L[_],void 0!==(E=se.bisection(N,I))?o(E,q):U.push(N);var L=U,R=j.diff(c.clone()),O=$(R);for(_=0;_<L.length;_++)N=L[_],o(se.Newton(N,I,O),q);i.sort()}catch(e){console.log(e)}else if(!c.hasFunc(p)&&c.isComposite())try{if((S=G.Algebra.Factor.factor(c.clone())).group===J)S.each(function(e){o(oe(e,p))});else{switch(M=(b=G.Utils.getCoeffs(c,p)).length-1){case 0:var T,P=(T=f(c))[0],k=T[1];P.group===G.groups.EX&&o(V.parse(G.Utils.format(G.Settings.LOG+\"(({0})/({2}))/\"+G.Settings.LOG+\"({1})\",k,P.value,P.multiplier)));break;case 1:o(V.divide(b[0],b[1].negate()));break;case 2:o(se.quad.apply(void 0,b));break;case 3:o(se.cubic.apply(void 0,b));break;case 4:o(se.quartic.apply(void 0,b));break;default:o(se.csolve(c,p)),0===i.length&&o(se.divideAndConquer(c,p))}0===i.length&&o(oe(S,p,i,t))}}catch(e){}else try{var F,D=se.rewrite(c,null,p),P=D[0],k=D[1];if(P.group===ee)\"abs\"===P.fname?o([k.clone(),k.negate()]):\"sin\"===P.fname?o(se.inverseFunctionSolve(\"asin\",P,k)):\"cos\"===P.fname?o(se.inverseFunctionSolve(\"acos\",P,k)):\"tan\"===P.fname?o(se.inverseFunctionSolve(\"atan\",P,k)):P.fname===G.Settings.LOG?(y=(F=Z(P.args[0],p))[1]).group===Y&&(c=new re(y,k=V.divide(V.subtract(V.pow(1<P.args.length?P.args[1]:new z(\"e\"),V.divide(k,V.parse(P.multiplier))),F[3]),F[0])).toLHS(),o(oe(c,p))):o(V.subtract(P,k));else{var B=new re(P,k).toLHS();if(B.equals(c))throw new Error(\"Stopping. No stop condition exists\");o(oe(B,p))}}catch(e){try{c.group===J?o(0):c.group===K&&(P=(T=f(c))[0],k=T[1],P.group===G.groups.EX&&P.value===p&&(d=P.power.clone().invert(),o(V.pow(k,d))))}catch(e){}}return h&&(i=i.map(function(e){return V.pow(e,new z(h))})),Q(n)&&(v={},i=i.filter(function(e){try{v[p]=e;var t=Number(X(n,v));return isNaN(t)?!0:!0}catch(e){return!1}})),i};nerdamer.register([{name:\"solveEquations\",parent:\"nerdamer\",numargs:-1,visible:!0,build:function(){return oe}},{name:\"solve\",parent:\"Solve\",numargs:2,visible:!0,build:function(){return G.Solve.solve}},{name:\"setEquation\",parent:\"Solve\",visible:!0,build:function(){return e}}]),nerdamer.api()}(),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus\"),require(\"./Algebra\")),function(){\"use strict\";var x=nerdamer.getCore(),A=x.PARSER,C=x.Symbol,L=x.Utils.format,a=x.Utils.isVector,u=x.Utils.isArray,I=(x.Vector,x.groups.S),U=(x.groups.EX,x.groups.CP),_=x.groups.CB,l=x.groups.FN;x.Settings.Laplace_integration_depth=40,C.prototype.findFunction=function(e){if(this.group===l&&this.fname===e)return this.clone();var t;if(this.symbols)for(var n in this.symbols)if(t=this.symbols[n].findFunction(e))break;return t};var R=x.Extra={version:\"1.4.2\",LaPlace:{transform:function(n,r,i){n=n.clone(),r=r.toString();var e=(n=C.unwrapSQRT(n,!0)).stripVar(r),t=n.group;if((n=A.divide(n,e.clone())).isConstant()||!n.contains(r,!0))o=A.parse(L(\"({0})/({1})\",n,i));else if(t===I&&x.Utils.isInt(n.power))var s=String(n.power),o=A.parse(L(\"factorial({0})/({1})^({0}+1)\",s,i));else if(n.group===I&&n.power.equals(.5))o=A.parse(L(\"sqrt(pi)/(2*({0})^(3/2))\",i));else if(n.isComposite())o=new C(0),n.each(function(e){o=A.add(o,R.LaPlace.transform(e,r,i))},!0);else if(!n.isE()||n.power.group!==I&&n.power.group!==_)if(n.group!==l||-1===[\"sin\",\"cos\",\"sinh\",\"cosh\"].indexOf(n.fname)||n.args[0].group!==I&&n.args[0].group!==_){var a,s=x.Settings.integration_depth<x.Settings.Laplace_integration_depth;s&&(a=x.Settings.integration_depth,x.Settings.integration_depth=x.Settings.Laplace_integration_depth),x.Utils.block(\"PARSE2NUMBER\",function(){var e=r,t=n.sub(r,e),t=A.parse(\"e^(-\"+i+\"*\"+e+\")*\"+t);if((o=x.Calculus.integrate(t,e)).hasIntegral())return A.symfunction(\"laplace\",arguments);o=o.sub(r,0),o=(o=A.expand(A.multiply(o,new C(-1)))).sub(e,r)},!1),o=x.Utils.block(\"PARSE2NUMBER\",function(){return A.parse(o)},!0),s&&(x.Settings.integration_depth=a)}else{u=n.args[0].stripVar(r);switch(n.fname){case\"sin\":o=A.parse(L(\"({0})/(({1})^2+({0})^2)\",u,i));break;case\"cos\":o=A.parse(L(\"({1})/(({1})^2+({0})^2)\",u,i));break;case\"sinh\":o=A.parse(L(\"({0})/(({1})^2-({0})^2)\",u,i));break;case\"cosh\":o=A.parse(L(\"({1})/(({1})^2-({0})^2)\",u,i))}}else{var u=n.power.stripVar(r);o=A.parse(L(\"1/(({1})-({0}))\",u,i))}return A.multiply(o,e)},inverse:function(M,N,E){var q=M.clone();return x.Utils.block(\"POSITIVE_MULTIPLIERS\",function(){if((M=M.group===_?x.Algebra.PartFrac.partfrac(A.expand(M),N):M).group===I||M.group===_||M.isComposite()){var e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g=function(){(s=A.multiply(s,e)).multiplier=s.multiplier.multiply(M.multiplier),s=A.divide(s,r.a)},d=M.multiplier.clone();if(M.toUnitMultiplier(),e=M.getNum(),(t=M.getDenom().toUnitMultiplier()).group===U?(i=t.power.clone(),t.toLinear()):i=new x.Frac(1),n=N.toString(),r=x.Utils.decompose_fn(t,n,!0),x.Utils.decompose_fn(A.expand(e.clone()),n,!0),e.multiplier=e.multiplier.multiply(d),(t.group===I||t.group===_)&&r.x.value===n&&r.b.equals(0)&&x.Utils.isInt(r.x.power))p=r.x.power-1,f=x.Math2.factorial(p),s=A.divide(A.pow(E,new C(p)),new C(f)),g();else if(t.group===U&&i.equals(1))r.x.group===x.groups.PL&&x.Algebra.degree(t).equals(2)?(u=x.Algebra.sqComplete(t,n),l=x.Utils.getU(t),h=x.Utils.decompose_fn(u.a,n,!0).b,c=R.LaPlace.inverse(A.parse(`1/((${l})^2+(${u.c}))`),l,E),s=A.multiply(c,A.parse(`(${d})*e^(-(${h})*(${E}))`))):r.x.isLinear()&&!e.contains(n)?(E=A.divide(E,r.a.clone()),s=A.parse(L(\"(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({4})*({1})^({3}))\",E,r.a,r.b,i,f=0===(p=i-1)||1===p?\"1\":`(${i}-1)!`)),g()):r.x.group===I&&r.x.power.equals(2)&&(e.contains(n)?(h=new C(1),e.group===_&&(o=new C(1),e.each(function(e){e.contains(n)?o=A.multiply(o,e):h=A.multiply(h,e)}),e=o),u=(a=x.Utils.decompose_fn(e,n,!0)).a,l=a.b,c=u.containsFunction(\"sin\"),p=u.containsFunction(\"cos\"),f=l.containsFunction(\"cos\"),g=l.containsFunction(\"sin\"),a.x.value===n&&a.x.isLinear()&&!(c&&f||p||g)?s=A.parse(L(\"(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})\",E,a.a,r.a,r.b)):c&&f&&(c=u.findFunction(\"sin\"),f=l.findFunction(\"cos\"),c.args[0].equals(f.args[0])&&!c.args[0].contains(n)&&(v=A.divide(l,f.toUnitMultiplier()).toString(),f=c.args[0].toString(),m=r.b,c=A.divide(u,c.toUnitMultiplier()),s=A.parse(L(\"(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))\",E,h,v,f,m,c))))):s=A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))\",E,e,r.a,r.b)));else if(r.x.power.num&&r.x.power.num.equals(3)&&r.x.power.den.equals(2)&&e.contains(\"sqrt(pi)\")&&!e.contains(n)&&e.isLinear()){var v=A.divide(e.clone(),A.parse(\"sqrt(pi)\"));s=A.parse(L(\"(2*({2})*sqrt({0}))/({1})\",E,r.a,v,e))}else if(i.equals(2)&&r.x.power.equals(2))if(e.contains(n))if((a=x.Utils.decompose_fn(A.expand(e.clone()),n,!0)).x.isComposite()){var w=[],y=e.collectSymbols(function(e){e=C.unwrapPARENS(e);var t=x.Utils.decompose_fn(e,n,!0);return t.symbol=e,t}).sort(function(e,t){e=e.x.value!==n?0:e.x.power;return(t.x.value!==n?0:t.x.power)-e});h=new C(-1);for(var b=0;b<y.length;b++){var S=y[b];S.x.value===n?w.push(S):h=A.multiply(h,S.symbol)}w[0].x.power.equals(2)&&w[1].x.power.equals(1)&&w[1].b.equals(0)&&!w[0].b.equals(0)&&(v=w[0].a.negate(),s=A.parse(L(\"-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2\",E,h,v,w[0].b,r.a,r.b)))}else a.x.isLinear()?(h=A.divide(a.a,new C(2)),s=A.parse(L(\"(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))\",E,h,r.a,r.b))):a.x.power.equals(2)&&(s=a.b.equals(0)?(h=A.divide(a.a,new C(2)),A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2\",E,h,r.a,r.b))):(h=A.divide(a.a,new C(2)),m=a.b.negate(),A.parse(L(\"-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2\",E,h,r.a,r.b,m))));else h=A.divide(e,new C(2)),s=A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))\",E,h,r.a,r.b));else M.isComposite()&&(i.equals(2)&&r.x.group===I?s=A.parse(`(${d})*(${E})*e^(-(${r.b})*(${E}))`):(s=new C(0),M.each(function(e){s=A.add(s,R.LaPlace.inverse(e,N,E))},!0)))}return s=s||A.symfunction(\"ilt\",[q,N,E])},!0)}},Statistics:{frequencyMap:function(e){for(var t={},n=0,r=e.length;n<r;n++){var i=e[n].toString();t[i]||(t[i]=0),t[i]++}return t},sort:function(e){return e.sort(function(e,t){return e.isConstant()&&t.isConstant()||A.error(\"Unable to sort! All values must be numeric\"),e.multiplier.subtract(t.multiplier)})},count:function(e){return new C(e.length)},sum:function(e,t){for(var n=new C(0),r=0,i=e.length;r<i;r++)var s=e[r].clone(),n=t?A.add(A.pow(A.subtract(s,t.clone()),new C(2)),n):A.add(s,n);return n},mean:function(){var e=[].slice.call(arguments);return a(e[0])?R.Statistics.mean.apply(this,e[0].elements):A.divide(R.Statistics.sum(e),R.Statistics.count(e))},median:function(){var t=[].slice.call(arguments);if(a(t[0]))return R.Statistics.median.apply(this,t[0].elements);try{var e,n,r=R.Statistics.sort(t),i=t.length;n=x.Utils.even(i)?(e=i/2,R.Statistics.mean(r[e-1],r[e])):r[Math.floor(i/2)]}catch(e){n=A.symfunction(\"median\",t)}return n},mode:function(){var e=[].slice.call(arguments);if(a(e[0]))return R.Statistics.mode.apply(this,e[0].elements);var t=R.Statistics.frequencyMap(e);if(1===x.Utils.keys(t).length)o=e[0];else{var n,r={};for(n in t){var i,s=t[n];s in r?(i=r[s],u(i)?i.push(n):r[s]=[n,r[s]]):r[s]=n}var e=r[Math.max.apply(null,x.Utils.keys(r))],o=u(e)?A.symfunction(\"mode\",e.sort()):A.parse(e)}return o},gVariance:function(e,t){var n=R.Statistics.mean.apply(R.Statistics,t),n=R.Statistics.sum(t,n);return A.multiply(e,n)},variance:function(){var e=[].slice.call(arguments);if(a(e[0]))return R.Statistics.variance.apply(this,e[0].elements);var t=A.divide(new C(1),R.Statistics.count(e));return R.Statistics.gVariance(t,e)},sampleVariance:function(){var e=[].slice.call(arguments);if(a(e[0]))return R.Statistics.sampleVariance.apply(this,e[0].elements);var t=A.divide(new C(1),A.subtract(R.Statistics.count(e),new C(1)));return R.Statistics.gVariance(t,e)},standardDeviation:function(){var e=[].slice.call(arguments);return a(e[0])?R.Statistics.standardDeviation.apply(this,e[0].elements):A.pow(R.Statistics.variance.apply(R.Statistics,e),new C(.5))},sampleStandardDeviation:function(){var e=[].slice.call(arguments);return a(e[0])?R.Statistics.sampleStandardDeviation.apply(this,e[0].elements):A.pow(R.Statistics.sampleVariance.apply(R.Statistics,e),new C(.5))},zScore:function(e,t,n){return A.divide(A.subtract(e,t),n)}},Units:{table:{foot:\"12 inch\",meter:\"100 cm\",decimeter:\"10 cm\"}}};nerdamer.register([{name:\"laplace\",visible:!0,numargs:3,build:function(){return R.LaPlace.transform}},{name:\"ilt\",visible:!0,numargs:3,build:function(){return R.LaPlace.inverse}},{name:\"mean\",visible:!0,numargs:-1,build:function(){return R.Statistics.mean}},{name:\"median\",visible:!0,numargs:-1,build:function(){return R.Statistics.median}},{name:\"mode\",visible:!0,numargs:-1,build:function(){return R.Statistics.mode}},{name:\"smpvar\",visible:!0,numargs:-1,build:function(){return R.Statistics.sampleVariance}},{name:\"variance\",visible:!0,numargs:-1,build:function(){return R.Statistics.variance}},{name:\"smpstdev\",visible:!0,numargs:-1,build:function(){return R.Statistics.sampleStandardDeviation}},{name:\"stdev\",visible:!0,numargs:-1,build:function(){return R.Statistics.standardDeviation}},{name:\"zscore\",visible:!0,numargs:3,build:function(){return R.Statistics.zScore}}]),nerdamer.api()}(),\"undefined\"!=typeof module&&(module.exports=nerdamer);"],"sourceRoot":""}