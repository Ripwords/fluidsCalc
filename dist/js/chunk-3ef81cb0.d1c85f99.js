(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3ef81cb0"],{"05dd0":function(e,t,n){},"15f6":function(e,t,n){(function(e){var r,i,s=function(e){"use strict";var t="1.1.12",n=new ct,r=e.bigInt,i=e.bigDec;i.set({precision:250});var o={},a=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],u={},l={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{"π":"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};(function(){l.CACHE.roots={};for(var e=40,t=40,n=2;n<=e;n++)for(var i=2;i<=t;i++){var s=r(n).pow(i);l.CACHE.roots[s+"-"+i]=n}})();var c=o.N=1,f=o.P=2,p=o.S=3,h=o.EX=4,m=o.FN=5,g=o.PL=6,v=o.CB=7,d=o.CP=8,w=l.CONST_HASH="#",y=l.PARENTHESIS,b=l.SQRT,S=l.ABS,M=l.FACTORIAL,E=l.DOUBLEFACTORIAL,N=[],x={},q=[],_=[],A=function(e,t){if(!l.suppress_errors)throw t?new t(e):new Error(e)},O=function(e){var t=function(t){this.name=e,this.message=void 0!==t?t:"";var n=new Error(this.message);n.name=this.name,this.stack=n.stack};return t.prototype=Object.create(Error.prototype),t},C=function(e){return-1!==q.indexOf(e)},I=function(e){for(var t=e[0],n=1,r=e.length;n<r;n++)if(!e[n].equals(t))return!1;return!0},L=function(e){_.push(e),l.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},U=function(e,t){if(t=t||"variable",-1===l.ALLOW_CHARS.indexOf(e)){var n=l.VALIDATION_REGEX;if(!n.test(e))throw new Qe(e+" is not a valid "+t+" name")}},R=function(e){var t=Math.sign(e);if(e=Math.abs(e),/\d+\.?\d*e[\+\-]*\d+/i.test(e)){var n="0",r=String(e).toLowerCase().split("e"),i=r.pop(),s=Math.abs(i),o=i/s,a=r[0].split(".");if(-1===o)s-=a[0].length,e=s<0?a[0].slice(0,s)+"."+a[0].slice(s)+(2===a.length?a[1]:""):n+"."+new Array(s+1).join(n)+a.join("");else{var u=a[1];u&&(s-=u.length),e=s<0?a[0]+u.slice(0,s)+"."+u.slice(s):a.join("")+new Array(s+1).join(n)}}return t<0?"-"+e:e},T=function(e){for(var t=Math.floor(Math.sqrt(e)),n=2;n<=t;n++)if(e%n===0)return!1;return!0},P=function(e,t){var n={};return n[e]=t,n},k=function(e){return/^\d+\.?\d*$/.test(e)},D=function(e){for(var t=0;t<e.length;t++)if(!k(e[t]))return!1;return!0},F=function(e){return j(e)?F(e.multiplier.toDecimal()):e%1!==0},j=function(e){return e instanceof lt},B=function(e){return e instanceof ot},G=function(e,t,n){if(n=n||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},j(e)){var r=e.group,i=e.previousGroup;if(r===h&&G(e.power,t,n),r===d||r===v||i===d||i===v)for(var s in e.symbols)G(e.symbols[s],t,n);else if(r===p||i===p)"e"!==e.value&&"pi"!==e.value&&e.value!==l.IMAGINARY&&n.add(e.value);else if(r===g||i===g)G(ue(e.symbols),t,n);else if(r===h)isNaN(e.value)||n.add(e.value),G(e.power,t,n);else if(r===m&&!t)for(var o=0;o<e.args.length;o++)G(e.args[o],t,n)}return n.c.sort()},V=function(e,t){for(var r=new lt(0),i=0;i<e.length;i++){var s=e[i];r=n.add(r,j(s)?s:n.parse(s))}return t?Number(r):r},H=function(e,t){e=n.expand(e),t=t||{};var r=function(e,r){t[e]||(t[e]=new lt(0)),t[e]=n.add(t[e],r.clone())};return e.each((function(e){if(e.isConstant("all"))r("constants",e);else if(e.group===p)r(e.value,e);else if(e.group!==m||e.fname!==S&&""!==e.fname){if(e.group===h||e.group===m)throw new Error("Unable to separate. Term cannot be a function!");r(G(e).join(" "),e)}else H(e.args[0])})),t},Z=function(e,t){t=t||e.length;for(var n=0;n<t;n++){var r=e[n];r||(e[n]=new lt(0))}return e},z=function(e){return e instanceof ht},X=function(e){return e instanceof mt},$=function(e){return e instanceof gt},W=function(e){return e.group===c||e.group===f},Q=function(e){return e.group===p&&e.multiplier.equals(1)&&e.power.equals(1)},Y=function(e){return Array.isArray(e)},K=function(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())},J=function(e){return j(e)&&(e=e.multiplier),e.lessThan(0)},ee=function(e){return e?String(e):e},te=function(e){return"("+e+")"},ne=function(e,t,n,r){return e.substr(0,t)+r+e.substr(n,e.length)},re=function(e){return void 0!==e&&e.custom},ie=function(e,t){return e<0===t<0},se=function(){var e=[].slice.call(arguments),t=e.shift(),n=t.replace(/{(\d+)}/g,(function(t,n){var r=e[n];return"function"===typeof r?r():r}));return n},oe=function(e,t,n){var r=[];n=n||1;for(var i=e;i<=t;i++)r.push(i*n);return r},ae=Object.keys,ue=function(e,t,n){for(var r in e)break;return t?r:n?{key:r,obj:e[r]}:e[r]},le=function(e,t,r){for(var i,s=5,o={},a=0;a<r.length;a++)o[r[a]]=new lt(Math.floor(Math.random()*s)+1);return Ce("PARSE2NUMBER",(function(){i=n.parse(e,o).equals(n.parse(t,o))})),i},ce=function(e,t,r){return U(e),C(e)?null:(t=t||G(n.parse(r)),n.functions[e]=[n.mapped_function,t.length,{name:e,params:t,body:r}],r)},fe=function(e){return Math.max.apply(void 0,e)},pe=function(e){return Math.min.apply(void 0,e)},he=function(e,t){if(e.sort(),t.sort(),e.length===t.length){for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}return!1},me=function(e){for(var t=[],n=e.length,r=0;r<n;r++)t[r]=e[r].clone();return t},ge=function(e,t){t=t||20;var n,r,i,s=[];s.push(e[0]);for(var o=0;o<e.length-1;o++){n=e[o],r=e[o+1]-n,i=r/t;for(var a=0;a<t;a++)n+=i,s.push(n)}return s},ve=function(e){var t,r;if(e.group===m&&""===e.fname?(t=lt.unwrapPARENS(n.parse(e).toLinear()),r=n.parse(e.power)):e.group===f&&(t=n.parse(e.value),r=n.parse(e.power)),t&&r&&t.group===c&&r.group===c&&t.multiplier.isNegative()){for(var i=[],s=lt.toPolarFormArray(Re(e)),o=s[0],a=n.arg(t),u=r.multiplier.den.toString(),p=r.multiplier.num.toString(),h="(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",g=0;g<u;g++){var v=Re(n.parse(se("(({0})+2*pi*({1}))/({2})",a,g,u))).multiplier.toDecimal();i.push(Re(n.parse(se(h,o,u,l.IMAGINARY,v,p))))}return ht.fromArray(i)}if(e.isConstant(!0,!0)){var d=e.sign(),w=(a=Re(e.abs()),n.sqrt(a));i=[w.clone(),w.negate()];d<0&&(i=i.map((function(e){return n.multiply(e,lt.imaginary())})))}else i=[n.parse(e)];return ht.fromArray(i)},de=function(e,t){for(var n=e.length,r=[],i=0;i<e.length;i++)r.push([e[i],t[i]]);r.sort((function(e,t){return e[0]-t[0]}));var s=[],o=[];for(i=0;i<n;i++)s.push(r[i][0]),o.push(r[i][1]);return[s,o]},we=function(e,t,r){var i,s,o,a;if(t=String(t),e.group===d){var u=n.expand(e.clone()).stripVar(t);i=n.subtract(e.clone(),u.clone()),a=u}else i=e.clone();return s=i.stripVar(t),o=n.divide(i.clone(),s.clone()),a=a||new lt(0),r?{a:s,x:o,ax:i,b:a}:[s,o,i,a]},ye=function(e,t){return K(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t="undefined"===typeof t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},be=function(e){var t="u",n=t,r=0,i=G(e);while(-1!==q.indexOf(n)||-1!==i.indexOf(n))n=t+r++;for(var s=0,o=q.length;s<=o;s++)if(!q[s]){q[s]=n;break}return n},Se=function(e){var t=q.indexOf(e);-1!==t&&(q[t]=void 0)},Me=function(e,t){if(Y(e))for(var n=e.length,r=0;r<n;r++)t.call(e,r);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)},Ee=function(e){return e%2===0},Ne=function(e){return 1/(e%1)%2===0},xe=function(e){for(var t=e.length,n=[],r=0;r<t;r++){var i=e[r];-1===n.indexOf(i)&&n.push(i)}return n},qe=function(e){for(var t=G(e[0],null,null,!0),n=1,r=e.length;n<r;n++)t=t.concat(G(e[n]));return t=xe(t).sort(),t},_e=function(e,t){var n=typeof t;"function"===n&&"undefined"!==n||(t=function(e,t){return e===t});var r=[];while(e.length){var i=e[0];if(1===e.length){r.push(i);break}var s=[];r.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return r},Ae=function(e){var t=function(e){-1===q.indexOf(e)&&q.push(e)};"string"===typeof e?t(e):Me(e,(function(e){t(e)}))},Oe=function(e,t){var n;return Y(e)?n=e.splice(t,1)[0]:(n=e[t],delete e[t]),n},Ce=function(e,t,n,r){var i=l[e];l[e]=void 0===n||!!n;var s=t.call(r);return l[e]=i,s},Ie=function(){var e={};for(var t in n.functions)e[t]=n.functions[t][0];return e},Le=function(e){return[].slice.call(e)},Ue=function(e,t,r){var i=[];e.each((function(e){if(e.contains(t))var r=e.stripVar(t),s=n.divide(e.clone(),r.clone()),o=s.power.toDecimal();else r=e,o=0;var a=i[o];i[o]=a?n.add(a,r):r}),!0);for(var s=0;s<i.length;s++)i[s]||(i[s]=new lt(0));return i},Re=function(e,t){return Ce("PARSE2NUMBER",(function(){return n.parse(e,t)}),!0)},Te=function(e){if(Y(e)){for(var t=new ht([]),r=0;r<e.length;r++)t.elements.push(Te(e[r]));return t}return j(e)?e:n.parse(e)},Pe=function(e){for(var t=a[a.length-1]||2,n=t;n<e;n++)T(n)&&a.push(n)},ke=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==c)return!1;return!0},De=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},Fe=function(e,t,r){(t.isComposite()&&!e.isComposite()||t.isLinear()&&!e.isLinear())&&([e,t]=[t,e]);var i=new lt(0);return e.isLinear()?e.each((function(e){if(t.isComposite())t.isLinear()?t.each((function(t){var s=n.multiply(n.parse(e),n.parse(t)),o=n.expand(n.parse(s),r);i=n.add(i,o)}),!0):i=n.add(i,n.multiply(e,n.parse(t)));else{var s=n.multiply(n.parse(e),n.parse(t));i=n.add(i,n.expand(s,r))}}),!0):i=n.multiply(e,t),i},je=O("DivisionByZero"),Be=O("ParseError"),Ge=O("UndefinedError"),Ve=O("OutOfFunctionDomainError"),He=O("MaximumIterationsReached"),Ze=O("NerdamerTypeError"),ze=O("ParityError"),Xe=O("OperatorError"),$e=O("OutOfRangeError"),We=O("DimensionError"),Qe=O("InvalidVariableNameError"),Ye=O("ValueLimitExceededError"),Ke=O("NerdamerValueError"),Je=O("SolveError"),et=O("InfiniteLoopError"),tt=O("UnexpectedTokenError"),nt={DivisionByZero:je,ParseError:Be,OutOfFunctionDomainError:Ve,UndefinedError:Ge,MaximumIterationsReached:He,NerdamerTypeError:Ze,ParityError:ze,OperatorError:Xe,OutOfRangeError:$e,DimensionError:We,InvalidVariableNameError:Qe,ValueLimitExceededError:Ye,NerdamerValueError:Ke,SolveError:Je,InfiniteLoopError:et,UnexpectedTokenError:tt},rt={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),n=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return e>=0?n:-n},diff:function(e){var t=.001,n=function(n){return(e(n+t)-e(n-t))/(2*t)};return n},median:function(...e){e.sort((function(e,t){return e-t}));var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),n=1/t.pop(),r=0,i=t.length;r<i;r++)n=1/(t.pop()+n);return e.sign*(e.whole+n)},continuedFraction:function(e,t){t=t||20;var n,r,i=Math.sign(e),s=Math.abs(e),o=Math.floor(s),a=s-o,u=0,l=!1,c=1e-14,f=1e7,p={whole:o,sign:i,fractions:[]};while(!l&&0!==a){if(n=1/a,r=Math.floor(n),r>f){var h=rt.fromContinued(p)-e;if(h<=Number.EPSILON)break}p.fractions.push(r),a=n-r,(a<=c||u>=t-1)&&(l=!0),u++}var m=p.fractions.length-1;return 1===p.fractions[m]&&(p.fractions.pop(),p.fractions[--m]++),p},bigpow:function(e,t){e instanceof ut||(e=ut.create(e)),t instanceof ut||(t=ut.create(t));var n=new ut(0);if(t.isInteger())n.num=e.num.pow(t.toString()),n.den=e.den.pow(t.toString());else{var r=ut.create(Math.pow(e.num,t.num)),i=ut.create(Math.pow(e.den,t.num));n.num=rt.nthroot(r,t.den.toString()),n.den=rt.nthroot(i,t.den)}return n},gamma:function(e){var t=7,n=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*rt.gamma(1-e));e-=1;for(var r=n[0],i=1;i<t+2;i++)r+=n[i]/(e+i);var s=e+t+.5;return Math.sqrt(2*Math.PI)*Math.pow(s,e+.5)*Math.exp(-s)*r},bigfactorial:function(e){for(var t=new r(1),n=2;n<=e;n++)t=t.times(n);return new ut(t)},bigLog:function(e){var t=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(t[e])return ut.quick.apply(null,t[e].split("/"));e=new ut(e);for(var n=80,r=new ut(0),i=e.subtract(new ut(1)),s=e.add(new ut(1)),o=0;o<n;o++){var a=new ut(2*o+1),u=rt.bigpow(i.divide(s),a),l=a.clone().invert().multiply(u);r=r.add(l)}return r.multiply(new ut(2))},factorial:function(e){var t=e%1===0;if(t&&e<0)return NaN;if(!t)return rt.gamma(e+1);for(var n=1,r=2;r<=e;r++)n*=r;return n},dfactorial:function(e){if(K(e)){var t=e%2===0,n=t?e/2:(e+1)/2,r=new ut(1);if(t)for(var i=1;i<=n;i++)r=r.multiply(new ut(2).multiply(new ut(i)));else for(i=1;i<=n;i++)r=r.multiply(new ut(2).multiply(new ut(i)).subtract(new ut(1)))}else r=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*rt.gamma(1+e/2);return r},GCD:function(){var e=xe([].slice.call(arguments).map((function(e){return Math.abs(e)}))).sort(),t=Math.abs(e.shift()),n=e.length;while(n-- >0){var r=Math.abs(e.shift());while(1){if(t%=r,0===t){t=r;break}if(r%=t,0===r)break}}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],n=1;n<e.length;n++){var r=e[n],i=t.isNegative()&&r.isNegative()?-1:1;t=r.gcd(t),i<0&&t.negate()}return t},LCM:function(e,t){return e*t/rt.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2===0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var n=rt.ifactor(e),r=new lt;for(var i in r.symbols={},r.group=v,n){var s=new lt(1);s.group=f,s.value=i,s.power=new lt(n[i]),r.symbols[i]=s}return r.updateHash(),1===e&&(r=new lt(e)),t<0&&r.negate(),r},sfactor:function(e,t){t=t||{};var n=Math.floor(Math.sqrt(e)),r=a[a.length-1];n>r&&e<1e6&&Pe(n);for(var i=a.length,s=0;s<i;s++){var o=a[s];while(e%o===0)e/=o,t[o]=(t[o]||0)+1}return e>1&&(t[e]=1),t},ifactor:function(e){var t=new r(e);if(e=String(e),"0"===e)return{0:1};e=new r(e);var n=e.sign?-1:1;e=e.abs();var i={};if(e.lt("65536"))i=rt.sfactor(e,i);else{var s=function(e){e.isPrime()?i[e]=(i[e]||0)+1:i=rt.sfactor(e,i)};try{var o=1e3,a=0;while(!e.abs().equals(1)){if(e.isPrime()){s(e);break}{function u(t){var n=new r(t),i=2,s=new r(t),l=new r(1);while(l.equals(1)){for(var c=0;c<=i&&l.equals(1);c++){if(a++>o)throw new Error("stopping");s=s.pow(2).add(1).mod(e),l=r.gcd(s.minus(n).abs(),e)}i*=2,n=s}return l.equals(e)?u(t+1):l}var l=u(2);s(l),e=e.divide(l)}}}catch(f){i={},s(t)}}if(-1===n){var c=pe(ae(i));i["-"+c]=i[c],delete i[c]}return i},boxfactor:function(e,t){t=t||200;var n,r,i=Math.floor(5/12*e),s=0,o=!1;while(1){if(n=Math.floor(e/i),r=e%i,0===r)break;if(o)return[e,1];i=Math.max(r,i-r),s++,o=s>t}return[n,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e),t=Ee(e)?t:Math.abs(t);for(var n=0,r=1,i=1,s=2;s<=e;s++)i=n+r,n=r,r=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){var t=Math.sign(e);return t*Math.floor(Math.abs(e))},simpson:function(e,t,n,r){var i=function(e,t,n){var r=e(t),i=1e-12;return isNaN(r)&&(r=e(1===n?t+i:t-i)),r};r=r||1e-4;var s=Math.abs(Math.floor((n-t)/r));s%2!==0&&s++;for(var o,a,u=(n-t)/s,l=i(e,t,1),c=!1,f=t+u,p=1;p<s;p++)o=c?2:4,a=o*i(e,f,1),l+=a,c=!c,f+=u;return(l+i(e,f,2))*(u/3)},num_integrate:function(e,t,n,r,i){if(i<0)throw new Error("max depth cannot be negative");function s(e,t,n,r,i,o,a,u,l,c,f){if(f.nanEncountered)return NaN;var p,h,m,g,v,d,w,y,b,S;if(p=n-t,h=e(t+.25*p),m=e(n-.25*p),isNaN(h))f.nanEncountered=!0;else if(isNaN(m))f.nanEncountered=!0;else if(g=p*(r+4*h+i)/12,v=p*(i+4*m+o)/12,d=g+v,S=(d-a)/15,!(f.maxDepthCount>1e3*l))return c>l?(f.maxDepthCount++,d+S):Math.abs(S)<u?d+S:(w=t+.5*p,y=s(e,t,w,r,h,i,g,.5*u,l,c+1,f),isNaN(y)?(f.nanEncountered=!0,NaN):(b=s(e,w,n,i,m,o,v,.5*u,l,c+1,f),isNaN(b)?(f.nanEncountered=!0,NaN):y+b))}function o(e,t,n,r,i){var o={maxDepthCount:0,nanEncountered:!1};void 0===r&&(r=1e-9),void 0===i&&(i=45);var a=e(t),u=e(.5*(t+n)),l=e(n),c=(a+4*u+l)*(n-t)/6,f=s(e,t,n,a,u,l,c,r,i,1,o);if(o.maxDepthCount>0&&L("integrate-adaptive-simpson: Warning: maximum recursion depth ("+i+") reached "+o.maxDepthCount+" times"),o.nanEncountered)throw new Error("Function does not converge over interval!");return f}var a;try{a=o(e,t,n,r,i)}catch(u){return rt.simpson(e,t,n)}return ye(a,12)},Ci:function(e){for(var t=20,n=.5772156649015329,r=0,i=1;i<t;i++){var s=2*i;r+=Math.pow(-1,i)*Math.pow(e,s)/(s*rt.factorial(s))}return Math.log(e)+n+r},Si:function(e){for(var t=20,n=0,r=0;r<t;r++){var i=2*r;n+=Math.pow(-1,r)*Math.pow(e,i+1)/((i+1)*rt.factorial(i+1))}return n},Ei:function(e){if(0===Number(e))return-1/0;for(var t=30,n=.5772156649015329,r=0,i=1;i<t;i++)r+=Math.pow(e,i)/(i*rt.factorial(i));return n+Math.abs(Math.log(e))+r},Shi:function(e){for(var t,n,r=30,i=0,s=0;s<r;s++)t=2*s,n=t+1,i+=Math.pow(e,n)/(n*n*rt.factorial(t));return i},Chi:function(e){var t,n,r;return t=.001,n=.5772156649015329,r=function(e){return(Math.cosh(e)-1)/e},Math.log(e)+n+rt.num_integrate(r,.002,e,t)},Li:function(e){return rt.Ei(rt.bigLog(e))},gamma_incomplete:function(e,t){for(var n=e-1,r=0,i=(t=t||0,0);i<n;i++)r+=Math.pow(t,i)/rt.factorial(i);return rt.factorial(n)*Math.exp(-t)*r},step:function(e){return e>0?1:e<0?0:.5},rect:function(e){e=Math.abs(e);return.5===e?e:e>.5?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return e=Math.abs(e),e>=1?0:1-e},nthroot:function(e,t){if(e instanceof ut||(e=new ut(e.toString())),t instanceof ut||(t=new ut(t.toString())),t.equals(1))return e;var n,r,i,s=e.divide(new ut(2)),o=new ut(1e-15),a=t.clone().invert(),u=t.subtract(new ut(1));do{var l=rt.bigpow(s,u),c=a.multiply(e.divide(l).subtract(s)).toDecimal(25);if(n=ut.create(c),i)break;s=s.add(n);c=n.toDecimal();i=!!r&&r===c,r=c}while(n.abs().gte(o));return s},sqrt:function(e){var t,n,r,i;e instanceof ut||(e=new ut(e));var s=0,o=!1,a=new ut(1e-20);t=e.divide(new ut(2));var u=1e3;do{if(s>u)throw new Error("Unable to calculate square root for "+e);t=t.add(e.divide(t)).divide(new ut(2)),t=new ut(t.decimal(30)),n=e.subtract(t.multiply(t)),i=!!r&&r.equals(n),(n.clone().abs().lessThan(a)||i)&&(o=!0),r=n,s++}while(!o);return t}};function it(e,t,n,i){var s="hash"===t,o=void 0,a=s?void 0:t,w="decimal"===a||"decimals"===a;function b(e){switch(t){case"decimals":case"decimal":return o=o||function(e){return!1},e.valueOf();case"recurring":o=o||function(e){return-1!==e.indexOf("'")};var n=e.toString(),i=/^-?\d+(?:\/\d+)?$/.exec(n);if(0===i.length)return n;var s=i[0].split("/"),a=!1,u=Number(s[0]);u<0&&(u=-u,a=!0);var c=Number(s[1]);c||(c=1);var f=Math.floor(u/c),p=10*(u-f*c);f=f.toString()+".";while(p&&p<c)p*=10,f+="0";var h="",m=[],g=0;while(1){if("undefined"!==typeof m[p]){var v=h.slice(0,m[p]),d=h.slice(m[p]),w=f+v+"'"+d+"'";return(a?"-":"")+w.replace("'0'","").replace(/\.$/,"")}var y=Math.floor(p/c),b=p-y*c;m[p]=g,h+=y.toString(),g+=1,p=10*b}case"mixed":o=o||function(e){return-1!==e.indexOf("/")};n=e.toString(),i=/^-?\d+(?:\/\d+)?$/.exec(n);if(0===i.length)return n;s=i[0].split("/");var S=new r(s[0]),M=new r(s[1]);M.equals(0)&&(M=new r(1));var E=S.divmod(M),N=(f=E.quotient,E.remainder),x="-"===s[0][0]||f.equals(0)||N.equals(0)?"":"+";return(f.equals(0)?"":f.toString())+x+(N.equals(0)?"":N.toString()+"/"+s[1]);case"scientific":return o=o||function(e){return!1},new at(e.valueOf()).toString(l.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return o=o||function(e){return-1!==e.indexOf("/")},e.toString()}}if(w&&"undefined"===typeof i&&(i=16),j(e)){var S="",M="",E="",N=e.group||n,x=e.value;if(!s){var q=b(e.multiplier);"-1"==q&&"-1"===String(e.multiplier)&&(E="-",q="1"),"1"!=q&&(S=q);var _=e.power?b(e.power):"";"1"!=_&&(M=j(_)?it(_,a):_)}switch(N){case c:S="";var A=i&&w?e.multiplier.toDecimal(i):b(e.multiplier);x="-1"==String(e.multiplier)?"1":A,M="";break;case g:x=e.collectSymbols().map((function(e){var t=it(e,a,n,i);return"0"==t&&(t=""),t})).sort().join("+").replace(/\+\-/g,"-");break;case d:x=e.collectSymbols().map((function(e){var t=it(e,a,n,i);return"0"==t&&(t=""),t})).sort().join("+").replace(/\+\-/g,"-");break;case v:x=e.collectSymbols((function(e){var t=e.group;return(t===g||t===d)&&e.power.equals(1)&&e.multiplier.equals(1)?te(it(e,a)):it(e,a)})).join("*");break;case h:var O=e.previousGroup,C=e.power.group;O===g&&(x=e.collectSymbols(it,a).join("+").replace("+-","-")),O===c||O===p||O===m||s||(x=te(x)),C!==d&&C!==v&&C!==g&&"1"==e.power.multiplier.toString()||!M||(M=te(M));break}if(N===m&&(x=e.fname+te(e.args.map((function(e){return it(e,a)})).join(","))),N===m&&e.fname in u){var I=it(e.args[0]),L=it(e.args[1]);e.args[0].isComposite()&&(I=te(I)),e.args[1].isComposite()&&(L=te(L)),x=I+u[e.fname]+L}M&&N!==h&&o(M)&&(M=te(M)),((N===d||N===g)&&(S&&"1"!=S||"-"===E)||(N===v||N===d||N===g)&&M&&"1"!=M||!s&&N===f&&-1==x||e.fname===y)&&(x=te(x)),i&&("decimal"===t||"decimals"===t&&S)&&(S=ye(S,i));var U=E+S;if(S&&o(S)&&(U=te(U)),M<0&&(M=te(M)),S&&(U+="*"),M){if("e"===x&&l.E_TO_EXP)return U+"exp"+te(M);M=l.POWER_OPERATOR+M}N===h&&"-"===x.charAt(0)&&(x=te(x));var R=U+x;return e.parens&&(R=te(R)),R+M}if(z(e)){for(var T=e.elements.length,P=(U=[],0);P<T;P++)U.push(e.elements[P].text(t));return"["+U.join(",")+"]"}try{return e.toString()}catch(k){return""}}function st(e){if(T(e))return[e];var t=e,n=1,r=[],i=2220446049250313e-31;while(n<t){var s=e/n,o=Math.floor(s),u=s-o;if(u<=i&&n>1){if(T(n)&&(-1===a.indexOf(n)&&a.push(n),r.push(n)),T(o)){r.push(o);break}t=o}n++}return r.sort((function(e,t){return e-t}))}function ot(e){this.symbol=e}function at(e){return this instanceof at?(e=String("undefined"===typeof e?0:e),e.startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,at.isScientific(e)?this.fromScientific(e):this.convert(e),this):new at(e)}function at(e){return this instanceof at?(e=String("undefined"===typeof e?0:e),e.startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,at.isScientific(e)?this.fromScientific(e):this.convert(e),this):new at(e)}function ut(e){if(e instanceof ut)return e;if(void 0===e)return this;try{if(K(e))try{this.num=r(e),this.den=r(1)}catch(n){return ut.simple(e)}else{var t=e instanceof i?ft.quickConversion(e):ft.convert(e);this.num=new r(t[0]),this.den=new r(t[1])}}catch(n){return ut.simple(e)}}function lt(e){var t="Infinity"===e;return this instanceof lt?(e instanceof i&&(e=e.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(e)||e instanceof i?(this.group=c,this.value=w,this.multiplier=new ut(e)):(this.group=p,U(e),this.value=e,this.multiplier=new ut(1),this.imaginary=e===l.IMAGINARY,this.isInfinity=t),this.power=new ut(1),this):new lt(e)}function ct(){var e=this,t={},n={names:[],actions:[]};function r(e,t){this.start=e,this.end=t}function s(){this.elements=[]}function o(e,t,n){if(this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===o.OPERATOR){var r=N[e];for(var i in r)this[i]=r[i]}else t===o.FUNCTION&&(this.precedence=o.MAX_PRECEDENCE,this.leftAssoc=!1)}r.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},r.prototype.text=function(){return it(this.start)+":"+it(this.end)},s.prototype.append=function(e){this.elements.push(e)},s.prototype.getItems=function(){return this.elements},s.prototype.toString=function(){return e.pretty_print(this.elements)},s.create=function(e){var t=new s;return e&&t.append(e),t},o.prototype.toString=function(){return this.value},o.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},o.OPERATOR="OPERATOR",o.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",o.FUNCTION="FUNCTION",o.UNIT="UNIT",o.KEYWORD="KEYWORD",o.MAX_PRECEDENCE=999,this.classes={Collection:s,Slice:r,Token:o};var a={prec:void 0,cos:function(t,n){var r,i;return r=e.parse(Math.cos(t)*Math.cosh(n)),i=e.parse(Math.sin(t)*Math.sinh(n)),e.subtract(r,e.multiply(i,lt.imaginary()))},sin:function(t,n){var r,i;return r=e.parse(Math.sin(t)*Math.cosh(n)),i=e.parse(Math.cos(t)*Math.sinh(n)),e.subtract(r,e.multiply(i,lt.imaginary()))},tan:function(t,n){var r,i;return r=e.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*n))),i=e.parse(Math.sinh(2*n)/(Math.cos(2*t)+Math.cosh(2*n))),e.add(r,e.multiply(i,lt.imaginary()))},sec:function(t,n){var r=this.removeDen(this.cos(t,n));return e.subtract(r[0],e.multiply(r[1],lt.imaginary()))},csc:function(t,n){var r=this.removeDen(this.sin(t,n));return e.add(r[0],e.multiply(r[1],lt.imaginary()))},cot:function(t,n){var r=this.removeDen(this.tan(t,n));return e.subtract(r[0],e.multiply(r[1],lt.imaginary()))},acos:function(t,n){var r,i,s,o,a,u;return r=this.fromArray([t,n]),u=e.pow(r.clone(),new lt(2)),i=e.expand(u),s=e.multiply(oe(e.subtract(new lt(1),i)),lt.imaginary()),o=e.expand(e.add(r.clone(),s)),a=Ie(o),e.expand(e.multiply(lt.imaginary().negate(),a))},asin:function(t,n){return e.subtract(e.parse("pi/2"),this.acos(t,n))},atan:function(t,n){return t.equals(0)&&(n.equals(1)||n.equals(-1))?e.parse(`${lt.infinity()}*${l.IMAGINARY}*${n}`):(o=a.fromArray([t,n]),r=e.expand(e.multiply(lt.imaginary(),o.clone())),i=Ie(e.expand(e.subtract(new lt(1),r.clone()))),s=Ie(e.expand(e.add(new lt(1),r.clone()))),e.expand(e.multiply(e.divide(lt.imaginary(),new lt(2)),e.subtract(i,s))));var r,i,s,o},asec:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.acos.apply(this,n)},acsc:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.asin.apply(this,n)},acot:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.atan.apply(this,n)},cosh:function(t,n){var r,i;return r=e.parse(Math.cosh(t)*Math.cos(n)),i=e.parse(Math.sinh(t)*Math.sin(n)),e.add(r,e.multiply(i,lt.imaginary()))},sinh:function(t,n){var r,i;return r=e.parse(Math.sinh(t)*Math.cos(n)),i=e.parse(Math.cosh(t)*Math.sin(n)),e.add(r,e.multiply(i,lt.imaginary()))},tanh:function(t,n){var r,i;return r=e.parse(Math.sinh(2*t)/(Math.cos(2*n)+Math.cosh(2*t))),i=e.parse(Math.sin(2*n)/(Math.cos(2*n)+Math.cosh(2*t))),e.subtract(r,e.multiply(i,lt.imaginary()))},sech:function(t,n){var r=this.removeDen(this.cosh(t,n));return e.subtract(r[0],e.multiply(r[1],lt.imaginary()))},csch:function(t,n){var r=this.removeDen(this.sinh(t,n));return e.subtract(r[0],e.multiply(r[1],lt.imaginary()))},coth:function(t,n){var r=this.removeDen(this.tanh(t,n));return e.add(r[0],e.multiply(r[1],lt.imaginary()))},acosh:function(t,n){var r,i,s;return s=this.fromArray([t,n]),r=oe(e.add(s.clone(),new lt(1))),i=oe(e.subtract(s.clone(),new lt(1))),e.expand(Ie(e.add(s,e.expand(e.multiply(r,i)))))},asinh:function(t,n){var r,i;return i=this.fromArray([t,n]),r=oe(e.add(new lt(1),e.expand(e.pow(i.clone(),new lt(2))))),e.expand(Ie(e.add(i,r)))},atanh:function(t,n){var r,i,s;return s=this.fromArray([t,n]),r=Ie(e.add(s.clone(),new lt(1))),i=Ie(e.subtract(new lt(1),s)),e.expand(e.divide(e.subtract(r,i),new lt(2)))},asech:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.acosh.apply(this,n)},acsch:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.asinh.apply(this,n)},acoth:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.atanh.apply(this,n)},sqrt:function(t){var n,r,i,s,o;return n=t.realpart(),r=t.imagpart(),i=lt.hyp(n,r),s=e.add(n.clone(),i),o=oe(e.multiply(new lt(2),s.clone())),e.add(e.divide(s.clone(),o.clone()),e.multiply(e.divide(r,o),lt.imaginary()))},log:function(t,n){var r,s,o;return r=Ie(lt.hyp(t,n)),o=l.USE_BIG?lt(i.atan2(n.multiplier.toDecimal(),t.multiplier.toDecimal())):Math.atan2(n,t),s=e.parse(o),e.add(r,e.multiply(lt.imaginary(),s))},erf(t,n){return e.symfunction("erf",[t])},removeDen:function(t){var n,r,i,s,o;return Y(t)?(r=t[0],i=t[1]):(r=t.realpart(),i=t.imagpart()),n=Math.pow(r,2)+Math.pow(i,2),s=e.parse(r/n),o=e.parse(i/n),[s,o]},fromArray:function(t){return e.add(t[0],e.multiply(lt.imaginary(),t[1]))},evaluate:function(t,n){var r,i,s;if(s=t.power.sign(),t.power=t.power.abs(),t.power.greaterThan(1)&&(t=e.expand(t)),s<0){var o=this.removeDen(t);r=o[0],i=o[1]}else r=t.realpart(),i=t.imagpart();return r.isConstant("all")&&i.isConstant("all")?this[n].call(this,r,i):e.symfunction(n,[t])}},u=this.trig={cos:function(t){if(t.equals("pi")&&t.multiplier.den.equals(2))return new lt(0);if(l.PARSE2NUMBER){if(t.equals(new lt(l.PI/2)))return new lt(0);if(t.isConstant())return l.USE_BIG?new lt(i.cos(t.multiplier.toDecimal())):new lt(Math.cos(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"cos")}if(t.equals(0))return new lt(1);var n,r=!1,s=Te(t.multiplier.toDecimal()),o=t.multiplier.abs();if(t.multiplier=o,t.isPi()&&t.isLinear())if(K(o))n=new lt(Ee(o)?1:-1);else{Number(o.num);var u=Number(o.den);2===u?n=new lt(0):3===u?(n=e.parse("1/2"),r=!0):4===u?(n=e.parse("1/sqrt(2)"),r=!0):6===u?(n=e.parse("sqrt(3)/2"),r=!0):n=e.symfunction("cos",[t])}return!r||2!==s&&3!==s||n.negate(),n||(n=e.symfunction("cos",[t])),n},sin:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return t%Math.PI===0?new lt(0):l.USE_BIG?new lt(i.sin(t.multiplier.toDecimal())):new lt(Math.sin(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"sin")}if(t.equals(0))return new lt(0);var n,r=!1,s=Te(t.multiplier.toDecimal()),o=t.multiplier.sign(),u=t.multiplier.abs();if(t.multiplier=u,t.equals("pi"))n=new lt(0);else if(t.isPi()&&t.isLinear())if(K(u))n=new lt(0);else{u.num;var c=u.den;2==c?(n=new lt(1),r=!0):3==c?(n=e.parse("sqrt(3)/2"),r=!0):4==c?(n=e.parse("1/sqrt(2)"),r=!0):6==c?(n=e.parse("1/2"),r=!0):n=e.multiply(new lt(o),e.symfunction("sin",[t]))}return n||(n=e.multiply(new lt(o),e.symfunction("sin",[t]))),!r||3!==s&&4!==s||n.negate(),n},tan:function(t){if(l.PARSE2NUMBER){if(t%Math.PI===0&&t.isLinear())return new lt(0);if(t.isConstant())return l.USE_BIG?new lt(i.tan(t.multiplier.toDecimal())):new lt(Math.tan(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"tan")}var n,r=!1,s=Te(t.multiplier.toDecimal()),o=t.multiplier;if(t.multiplier=o,t.isPi()&&t.isLinear())if(K(o))n=new lt(0);else{o.num;var u=o.den;if(2==u)throw new Ge("tan is undefined for "+t.toString());3==u?(n=e.parse("sqrt(3)"),r=!0):4==u?(n=new lt(1),r=!0):6==u?(n=e.parse("1/sqrt(3)"),r=!0):n=e.symfunction("tan",[t])}return n||(n=e.symfunction("tan",[t])),!r||2!==s&&4!==s||n.negate(),n},sec:function(t){if(l.PARSE2NUMBER)return t.isConstant()?l.USE_BIG?new lt(new i(1).dividedBy(i.cos(t.multiplier.toDecimal()))):new lt(rt.sec(t.valueOf())):t.isImaginary()?a.evaluate(t,"sec"):e.parse(se("1/cos({0})",t));var n,r=!1,s=Te(t.multiplier.toDecimal()),o=t.multiplier.abs();if(t.multiplier=o,t.isPi()&&t.isLinear())if(K(o))n=new lt(Ee(o)?1:-1);else{o.num;var u=o.den;if(2==u)throw new Ge("sec is undefined for "+t.toString());3==u?(n=new lt(2),r=!0):4==u?(n=e.parse("sqrt(2)"),r=!0):6==u?(n=e.parse("2/sqrt(3)"),r=!0):n=e.symfunction("sec",[t])}return!r||2!==s&&3!==s||n.negate(),n||(n=e.symfunction("sec",[t])),n},csc:function(t){if(l.PARSE2NUMBER)return t.isConstant()?l.USE_BIG?new lt(new i(1).dividedBy(i.sin(t.multiplier.toDecimal()))):new lt(rt.csc(t.valueOf())):t.isImaginary()?a.evaluate(t,"csc"):e.parse(se("1/sin({0})",t));var n,r=!1,s=Te(t.multiplier.toDecimal()),o=t.multiplier.sign(),u=t.multiplier.abs();if(t.multiplier=u,t.isPi()&&t.isLinear()){if(K(u))throw new Ge("csc is undefined for "+t.toString());u.num;var c=u.den;2==c?(n=new lt(1),r=!0):3==c?(n=e.parse("2/sqrt(3)"),r=!0):4==c?(n=e.parse("sqrt(2)"),r=!0):6==c?(n=new lt(2),r=!0):n=e.multiply(new lt(o),e.symfunction("csc",[t]))}return n||(n=e.multiply(new lt(o),e.symfunction("csc",[t]))),!r||3!==s&&4!==s||n.negate(),n},cot:function(t){if(l.PARSE2NUMBER)return t%(Math.PI/2)===0?new lt(0):t.isConstant()?l.USE_BIG?new lt(new i(1).dividedBy(i.tan(t.multiplier.toDecimal()))):new lt(rt.cot(t.valueOf())):t.isImaginary()?a.evaluate(t,"cot"):e.parse(se("1/tan({0})",t));var n,r=!1,s=Te(t.multiplier.toDecimal()),o=t.multiplier;if(t.multiplier=o,t.isPi()&&t.isLinear()){if(K(o))throw new Ge("cot is undefined for "+t.toString());o.num;var u=o.den;2==u?n=new lt(0):3==u?(n=e.parse("1/sqrt(3)"),r=!0):4==u?(n=new lt(1),r=!0):6==u?(n=e.parse("sqrt(3)"),r=!0):n=e.symfunction("cot",[t])}return n||(n=e.symfunction("cot",[t])),!r||2!==s&&4!==s||n.negate(),n},acos:function(t){if(l.PARSE2NUMBER){if(t.isConstant()){if(t.gt(1)||t.lt(-1)){var n=t.toString();return Qe(Re(`pi/2-asin(${n})`))}return l.USE_BIG?new lt(i.acos(t.multiplier.toDecimal())):new lt(Math.acos(t.valueOf()))}if(t.isImaginary())return a.evaluate(t,"acos")}return e.symfunction("acos",arguments)},asin:function(t){if(l.PARSE2NUMBER){if(t.isConstant()){if(t.gt(1)||t.lt(-1)){var n=l.IMAGINARY,r=t.multiplier.toDecimal();return Qe(Re(`${n}*log(sqrt(1-${r}^2)-${n}*${r})`))}return l.USE_BIG?new lt(i.asin(t.multiplier.toDecimal())):new lt(Math.asin(t.valueOf()))}if(t.isImaginary())return a.evaluate(t,"asin")}return e.symfunction("asin",arguments)},atan:function(t){var n;if(t.equals(0))n=new lt(0);else{if(l.PARSE2NUMBER)return t.isConstant()?l.USE_BIG?new lt(i.atan(t.multiplier.toDecimal())):new lt(Math.atan(t.valueOf())):t.isImaginary()?a.evaluate(t,"atan"):e.symfunction("atan",arguments);n=t.equals(-1)?e.parse("-pi/4"):e.symfunction("atan",arguments)}return n},asec:function(t){if(l.PARSE2NUMBER){if(t.equals(0))throw new Ve("Input is out of the domain of sec!");if(t.isConstant())return u.acos(t.invert());if(t.isImaginary())return a.evaluate(t,"asec")}return e.symfunction("asec",arguments)},acsc:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return u.asin(t.invert());if(t.isImaginary())return a.evaluate(t,"acsc")}return e.symfunction("acsc",arguments)},acot:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new e.add(e.parse("pi/2"),u.atan(t).negate());if(t.isImaginary())return a.evaluate(t,"acot")}return e.symfunction("acot",arguments)},atan2:function(t,n){if(t.equals(0)&&n.equals(0))throw new Ge("atan2 is undefined for 0, 0");return l.PARSE2NUMBER&&t.isConstant()&&n.isConstant()?new lt(Math.atan2(t,n)):e.symfunction("atan2",arguments)}},w=this.trigh={cosh:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new lt(Math.cosh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"cosh")}return e.symfunction("cosh",arguments)},sinh:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new lt(Math.sinh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"sinh")}return e.symfunction("sinh",arguments)},tanh:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new lt(Math.tanh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"tanh")}return e.symfunction("tanh",arguments)},sech:function(t){return l.PARSE2NUMBER?t.isConstant()?new lt(Math.sech(t.valueOf())):t.isImaginary()?a.evaluate(t,"sech"):e.parse(se("1/cosh({0})",t)):e.symfunction("sech",arguments)},csch:function(t){return l.PARSE2NUMBER?t.isConstant()?new lt(Math.csch(t.valueOf())):t.isImaginary()?a.evaluate(t,"csch"):e.parse(se("1/sinh({0})",t)):e.symfunction("csch",arguments)},coth:function(t){return l.PARSE2NUMBER?t.isConstant()?new lt(Math.coth(t.valueOf())):t.isImaginary()?a.evaluate(t,"coth"):e.parse(se("1/tanh({0})",t)):e.symfunction("coth",arguments)},acosh:function(t){var n;return n=l.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acosh"):l.PARSE2NUMBER?Re(e.parse(se(l.LOG+"(({0})+sqrt(({0})^2-1))",t.toString()))):e.symfunction("acosh",arguments),n},asinh:function(t){var n;return n=l.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"asinh"):l.PARSE2NUMBER?Re(e.parse(se(l.LOG+"(({0})+sqrt(({0})^2+1))",t.toString()))):e.symfunction("asinh",arguments),n},atanh:function(t){var n;return n=l.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"atanh"):l.PARSE2NUMBER?Re(e.parse(se("(1/2)*"+l.LOG+"((1+({0}))/(1-({0})))",t.toString()))):e.symfunction("atanh",arguments),n},asech:function(t){var n;return n=l.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"asech"):l.PARSE2NUMBER?Re(Ie(e.add(t.clone().invert(),oe(e.subtract(e.pow(t,new lt(-2)),new lt(1)))))):e.symfunction("asech",arguments),n},acsch:function(t){var n;return n=l.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acsch"):l.PARSE2NUMBER?Re(e.parse(se(l.LOG+"((1+sqrt(1+({0})^2))/({0}))",t.toString()))):e.symfunction("acsch",arguments),n},acoth:function(t){var n;return n=l.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acoth"):l.PARSE2NUMBER?t.equals(1)?lt.infinity():Re(e.divide(Ie(e.divide(e.add(t.clone(),new lt(1)),e.subtract(t.clone(),new lt(1)))),new lt(2))):e.symfunction("acoth",arguments),n}};this.units={};var N={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(t){return e.symfunction(l.DOUBLEFACTORIAL,[t])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(e){return G(e)}},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(t){return e.divide(t,new lt(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},q={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},_=this.functions={cos:[u.cos,1],sin:[u.sin,1],tan:[u.tan,1],sec:[u.sec,1],csc:[u.csc,1],cot:[u.cot,1],acos:[u.acos,1],asin:[u.asin,1],atan:[u.atan,1],arccos:[u.acos,1],arcsin:[u.asin,1],arctan:[u.atan,1],asec:[u.asec,1],acsc:[u.acsc,1],acot:[u.acot,1],atan2:[u.atan2,2],acoth:[w.acoth,1],asech:[w.asech,1],acsch:[w.acsch,1],sinh:[w.sinh,1],cosh:[w.cosh,1],tanh:[w.tanh,1],asinh:[w.asinh,1],sech:[w.sech,1],csch:[w.csch,1],coth:[w.coth,1],acosh:[w.acosh,1],atanh:[w.atanh,1],log10:[,1],exp:[te,1],radians:[ne,1],degrees:[re,1],min:[xe,-1],max:[Me,-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[J,1],tri:[,1],sign:[qe,1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[G,1],factorial:[G,1],continued_fraction:[V,[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[Ue,[1,2]],scientific:[le,[1,2]],mod:[H,2],pfactor:[pe,1],vector:[wt,-1],matrix:[yt,-1],Set:[bt,-1],imatrix:[Ye,-1],parens:[F,-1],sqrt:[oe,1],cbrt:[ae,1],nthroot:[fe,2],log:[Ie,[1,2]],expand:[Ze,1],abs:[B,1],invert:[qt,1],determinant:[St,1],size:[Mt,1],transpose:[xt,1],dot:[Et,2],cross:[Nt,2],vecget:[Je,2],vecset:[nt,3],vectrim:[et,[1,2]],matget:[ot,3],matset:[dt,4],matgetrow:[at,2],matsetrow:[ct,3],matgetcol:[ft,2],matsetcol:[vt,3],rationalize:[ie,1],IF:[Z,3],is_in:[Q,2],realpart:[he,1],imagpart:[me,1],conjugate:[ge,1],arg:[ve,1],polarform:[de,1],rectform:[be,1],sort:[Ae,[1,2]],integer_part:[,1],union:[_t,2],contains:[Ot,2],intersection:[At,2],difference:[Ct,2],intersects:[It,2],is_subset:[Lt,2],print:[Ut,-1]};this.error=A;var O=function(e){for(var t=l.FUNCTION_MODULES,n=t.length,r=0;r<n;r++){var i=t[r];if(e in i)return i[e]}A("The function "+e+" is undefined!")};this.override=function(e,n){t[e]||(t[e]=[]),t[e].push(this[e]),this[e]=n},this.restore=function(e){this[e]&&(this[e]=t[e].pop())},this.extend=function(e,t,n){var r=this,i=this[e];if("function"===typeof i&&"function"===typeof t){var s=this[e];this[e]=function(e,i){return j(e)&&j(i)&&!n?s.call(r,e,i):t.call(r,e,i,s)}}},this.symfunction=function(e,t){var n=new lt(e);return n.group=m,"object"===typeof t&&(t=[].slice.call(t)),n.args=t,n.fname=e===y?"":e,n.updateHash(),n},this.callfunction=function(t,n,r){var i=_[t];i||A("Nerdamer currently does not support the function "+t);var s,o=i[1]||r,a=i[0];if(n instanceof Array||(n=void 0!==n?[n]:[]),-1!==o){var u=Y(o),c=u?o[0]:o,f=u?o[1]:o,p=n.length,h=t+" requires a {0} of {1} arguments. {2} provided!";p<c&&A(se(h,"minimum",c,p)),p>f&&A(se(h,"maximum",f,p))}var m=ke(n);return a?s=a.apply(i[2],n):(a=O(t),s=l.PARSE2NUMBER&&m?Pe(a.apply(a,n)):e.symfunction(t,n)),s},this.operator_filter_regex=function(){var e="^\\"+Object.keys(N).filter((function(e){if(1===e.length)return e})).join("\\");return new RegExp("(["+e+"])\\s+(["+e+"])")}(),this.setOperator=function(t,n,r){var i=t.operator;if(N[i]=t,n&&(this[t.action]=n),e[i]=t.operation,t.action||t.prefix||t.postif||(t.action=i),"over"===r||"under"===r){var s=t.precedence;for(var o in N){var a=N[o],u="over"===r?a.precedence>=s:a.precedence>s;u&&a.precedence++}}},this.getOperator=function(e){return N[e]},this.aliasOperator=function(e,t){var n={},r=N[e];for(var i in r)n[i]=r[i];n.operator=t,this.setOperator(n)},this.getOperators=function(){return N},this.getBrackets=function(){return q};var C=function(e){e=String(e);for(var t=0;t<n.actions.length;t++)e=n.actions[t].call(this,e);e=e.replace(/\s+/g," "),/e/gi.test(e)&&(e=e.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,(function(e){return R(e)}))),e=e.replace(l.IMPLIED_MULTIPLICATION_REGEX,(function(){var e=arguments[4],t=arguments[1],n=arguments[2],r=arguments[3],i=e.charAt(r),s="",o="*";return i.match(/[\+\-\/\*]/)||(s=e.charAt(r-1)),s.match(/[a-z]/i)&&(o=""),t+o+n})).replace(/([a-z0-9_]+)/gi,(function(e,t){return!1!==l.USE_MULTICHARACTER_VARS||t in _?t:isNaN(t)?t.split("").join("*"):t})).replace(/\)\(/g,")*(")||"0";while(1){var r=e;if(e=e.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,(function(e,t,n,r,i){var s=t||r,o=n||i;return s in _?s+o:s+"*"+o})),r===e)break}return e};function U(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}this.initConstants=function(){this.CONSTANTS={E:new lt(l.E),PI:new lt(l.PI)}},this.pretty_print=function(t){if(Array.isArray(t)){var n=t.map(t=>e.pretty_print(t)).join(", ");return"vector"===t.type?"vector<"+n+">":"("+n+")"}return t.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){if(l.callPeekers)for(var t=this.peekers[e],n=Le(arguments).slice(1).map(ee),r=0;r<t.length;r++)t[r].apply(null,n)},this.tokenize=function(t){for(var n in t=String(t),t=t.trim().replace(/\s+/g," "),q){var r=new RegExp(q[n].is_close?"\\s+\\"+n:"\\"+n+"\\s+","g");t=t.replace(r,n)}for(var i=0,s=t.length,a=0,u=[],l=[u],c=l[0],f=0,p=[],h=!1,m=" ",g="",v=",",d="-",w="*",y=function(e,t){var n=[];void 0!==e&&(n.type=e),n.column=t,l.push(n),c.push(n),c=n,f++},b=function(){l.pop(),c=l[--f]},S=function(e){e=void 0!==e?e:i;var n=e+1;while(t.charAt(n++)in N);return t.substring(e,n-1)},M=function(e){for(var t=i-e.length,n=[],r=e.charAt(0),s=1,a=e.length;s<a;s++){var u=e.charAt(s),l=r+u;l in N?r=l:(n.push(new o(r,o.OPERATOR,t+s)),r=u)}return n.push(new o(r,o.OPERATOR,t+s)),n},E=function(n,r){void 0===r&&(r=t.substring(a,n)),r in e.units?c.push(new o(r,o.UNIT,a)):""!==r&&c.push(new o(r,o.VARIABLE_OR_LITERAL,a))},x=function(e){c.push(new o(e,o.FUNCTION,a))},A=function(e){a=e+1},O=function(){a=a+U.length-2,i=a-1};i<s;i++){var C=t.charAt(i);if(C in N){E(i);var I=c[0]&&k(c[0]),L=I&&C===w;h&&a<i&&C!==v&&!L&&(h=!1,b()),A(i+1);var U=S(i);O(),c.push.apply(c,M(U))}else if(C in q){var R=q[C];if(R.is_open){p.push([R,a]);var T=t.substring(a,i);T in _?x(T):""!==T&&c.push(new o(T,o.VARIABLE_OR_LITERAL,a)),y(R.maps_to,i)}else if(R.is_close){var P=p.pop();if(!P)throw new ze("Missing open bracket for bracket at: "+(i+1));if(P[0].id!==R.id-1)throw new ze("Parity error");E(i),b()}A(i)}else if(C===m){var D=t.substring(a,i),F=t.charAt(i+1);if(h){if(D in N)c.push(new o(D,o.OPERATOR,i));else{E(void 0,D),b();var j=F in N;(j&&N[F].value===d||!j)&&c.push(new o(w,o.OPERATOR,i))}h=!1}else{T=t.substring(a,i);if(T in _)h=!0,x(T),y();else if(T in N)c.push(new o(T,o.OPERATOR,i));else{E(void 0,T);F=t.charAt(i+1);D===g||F===g||D in N||F in N||c.push(new o(w,o.OPERATOR,i))}}A(i)}}if(p.length){var B=p.pop();throw new ze("Missing closed bracket for bracket at "+(B[1]+1))}return E(i),u},this.toRPN=function(e){var t,n=e.type,r=e.length,i=[],s=[],a=[],u=function(e,t){while(e.length)t.push(e.pop())};for(t=0;t<r;t++){var l=e[t];if(l.type!==o.OPERATOR)break;if(!l.prefix)throw new Xe("Not a prefix operator");l.is_prefix=!0,s.push(l)}for(;t<r;t++){var c=e[t];if(c.type===o.OPERATOR){var f=c;if(f.overloaded){var p=e[t+1];p&&p.type===o.VARIABLE_OR_LITERAL&&(f.postfix=!1,f.action=f.overloadAction,f.leftAssoc=f.overloadLeftAssoc)}while(s.length){var h=s[s.length-1];if(!(h.precedence>f.precedence||!f.leftAssoc&&h.precedence===f.precedence))break;i.push(s.pop())}if("vector"!==n&&"set"!==n||!("vectorFn"in f)||(f.action=f.vectorFn),f.postfix){var m=e[t-1];if(!m)throw new Xe("Unexpected prefix operator '"+c.value+"'! at "+c.column);if(m.type===o.OPERATOR&&!m.postfix)throw new Xe("Unexpected prefix operator '"+m.value+"'! at "+m.column)}else do{p=e[t+1];var g=!!p&&p.type===o.OPERATOR;if(g){if(!p.prefix)throw new Xe("A prefix operator was expected at "+p.column);p.is_prefix=!0,a.push(p),t++}}while(g);f.is_prefix?a.push(f):s.push(f);while(a.length){if(!(f.leftAssoc||!f.leftAssoc&&a[a.length-1].precedence>=f.precedence))break;s.push(a.pop())}}else if(c.type===o.VARIABLE_OR_LITERAL){0===i.length&&u(a,s),i.push(c);var v=s[s.length-1];v&&v.leftAssoc||u(a,i)}else c.type===o.FUNCTION?s.push(c):c.type===o.UNIT&&i.push(c);Array.isArray(c)&&(i.push(this.toRPN(c)),c.type&&i.push(new o(c.type,o.FUNCTION,c.column)))}return u(s,i),u(a,i),i},this.parseRPN=function(t,n){try{for(var i in n=n||{},n)n[i]=e.parse(n[i],{});l.PARSE2NUMBER&&("e"in n||(n.e=new lt(l.E)),"pi"in n||(n.pi=new lt(l.PI)));for(var a=[],u=0,c=t.length;u<c;u++){var f=t[u];if(Array.isArray(f)&&(f=this.parseRPN(f,n)),f)if(f.type===o.OPERATOR)if(f.is_prefix||f.postfix)a.push(f.operation(a.pop()));else{var p=a.pop(),h=a.pop();if("undefined"===typeof h)throw new Xe(f+" is not a valid postfix operator at "+f.column);var m="comma"===f.action;h instanceof gt&&!m&&(h=ht.fromSet(h)),p instanceof gt&&!m&&(p=ht.fromSet(p)),this.callPeekers("pre_operator",h,p,f);var g=e[f.action](h,p);this.callPeekers("post_operator",g,h,p,f),a.push(g)}else if(f.type===o.FUNCTION){var v=a.pop(),d=v.parent;v instanceof s||(v=s.create(v));var w=f.value,y=v.getItems();this.callPeekers("pre_function",w,y);var b=e.callfunction(w,y);this.callPeekers("post_function",b,w,y);var S=a[a.length-1],M=t[u+1],E=M&&M.type===o.OPERATOR&&","===M.value;if(!E&&b instanceof ht&&S&&S.elements&&!(S instanceof s)){var N=a.pop(),q=b.elements[0];if(q.isConstant())if(q instanceof r)a.push(ht.fromArray(N.elements.slice(q.start,q.end)));else{var _=Number(q),A=N.elements.length;if(_<0&&(_=A+_),_<0||_>=A)throw new $e("Index out of range "+(f.column+1));var O=N.elements[_];N.getter=_,O.parent=N,a.push(O)}else N.getter=q,a.push(N),a.push(b)}else d&&(b.parent=d),a.push(b)}else{var C,I=f.value;I in l.ALIASES?f=e.parse(l.ALIASES[f]):f.type===o.VARIABLE_OR_LITERAL?f=new lt(I):f.type===o.UNIT&&(f=new lt(I),f.isUnit=!0),I in e.CONSTANTS?(C=f,f=new lt(e.CONSTANTS[I])):I in n&&I!==n[I].toString()?(C=f,f=n[I].clone()):I in x&&(C=f,f=x[I].clone()),C&&(f.subbed=C),a.push(f)}}var L=a[0];if(-1!==["undefined","string","number"].indexOf(typeof L))throw new tt("Unexpected token!");return L}catch(R){var U=[Ve];throw U.forEach((function(e){if(R instanceof e)throw new e(R.message+": "+f.column)})),new Be(R.message+": "+f.column)}},U.prototype.toString=function(){var e=this.left?this.left.toString()+"---":"",t=this.right?"---"+this.right.toString():"";return e+"("+this.value+")"+t},U.prototype.toHTML=function(e,t){e=e||0,t="undefined"===typeof t?4:t;var n=function(e){return" ".repeat(t*e)},r="",i=this.left?n(e+1)+"<li>\n"+this.left.toHTML(e+2,t)+n(e+1)+"</li> \n":"",s=this.right?n(e+1)+"<li>\n"+this.right.toHTML(e+2,t)+n(e+1)+"</li>\n":"";r=n(e)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+n(e)+"\n";return(i||s)&&(r+=n(e)+"<ul>\n"+i+s+n(e)+"</ul>\n"),r+="",r},this.tree=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(Array.isArray(r))r=this.tree(r),t.push(r);else if(r.type===o.OPERATOR)if(r.is_prefix||r.postfix){var i=r.is_prefix?"left":"right",s=t.pop();r=new U(r),r[i]=s,t.push(r)}else r=new U(r),r.right=t.pop(),r.left=t.pop(),t.push(r);else if(r.type===o.FUNCTION){r=new U(r);var a=t.pop();if(r.right=a,"object"===r.value){s=t[t.length-1];if(s){while(s.right)s=s.right;s.right=r;continue}}t.push(r)}else t.push(new U(r))}return t[0]},this.parse=function(e,t){e=C(e),t=t||{};var n=this.tokenize(e),r=this.toRPN(n);return this.parseRPN(r,t)},this.toObject=function(t){var n=function(t){for(var r=[],i=0,s=t.length;i<s;i++){var a=t[i],u=a.value;if(a.type===o.VARIABLE_OR_LITERAL)r.push(new lt(u));else if(a.type===o.FUNCTION){i++;var l=e.symfunction(u,n(t[i]));l.isConversion=!0,r.push(l)}else a.type===o.OPERATOR?r.push(u):r.push(n(a))}return r};return n(e.tokenize(t))};var T=function(e){for(var t=0,n=[[]],r=0,i=e.length;r<i;r++)","===e[r]?(t++,n[t]=[]):n[t].push(e[r]);return n},P=function(e){return e.replace(/^\\left\((.+)\\right\)$/g,(function(e,t){return t||e}))},D=function(e){var t=[];while(e.length){var n=e.shift(),r=e[0],i=Y(r),s="-"===r;if("^"===n&&("+"===r?e.shift():i&&"+"===r[0]&&r.shift(),i&&1===r.length&&e.unshift(e.shift()[0])),"^"===n&&(i&&"-"===r[0]||s)){var o=t.pop(),a=t[t.length-1],u="1";"*"===a?(t.pop(),u=t.pop()):Y(a)&&(u=t.pop()),t.push(u,"/",o,n),i?r.shift():e.shift(),i&&1===r.length&&t.push(e.shift()[0])}else t.push(n)}return t};function F(t){return l.PARSE2NUMBER?t:e.symfunction("parens",[t])}function B(t){if(t.isInfinity)return lt.infinity();if(t.multiplier.lessThan(0)&&t.multiplier.negate(),t.isImaginary()){var n=t.realpart(),r=t.imagpart();if(n.isConstant()&&r.isConstant())return oe(e.add(e.pow(n,new lt(2)),e.pow(r,new lt(2))))}else if(W(t)||Ee(t.power))return t;if(t.isComposite()){var i=[];t.each((function(e){i.push(e.multiplier)}));var s=rt.QGCD.apply(null,i);s.lessThan(0)&&(t.multiplier=t.multiplier.multiply(new ut(-1)),t.distributeMultiplier())}var o=e.parse(t.multiplier);return t.toUnitMultiplier(),e.multiply(o,e.symfunction(S,[t]))}function G(t){var n;if(z(t)){var r=new ht;return t.each((function(e,t){r.set(t-1,G(e))})),r}if(X(t)){var i=new mt;return t.each((function(e,t,n){i.set(t,n,G(e))})),i}if(l.PARSE2NUMBER&&t.isConstant())return n=K(t)?rt.bigfactorial(t):rt.gamma(t.multiplier.add(new ut(1)).toDecimal()),n=Pe(n),n;if(t.isConstant()){var s=t.getDenom();if(s.equals(2)){var o,a,u,c,f=t.getNum();return t.multiplier.isNegative()?(c=e.subtract(f.negate(),new lt(1)).multiplier.divide(new ut(2)),o=e.pow(new lt(-4),new lt(c)).multiplier.multiply(rt.bigfactorial(c)),a=rt.bigfactorial(new ut(2).multiply(c))):(c=e.add(f,new lt(1)).multiplier.divide(new ut(2)),o=rt.bigfactorial(new ut(2).multiply(c)),a=e.pow(new lt(4),new lt(c)).multiplier.multiply(rt.bigfactorial(c))),u=o.divide(a),e.multiply(e.parse("sqrt(pi)"),new lt(u))}}return e.symfunction(M,[t])}function V(t,n){var r=Re(t);if(r.isConstant()){var i=rt.continuedFraction(r,n),s=ht.fromArray(i.fractions.map((function(e){return new lt(e)})));return ht.fromArray([new lt(i.sign),new lt(i.whole),s])}return e.symfunction("continued_fraction",arguments)}function H(t,n){if(t.isConstant()&&n.isConstant()){var r=new lt(1);return r.multiplier=r.multiplier.multiply(t.multiplier.mod(n.multiplier)),r}var i=e.divide(t.clone(),n.clone());return K(i)?new lt(0):e.symfunction("mod",[t,n])}function Z(e,t,n){return"boolean"!==typeof e&&W(e)&&(e=!!Number(e)),e?t:n}function Q(e,t){if(X(e))for(var n=0,r=e.rows();n<r;n++)for(var i=0,s=e.cols();i<s;i++){var o=e.elements[n][i];if(o.equals(t))return new lt(1)}else if(e.elements)for(n=0,r=e.elements.length;n<r;n++)if(e.elements[n].equals(t))return new lt(1);return new lt(0)}function J(t){return l.PARSE2NUMBER?t.isConstant()?new lt(rt.sinc(t)):e.parse(se("sin({0})/({0})",t)):e.symfunction("sinc",[t])}function te(t){return t.fname===l.LOG&&t.isLinear()?e.pow(t.args[0],lt.create(t.multiplier)):e.parse(se("e^({0})",t))}function ne(t){return e.parse(se("({0})*pi/180",t))}function re(t){return e.parse(se("({0})*180/pi",t))}function ie(t){if(t.isComposite()){var n,r,i,s,o,a,u,l,c=new lt(0);return t.each((function(t){n=t.getNum(),r=t.getDenom(),i=c.getNum(),s=c.getDenom(),o=e.multiply(r,i),a=e.multiply(n,s),u=e.expand(e.add(o,a)),l=e.multiply(s,r),c=e.divide(u,l)}),!0),c}return t}function oe(t){if(j(t)||(t=e.parse(t)),t.group===h)return e.symfunction(b,[t]);""===t.fname&&t.power.equals(1)&&(t=t.args[0]);var n=t.multiplier.sign()<0;if(l.PARSE2NUMBER){if(t.isConstant()&&!n)return new lt(i.sqrt(t.multiplier.toDecimal()));if(t.isImaginary())return a.sqrt(t);if(t.group===p)return e.symfunction("sqrt",[t])}var r,s,o=t.isConstant();if(t.group===v&&t.isLinear()){var u=oe(lt(t.multiplier));for(var c in t.symbols){var f=t.symbols[c];u=e.multiply(u,oe(f))}s=u}else if(t.fname===b){c=t.args[0];var m=t.multiplier;c.setPower(t.power.multiply(new ut(.25))),s=c,m.equals(1)||(s=e.multiply(oe(e.parse(m)),s))}else if(t.power.isInteger())if(t.multiplier<0&&t.group===p){var g=e.parse(t.multiplier).negate(),d=e.parse(t).toUnitMultiplier().negate();s=e.multiply(e.symfunction(l.SQRT,[d]),oe(g))}else{var w=t.power.sign();t.power=t.power.abs(),o&&t.multiplier.lessThan(0)&&(r=lt.imaginary(),t.multiplier=t.multiplier.abs());var y=t.multiplier.toDecimal(),S=Math.abs(y),M=Math.sqrt(S);if(K(M))u=new lt(M);else if(K(y)){var E=rt.ifactor(y),N=1;for(var f in E){var x=E[f],q=x-x%2;if(q){var _=Math.pow(f,q);N*=Math.pow(f,q/2),y/=_}}u=e.multiply(e.symfunction(b,[new lt(y)]),new lt(N))}else{for(var A=[new lt(t.multiplier.num),new lt(t.multiplier.den)],O=[new lt(1),new lt(1)],C=[new lt(1),new lt(1)],I=0;I<2;I++){x=A[I];pe(x).each((function(t){t=lt.unwrapPARENS(t);var n=t.clone().toLinear(),r=Number(t.power),i=r%2,s=(r-i)/2;O[I]=e.multiply(O[I],e.pow(n,new lt(s))),C[I]=e.multiply(C[I],oe(e.pow(n,new lt(i))))}))}u=e.divide(e.multiply(O[0],C[0]),e.multiply(O[1],C[1]))}t=t.toUnitMultiplier(!0),s=t.isOne()?t:Ee(t.power.toString())?e.pow(t.clone(),new lt(.5)):e.symfunction(b,[t]),w<0&&s.power.negate(),u&&(s=e.multiply(u,s)),r&&(s=e.multiply(r,s))}else t.setPower(t.power.multiply(new ut(.5))),s=t;return n&&l.PARSE2NUMBER?e.parse(s):s}function ae(t){if(!t.isConstant(!0)){var n,r=t.power/3,i=e.pow(e.parse(t.multiplier),new lt(1/3)),s=t.toUnitMultiplier();return K(r)?n=e.pow(s.toLinear(),e.parse(r)):s.group===v?(n=new lt(1),s.each((function(t){n=e.multiply(n,ae(t))}))):n=e.symfunction("cbrt",[s]),e.multiply(i,n)}return fe(t,new lt(3))}function le(e,t){return e.scientific=t||10,e}function fe(t,n,r,i){if(n=Re(e.parse(n)),n.equals(0))throw new Ge("Unable to calculate nthroots of zero");if(t<0&&Ee(n))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!t.isConstant(!0))return e.symfunction("nthroot",arguments);t.group!==c&&(t=Re(t)),"undefined"===typeof i&&(i=!0),r=r||25;var s,o,a=t.sign();return a<0&&(t=B(t)),K(t)&&n.isConstant()?(s=t<0x10000000000000000?ut.create(Math.pow(t,1/n)):rt.nthroot(t,n),i&&(o=new lt(s)),o=new lt(s.toDecimal(r)),e.multiply(new lt(a),o)):void 0}function pe(t){if(t.greaterThan(9999999999998891e26)||t.equals(-1))return t;if(t.equals(Math.PI))return new lt(Math.PI);if(t=Re(t.clone()),t.isConstant()){var n=new lt(1),r=t.toString();if(K(r)){var i=rt.ifactor(r);for(var s in i){var o=i[s];n=e.multiply(n,e.symfunction("parens",[new lt(s).setPower(new ut(o))]))}}else{var a=pe(new lt(t.multiplier.num)),u=pe(new lt(t.multiplier.den));n=e.multiply(e.symfunction("parens",[a]),e.symfunction("parens",[u]).invert())}}else n=e.symfunction("pfactor",arguments);return n}function he(e){return e.realpart()}function me(e){return e.imagpart()}function ge(t){var n=t.realpart(),r=t.imagpart();return e.add(n,e.multiply(r.negate(),lt.imaginary()))}function ve(t){var n=t.realpart(),r=t.imagpart();return n.isConstant()&&r.isConstant()?new lt(Math.atan2(r,n)):e.symfunction("atan2",[r,n])}function ve(t){var n=t.realpart(),r=t.imagpart();return n.isConstant()&&r.isConstant()?r.equals(0)&&n.equals(-1)?e.parse("pi"):r.equals(1)&&n.equals(0)?e.parse("pi/2"):r.equals(1)&&n.equals(1)?e.parse("pi/4"):new lt(Math.atan2(r,n)):e.symfunction("atan2",[r,n])}function de(t){var n,r,i,s;return n=lt.toPolarFormArray(t),s=n[1],r=n[0],i=e.parse(se("e^({0}*({1}))",l.IMAGINARY,s)),e.multiply(r,i)}function be(t){var n=t.clone();try{var r,i,s,o,a,l;return r=we(t,"e",!0),i=e.divide(r.x.power,lt.imaginary()),s=Re(u.tan(i)),e.pow(r.a,new lt(2)),a=s.getDenom(!0),l=s.getNum(),o=lt.hyp(l,a),o.equals(r.a)?e.add(a,e.multiply(lt.imaginary(),l)):n}catch(c){return n}}function Se(e,t){var n,r,i;t.map((function(e){e.numVal=Re(e).multiplier}));while(1){if(n=t.length,n<2)return t[0];r=t.pop(),i=t[n-2],("min"===e?r.numVal<i.numVal:r.numVal>i.numVal)&&(t.pop(),t.push(r))}}function Me(){var t=[].slice.call(arguments);return I(t)?t[0]:ke(t)?new lt(Math.max.apply(null,t)):l.SYMBOLIC_MIN_MAX&&De(t)?Se("max",t):e.symfunction("max",t)}function xe(){var t=[].slice.call(arguments);return I(t)?t[0]:ke(t)?new lt(Math.min.apply(null,t)):l.SYMBOLIC_MIN_MAX&&De(t)?Se("min",t):e.symfunction("min",t)}function qe(t){return t.isConstant(!0)?new lt(Math.sign(Re(t))):e.symfunction("sign",arguments)}function Ae(e,t){t=t?t.toString():"asc";var n=function(e){return e.group===c?e.multiplier:e.group===m?""===e.fname?n(e.args[0]):e.fname:e.group===p?e.power:e.value},r=z(e)?e.elements:e.collectSymbols();return new ht(r.sort((function(e,r){var i=n(e),s=n(r);return"desc"===t?s-i:i-s})))}function Ie(t,n){if(t.equals(1))return new lt(0);var r;if(t.fname===b&&t.multiplier.equals(1))return r=e.divide(Ie(t.args[0]),new lt(2)),t.power.sign()<0&&r.negate(),r;if(t.equals(0))throw new Ge(l.LOG+"(0) is undefined!");if(t.isImaginary())return a.evaluate(t,l.LOG);if(t.isConstant()&&"undefined"!==typeof n&&n.isConstant()){var i=Math.log(t),s=Math.log(n);r=new lt(i/s)}else if(t.group===h&&t.power.multiplier.lessThan(0)||"-1"===t.power.toString())t.power.negate(),r=Ie(t).negate();else if("e"===t.value&&t.multiplier.equals(1)){var o=t.power;r=j(o)?o:new lt(o)}else if(t.group===m&&"exp"===t.fname){var u=t.args[0];r=t.multiplier.equals(1)?e.multiply(u,new lt(t.power)):e.symfunction(l.LOG,[t])}else if(l.PARSE2NUMBER&&W(t)){var c;t=e.parse(t),t.multiplier.lessThan(0)&&(t.negate(),c=e.multiply(new lt(Math.PI),new lt("i"))),r=new lt(Math.log(t.multiplier.toDecimal())),c&&(r=e.add(r,c))}else{t.power.equals(1)||t.contains("e")||(u=t.group===h?t.power:new lt(t.power),t.toLinear()),r=arguments.length>1&&I(arguments)?new lt(1):e.symfunction(l.LOG,arguments),u&&(r=e.multiply(u,r))}return r}function Ue(t,n){var r,i,s,o,a=n&&n.isConstant()||"undefined"===typeof n;return t.isConstant()&&a?(r=t,n&&n.lessThan(0)&&(n=B(n),i=Number(t).toExponential().toString().split("e"),r=i[0],s=i[1]),o=new lt(ye(r,Number(n||0))),e.multiply(o,e.pow(new lt(10),new lt(s||0)))):e.symfunction("round",arguments)}function Te(e){var t,n=e%2;return n<0&&(n=2+n),t=n>=0&&n<=.5?1:n>.5&&n<=1?2:n>1&&n<=1.5?3:4,t}function Pe(e){if(!isFinite(e)){var t=Math.sign(e),n=new lt(String(Math.abs(e)));return n.multiplier=n.multiplier.multiply(new ut(t)),n}if(j(e))return e;if("number"===typeof e)try{e=ut.simple(e)}catch(i){e=new ut(e)}var r=new lt(0);return r.multiplier=e,r}function He(t){var n,r=t.group;if(r===d){var i=t.getNum(),s=t.getDenom()||new lt(1),o=Number(t.power),a=new lt(1);if(1===Math.abs(o)){s.each((function(t){t.group===v?a=e.multiply(a,He(t.getDenom())):t.power.lessThan(0)&&(a=e.multiply(a,He(t.clone().toUnitMultiplier())))}));var u,l=new lt(0);s.each((function(t){l=e.add(e.divide(t,a.clone()),l)})),a.invert(),i.isComposite()?(u=new lt(0),i.each((function(t){u=e.add(e.multiply(He(t),a.clone()),u)}))):u=e.multiply(a,i),n=e.divide(u,l)}}else r===v?(n=new lt(1),t.each((function(t){n=e.multiply(n,e.clean(t))}))):r===m&&1===t.args.length&&t.args[0].isConstant()&&(n=Ce("PARSE2NUMBER",(function(){return e.parse(t)}),!0));return n||(n=t),n}function Ze(e,t){return t=t||{expand_denominator:!0,expand_functions:!0},Qe(e,t)}function Qe(t,n){if(Array.isArray(t))return t.map((function(e){return Qe(e,n)}));if(n=n||{},t.group===m&&""===t.fname){var r=Qe(t.args[0],n),i=Qe(e.pow(r,e.parse(t.power)),n);return e.multiply(e.parse(t.multiplier),i).distributeMultiplier()}if(-1!==[c,f,p].indexOf(t.group))return t;var s=t.clone();try{var o=t.multiplier.toString(),a=Number(t.power),u=t;if(t.isComposite()&&K(t.power)&&t.power>0){var l=a-1;r=new lt(0);t.each((function(t){r=e.add(r,Qe(e.parse(t),n))}));for(var h=e.parse(r),w=0;w<l;w++)h=Fe(h,r,n);u=e.multiply(e.parse(o),h).distributeMultiplier()}else if(t.group===m&&!0===n.expand_functions){var y=[];t.args.forEach((function(e){y.push(Qe(e,n))})),u=e.pow(e.symfunction(t.fname,y),e.parse(t.power)),u=e.multiply(u,e.parse(t.multiplier))}else if(t.isComposite()&&K(t.power)&&t.power<0&&!0===n.expand_denominator)t=t.invert(),u=Qe(t,n),u.invert();else if(t.group===v){var b=function(e){switch(e.group){case d:return 0;case g:return 1;case v:return 2;case m:return 3;default:return 4}},S=t.collectSymbols().sort((function(e,t){return b(t)-b(e)})).map((function(t){var r=e.pow(t,e.parse(a)),i=Qe(r,n);return i}));r=S.pop();r.isComposite()&&r.isLinear()?(S.forEach((function(e){r=Fe(r,e,n)})),r.isComposite()?(r.power>1&&(r=Qe(e.pow(r,e.parse(r.power)),n)),u=e.multiply(e.parse(o),r).distributeMultiplier()):u=r):(u=r,S.forEach((function(t){u=e.multiply(u,t)})),u=e.multiply(u,e.parse(o)).distributeMultiplier()),u.group===v&&(u=e.parse(u))}else u=t;return u}catch(M){return s}return s}function Ye(e){return mt.identity(e)}function Je(t,n){return n.isConstant()&&K(n)?t.elements[n]:e.symfunction("vecget",arguments)}function et(t,n){return n="undefined"===typeof n?1e-14:n,t=t.clone(),n=Number(n),t.elements.sort((function(e,t){return t.group-e.group})),t.elements=_e(t.elements,(function(t,r){var i=Number(e.subtract(Re(t),Re(r)).abs());return i<=n})),t}function nt(t,n,r){return n.isConstant?(t.elements[n]=r,t):e.symfunction("vecset",arguments)}function ot(t,n,r){return n.isConstant()&&r.isConstant()?t.elements[n][r]:e.symfunction("matget",arguments)}function at(t,n){return n.isConstant()?new mt(t.elements[n]):e.symfunction("matgetrow",arguments)}function ct(t,n,r){if(!n.isConstant())return e.symfunction("matsetrow",arguments);if(t.elements[n].length!==r.elements.length)throw new We("Matrix row must match row dimensions!");var i=t.clone();return i.elements[n]=r.clone().elements,i}function ft(t,n){if(!n.isConstant())return e.symfunction("matgetcol",arguments);n=Number(n);var r=mt.fromArray([]);return t.each((function(e,t,i){i===n&&r.elements.push([e.clone()])})),r}function vt(t,n,r){if(!n.isConstant())return e.symfunction("matsetcol",arguments);if(n=Number(n),t.rows()!==r.elements.length)throw new We("Matrix columns must match number of columns!");return r.each((function(e,r){t.set(r-1,n,e.elements[0].clone())})),t}function dt(e,t,n,r){return e.elements[t][n]=r,e}function wt(){return new ht([].slice.call(arguments))}function yt(){return mt.fromArray(arguments)}function bt(){return gt.fromArray(arguments)}function St(e){return X(e)?e.determinant():e}function Mt(e){var t;return X(e)?t=[new lt(e.cols()),new lt(e.rows())]:z(e)||$(e)?t=new lt(e.elements.length):A("size expects a matrix or a vector"),t}function Et(e,t){if(z(e)&&z(t))return e.dot(t);A("function dot expects 2 vectors")}function Nt(e,t){if(z(e)&&z(t))return e.cross(t);A("function cross expects 2 vectors")}function xt(e){if(X(e))return e.transpose();A("function transpose expects a matrix")}function qt(e){if(X(e))return e.invert();A("invert expects a matrix")}function _t(e,t){return e.union(t)}function At(e,t){return e.intersection(t)}function Ot(e,t){return e.contains(t)}function Ct(e,t){return e.difference(t)}function It(e,t){return new lt(Number(e.intersects(t)))}function Lt(e,t){return new lt(Number(e.is_subset(t)))}function Ut(){Le(arguments).map((function(e){console.log(e.toString())}))}function Rt(e){if(!j(e.power)&&e.power.absEquals(.5)){var t=e.power.sign(),n=oe(e.group===f?new lt(e.value):e.toLinear());return t<0&&n.invert(),n}return e}function Tt(e){if(e.group===f){var t=e.value,n=st(t)[0];if(!n)return L("Unable to compute prime factors. This should not happen. Please review and report."),e;var r=new ut(Math.log(t)/Math.log(n)),i=r.multiply(e.power);if(i.den>e.power.den)return e;e=K(i)?lt(Math.pow(n,i)):new lt(n).setPower(i)}return e}this.toTeX=function(t,n){n=n||{};var r=!0===n.decimals?"decimals":void 0,i="string"===typeof t?this.toObject(t):t,s=[],o="undefined"===typeof n.cdot?"\\cdot":n.cdot;if(i=D(i),Y(i)){for(var a,u,c=[],f=0;f<i.length;f++)a=i[f],"^"===i[f+1]?(u=i[f+2],c.push(pt.braces(this.toTeX([a]))+"^"+pt.braces(this.toTeX([u]))),f+=2):c.push(a);i=c}f=0;for(var p=i.length;f<p;f++){var h=i[f];if("*"===h&&(h=o),j(h))if(h.group===m){var g,v=h.fname;if(v===b)g="\\sqrt"+pt.braces(this.toTeX(h.args));else if(v===S)g=pt.brackets(this.toTeX(h.args),"abs");else if(v===y)g=pt.brackets(this.toTeX(h.args),"parens");else if(v===l.LOG10)g="\\"+l.LOG10_LATEX+"\\left( "+this.toTeX(h.args)+"\\right)";else if("integrate"===v){var d=T(h.args),w=pt.braces(this.toTeX(d[0])),N=this.toTeX(d[1]);g="\\int "+w+"\\, d"+N}else if("defint"===v){d=T(h.args),w=pt.braces(this.toTeX(d[0])),N=this.toTeX(d[3]);var x=this.toTeX(d[1]),q=this.toTeX(d[2]);g="\\int\\limits_{"+x+"}^{"+q+"} "+w+"\\, d"+N}else if("diff"===v){d=T(h.args),N="",w=pt.braces(this.toTeX(d[0]));if(1===d.length){var _=[];for(O=0;O<d[0].length;O++)3===d[0][O].group&&_.push(d[0][O].value);_.sort(),N=_.length>0?"\\frac{d}{d "+_[0]+"}":"\\frac{d}{d x}"}else N=2===d.length?"\\frac{d}{d "+d[1]+"}":"\\frac{d^{"+d[2]+"}}{d "+this.toTeX(d[1])+"^{"+d[2]+"}}";g=N+"\\left("+w+"\\right)"}else if("sum"===v||"product"===v){var A=[[],[],[],[]],O=0;for(f=0;f<h.args.length;f++)","!==h.args[f]?A[O].push(h.args[f]):O++;g=("sum"===v?"\\sum_":"\\prod_")+pt.braces(this.toTeX(A[1])+" = "+this.toTeX(A[2])),g+="^"+pt.braces(this.toTeX(A[3]))+pt.braces(this.toTeX(A[0]))}else if("limit"===v){var C=T(h.args).map((function(t){return Array.isArray(t)?e.toTeX(t.join("")):e.toTeX(String(t))}));g="\\lim_"+pt.braces(C[1]+"\\to "+C[2])+" "+pt.braces(C[0])}else g=v===M||v===E?this.toTeX(h.args)+(v===M?"!":"!!"):pt.latex(h,r);s.push(g)}else s.push(pt.latex(h,r));else Y(h)?s.push(pt.brackets(this.toTeX(h))):"/"===h?s.push(pt.frac(P(s.pop()),P(this.toTeX([i[++f]])))):s.push(h)}return s.join(" ")},this.expand=Qe,this.round=Ue,this.clean=He,this.sqrt=oe,this.cbrt=ae,this.abs=B,this.log=Ie,this.rationalize=ie,this.nthroot=fe,this.arg=ve,this.conjugate=ge,this.imagpart=me,this.realpart=he,this.getFunction=function(e){return _[e][0]},this.addPreprocessor=function(e,t,r,i){var s=n.names,o=n.actions;if("function"!==typeof t)throw new PreprocessorError("Incorrect parameters. Function expected!");r?i?(s.splice(r,0,e),o.splice(r,0,t)):(s[r]=e,o[r]=t):(s.push(e),o.push(t))},this.getPreprocessors=function(){for(var e={},t=0,n=e.names.length;t<n;t++){var r=e.names[t];e[r]={order:t,action:e.actions[t]}}return e},this.removePreprocessor=function(e,t){var r=n.names.indexOf(e);t?(Oe(n.names,r),Oe(n.actions,r)):(n.names[r]=void 0,n.actions[r]=void 0)},this.mapped_function=function(){for(var t={},n=this.params,r=0;r<n.length;r++)t[n[r]]=String(arguments[r]);return e.parse(this.body,t)},this.add=function(t,n){var r=j(t),i=j(n);if(r&&i){if(t.unit||n.unit)return e.Unit.add(t,n);if(t.isInfinity||n.isInfinity){var s=t.multiplier.lessThan(0),o=n.multiplier.lessThan(0);if(t.isInfinity&&n.isInfinity&&s!==o)throw new Ge("("+t+")+("+n+") is not defined!");var a=lt.infinity();return o&&a.negate(),a}if(t.isComposite()&&t.isLinear()&&n.isComposite()&&n.isLinear()&&(t.distributeMultiplier(),n.distributeMultiplier(),n.length>t.length&&t.group===n.group&&([t,n]=[n,t])),t.multiplier.equals(0))return n;if(n.multiplier.equals(0))return t;if(t.isConstant()&&n.isConstant()&&l.PARSE2NUMBER){var u=new lt(t.multiplier.add(n.multiplier).toDecimal(l.PRECISION));return u}var w=t.group,y=n.group,S=t.power.toString(),M=n.power.toString();if(w<y||w===y&&S>M&&M>0)return this.add(n,t);if(w===v&&y===g&&t.value===n.value){var E=t;t=n,n=E,w=t.group,y=n.group,S=t.power.toString(),M=n.power.toString()}var N,x,q=S===M,_=t.value,O=n.value,C=t.isComposite(),I=n.isComposite();if(C&&(N=it(t,"hash")),I&&(x=it(n,"hash")),w===d&&y===d&&n.isLinear()&&!t.isLinear()&&N!==x)return this.add(n,t);w===g&&y===g&&(_=N,O=x);var L=w===f&&y===c,U=t.value===n.multiplier.toString(),R=_===O||N===x&&void 0!==N||L&&U;if(R&&q&&w===y)if(L&&(n=n.convert(f)),w!==g||y!==p&&y!==f)if(u=t,t.multiplier.isOne()&&n.multiplier.isOne()&&w===d&&t.isLinear()&&n.isLinear())for(var T in n.symbols){var P=n.symbols[T];u.attach(P)}else u.multiplier=u.multiplier.add(n.multiplier);else t.distributeMultiplier(),u=t.attach(n);else if(R&&w!==g)w===d&&y===g?(n.insert(t,"add"),u=n):(u=lt.shell(g).attach([t,n]),u.value=w===g?N:_);else if(C&&t.isLinear()){var k=w===y,D=w===g&&y===g;if(D&&(k=t.value===n.value),t.distributeMultiplier(),n.isComposite()&&n.isLinear()&&k){for(var T in n.distributeMultiplier(),n.symbols){P=n.symbols[T];t.attach(P)}u=t}else D&&t.value!==x||w===g&&!R?(u=lt.shell(d).attach([t,n]),u.updateHash()):u=t.attach(n)}else{if(w===m&&t.fname===b&&y!==h&&n.power.equals(.5)){var F=n.multiplier.clone();n=oe(n.toUnitMultiplier().toLinear()),n.multiplier=F}2===t.length&&2===n.length&&Ee(t.power)&&Ee(n.power)?u=e.add(Qe(t),Qe(n)):(u=lt.shell(d).attach([t,n]),u.updateHash())}if(u.multiplier.equals(0)&&(u=new lt(0)),1===u.length){F=u.multiplier;u=ue(u.symbols),u.multiplier=u.multiplier.multiply(F)}return u}if(i&&!r){E=t;t=n,n=E,E=i,i=r,r=E}var B=X(n);if(r&&B){var G=new mt;n.eachElement((function(n,r,i){G.set(r,i,e.add(t.clone(),n))})),n=G}else if(X(t)&&B)n=t.add(n);else if(r&&z(n))n.each((function(r,i){i--,n.elements[i]=e.add(t.clone(),n.elements[i])}));else if(z(t)&&z(n))n.each((function(r,i){i--,n.elements[i]=e.add(t.elements[i],n.elements[i])}));else{if(z(t)&&X(n))return e.add(n,t);if(X(t)&&z(n)){if(n.elements.length===t.rows()){G=new mt;var V=t.cols();return n.each((function(n,r){for(var i=[],s=0;s<V;s++)i.push(e.add(t.elements[r-1][s].clone(),n.clone()));G.elements.push(i)})),G}A("Dimensions must match!")}}return n},this.subtract=function(t,n){var r=r=j(t),i=j(n);if(r&&i)return t.unit||n.unit?e.Unit.subtract(t,n):this.add(t,n.negate());if(i&&z(t))n=t.map((function(t){return e.subtract(t,n.clone())}));else if(r&&z(n))n=n.map((function(n){return e.subtract(t.clone(),n)}));else if(z(t)&&z(n))t.dimensions()===n.dimensions()?n=t.subtract(n):e.error("Unable to subtract vectors. Dimensions do not match.");else if(X(t)&&z(n)){if(n.elements.length===t.rows()){var s=new mt,o=t.cols();return n.each((function(n,r){for(var i=[],a=0;a<o;a++)i.push(e.subtract(t.elements[r-1][a].clone(),n.clone()));s.elements.push(i)})),s}A("Dimensions must match!")}else{if(z(t)&&X(n)){s=n.clone().negate();return e.add(s,t)}if(X(t)&&X(n))n=t.subtract(n);else if(X(t)&&i){s=new mt;t.each((function(t,r,i){s.set(r,i,e.subtract(t,n.clone()))})),n=s}else if(r&&X(n)){s=new mt;n.each((function(n,r,i){s.set(r,i,e.subtract(t.clone(),n))})),n=s}}return n},this.multiply=function(t,n){var r=j(t),o=j(n);if(r&&n instanceof s)return n.elements.push(t),n;if(r&&o){if(n.isUnit){var a=t.clone();return t.unit=n,a}if(t.unit||n.unit)return e.Unit.multiply(t,n);if(t.isInfinity||n.isInfinity){if(t.equals(0)||n.equals(0))throw new Ge(t+"*"+n+" is undefined!");if(n.power.lessThan(0)){if(t.isInfinity)throw new Ge("Infinity/Infinity is not defined!");return new lt(0)}var u=t.multiplier.multiply(n.multiplier).sign(),w=lt.infinity();if(t.isConstant()||n.isConstant()||t.isInfinity&&n.isInfinity)return u<0&&w.negate(),w}if(t.isConstant()&&n.isConstant()&&l.PARSE2NUMBER){var y=new i(t.multiplier.toDecimal()).times(new i(n.multiplier.toDecimal())).toFixed(),S=new lt(y);return S}if(t.isOne())return n.clone();if(n.isOne())return t.clone();if(t.multiplier.equals(0)||n.multiplier.equals(0))return new lt(0);if(n.group>t.group&&n.group!==d)return this.multiply(n,t);if(t.group===v&&n.group===g&&t.value===n.value){y=t;t=n,n=y}var E=t.group,N=n.group,x=n.multiplier.num,q=n.multiplier.den;if(E!==m||t.fname!==b||n.isConstant()||t.args[0].value!==n.value||t.args[0].multiplier.lessThan(0))E===m&&t.fname===b&&t.multiplier.equals(1)&&t.power.equals(-1)&&n.isConstant()&&t.args[0].equals(n)&&(t=e.symfunction(b,[n.clone()]),n=new lt(1));else{var _=t.power,O=e.parse(t.multiplier);t=e.multiply(O,t.args[0].clone()),t.setPower(new ut(.5).multiply(_)),E=t.group}var C=t.value,I=n.value,L=(u=new ut(t.sign()),E===f&&N===c&&n.multiplier.equals(t.value)),U=L?new ut(1).multiply(t.multiplier).abs():t.multiplier.multiply(n.multiplier).abs();a=t.clone().toUnitMultiplier();if(n=n.clone().toUnitMultiplier(!0),E===m&&N===m){var R=t.args[0].clone(),T=n.args[0].clone();if(t.fname===b&&n.fname===b&&t.isLinear()&&n.isLinear()){var P=e.divide(R,T).invert();P.gt(1)&&K(P)&&(a=e.multiply(t.args[0].clone(),oe(P.clone())),n=new lt(1))}else if(t.fname===M&&n.fname===M&&!R.isConstant()&&!T.isConstant()&&n.power<0){var k=e.subtract(R.clone(),T.clone());if(k.isConstant())if(y=new lt(1),k<0){for(var D=0,F=Math.abs(k);D<=F;D++){var B=e.add(R.clone(),new lt(D));y=e.multiply(y,B)}a=e.multiply(e.pow(R,new lt(t.power)),e.pow(y,new lt(n.power))),n=new lt(1)}else{for(D=0,F=Math.abs(k);D<=F;D++){B=e.add(T.clone(),new lt(D));y=e.multiply(y,B)}a=e.multiply(e.pow(y,new lt(t.power)),e.pow(T,new lt(n.power))),n=new lt(1)}}}if(C===I&&E===g&&E===N&&(C=t.text("hash"),I=n.text("hash")),N===h&&n.previousGroup===g&&E===g&&(C=it(t,"hash",h)),C!==I&&!L||E===g&&(N===p||N===f||N===m)||E===g&&N===v)if(E===v&&t.isLinear())if(N===v&&n.distributeExponent(),N===v&&n.isLinear()){for(var B in n.symbols){var G=n.symbols[B];a=a.combine(G)}a.multiplier=a.multiplier.multiply(n.multiplier)}else a.combine(n);else if(E!==c){if(E===v)a.distributeExponent(),a.combine(n);else if(!n.isOne()){var V=n.multiplier.clone();n.toUnitMultiplier(),a=lt.shell(v).combine([a,n]),a.multiplier=a.multiplier.multiply(V)}}else a=n.clone().toUnitMultiplier();else{var H=t.power,Z=n.power,$=j(H),W=j(Z),Q=$||W;if(E===g&&N!==g&&n.previousGroup!==g&&H.equals(1))a=new lt(0),t.each((function(t){a=e.add(a,e.multiply(t,n.clone()))}),!0);else{if(a.power=Q?e.add(j(H)?H:new lt(H),j(Z)?Z:new lt(Z)):E===c?H:H.add(Z),a.power.equals(0)&&(a=a.convert(c)),Q&&a.convert(h),t.imaginary&&n.imaginary){var Y=Ee(a.power%2);Y&&(a=new lt(1),U.negate())}a.group!==h&&a.previousGroup&&(a.previousGroup=void 0),a.multiplier=a.multiplier.multiply(n.multiplier)}}if(a.group===f){var J=Math.log(a.value),ee=Math.log(x)/J,te=Math.log(q)/J,ne=U.num/x,re=U.den/q;0!==ee&&K(ee)&&K(ne)&&(a.power=a.power.add(new ut(ee)),U.num/=x),0!==te&&K(te)&&K(re)&&(a.power=a.power.subtract(new ut(te)),U.den/=q)}if(1===a.length){y=a.multiplier;a=ue(a.symbols),a.multiplier=a.multiplier.multiply(y)}var ie=a.power.toString();if(Ee(ie)&&a.fname===b){u*=a.sign();var se=a.power;a=a.args[0],a=e.multiply(new lt(U),e.pow(a,new lt(se.divide(new ut(2))))),u<0&&a.negate()}else a.multiplier=a.multiplier.multiply(U).multiply(u),a.group===d&&a.isImaginary()&&a.distributeMultiplier();return a.group===f&&K(a.power.toDecimal())&&(a=a.convert(c)),a}o&&!r&&(y=t,t=n,n=y,y=o,o=r,r=y);var ae=X(n),le=X(t);if(r&&ae){var ce=new mt;n.eachElement((function(n,r,i){ce.set(r,i,e.multiply(t.clone(),n))})),n=ce}else if(le&&ae)n=t.multiply(n);else if(r&&z(n))n.each((function(r,i){i--,n.elements[i]=e.multiply(t.clone(),n.elements[i])}));else if(z(t)&&z(n))n.each((function(r,i){i--,n.elements[i]=e.multiply(t.elements[i],n.elements[i])}));else{if(z(t)&&X(n))return this.multiply(n,t);if(X(t)&&z(n)){if(n.elements.length===t.rows()){ce=new mt;var fe=t.cols();return n.each((function(n,r){for(var i=[],s=0;s<fe;s++)i.push(e.multiply(t.elements[r-1][s].clone(),n.clone()));ce.elements.push(i)})),ce}A("Dimensions must match!")}}return n},this.divide=function(t,n){var r=j(t),i=j(n);if(r&&i){if(t.unit||n.unit)return e.Unit.divide(t,n);var s;if(n.equals(0))throw new je("Division by zero not allowed!");return t.isConstant()&&n.isConstant()?(s=t.clone(),s.multiplier=s.multiplier.divide(n.multiplier)):(n.invert(),s=e.multiply(t,n)),s}var o=z(t),a=z(n);if(r&&a)n=n.map((function(n){return e.divide(t.clone(),n)}));else if(o&&i)n=t.map((function(t){return e.divide(t,n.clone())}));else if(o&&a)t.dimensions()===n.dimensions()?n=n.map((function(n,r){return e.divide(t.elements[--r],n)})):e.error("Cannot divide vectors. Dimensions do not match!");else{var u=X(t),l=X(n);if(u&&i){var c=new mt;t.eachElement((function(t,r,i){c.set(r,i,e.divide(t,n.clone()))})),n=c}else if(r&&l){c=new mt;n.eachElement((function(n,r,i){c.set(r,i,e.divide(t.clone(),n))})),n=c}else if(u&&l){c=new mt;t.rows()===n.rows()&&t.cols()===n.cols()?(t.eachElement((function(t,r,i){c.set(r,i,e.divide(t,n.elements[r][i]))})),n=c):e.error("Dimensions do not match!")}else if(u&&a)if(t.cols()===n.dimensions()){c=new mt;t.eachElement((function(t,r,i){c.set(r,i,e.divide(t,n.elements[r].clone()))})),n=c}else e.error("Unable to divide matrix by vector.")}return n},this.pow=function(t,n){var r=j(t),s=j(n);if(r&&s){if(t.unit||n.unit)return e.Unit.pow(t,n);if(t.group===m&&t.fname===S&&Ee(n)){var o=t.multiplier.clone(),a=e.pow(t.args[0],n);return a.multiplier=o,a}if(t.isInfinity||n.isInfinity){if(t.isInfinity&&n.isInfinity)throw new Ge("("+t+")^("+n+") is undefined!");if(t.isConstant()&&n.isInfinity){if(t.equals(0)){if(n.lessThan(0))throw new Ge("0^Infinity is undefined!");return new lt(0)}if(t.equals(1))throw new Ge("1^"+n.toString()+" is undefined!");if(n.lessThan(0))return new lt(0);if(!t.lessThan(0))return lt.infinity()}if(t.isInfinity&&n.isConstant()){if(n.equals(0))throw new Ge(t+"^0 is undefined!");return n.lessThan(0)?new lt(0):e.multiply(lt.infinity(),e.pow(new lt(t.sign()),n.clone()))}}var f=t.equals(0),p=n.equals(0);if(f&&p)throw new Ge("0^0 is undefined!");if(f&&n.isConstant()&&n.multiplier.greaterThan(0))return new lt(0);if(p)return new lt(1);var g,d,w,M,E,N=n.isConstant(),x=t.isConstant(),q=n.isInteger(),_=(o=t.multiplier,t.clone());if(x&&N&&t.equals(0)&&n.lessThan(0))throw new Ge("Division by zero is not allowed!");if(l.PARSE2NUMBER&&x&&N&&t.sign()<0&&Ne(n))return g=Math.PI*n,F=new lt(Math.cos(g)),G=e.multiply(lt.imaginary(),new lt(Math.sin(g))),e.add(F,G);if(l.PARSE2NUMBER&&t.isImaginary()&&N&&K(n)&&!n.lessThan(0))if(F=t.realpart(),G=t.imagpart(),F.isConstant("all")&&G.isConstant("all"))return M=l.USE_BIG?lt(i.atan2(R.multiplier.toDecimal(),D.multiplier.toDecimal()).times(n.toString())):Math.atan2(G,F)*n,le=new lt(M),D=e.pow(lt.hyp(F,G),n),d=e.multiply(D.clone(),e.trig.cos(le.clone())),w=e.multiply(D,e.trig.sin(le)),e.add(d,e.multiply(lt.imaginary(),w));if(_.toUnitMultiplier(),_.group!==m||_.fname!==b||N){var A=o.sign();Ne(n)&&A<0&&(_.negate(),_=e.symfunction(y,[_]),_.negate()),_.multiplyPower(n)}else{var O=_.args[0];O.multiplyPower(new lt(.5)),O.multiplier.multiply(_.multiplier),O.multiplyPower(n),_=O}if(x&&N&&l.PARSE2NUMBER)A<0&&(t.negate(),E=n.multiplier.den.equals(2)?new lt(l.IMAGINARY):K(n.multiplier)?Ee(n.multiplier)?new lt(1):new lt(-1):Ee(n.multiplier.den)?e.pow(e.symfunction(y,[new lt(A)]),n.clone()):new lt(Math.pow(A,n.multiplier.num))),_=new lt(Math.pow(t.multiplier.toDecimal(),n.multiplier.toDecimal())),E&&(_=e.multiply(_,E));else if(q&&!o.equals(1)){var C=n.abs();if(C.gt(l.MAX_EXP))return n.sign()<0?new lt(0):lt.infinity();var I=n.multiplier.toDecimal(),L=Math.sign(I);I=Math.abs(I);var U=new ut(1);U.num=o.num.pow(I),U.den=o.den.pow(I),L<0&&U.invert(),_.multiplier=_.multiplier.multiply(U)}else{A=t.sign();if(n.isConstant()&&t.isConstant()&&!n.multiplier.den.equals(1)&&A<0)if(n.multiplier.den.equals(2)){var R=new lt(l.IMAGINARY);t.negate(),n.lessThan(0)&&(R.negate(),n.negate()),_=e.multiply(e.pow(t,n),R)}else{var T=t.clone();T.multiplier.negate(),_=e.pow(e.symfunction(y,[new lt(A)]),n.clone());var P=e.pow(new lt(T.multiplier.num),n.clone()),k=e.pow(new lt(T.multiplier.den),n.clone()),D=e.divide(P,k);_=e.multiply(_,D)}else if(l.PARSE2NUMBER&&n.isImaginary()){var F=n.realpart(),G=n.imagpart(),V=(T=t.clone().toLinear(),e.pow(T.clone(),F)),H=Ie(T.clone()),Z=u.cos(e.multiply(G.clone(),H)),$=e.multiply(u.sin(e.multiply(G,Ie(T))),lt.imaginary());_=e.multiply(V,e.add(Z,$)),_=e.expand(e.parse(_))}else{var W=t.group===c&&A<0,Q=Rt(new lt(W?o.num:Math.abs(o.num)).setPower(n.clone())),Y=Rt(new lt(o.den).setPower(n.clone()).invert());if(t.imaginary)if(q){O=Math.sign(n),I=B(n),re=I%4,_=new lt(Ee(re)?-1:l.IMAGINARY),(0===re||O<0&&1===re||O>0&&3===re)&&_.negate()}else{var J=n.multiplier.multiply(ut.quick(1,2)),ee=Math.pow(-1,J.num);_=Ee(J.den)?new lt(-1).setPower(J,!0):new lt(ee)}if(A<0&&!W&&_.negate(),N&&t.group!==h){var te=Ee(n.multiplier.den),ne=Ee(t.power),re=_.power.toDecimal(),ie=Ee(re);if(te&&ne&&!ie){if(1===re)_=e.symfunction(S,[_]);else if(K(re))_=e.multiply(e.symfunction(S,[_.clone().toLinear()]),_.clone().setPower(new ut(re-1)));else{I=_.power;_=e.symfunction(S,[_.toLinear()]).setPower(I)}l.POSITIVE_MULTIPLIERS&&_.fname===S&&(_=_.args[0])}}if(n.equals(2)&&_.group===v){var se=new lt(1);_.each((function(t){se=e.multiply(se,e.pow(t,n))})),_=se}}}if(_=Rt(_),Q&&Y&&(_=e.multiply(_,Tt(e.multiply(Q,Y)))),_.fname===b){var oe=_.group===h,ae=oe?_.power.multiplier.toString():_.power.toString();if(Ee(ae)){var ue=oe?e.divide(_.power,new lt(2)):new lt(_.power.divide(new ut(2)));o=_.multiplier;_=e.pow(_.args[0],ue),_.multiplier=_.multiplier.multiply(o)}}else if(!l.IGNORE_E&&_.isE()&&_.group===h&&_.power.contains("pi")&&_.power.contains(l.IMAGINARY)&&n.group===v){var le=n.stripVar(l.IMAGINARY);_=e.add(u.cos(le),e.multiply(lt.imaginary(),u.sin(le)))}return _}if(z(t)&&s)t=t.map((function(t){return e.pow(t,n.clone())}));else if(X(t)&&s){var ce=new mt;t.eachElement((function(t,r,i){ce.set(r,i,e.pow(t,n.clone()))})),t=ce}else if(r&&X(n)){ce=new mt;n.eachElement((function(n,r,i){ce.set(r,i,e.pow(t.clone(),n))})),t=ce}return t},this.comma=function(e,t){return e instanceof s||(e=s.create(e)),e.append(t),e},this.mod=function(e,t){return H(e,t)},this.slice=function(e,t){return new r(e,t)},this.equals=function(e,t){return e.group===p||e.isLinear()||A("Cannot set equality for "+e.toString()),x[e.value]=t.clone(),t},this.percent=function(t){return e.divide(t,new lt(100))},this.assign=function(t,n){if(t instanceof s&&n instanceof s)return t.elements.map((function(t,r){return e.assign(t,n.elements[r])})),ht.fromArray(n.elements);if(t.parent){var r=t.parent;return r.elements[r.getter]=n,delete r.getter,r}if(t.group!==p)throw new Ke("Cannot complete operation. Incorrect LH value for "+t);return x[t.value]=n,n},this.function_assign=function(e,t){var n=e.elements.pop();return ce(n,e.elements,t)};var Pt=function(e){return new lt(!0===e?1:0)};this.eq=function(e,t){return Pt(e.equals(t))},this.gt=function(e,t){return Pt(e.gt(t))},this.gte=function(e,t){return Pt(e.gte(t))},this.lt=function(e,t){return Pt(e.lt(t))},this.lte=function(e,t){return Pt(e.lte(t))},this.factorial=function(e){return this.symfunction(M,[e])},this.dfactorial=function(e){return this.symfunction(E,[e])}}l.FUNCTION_MODULES.push(rt),Ae(rt),Math.sign=Math.sign||function(e){return e=+e,0===e||isNaN(e)?e:e>0?1:-1},Math.cosh=Math.cosh||function(e){var t=Math.exp(e);return(t+1/t)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){var t=Math.exp(e);return(t-1/t)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:e>0?Math.floor(e):Math.ceil(e)},st(314146179365),ot.getExpression=function(e,t){"last"!==e&&e||(e=N.length),"first"===e&&(e=1);var n=e-1,r=N[n],i=r?new ot(r):r;return i},ot.prototype={text:function(e,t){return t=t||19,e=e||"decimals",this.symbol.text_?this.symbol.text_(e):it(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):pt.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(z(this.symbol)&&0===this.symbol.dimensions())return this;var e,t=arguments[0],r=1;"string"===typeof t?e="%"===t.charAt(0)?ot.getExpression(t.substr(1)).text():t:t instanceof ot||j(t)?e=t.text():(e=this.symbol.text(),r--);var i=arguments[r]||{},s=new ot(Ce("PARSE2NUMBER",(function(){return n.parse(e,i)}),!0));return s},buildFunction:function(e){return vt.build(this.symbol,e)},isNumber:function(){return W(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return Re(n.parse(this.symbol)).isImaginary()},variables:function(){return G(this.symbol)},toString:function(){try{return Y(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch(e){return""}},toDecimal:function(e){l.precision=e;var t=it(this.symbol,"decimals");return l.precision=void 0,t},isFraction:function(){return F(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,t){return new ot(this.symbol.sub(n.parse(e),n.parse(t)))},operation:function(e,t){return B(t)?t=t.symbol:j(t)||(t=n.parse(t)),new ot(n[e](this.symbol.clone(),t.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new ot(n.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(Y(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){j(e)||(e=n.parse(e));try{var t=n.subtract(this.symbol.clone(),e);return t.equals(0)}catch(r){return!1}},lt:function(e){j(e)||(e=n.parse(e));try{var t=Re(n.subtract(this.symbol.clone(),e));return t.lessThan(0)}catch(r){return!1}},gt:function(e){j(e)||(e=n.parse(e));try{var t=Re(n.subtract(this.symbol.clone(),e));return t.greaterThan(0)}catch(r){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new ot(this.symbol.getNum())},denominator:function(){return new ot(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}},ot.prototype.toTeX=ot.prototype.latex,at.prototype={fromScientific:function(e){var t=String(e).toLowerCase().split("e");return this.coeff=t[0],this.exponent=t[1],this},convert:function(e){var t=e.split("."),n=t[0]||"",r=t[1]||"";n=at.removeLeadingZeroes(n),r=at.removeTrailingZeroes(r);var i=n.length,s=n+r,o=at.leadingZeroes(s).length;this.exponent=i-(o+1);var a=at.removeLeadingZeroes(s);return this.coeff=a.charAt(0)+"."+(a.substr(1,a.length)||"0"),this},round:function(e){var t=this.copy();if(e=Number(e),0===e)t.coeff=t.coeff.charAt(0);else{var n=this.coeff.substring(0,e+1),r=this.coeff.substring(e+1,e+3),i=r.charAt(0);r.charAt(1)>4&&i++,t.coeff=n+i}return t},copy:function(){var e=new at(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t,n="undefined"===typeof e?this.coeff:at.round(this.coeff,e);return t=0===this.exponent&&l.SCIENTIFIC_IGNORE_INTS?this.coeff:n+"e"+this.exponent,(-1===this.sign?"-":"")+t}},at.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},at.leadingZeroes=function(e){var t=e.match(/^(0*).*$/);return t?t[1]:""},at.removeLeadingZeroes=function(e){var t=e.match(/^0*(.*)$/);return t?t[1]:""},at.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},at.round=function(e,t){var n=ye(e,t),r=String(n).split(".").pop(),i=t-r.length;return i>0&&(n+=new Array(i+1).join(0)),n},at.prototype={fromScientific:function(e){var t=String(e).toLowerCase().split("e");return this.coeff=t[0],this.exponent=t[1],this},convert:function(e){var t=e.split("."),n=t[0]||"",r=t[1]||"";n=at.removeLeadingZeroes(n),r=at.removeTrailingZeroes(r);var i=n.length,s=n+r,o=at.leadingZeroes(s).length;this.exponent=i-(o+1);var a=at.removeLeadingZeroes(s);this.coeff=a.charAt(0)+"."+(a.substr(1,a.length)||"0");var u=this.coeff.split(".")[1]||"";return this.decp="0"===u?0:u.length,this.dec=r,this.wholes=n,this},round:function(e){var t=this.copy();if(e=Number(e),0===e)t.coeff=t.coeff.charAt(0);else{var n=this.coeff.substring(0,e+1),r=this.coeff.substring(e+1,e+3),i=r.charAt(0);r.charAt(1)>4&&i++,t.coeff=n+i}return t},copy:function(){var e=new at(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;if(l.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&0===this.exponent&&this.decp<e)t=0===this.decp?this.wholes:this.coeff;else{var n="undefined"===typeof e?this.coeff:at.round(this.coeff,Math.min(e,this.decp||1));t=0===this.exponent?n:n+"e"+this.exponent}return(-1===this.sign?"-":"")+t}},at.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},at.leadingZeroes=function(e){var t=e.match(/^(0*).*$/);return t?t[1]:""},at.removeLeadingZeroes=function(e){var t=e.match(/^0*(.*)$/);return t?t[1]:""},at.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},ut.create=function(e){if(e instanceof ut)return e;e=e.toString();var t="-"===e.charAt(0);t&&(e=e.substr(1,e.length-1));var n=new ut(e);return t&&n.negate(),n},ut.isFrac=function(e){return e instanceof ut},ut.quick=function(e,t){var n=new ut;return n.num=new r(e),n.den=new r(t),n},ut.simple=function(e){for(var t=String(R(e)),n=t.split("."),r=n.join(""),i=1,s=(n[1]||"").length,o=0;o<s;o++)i+="0";var a=ut.quick(r,i);return a.simplify()},ut.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new je("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,n=e.den,r=this.clone(),i=r.num,s=e.num;return t.equals(n)?r.num=i.add(s):(r.num=i.multiply(n).add(s.multiply(t)),r.den=t.multiply(n)),r.simplify()},mod:function(e){var t=this.clone(),n=e.clone();return t.num=t.num.multiply(n.den),t.den=t.den.multiply(n.den),n.num=n.num.multiply(this.den),n.den=n.den.multiply(this.den),t.num=t.num.mod(n.num),t.simplify()},simplify:function(){var e=r.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new ut;return e.num=new r(this.num),e.den=new r(this.den),e},decimal:function(e){var t=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||l.PRECISION,e++;for(var n=[],r=this.num.abs(),i=this.den,s=0;s<e;s++){var o=r.divide(i),a=r.subtract(o.multiply(i));if(n.push(o),a.equals(0))break;r=a.times(10)}var u=n.shift();if(0===n.length)return t+u.toString();if(s===e){var c=[];for(s=0;s<2;s++)c.unshift(n.pop());n.push(Math.round(c.join(".")))}var f=u.toString()+"."+n.join("");return t+f},toDecimal:function(e){return e=e||l.PRECISION,e?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new ut(e));var t=this.qcompare(e);return t[0].equals(t[1])},absEquals:function(e){isNaN(e)||(e=new ut(e));var t=this.qcompare(e);return t[0].abs().equals(t[1])},greaterThan:function(e){isNaN(e)||(e=new ut(e));var t=this.qcompare(e);return t[0].gt(t[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new ut(e));var t=this.qcompare(e);return t[0].lt(t[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e=this.den;if(!this.num.equals(0)){var t=this.num.isNegative();this.den=this.num.abs(),this.num=e,t&&(this.num=this.num.multiply(-1))}return this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return ut.quick(r.gcd(e.num,this.num),r.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){return l.USE_BIG?new i(this.num.toString()).div(new i(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},lt.imaginary=function(){var e=new lt(l.IMAGINARY);return e.imaginary=!0,e},lt.infinity=function(e){var t=new lt("Infinity");return-1===e&&t.negate(),t},lt.shell=function(e,t){var n=new lt(t);return n.group=e,n.symbols={},n.length=0,n},lt.unwrapSQRT=function(e,t){var n=e.power;if(e.fname===b&&(e.isLinear()||t)){var r=e.args[0].clone();r.power=r.power.multiply(new ut(.5)),r.multiplier=r.multiplier.multiply(e.multiplier),e=r,t&&(e.power=n.multiply(new ut(.5)))}return e},lt.hyp=function(e,t){return e=e||new lt(0),t=t||new lt(0),n.sqrt(n.add(n.pow(e.clone(),new lt(2)),n.pow(t.clone(),new lt(2))))},lt.toPolarFormArray=function(e){var t,r,i,s;return t=e.realpart(),r=e.imagpart(),i=lt.hyp(t,r),s=t.equals(0)?n.parse("pi/2"):n.trig.atan(n.divide(r,t)),[i,s]},lt.unwrapPARENS=function(e){if(""===e.fname){var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),""===e.fname?lt.unwrapPARENS(t):t}return e},lt.create=function(e,t){return t=void 0===t?1:t,n.parse("("+e+")^("+t+")")},lt.prototype={getNth:function(e){var t=Re(n.pow(n.parse(this.multiplier),n.parse(e).invert())),r=n.parse(ye(t)),i=Re(n.pow(r,n.parse(e)));return i.equals(n.parse(this.multiplier))?r:t},isToNth:function(e){var t,r=this.getNth(e),i=K(r);return this.group===v?(t=!0,this.each((function(n){var r=n.isToNth(e);r||(t=!1)}))):t=this.group===c||K(n.divide(n.parse(this.power),n.parse(e))),i&&t},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group===v){var e=[],t=this.multiplier.sign();this.each((function(t){var n=t.power;if(j(n)||n.equals(1))return this.clone();e.push(n)}));var r=new ut(pe(e)),i=(t=this.multiplier.sign(),this.multiplier.clone().abs()),s=rt.ifactor(i),o=new ut(1),a=new ut(1);for(var u in s){var l=new ut(s[u]);l.lessThan(r)||(l=l.divide(r).subtract(new ut(1)),a=a.multiply(new ut(u))),o=o.multiply(n.parse(te(u)+"^"+te(l)).multiplier)}var c=new lt(a);this.each((function(e){e=e.clone(),e.power=e.power.divide(r),c=n.multiply(c,e)}));var f=n.symfunction(y,[c]);return f.power=r,f.multiplier=t<0?o.negate():o,f}return this.clone()},equals:function(e){return j(e)||(e=new lt(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return j(e)||(e=new lt(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return j(e)||(e=new lt(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return j(e)||(e=new lt(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return j(e)||(e=new lt(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,n=this.power;if(!K(n)||n<0)return!1;if(t===c||t===p||this.isConstant(!0))return!0;var r=G(this);if(t===v&&1===r.length){var i=r[0];if(!i)return!0;for(var s in this.symbols){var o=this.symbols[s];if(o.group===m&&!o.args[0].isConstant())return!1;if(!o.contains(i)&&!o.isConstant(!0))return!1}return!0}if(this.isComposite()||t===v&&e){if(!e&&r.length>1)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(e,t){var r;return this.group!==g&&this.group!==p||this.value!==e?this.group===v&&this.isLinear()?(r=new lt(1),this.each((function(t){t.contains(e,!0)||(r=n.multiply(r,t.clone()))})),r.multiplier=r.multiplier.multiply(this.multiplier)):this.group!==d||this.isLinear()?this.group===d&&this.isLinear()?(r=new lt(0),this.each((function(t){if(!t.contains(e)){var i=t.clone();i.multiplier=i.multiplier.multiply(this.multiplier),r=n.add(r,i)}})),r.equals(0)&&(r=new lt(this.multiplier))):r=this.group===h&&this.power.contains(e,!0)||this.group===m&&this.contains(e)?new lt(this.multiplier):this.clone():r=new lt(this.multiplier):r=new lt(t?0:this.multiplier),r},toArray:function(e,t){t=t||{arr:[],add:function(e,t){var r=this.arr[t];this.arr[t]=r?n.add(r,e):e}};var r=this.group;if(r===p&&this.contains(e))t.add(new lt(this.multiplier),this.power);else if(r===v){var i=this.stripVar(e),s=n.divide(this.clone(),i.clone()),o=s.isConstant()?0:s.power;t.add(i,o)}else if(r===g&&this.value===e)this.each((function(n,r){t.add(n.stripVar(e),r)}));else if(r===d)this.each((function(n){n.toArray(e,t)}));else{if(this.contains(e))throw new Ze("Cannot convert to array! Exiting");t.add(this.clone(),0)}t=t.arr;for(var a=0;a<t.length;a++)t[a]||(t[a]=new lt(0));return t},hasFunc:function(e){var t=this.group===m||this.group===h;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].hasFunc(e))return!0;return!1},sub:function(e,t){e=j(e)?e.clone():n.parse(e),t=j(t)?t.clone():n.parse(t),e.group!==c&&e.group!==f||A("Cannot substitute a number. Must be a variable");var r,i=!1,s=e.multiplier.equals(1),o=this.multiplier.clone();if(this.value===e.value&&(this.group!==g&&e.group!==g||this.group===g&&e.group===g))(s||e.multiplier.equals(this.multiplier))&&(e.isLinear()?r=t:e.power.equals(this.power)&&(r=t,i=!0),e.multiplier.equals(this.multiplier)&&(o=new ut(1)));else if(this.group===v||this.previousGroup===v)r=new lt(1),this.each((function(i){var s=n.parse(i.sub(e,t));r=n.multiply(r,s)}));else if(this.isComposite()){var a=this.clone();if(e.isComposite()&&a.isComposite()&&a.isLinear()&&e.isLinear()){var u=function(e,t){for(var n in e.symbols){var r=e.symbols[n];if(r.isComposite()&&u(r,t)||r.equals(t))return!0}return!1};for(var l in e.symbols)if(!u(a,e.symbols[l]))return a.clone();r=n.add(n.subtract(a.clone(),e),t)}else r=new lt(0),a.each((function(i){r=n.add(r,i.sub(e,t))}))}else if(this.group===h)r=n.parse(this.value).sub(e,t);else if(this.group===m){for(var p=[],d=0;d<this.args.length;d++){var w=this.args[d];j(w)||(w=n.parse(w)),p.push(w.sub(e,t))}r=n.symfunction(this.fname,p)}if(r){if(!i){var y=this.group===h?this.power.sub(e,t):n.parse(this.power);r=n.pow(r,y)}return r.multiplier=r.multiplier.multiply(o),r}return this.clone()},isMonomial:function(){if(this.group===p)return!0;if(this.group!==v)return!1;for(var e in this.symbols)if(this.symbols[e].group!==p)return!1;return!0},isPi:function(){return this.group===p&&"pi"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return"e"===this.value},isSQRT:function(){return this.fname===b},isConstant:function(e,t){if(t&&this.group===v)for(var n in this.symbols)if(this.symbols[n].isConstant(!0))return!0;if("functions"===e&&this.isComposite()){var r=!0;return this.each((function(n){n.isConstant(e,t)||(r=!1)}),!0),r}if("all"===e&&(this.isPi()||this.isE()))return!0;if(e&&this.group===m){for(var i=0;i<this.args.length;i++)if(!this.args[i].isConstant(e))return!1;return!0}return e?W(this):this.value===w},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new lt(0);if(this.isComposite()){var e=new lt(0);return this.each((function(t){e=n.add(e,t.realpart())})),e}return this.isImaginary()?new lt(0):this.clone()},imagpart:function(){if(this.group===p&&this.isImaginary())return new lt(this.multiplier);if(this.isComposite()){var e=new lt(0);return this.each((function(t){e=n.add(e,t.imagpart())})),e}return this.group===v?this.stripVar(l.IMAGINARY):new lt(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===p)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return!(this.group!==v||!this.symbols[e])&&this.symbols[e].isLinear(e)}return this.power.equals(1)},containsFunction:function(e){if("string"===typeof e&&(e=[e]),this.group===m&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===c&&this.multiplier.equals(1))return this;var t=this.power;if(this.group!==h&&e.group===c){var r=e.multiplier;this.group!==c||r.isInteger()||this.convert(f),this.power=t.equals(1)?r.clone():t.multiply(r),this.group===f&&K(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(c))}else this.group!==h&&(t=new lt(t),this.convert(h)),this.power=n.multiply(t,e);return this},setPower:function(e,t){if(this.group===c&&this.multiplier.equals(1))return this;if(this.group!==h||j(e)){var n=!1;j(e)&&(e.group===c?e=e.multiplier:n=!0);var r=n?h:f;this.power=e,this.group===c&&r&&this.convert(r,t)}else this.group=this.previousGroup,delete this.previousGroup,this.group===c?(this.multiplier=new ut(this.value),this.value=w):this.power=e;return this},isInverse:function(){return this.group===h?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,n=e||new lt(0),r=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],i=r.length;if(this.symbols)for(var s in n.symbols={},this.symbols)n.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[r[t]]&&(n[r[t]]=this[r[t]]);return n.power=this.power.clone(),n.multiplier=this.multiplier.clone(),this.isConversion&&(n.isConversion=this.isConversion),this.isUnit&&(n.isUnit=this.isUnit),n},toUnitMultiplier:function(e){return this.multiplier.num=new r(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new r(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new ut(1)),this},each:function(e,t){if(this.symbols)for(var n in this.symbols){var r=this.symbols[n];if(r.group===g&&t)for(var i in r.symbols)e.call(n,r.symbols[i],i);else e.call(this,r,n)}else e.call(this,this,this.value)},valueOf:function(){return this.group===c?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:it(this,"decimals")},contains:function(e,t){e=String(e);var n=this.group;if(this.value===e)return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(n===m||this.previousGroup===m)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(n===h){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==d&&this.group!==g||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),j(this.power)?this.power.negate():this.group===v&&t?this.each((function(e){return e.invert()})):this.power&&this.group!==c&&this.power.negate(),this},distributeMultiplier:function(e){var t=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&t&&this.group!==v&&!this.multiplier.equals(1)){for(var n in this.symbols){var r=this.symbols[n];r.multiplier=r.multiplier.multiply(this.multiplier),r.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e=this.power;for(var t in this.symbols){var r=this.symbols[t];r.group===h?r.power=n.multiply(r.power,new lt(e)):this.symbols[t].power=this.symbols[t].power.multiply(e)}this.toLinear()}return this},convert:function(e,t){if(e>m){var n=this.clone();this.symbols={},e===v?n.toUnitMultiplier():this.toUnitMultiplier(),this.group===m&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1}else if(e===h)this.group===c&&this.multiplier.equals(1)||(this.group!==h&&(this.previousGroup=this.group),this.group===c?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=it(this,"hash"),this.group=h);else if(e===c){var r=this.multiplier.toDecimal();this.symbols&&(this.symbols=void 0),new lt(this.group===f?r*Math.pow(this.value,this.power):r).clone(this)}else e===f&&this.group===c&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=f);return this},insert:function(e,t){if(j(e)||A("Object "+e+" is not of type Symbol!"),this.symbols){var r=this.group;if(r>m){var i=e.keyForGroup(r),s=i in this.symbols&&this.symbols[i];if("add"===t){var o=i;s?(this.symbols[o]=n.add(s,e),this.symbols[o].multiplier.equals(0)&&(delete this.symbols[o],this.length--,0===this.length&&(this.convert(c),this.multiplier=new ut(0)))):(this.symbols[i]=e,this.length++)}else e.group===f&&K(e.power)&&e.convert(c),e.group!==h?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),s&&(e=n.multiply(Oe(this.symbols,i),e),e.isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new lt(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[i]=e,this.length++);0===this.length&&this.convert(c),this.group!==d&&this.group!==v||this.updateHash()}}return this},attach:function(e){if(Y(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"add");return this}return this.insert(e,"add")},combine:function(e){if(Y(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==c)if(this.group===m){for(var e="",t=this.args,n=this.fname===y,r=0;r<t.length;r++)e+=(0===r?"":",")+it(t[r]);var i=n?"":this.fname;this.value=i+(n?e:te(e))}else this.group!==p&&this.group!==g&&(this.value=it(this,"hash"))},keyForGroup:function(e){var t,n=this.group;if(n===c)t=this.value;else if(n===p||n===f)t=e===g?this.power.toDecimal():this.value;else if(n===m)t=e===g?this.power.toDecimal():it(this,"hash");else{if(n===g)return t=e===v?it(this,"hash"):e===d?this.power.equals(1)?this.value:te(it(this,"hash"))+l.POWER_OPERATOR+this.power.toDecimal():e===g?this.power.toString():this.value,t;n===d?(e===d&&(t=it(this,"hash")),t=e===g?this.power.toDecimal():this.value):n===v?t=e===g?this.power.toDecimal():it(this,"hash"):n===h&&(t=e===g?it(this.power):it(this,"hash"))}return t},collectSymbols:function(e,t,n,r){var i=[];if(this.symbols)for(var s in this.symbols){var o=this.symbols[s];!r||o.group!==g&&o.group!==d?i.push(e?e(o,t):o):i=i.concat(o.collectSymbols())}else i.push(this);return null===n&&(n=void 0),i.sort(n)},latex:function(e){return pt.latex(this,e)},text:function(e){return it(this,e)},isOne:function(e){var t=e?"absEquals":"equals";return this.group===c?this.multiplier[t](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===d||e===g||t===g||t===d},isCombination:function(){var e=this.group,t=this.previousGroup;return e===v||t===v},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return j(e)||(e=new lt(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e,t;if(t=this.clone(),this.group===v&&this.power.lessThan(0)&&(t=n.expand(t)),t.power.lessThan(0)){var r=n.parse(t.multiplier.den);e=t.toUnitMultiplier(),e.power.negate(),e=n.multiply(r,e)}else if(t.group===v)for(var i in e=n.parse(t.multiplier.den),t.symbols)t.symbols[i].power<0&&(e=n.multiply(e,t.symbols[i].clone().invert()));else e=n.parse(t.multiplier.den);return e},getNum:function(){var e,t;return t=this.clone(),t.group===v&&t.power.lessThan(0)&&(t=n.expand(t)),t.power.greaterThan(0)&&t.group!==v?e=n.multiply(n.parse(t.multiplier.num),t.toUnitMultiplier()):t.group===v?(e=n.parse(t.multiplier.num),t.each((function(t){(t.power>0||t.group===h&&t.power.multiplier>0)&&(e=n.multiply(e,t.clone()))}))):e=n.parse(t.multiplier.num),e},toString:function(){return this.text()}};var ft={convert:function(e,t){var n;if(0===e)n=[0,1];else if(e<1e-6||e>1e20){var r=this.quickConversion(Number(e));if(r[1]<=1e20){var i=Math.abs(e),s=e/i;n=this.fullConversion(i.toFixed((r[1]+"").length-1)),n[0]=n[0]*s}else n=r}else n=this.fullConversion(e);return n},quickConversion:function(e){var t=function(e){"string"!==typeof e&&(e=e.toString());var t="",n=e.charAt(0);return"-"===n?(e=e.substr(1,e.length),t="-"):"+"===n&&(e=e.substr(1,e.length)),{sign:t,value:e}};function n(e){at.isScientific(e)&&(e=R(e));var n,r=t(e),i=r.value.split(".");n=1===i.length?i[0]:i[0]+i[1];var s=i[1]?i[1].length:0,o="1"+"0".repeat(s);return"0"!==n&&(n=n.replace(/^0+/,"")),[r.sign+n,o]}return n(e)},fullConversion:function(e){var t=!1,n=0,r=1,i=1,s=0,o=0,a=e,u=1e-16;while(!t){o++,o>1e4&&(t=!0);var l=Math.floor(a),c=n+l*i,f=r+l*s,p=a-l;p<u&&(t=!0),a=1/p,n=i,r=s,i=c,s=f,(Math.abs(c/f-e)<u||o>30)&&(t=!0)}return[c,f]}},pt={parser:function(){var e=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],t=new ct;for(var n in t)-1===e.indexOf(n)&&delete t[n];t.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),t.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}});var r=t.getBrackets();return r["{"].maps_to=void 0,t}(),space:"~",dot:" \\cdot ",latex:function(e,t){if(e.clone&&(e=e.clone()),e instanceof n.classes.Collection&&(e=e.elements),Y(e)){for(var r=[],i=0;i<e.length;i++){var s=e[i];j(s)||(s=n.parse(s)),r.push(this.latex(s,t))}return this.brackets(r.join(", "),"square")}if(X(e)){var o="\\begin{pmatrix}\n";for(i=0;i<e.elements.length;i++){for(var a=[],u=e.elements[i],l=0;l<u.length;l++)a.push(this.latex(u[l],t));o+=a.join(" & "),i<e.elements.length-1&&(o+="\\\\\n")}return o+="\\end{pmatrix}",o}if(z(e)){for(o="\\left[",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],t)+" "+(i!==e.elements.length-1?",\\,":"");return o+="\\right]",o}if($(e)){for(o="\\{",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],t)+" "+(i!==e.elements.length-1?",\\,":"");return o+="\\}",o}e=e.clone();var c,p="decimal"===t||"decimals"===t,h=e.power,m=J(h),g=e.multiplier.lessThan(0);if(e.group===f&&p)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));if(e.multiplier=e.multiplier.abs(),p){var d=String(e.multiplier.toDecimal());c=[d,""]}else c=[e.multiplier.num,e.multiplier.den];var w,y=this.value(e,m,t,g);m&&h.negate(),p?(w=j(h)?pt.latex(h,t):String(h.toDecimal()),"1"===String(w)&&(w="")):w=j(h)?this.latex(h,t):this.formatFrac(h,!0);var b=["",""],S=m?1:0;b[S]=w;var M=(g?"-":"")+this.set(c,y,b,e.group===v);return M.replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(e,t,n,r){var i=e.group,s=e.previousGroup,o=["",""],a=t?1:0;if(e.isInfinity)o[a]="\\infty";else if(i===p||i===f||s===p||s===f||s===c){var u=this.formatSubscripts(e.value);u.replace&&(u=u.replace(/(.+)_$/,"$1\\_"));var g=String(u).split("_"),w=this.greek[g[0]];w&&(g[0]=w,u=g.join("_"));e=this.symbols[g[0]];e&&(g[0]=e,u=g.join("_")),o[a]=u}else if(i===m||s===m){for(var N=[],x=e.fname,q=0;q<e.args.length;q++){var _,A=e.args[q];_="string"===typeof A?A:this.latex(A,n),N.push(_)}if(x===b)o[a]="\\sqrt"+this.braces(N.join(","));else if(x===S)o[a]=this.brackets(N.join(","),"abs");else if(x===y)o[a]=this.brackets(N.join(","),"parens");else if("limit"===x)o[a]=" \\lim\\limits_{"+N[1]+" \\to "+N[2]+"} "+N[0];else if("integrate"===x)o[a]="\\int"+this.braces(N[0])+this.braces("d"+N[1]);else if("defint"===x)o[a]="\\int\\limits_"+this.braces(N[1])+"^"+this.braces(N[2])+" "+N[0]+" d"+N[3];else if(x===M||x===E){A=e.args[0];A.power.equals(1)&&(A.isComposite()||A.isCombination())&&(N[0]=this.brackets(N[0])),o[a]=N[0]+(x===M?"!":"!!")}else if("floor"===x)o[a]="\\left \\lfloor"+this.braces(N[0])+"\\right \\rfloor";else if("ceil"===x)o[a]="\\left \\lceil"+this.braces(N[0])+"\\right \\rceil";else if(x===l.LOG&&N.length>1)o[a]="\\mathrm"+this.braces(l.LOG)+"_"+this.braces(N[1])+this.brackets(N[0]);else if(x===l.LOG10)o[a]="\\mathrm"+this.braces(l.LOG)+"_"+this.braces(10)+this.brackets(N[0]);else if("sum"===x){var O=N[0],C=N[1],I=N[2],L=N[3];o[a]="\\sum\\limits_{"+this.braces(C)+"="+this.braces(I)+"}^"+this.braces(L)+" "+this.braces(O)}else if("product"===x){O=N[0],C=N[1],I=N[2],L=N[3];o[a]="\\prod\\limits_{"+this.braces(C)+"="+this.braces(I)+"}^"+this.braces(L)+" "+this.braces(O)}else if("nthroot"===x)o[a]="\\sqrt["+N[1]+"]"+this.braces(N[0]);else if("mod"===x)o[a]=N[0]+" \\bmod "+N[1];else if("realpart"===x)o[a]="\\operatorname{Re}"+this.brackets(N[0]);else if("imagpart"===x)o[a]="\\operatorname{Im}"+this.brackets(N[0]);else{var U=""!==x?"\\mathrm"+this.braces(x.replace(/_/g,"\\_")):"";e.isConversion?o[a]=U+this.brackets(N.join(""),"parens"):o[a]=U+this.brackets(N.join(","),"parens")}}else if(e.isComposite()){var R=e.collectSymbols().sort(i===d||s===d?function(e,t){return t.group-e.group}:function(e,t){var n=j(e.power)?-1:e.power,r=j(t.power)?-1:t.power;return r-n}),T=[],P=R.length;for(q=0;q<P;q++)T.push(pt.latex(R[q],n));u=T.join("+");o[a]=e.isLinear()&&e.multiplier.equals(1)&&!r?u:this.brackets(u,"parens")}else if(i===v||s===h||s===v){i===v&&e.distributeExponent();var k=[],D=[],F=[],B=[],G=0,V=0,H=function(e,t,n){if(n>1&&t.length>0)for(var r=t.length,i=0;i<r;i++){var s=t[i],o=e[s];/^\\left\(.+\\right\)\^\{.+\}$/g.test(o)||/^\\left\(.+\\right\)$/g.test(o)||(e[s]=pt.brackets(o,"parens"))}return e};e.each((function(t){var r,i=J(t.power);i?(r=pt.latex(t.invert(),n),V++,t.isComposite()&&(1!=e.multiplier.den&&1==Math.abs(t.power)&&(r=pt.brackets(r,"parens")),F.push(k.length)),k.push(r)):(r=pt.latex(t,n),G++,t.isComposite()&&(1!=e.multiplier.num&&1==Math.abs(t.power)&&(r=pt.brackets(r,"parens")),B.push(D.length)),D.push(r))})),H(D,B,G),o[0]=D.join(this.dot),H(k,F,V),o[1]=k.join(this.dot)}return o},set:function(e,t,n,r){var i=function(e){return/^\\left\(.+\\right\)$/.test(e)};if(n&&(n=this.formatP(n)),r){var s=n[0];n[0]=""}t=this.merge(t,n);var o=e[0],a=e[1],u=t[0],l=t[1];u&&1===Number(o)&&(o=""),1===Number(a)&&(a="");var c=this.join(o,u,i(u)?"":this.dot),f=this.join(a,l,i(l)?"":this.dot);if(c&&f){var p=this.frac(c,f);return r&&s&&(p=this.brackets(p)+s),p}return c},merge:function(e,t){for(var n=[],r=0;r<2;r++)n[r]=e[r]+t[r];return n},join:function(e,t,n){return e||t?e&&!t?e:t&&!e?t:e+n+t:""},formatSubscripts:function(e){var t=e.toString().split("_"),n="";while(t.length>1)t.length>0&&(n="_"+this.braces(t.pop()+n));return t[0]+n},formatP:function(e){for(var t=0;t<2;t++){var n=e[t];n&&(e[t]="^"+this.braces(n))}return e},formatFrac:function(e,t){var n=e.num.toString(),r=e.den.toString();return t&&"1"===n&&"1"===r?"":"1"===r?n:this.frac(n,r)},frac:function(e,t){return"\\frac"+this.braces(e)+this.braces(t)},braces:function(e){return"{"+e+"}"},brackets:function(e,t){t=t||"parens";var n={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]},r=n[t];return"\\left"+r[0]+e+"\\right"+r[1]},filterTokens:function(e){var t=[];Y(e)&&(t.type=e.type);for(var n=["\\","left","right","big","Big","large","Large"],r=0,i=e.length;r<i;r++){var s=e[r],o=e[r+1];"\\"===s.value&&"\\"===o.value?t.push(s):Y(s)?t.push(pt.filterTokens(s)):-1===n.indexOf(s.value)&&t.push(s)}return t},parse:function(e){var t,n="",r=this.filterTokens(e),i={cdot:"",times:"",infty:"Infinity"},s=function(e){return r["undefined"===typeof e?++t:t+=e]},o=function(){return pt.parse(s())},a=function(e){return e in i?i[e]:"*"===e&&"&"===r[t+1].value?(s(2),","):"&"===e?(s(),","):"\\"===e?"],[":e};for(t=0,g=r.length;t<g;t++){var u=r[t];if("frac"===u.value){var l=o(),c=o();n+=l+"/"+c}else if(u.value in pt.symbols)if(u.value===b&&"vector"===r[t+1].type&&"Set"===r[t+2].type){var f=o(),p=o();n+=p+"^"+te("1/"+f)}else n+=u.value+o();else if("int"===u.value){var h=o();t++;var m=s().value;m=a(m.substring(1,m.length)),n+="integrate"+te(h+","+m)}else if("int_"===u.value){var g=o();t++;var v=s().value;if(void 0===v){t--;v=o()}h=o(),m=s().value;if(","===m)m=s().value;if("differentialD"===m){t++;m=s().value}if("mathrm"===m){t++;m=s().value}n+="defint"+te(h+","+g+","+v+","+m)}else if(u.value&&u.value.startsWith("int_")){g=u.value.replace("int_","");console.log("uppernow"),t++;v=s().value;if(void 0===v){t--;v=o()}h=o(),m=s().value;if(","===m)m=s().value;if("differentialD"===m){t++;m=s().value}if("mathrm"===m){t++;m=s().value}n+="defint"+te(h+","+g+","+v+","+m)}else if("mathrm"===u.value){h=r[++t][0].value;n+=h+o()}else if("sum_"===u.value||"prod_"===u.value){var d="sum_"===u.value?"sum":"product",w=s();t++;var y=o();h=o();n+=d+te([h,a(w[0]),a(w[2]),a(y)].join(","))}else if("lim_"===u.value){w=s();n+="limit"+te([o(),a(w[0]),a(w[2])].join(","))}else if("begin"===u.value){w=s();if(Array.isArray(w)){var S=w[0].value;"matrix"===S&&(n+="matrix([")}}else if("end"===u.value){w=s();if(Array.isArray(w)){S=w[0].value;"matrix"===S&&(n+="])")}}else Array.isArray(u)?n+=a(pt.parse(u)):n+=a(u.value.toString())}return te(n)}};function ht(e){z(e)?this.elements=e.items.slice(0):Y(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function mt(){var e,t,n,r,i=arguments,s=i.length,o=[];if(X(i))for(e=0;e<s;e++)o.push(i[e].slice(0));else for(e=0;e<s;e++)t=i[e],z(t)&&(t=t.elements),Y(t)||(t=[t]),r=t.length,n&&n!==r&&A("Unable to create Matrix. Row dimensions do not match!"),o.push(t),n=r;this.elements=o}function gt(e){if(this.elements=[],z(e)||(e=ht.fromArray(arguments)),e)for(var t=e.elements,n=0,r=t.length;n<r;n++)this.add(t[n])}ht.arrayPrefill=function(e,t){var n=[];t=t||0;for(var r=0;r<e;r++)n[r]=t;return n},ht.fromArray=function(e){var t=new ht;return t.elements=e,t},ht.fromSet=function(e){return ht.fromArray(e.elements)},ht.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){j(t)||(t=new lt(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return Ce("SAFE",(function(){return n.pow(this.dot(this.clone()),new lt(.5))}),void 0,this)},eql:function(e){var t=this.elements.length,r=e.elements||e;if(t!==r.length)return!1;do{if(Math.abs(n.subtract(this.elements[t-1],r[t-1]).valueOf())>PRECISION)return!1}while(--t);return!0},clone:function(){for(var e=new ht,t=this.elements.length,n=0;n<t;n++)e.elements.push(this.elements[n].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(e){var t=[];return this.each((function(n,r){t.push(e(n,r))})),new ht(t)},each:function(e){var t,n=this.elements.length,r=n;do{t=r-n,e(this.elements[t],t+1)}while(--n)},toUnitVector:function(){return Ce("SAFE",(function(){var e=this.modulus();return 0===e.valueOf()?this.clone():this.map((function(t){return n.divide(t,e)}))}),void 0,this)},angleFrom:function(e){return Ce("SAFE",(function(){var t=e.elements||e,r=this.elements.length;if(r!==t.length)return null;var i=new lt(0),s=new lt(0),o=new lt(0);this.each((function(e,r){i=n.add(i,n.multiply(e,t[r-1])),s=n.add(s,n.multiply(e,e)),o=n.add(o,n.multiply(t[r-1],t[r-1]))})),s=n.pow(s,new lt(.5)),o=n.pow(o,new lt(.5));var a=n.multiply(s,o);if(0===a.valueOf())return null;var u=n.divide(i,a),l=u.valueOf();return l<-1&&(u=-1),l>1&&(u=1),new lt(Math.acos(u))}),void 0,this)},isParallelTo:function(e){var t=this.angleFrom(e).valueOf();return null===t?null:t<=PRECISION},isAntiparallelTo:function(e){var t=this.angleFrom(e).valueOf();return null===t?null:Math.abs(t-Math.PI)<=PRECISION},isPerpendicularTo:function(e){var t=this.dot(e);return null===t?null:Math.abs(t)<=PRECISION},add:function(e){return Ce("SAFE",(function(){var t=e.elements||e;return this.elements.length!==t.length?null:this.map((function(e,r){return n.add(e,t[r-1])}))}),void 0,this)},subtract:function(e){return Ce("SAFE",(function(){var t=e.elements||e;return this.elements.length!==t.length?null:this.map((function(e,r){return n.subtract(e,t[r-1])}))}),void 0,this)},multiply:function(e){return this.map((function(t){return t.clone()*e.clone()}))},x:function(e){return this.multiply(e)},dot:function(e){return Ce("SAFE",(function(){var t=e.elements||e,r=new lt(0),i=this.elements.length;if(i!==t.length)return null;do{r=n.add(r,n.multiply(this.elements[i-1],t[i-1]))}while(--i);return r}),void 0,this)},cross:function(e){var t=e.elements||e;if(3!==this.elements.length||3!==t.length)return null;var r=this.elements;return Ce("SAFE",(function(){return new ht([n.subtract(n.multiply(r[1],t[2]),n.multiply(r[2],t[1])),n.subtract(n.multiply(r[2],t[0]),n.multiply(r[0],t[2])),n.subtract(n.multiply(r[0],t[1]),n.multiply(r[1],t[0]))])}),void 0,this)},max:function(){var e,t=0,n=this.elements.length,r=n;do{e=r-n,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e])}while(--n);return t},magnitude:function(){var e=new lt(0);return this.each((function(t){e=n.add(e,n.pow(t,new lt(2)))})),n.sqrt(e)},indexOf:function(e){var t,n=null,r=this.elements.length,i=r;do{t=i-r,null===n&&this.elements[t].valueOf()===e.valueOf()&&(n=t+1)}while(--r);return n},text:function(e){return it(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],n=0;n<this.elements.length;n++)t.push(pt.latex.call(pt,this.elements[n],e));return"["+t.join(", ")+"]"}},mt.identity=function(e){for(var t=new mt,n=0;n<e;n++){t.elements.push([]);for(var r=0;r<e;r++)t.set(n,r,new lt(n===r?1:0))}return t},mt.fromArray=function(e){function t(e){return mt.apply(this,e)}return t.prototype=mt.prototype,new t(e)},mt.zeroMatrix=function(e,t){for(var n=new mt,r=0;r<e;r++)n.elements.push(ht.arrayPrefill(t,new lt(0)));return n},mt.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(e,t){var n=new mt;return this.each((function(r,i,s){n.set(i,s,e.call(n,r),t)})),n},set:function(e,t,n,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=r||j(n)?n:new lt(n)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),n=[];if(e>this.cols()||!e)return n;for(var r=0;r<t;r++)n.push(this.elements[r][e-1]);return n},eachElement:function(e){var t,n,r=this.rows(),i=this.cols();for(t=0;t<r;t++)for(n=0;n<i;n++)e.call(this,this.elements[t][n],t,n)},determinant:function(){if(!this.isSquare())return null;var e,t=this.toRightTriangular(),r=t.elements[0][0],i=t.elements.length-1,s=i;do{e=s-i+1,r=n.multiply(r,t.elements[e][e])}while(--i);return r},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows(),n=e.rows();t!==n&&A("Cannot augment matrix. Rows don't match.");for(var r=0;r<t;r++)this.elements[r]=this.elements[r].concat(e.elements[r]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),n=new mt,r=0;r<e;r++){n.elements[r]=[];for(var i=0;i<t;i++){var s=this.elements[r][i];n.elements[r][i]=j(s)?s.clone():s}}return n},invert:function(){return this.isSquare()||A("Matrix is not square!"),Ce("SAFE",(function(){var e,t,r,i,s,o,a,u=this.elements.length,l=u,c=mt.identity(u),f=this.augment(c).toRightTriangular(),p=f.elements[0].length,h=[];do{e=u-1,s=[],r=p,h[e]=[],o=f.elements[e][e];do{i=p-r,a=n.divide(f.elements[e][i],o.clone()),s.push(a),i>=l&&h[e].push(a)}while(--r);for(f.elements[e]=s,t=0;t<e;t++){s=[],r=p;do{i=p-r,s.push(n.subtract(f.elements[t][i].clone(),n.multiply(f.elements[e][i].clone(),f.elements[t][e].clone())))}while(--r);f.elements[t]=s}}while(--u);return mt.fromArray(h)}),void 0,this)},toRightTriangular:function(){return Ce("SAFE",(function(){var e,t,r,i,s,o=this.clone(),a=this.elements.length,u=a,l=this.elements[0].length;do{if(r=u-a,f=o.elements[r][r],0===f.valueOf())for(var c=r+1;c<u;c++)if(t=o.elements[c][r],t&&0!==t.valueOf()){e=[],i=l;do{s=l-i,e.push(n.add(o.elements[r][s].clone(),o.elements[c][s].clone()))}while(--i);o.elements[r]=e;break}var f=o.elements[r][r];if(0!==f.valueOf())for(c=r+1;c<u;c++){var p=n.divide(o.elements[c][r].clone(),o.elements[r][r].clone());e=[],i=l;do{s=l-i,e.push(s<=r?new lt(0):n.subtract(o.elements[c][s].clone(),n.multiply(o.elements[r][s].clone(),p.clone())))}while(--i);o.elements[c]=e}}while(--a);return o}),void 0,this)},transpose:function(){var e,t,n,r=this.elements.length,i=this.elements[0].length,s=new mt,o=i;do{e=i-o,s.elements[e]=[],t=r;do{n=r-t,s.elements[e][n]=this.elements[n][e].clone()}while(--t)}while(--o);return s},canMultiplyFromLeft:function(e){var t=X(e)?e.elements.length:e.length;return this.elements[0].length===t},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return Ce("SAFE",(function(){var t=e.elements||e;if(!this.canMultiplyFromLeft(t)){if(this.sameSize(e)){for(var r=new mt,i=this.rows(),s=0;s<i;s++){var o=n.multiply(new ht(this.elements[s]),new ht(e.elements[s]));r.elements[s]=o.elements}return r}return null}var a,u,l,c,f,p=this.elements.length,h=p,m=t[0].length,g=this.elements[0].length,v=[];do{s=h-p,v[s]=[],a=m;do{u=m-a,l=new lt(0),c=g;do{f=g-c,l=n.add(l,n.multiply(this.elements[s][f],t[f][u]))}while(--c);v[s][u]=l}while(--a)}while(--p);return mt.fromArray(v)}),void 0,this)},add:function(e,t){var r=new mt;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=n.add(i.clone(),e.elements[s][o].clone());t&&(a=t.call(r,a,i,e.elements[s][o])),r.set(s,o,a)})),r},subtract:function(e,t){var r=new mt;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=n.subtract(i.clone(),e.elements[s][o].clone());t&&(a=t.call(r,a,i,e.elements[s][o])),r.set(s,o,a)})),r},negate:function(){return this.each((function(e){return e.negate()})),this},toVector:function(){if(1===this.rows()||1===this.cols()){var e=new ht;return e.elements=this.elements,e}return this},toString:function(e,t){var n=this.rows(),r=[];e=void 0===e?"\n":e;for(var i=0;i<n;i++)r.push("["+this.elements[i].map((function(e){var n=t?e.multiplier.toDecimal():e.toString();return void 0!==e?n:""})).join(",")+"]");return"matrix"+te(r.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(e){var t=this.cols(),n=this.elements;return se("\\begin{vmatrix}{0}\\end{vmatrix}",(function(){var r=[];for(var i in n){for(var s=[],o=0;o<t;o++)s.push(pt.latex.call(pt,n[i][o],e));r.push(s.join(" & "))}return r.join(" \\cr ")}))}},mt.prototype.each=mt.prototype.eachElement,gt.fromArray=function(e){function t(e){return gt.apply(this,e)}return t.prototype=gt.prototype,new t(e)},gt.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var n=this.elements[t];if(e.equals(n))return!0}return!1},each:function(e){for(var t=this.elements,n=new gt,r=0,i=t.length;r<i;r++){var s=t[r];e.call(this,s,n,r)}return n},clone:function(){var e=new gt;return this.each((function(t){e.add(t.clone())})),e},union:function(e){var t=this.clone();return e.each((function(e){t.add(e)})),t},difference:function(e){var t=this.clone();return e.each((function(e){t.remove(e)})),t},remove:function(e){for(var t=0,n=this.elements.length;t<n;t++){var r=this.elements[t];if(r.equals(e))return Oe(this.elements,t),!0}return!1},intersection:function(e){var t=new gt,n=this;return e.each((function(e){n.contains(e)&&t.add(e)})),t},intersects:function(e){return this.intersection(e).elements.length>0},is_subset:function(e){for(var t=e.elements,n=0,r=t.length;n<r;n++)if(!this.contains(t[n]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var vt={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":rt.gamma},gamma_incomplete:{"Math2.factorial":rt.factorial},Li:{"Math2.Ei":rt.Ei,"Math2.bigLog":rt.bigLog,Frac:ut},Ci:{"Math2.factorial":rt.factorial},Ei:{"Math2.factorial":rt.factorial},Si:{"Math2.factorial":rt.factorial},Shi:{"Math2.factorial":rt.factorial},Chi:{isInt:K,nround:ye,"Math2.num_integrate":rt.num_integrate},factor:{"Math2.ifactor":rt.ifactor,Symbol:lt},num_integrate:{"Math2.simpson":rt.simpson,nround:ye},fib:{even:Ee}},reformat:{diff:function(e,t){var n=e.args[1].toString(),r="var f = "+vt.build(e.args[0].toString(),[n])+";";return t[1]+="var diff = "+rt.diff.toString()+";",t[1]+=r,["diff(f)("+n+")",t]}},getProperName:function(e){var t={continued_fraction:"continuedFraction"};return t[e]||e},compileDependencies:function(e,t){var n=vt.dependencies[e],r=t&&t[1]?t[1]:"",i=t&&t[0]?t[0]:{};for(var s in n)if("object"!==typeof n[s]){var o=s.split(".");r+="var "+(o.length>1?o[1]:o[0])+"="+n[s]+";",i[s]=o.pop()}return[i,r]},getArgsDeps:function(e,t){for(var n=e.args,r=0;r<n.length;r++)e.args[r].each((function(e){e.group===m&&(t=vt.compileDependencies(e.fname,t))}));return t},build:function(e,t){e=Ce("PARSE2NUMBER",(function(){return n.parse(e)}),!0);var r=G(e),i=[],s=[],o=function(e,t){""===e.fname&&(e=lt.unwrapPARENS(e)),t=t||[];var r,a=[],u=e.group,l="",g=function(n){var r=n===v?"*":"+",i=[];for(var s in e.symbols){var a=e.symbols[s],u=o(a,t)[0];a.isComposite()&&(u=te(u)),i.push(u)}var l=i.join(r);return l=l&&!e.multiplier.equals(1)?te(l):l,l},d=function(n){var r;return n in Math?r="Math."+n:(n=vt.getProperName(n),-1===i.indexOf(n)&&(t.push("var "+n+" = "+rt[n].toString()+"; "),i.push(n)),r=n),r+=te(e.args.map((function(e){return o(e,t)[0]})).join(",")),r};if(u===c?a.push(e.multiplier.toDecimal()):e.multiplier.equals(-1)?l="-":e.multiplier.equals(1)||a.push(e.multiplier.toDecimal()),u===p||u===f)r=e.value;else if(u===m)if(s=vt.compileDependencies(e.fname,s),s=vt.getArgsDeps(e,s),vt.reformat[e.fname]){var w=vt.reformat[e.fname](e,s);s=w[1],r=w[0]}else r=d(e.fname);else if(u===h){var y=e.previousGroup;y===c||y===p?r=e.value:y===m?(r=d(e.fname),s=vt.compileDependencies(e.fname,s),s=vt.getArgsDeps(e,s)):r=g(e.previousGroup)}else r=g(e.group);if(e.group!==c&&!e.power.equals(1)){var b=o(n.parse(e.power));t.push(b[1]),r="Math.pow"+te(r+","+b[0])}return r&&a.push(l+r),[a.join("*"),t.join("").replace(/\n+\s+/g," ")]};t&&(r=t);var a=o(e);for(var u in s[0]){var l=s[0][u];a[1]=a[1].replace(u,l),s[1]=s[1].replace(u,l)}var g=new Function(r,(s[1]||"")+a[1]+" return "+a[0]+";");return g}};(function(){Ae(n.CONSTANTS),Ae(n.functions),n.initConstants(),n.error||(n.error=A),l.LOG_FNS={log:n.functions["log"],log10:n.functions["log10"]}})();var dt={allSame:I,allNumeric:D,arguments2Array:Le,arrayAddSlices:ge,arrayClone:me,arrayMax:fe,arrayMin:pe,arrayEqual:he,arrayUnique:xe,arrayGetVariables:qe,arraySum:V,block:Ce,build:vt.build,clearU:Se,comboSort:de,compare:le,convertToVector:Te,customError:O,customType:re,decompose_fn:we,each:Me,evaluate:Re,even:Ee,evenFraction:Ne,fillHoles:Z,firstObject:ue,format:se,generatePrimes:Pe,getCoeffs:Ue,getU:be,importFunctions:Ie,inBrackets:te,isArray:Y,isExpression:B,isFraction:F,isInt:K,isMatrix:X,isNegative:J,isNumericSymbol:W,isPrime:T,isReserved:C,isSymbol:j,isVariableSymbol:Q,isVector:z,keys:ae,knownVariable:P,nroots:ve,remove:Oe,reserveNames:Ae,range:oe,round:ye,sameSign:ie,scientificToDecimal:R,separate:H,stringReplace:ne,text:it,validateName:U,variables:G,warn:L},wt={groups:o,Symbol:lt,Expression:ot,Frac:ut,Vector:ht,Matrix:mt,Parser:ct,Scientific:at,Fraction:ft,Math2:rt,LaTeX:pt,Utils:dt,PARSER:n,PARENTHESIS:y,Settings:l,err:A,bigInt:r,bigDec:i,exceptions:nt},yt=function(e,t,r,i){var o=!1,a=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);if(a)return s.setFunction(a[1],a[2].split(","),a[3]);e instanceof ot&&(e=e.toString()),Y(r)||(r="undefined"===typeof r?[]:[r]),r.forEach((function(t){if("numer"!==t){var i=n.functions[r];i&&1===i[1]&&(e=`${t}(${e})`)}else o=!0}));var u=Ce("PARSE2NUMBER",(function(){return n.parse(e,t)}),o||l.PARSE2NUMBER);return i?N[i-1]=u:N.push(u),new ot(u)};return yt.rpn=function(e){return n.tokenize(n.toRPN(e))},yt.convertToLaTeX=function(e,t){return n.toTeX(e,t)},yt.convertFromLaTeX=function(e){var t=pt.parse(n.tokenize(e));return new ot(n.parse(t))},yt.version=function(e){if(e)try{return wt[e].version}catch(n){return"No module named "+e+" found!"}return t},yt.getWarnings=function(){return _},yt.setConstant=function(e,t){if(U(e),!C(e))if("delete"===t||""===t)delete n.CONSTANTS[e];else{if(isNaN(t))throw new Ze("Constant must be a number!");n.CONSTANTS[e]=t}return this},yt.getConstant=function(e){return String(n.constant[e])},yt.setFunction=ce,yt.getCore=function(){return wt},yt.getExpression=yt.getEquation=ot.getExpression,yt.reserved=function(e){return e?q:q.join(", ")},yt.clear=function(e,t){if("all"===e)N=[];else if("last"===e)N.pop();else if("first"===e)N.shift();else{var n=e?e-1:N.length;!0===t?N[n]=void 0:Oe(N,n)}return this},yt.flush=function(){return this.clear("all"),this},yt.expressions=function(e,t,n){for(var r=e?{}:[],i=0;i<N.length;i++){var s=t?pt.latex(N[i],n):it(N[i],n);e?r[i+1]=s:r.push(s)}return r},yt.register=function(e){var t=this.getCore();if(Y(e))for(var r=0;r<e.length;r++)e&&this.register(e[r]);else if(e&&-1===l.exclude.indexOf(e.name)){if(e.dependencies)for(r=0;r<e.dependencies.length;r++)if(!t[e.dependencies[r]])throw new Error(se("{0} requires {1} to be loaded!",e.name,e.dependencies[r]));var i=e.parent,s=e.build.call(t);if(i){t[i]||(t[e.parent]={});var o="nerdamer"===i?this:t[i];o[e.name]=s}e.visible&&(n.functions[e.name]=[s,e.numargs])}},yt.validateName=U,yt.validVarName=function(e){try{return U(e),-1===q.indexOf(e)}catch(t){return!1}},yt.supported=function(){return ae(n.functions)},yt.numEquations=yt.numExpressions=function(){return N.length},yt.setVar=function(e,t){return U(e),e in n.CONSTANTS&&A("Cannot set value for constant "+e),"delete"===t||""===t?delete x[e]:x[e]=j(t)?t:n.parse(t),this},yt.getVar=function(e){return x[e]},yt.clearVars=function(){return x={},this},yt.load=function(e){return e.call(this),this},yt.getVars=function(e,t){e=e||"text";var n={};if("object"===e)n=x;else for(var r in x)"latex"===e?n[r]=x[r].latex(t):"text"===e&&(n[r]=x[r].text(t));return n},yt.set=function(e,t){if("object"===typeof e)for(var r in e)yt.set(r,e[r]);var s=["SAFE"];-1!==s.indexOf(e)&&A("Cannot modify setting: "+e),"PRECISION"===e?(i.set({precision:t}),l.PRECISION=t,t>21&&this.set("USE_BIG",!0)):"USE_LN"===e&&!0===t?(l.LOG="LN",l.LOG10="log",n.functions["log"]=l.LOG_FNS.log10,n.functions["log"][0]=function(e){return e.isConstant()?new lt(Math.log10(e)):n.symfunction(l.LOG10,[e])},n.functions["LN"]=l.LOG_FNS.log,delete n.functions["log10"]):l[e]=t},yt.get=function(e){return l[e]},yt.api=function(e){var t=function(e){return function(){for(var t=[].slice.call(arguments),r=0;r<t.length;r++)t[r]=n.parse(t[r]);return new ot(Ce("PARSE2NUMBER",(function(){return n.callfunction(e,t)})))}};for(var r in n.functions)r in yt&&!e||(yt[r]=t(r))},yt.replaceFunction=function(e,t,r){var i=n.functions[e],s="undefined"===typeof r?i[1]:r;n.functions[e]=[t.call(void 0,i[0],wt),s]},yt.setOperator=function(e,t){n.setOperator(e,t)},yt.getOperator=function(e){return n.getOperator(e)},yt.aliasOperator=function(e,t){n.aliasOperator(e,t)},yt.tree=function(e){return n.tree(n.toRPN(n.tokenize(e)))},yt.htmlTree=function(e,t){var n=this.tree(e);return'<div class="tree">\n    <ul>\n        <li>\n'+n.toHTML(3,t)+"\n        </li>\n    </ul>\n</div>"},yt.addPeeker=function(e,t){n.peekers[e]&&n.peekers[e].push(t)},yt.removePeeker=function(e,t){Oe(n.peekers[e],t)},yt.parse=function(e){return String(e).split(";").map((function(e){return n.parse(e)}))},yt.api(),yt}({bigInt:function(){var n=function(e){"use strict";var t=1e7,r=7,i=9007199254740992,s=f(i),o=Math.log(i);function a(e,t){return"undefined"===typeof e?a[0]:"undefined"!==typeof t?10===+t?re(e):Q(e,t):re(e)}function u(e,t){this.value=e,this.sign=t,this.isSmall=!1}function l(e){this.value=e,this.sign=e<0,this.isSmall=!0}function c(e){return-i<e&&e<i}function f(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function p(e){h(e);var n=e.length;if(n<4&&U(e,s)<0)switch(n){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*t;default:return e[0]+(e[1]+e[2]*t)*t}return e}function h(e){var t=e.length;while(0===e[--t]);e.length=t+1}function m(e){var t=new Array(e),n=-1;while(++n<e)t[n]=0;return t}function g(e){return e>0?Math.floor(e):Math.ceil(e)}function v(e,n){var r,i,s=e.length,o=n.length,a=new Array(s),u=0,l=t;for(i=0;i<o;i++)r=e[i]+n[i]+u,u=r>=l?1:0,a[i]=r-u*l;while(i<s)r=e[i]+u,u=r===l?1:0,a[i++]=r-u*l;return u>0&&a.push(u),a}function d(e,t){return e.length>=t.length?v(e,t):v(t,e)}function w(e,n){var r,i,s=e.length,o=new Array(s),a=t;for(i=0;i<s;i++)r=e[i]-a+n,n=Math.floor(r/a),o[i]=r-n*a,n+=1;while(n>0)o[i++]=n%a,n=Math.floor(n/a);return o}function y(e,n){var r,i,s=e.length,o=n.length,a=new Array(s),u=0,l=t;for(r=0;r<o;r++)i=e[r]-u-n[r],i<0?(i+=l,u=1):u=0,a[r]=i;for(r=o;r<s;r++){if(i=e[r]-u,!(i<0)){a[r++]=i;break}i+=l,a[r]=i}for(;r<s;r++)a[r]=e[r];return h(a),a}function b(e,t,n){var r;return U(e,t)>=0?r=y(e,t):(r=y(t,e),n=!n),r=p(r),"number"===typeof r?(n&&(r=-r),new l(r)):new u(r,n)}function S(e,n,r){var i,s,o=e.length,a=new Array(o),c=-n,f=t;for(i=0;i<o;i++)s=e[i]+c,c=Math.floor(s/f),s%=f,a[i]=s<0?s+f:s;return a=p(a),"number"===typeof a?(r&&(a=-a),new l(a)):new u(a,r)}function M(e,n){var r,i,s,o,a,u=e.length,l=n.length,c=u+l,f=m(c),p=t;for(s=0;s<u;++s){o=e[s];for(var g=0;g<l;++g)a=n[g],r=o*a+f[s+g],i=Math.floor(r/p),f[s+g]=r-i*p,f[s+g+1]+=i}return h(f),f}function E(e,n){var r,i,s=e.length,o=new Array(s),a=t,u=0;for(i=0;i<s;i++)r=e[i]*n+u,u=Math.floor(r/a),o[i]=r-u*a;while(u>0)o[i++]=u%a,u=Math.floor(u/a);return o}function N(e,t){var n=[];while(t-- >0)n.push(0);return n.concat(e)}function x(e,t){var n=Math.max(e.length,t.length);if(n<=30)return M(e,t);n=Math.ceil(n/2);var r=e.slice(n),i=e.slice(0,n),s=t.slice(n),o=t.slice(0,n),a=x(i,o),u=x(r,s),l=x(d(i,r),d(o,s)),c=d(d(a,N(y(y(l,a),u),n)),N(u,2*n));return h(c),c}function q(e,t){return-.012*e-.012*t+15e-6*e*t>0}function _(e,n,r){return new u(e<t?E(n,e):M(n,f(e)),r)}function A(e){var n,r,i,s,o,a=e.length,u=m(a+a),l=t;for(i=0;i<a;i++){s=e[i],r=0-s*s;for(var c=i;c<a;c++)o=e[c],n=s*o*2+u[i+c]+r,r=Math.floor(n/l),u[i+c]=n-r*l;u[i+a]=r}return h(u),u}function O(e,n){var r,i,s,o,a,u,l,c=e.length,f=n.length,h=t,g=m(n.length),v=n[f-1],d=Math.ceil(h/(2*v)),w=E(e,d),y=E(n,d);for(w.length<=c&&w.push(0),y.push(0),v=y[f-1],i=c-f;i>=0;i--){for(r=h-1,w[i+f]!==v&&(r=Math.floor((w[i+f]*h+w[i+f-1])/v)),s=0,o=0,u=y.length,a=0;a<u;a++)s+=r*y[a],l=Math.floor(s/h),o+=w[i+a]-(s-l*h),s=l,o<0?(w[i+a]=o+h,o=-1):(w[i+a]=o,o=0);while(0!==o){for(r-=1,s=0,a=0;a<u;a++)s+=w[i+a]-h+y[a],s<0?(w[i+a]=s+h,s=0):(w[i+a]=s,s=1);o+=s}g[i]=r}return w=I(w,d)[0],[p(g),p(w)]}function C(e,n){var r,i,s,o,a,u=e.length,l=n.length,c=[],f=[],m=t;while(u)if(f.unshift(e[--u]),h(f),U(f,n)<0)c.push(0);else{i=f.length,s=f[i-1]*m+f[i-2],o=n[l-1]*m+n[l-2],i>l&&(s=(s+1)*m),r=Math.ceil(s/o);do{if(a=E(n,r),U(a,f)<=0)break;r--}while(r);c.push(r),f=y(f,a)}return c.reverse(),[p(c),p(f)]}function I(e,n){var r,i,s,o,a=e.length,u=m(a),l=t;for(s=0,r=a-1;r>=0;--r)o=s*l+e[r],i=g(o/n),s=o-i*n,u[r]=0|i;return[u,0|s]}function L(e,n){var r,i,s=re(n),o=e.value,c=s.value;if(0===c)throw new Error("Cannot divide by zero");if(e.isSmall)return s.isSmall?[new l(g(o/c)),new l(o%c)]:[a[0],e];if(s.isSmall){if(1===c)return[e,a[0]];if(-1==c)return[e.negate(),a[0]];var h=Math.abs(c);if(h<t){r=I(o,h),i=p(r[0]);var m=r[1];return e.sign&&(m=-m),"number"===typeof i?(e.sign!==s.sign&&(i=-i),[new l(i),new l(m)]):[new u(i,e.sign!==s.sign),new l(m)]}c=f(h)}var v=U(o,c);if(-1===v)return[a[0],e];if(0===v)return[a[e.sign===s.sign?1:-1],a[0]];r=o.length+c.length<=200?O(o,c):C(o,c),i=r[0];var d=e.sign!==s.sign,w=r[1],y=e.sign;return"number"===typeof i?(d&&(i=-i),i=new l(i)):i=new u(i,d),"number"===typeof w?(y&&(w=-w),w=new l(w)):w=new u(w,y),[i,w]}function U(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;n>=0;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function R(e){var t=e.abs();return!t.isUnit()&&(!!(t.equals(2)||t.equals(3)||t.equals(5))||!(t.isEven()||t.isDivisibleBy(3)||t.isDivisibleBy(5))&&(!!t.lesser(49)||void 0))}function T(e,t){var r,i,s,o=e.prev(),u=o,l=0;while(u.isEven())u=u.divide(2),l++;e:for(i=0;i<t.length;i++)if(!e.lesser(t[i])&&(s=n(t[i]).modPow(u,e),!s.equals(a[1])&&!s.equals(o))){for(r=l-1;0!=r;r--){if(s=s.square().mod(e),s.isUnit())return!1;if(s.equals(o))continue e}return!1}return!0}u.prototype=Object.create(a.prototype),l.prototype=Object.create(a.prototype),u.prototype.add=function(e){var t=re(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value,r=t.value;return t.isSmall?new u(w(n,Math.abs(r)),this.sign):new u(d(n,r),this.sign)},u.prototype.plus=u.prototype.add,l.prototype.add=function(e){var t=re(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());var r=t.value;if(t.isSmall){if(c(n+r))return new l(n+r);r=f(Math.abs(r))}return new u(w(r,Math.abs(n)),n<0)},l.prototype.plus=l.prototype.add,u.prototype.subtract=function(e){var t=re(e);if(this.sign!==t.sign)return this.add(t.negate());var n=this.value,r=t.value;return t.isSmall?S(n,Math.abs(r),this.sign):b(n,r,this.sign)},u.prototype.minus=u.prototype.subtract,l.prototype.subtract=function(e){var t=re(e),n=this.value;if(n<0!==t.sign)return this.add(t.negate());var r=t.value;return t.isSmall?new l(n-r):S(r,Math.abs(n),n>=0)},l.prototype.minus=l.prototype.subtract,u.prototype.negate=function(){return new u(this.value,!this.sign)},l.prototype.negate=function(){var e=this.sign,t=new l(-this.value);return t.sign=!e,t},u.prototype.abs=function(){return new u(this.value,!1)},l.prototype.abs=function(){return new l(Math.abs(this.value))},u.prototype.multiply=function(e){var n,r=re(e),i=this.value,s=r.value,o=this.sign!==r.sign;if(r.isSmall){if(0===s)return a[0];if(1===s)return this;if(-1===s)return this.negate();if(n=Math.abs(s),n<t)return new u(E(i,n),o);s=f(n)}return q(i.length,s.length)?new u(x(i,s),o):new u(M(i,s),o)},u.prototype.times=u.prototype.multiply,l.prototype._multiplyBySmall=function(e){return c(e.value*this.value)?new l(e.value*this.value):_(Math.abs(e.value),f(Math.abs(this.value)),this.sign!==e.sign)},u.prototype._multiplyBySmall=function(e){return 0===e.value?a[0]:1===e.value?this:-1===e.value?this.negate():_(Math.abs(e.value),this.value,this.sign!==e.sign)},l.prototype.multiply=function(e){return re(e)._multiplyBySmall(this)},l.prototype.times=l.prototype.multiply,u.prototype.square=function(){return new u(A(this.value),!1)},l.prototype.square=function(){var e=this.value*this.value;return c(e)?new l(e):new u(A(f(Math.abs(this.value))),!1)},u.prototype.divmod=function(e){var t=L(this,e);return{quotient:t[0],remainder:t[1]}},l.prototype.divmod=u.prototype.divmod,u.prototype.divide=function(e){return L(this,e)[0]},l.prototype.over=l.prototype.divide=u.prototype.over=u.prototype.divide,u.prototype.mod=function(e){return L(this,e)[1]},l.prototype.remainder=l.prototype.mod=u.prototype.remainder=u.prototype.mod,u.prototype.pow=function(e){var t,n,r,i=re(e),s=this.value,o=i.value;if(0===o)return a[1];if(0===s)return a[0];if(1===s)return a[1];if(-1===s)return i.isEven()?a[1]:a[-1];if(i.sign)return a[0];if(!i.isSmall)throw new Error("The exponent "+i.toString()+" is too large.");if(this.isSmall&&c(t=Math.pow(s,o)))return new l(g(t));n=this,r=a[1];while(1){if(!0&o&&(r=r.times(n),--o),0===o)break;o/=2,n=n.square()}return r},l.prototype.pow=u.prototype.pow,u.prototype.modPow=function(e,t){if(e=re(e),t=re(t),t.isZero())throw new Error("Cannot take modPow with modulus 0");var n=a[1],r=this.mod(t);while(e.isPositive()){if(r.isZero())return a[0];e.isOdd()&&(n=n.multiply(r).mod(t)),e=e.divide(2),r=r.square().mod(t)}return n},l.prototype.modPow=u.prototype.modPow,u.prototype.compareAbs=function(e){var t=re(e),n=this.value,r=t.value;return t.isSmall?1:U(n,r)},l.prototype.compareAbs=function(e){var t=re(e),n=Math.abs(this.value),r=t.value;return t.isSmall?(r=Math.abs(r),n===r?0:n>r?1:-1):-1},u.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=re(e),n=this.value,r=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:U(n,r)*(this.sign?-1:1)},u.prototype.compareTo=u.prototype.compare,l.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=re(e),n=this.value,r=t.value;return t.isSmall?n==r?0:n>r?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},l.prototype.compareTo=l.prototype.compare,u.prototype.equals=function(e){return 0===this.compare(e)},l.prototype.eq=l.prototype.equals=u.prototype.eq=u.prototype.equals,u.prototype.notEquals=function(e){return 0!==this.compare(e)},l.prototype.neq=l.prototype.notEquals=u.prototype.neq=u.prototype.notEquals,u.prototype.greater=function(e){return this.compare(e)>0},l.prototype.gt=l.prototype.greater=u.prototype.gt=u.prototype.greater,u.prototype.lesser=function(e){return this.compare(e)<0},l.prototype.lt=l.prototype.lesser=u.prototype.lt=u.prototype.lesser,u.prototype.greaterOrEquals=function(e){return this.compare(e)>=0},l.prototype.geq=l.prototype.greaterOrEquals=u.prototype.geq=u.prototype.greaterOrEquals,u.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},l.prototype.leq=l.prototype.lesserOrEquals=u.prototype.leq=u.prototype.lesserOrEquals,u.prototype.isEven=function(){return 0===(1&this.value[0])},l.prototype.isEven=function(){return 0===(1&this.value)},u.prototype.isOdd=function(){return 1===(1&this.value[0])},l.prototype.isOdd=function(){return 1===(1&this.value)},u.prototype.isPositive=function(){return!this.sign},l.prototype.isPositive=function(){return this.value>0},u.prototype.isNegative=function(){return this.sign},l.prototype.isNegative=function(){return this.value<0},u.prototype.isUnit=function(){return!1},l.prototype.isUnit=function(){return 1===Math.abs(this.value)},u.prototype.isZero=function(){return!1},l.prototype.isZero=function(){return 0===this.value},u.prototype.isDivisibleBy=function(e){var t=re(e),n=t.value;return 0!==n&&(1===n||(2===n?this.isEven():this.mod(t).equals(a[0])))},l.prototype.isDivisibleBy=u.prototype.isDivisibleBy,u.prototype.isPrime=function(t){var r=R(this);if(r!==e)return r;var i=this.abs(),s=i.bitLength();if(s<=64)return T(i,[2,325,9375,28178,450775,9780504,1795265022]);for(var o=Math.log(2)*s,a=Math.ceil(!0===t?2*Math.pow(o,2):o),u=[],l=0;l<a;l++)u.push(n(l+2));return T(i,u)},l.prototype.isPrime=u.prototype.isPrime,u.prototype.isProbablePrime=function(t){var r=R(this);if(r!==e)return r;for(var i=this.abs(),s=t===e?5:t,o=[],a=0;a<s;a++)o.push(n.randBetween(2,i.minus(2)));return T(i,o)},l.prototype.isProbablePrime=u.prototype.isProbablePrime,u.prototype.modInv=function(e){var t,r,i,s=n.zero,o=n.one,a=re(e),u=this.abs();while(!u.equals(n.zero))t=a.divide(u),r=s,i=a,s=o,a=u,o=r.subtract(t.multiply(o)),u=i.subtract(t.multiply(u));if(!a.equals(1))throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===s.compare(0)&&(s=s.add(e)),this.isNegative()?s.negate():s},l.prototype.modInv=u.prototype.modInv,u.prototype.next=function(){var e=this.value;return this.sign?S(e,1,this.sign):new u(w(e,1),this.sign)},l.prototype.next=function(){var e=this.value;return e+1<i?new l(e+1):new u(s,!1)},u.prototype.prev=function(){var e=this.value;return this.sign?new u(w(e,1),!0):S(e,1,this.sign)},l.prototype.prev=function(){var e=this.value;return e-1>-i?new l(e-1):new u(s,!0)};var P=[1];while(2*P[P.length-1]<=t)P.push(2*P[P.length-1]);var k=P.length,D=P[k-1];function F(e){return("number"===typeof e||"string"===typeof e)&&+Math.abs(e)<=t||e instanceof u&&e.value.length<=1}function j(e,t,r){t=re(t);var i=e.isNegative(),s=t.isNegative(),o=i?e.not():e,a=s?t.not():t,u=0,l=0,c=null,f=null,p=[];while(!o.isZero()||!a.isZero())c=L(o,D),u=c[1].toJSNumber(),i&&(u=D-1-u),f=L(a,D),l=f[1].toJSNumber(),s&&(l=D-1-l),o=c[0],a=f[0],p.push(r(u,l));for(var h=0!==r(i?1:0,s?1:0)?n(-1):n(0),m=p.length-1;m>=0;m-=1)h=h.multiply(D).add(n(p[m]));return h}u.prototype.shiftLeft=function(e){if(!F(e))throw new Error(String(e)+" is too large for shifting.");if(e=+e,e<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;while(e>=k)t=t.multiply(D),e-=k-1;return t.multiply(P[e])},l.prototype.shiftLeft=u.prototype.shiftLeft,u.prototype.shiftRight=function(e){var t;if(!F(e))throw new Error(String(e)+" is too large for shifting.");if(e=+e,e<0)return this.shiftLeft(-e);var n=this;while(e>=k){if(n.isZero()||n.isNegative()&&n.isUnit())return n;t=L(n,D),n=t[1].isNegative()?t[0].prev():t[0],e-=k-1}return t=L(n,P[e]),t[1].isNegative()?t[0].prev():t[0]},l.prototype.shiftRight=u.prototype.shiftRight,u.prototype.not=function(){return this.negate().prev()},l.prototype.not=u.prototype.not,u.prototype.and=function(e){return j(this,e,(function(e,t){return e&t}))},l.prototype.and=u.prototype.and,u.prototype.or=function(e){return j(this,e,(function(e,t){return e|t}))},l.prototype.or=u.prototype.or,u.prototype.xor=function(e){return j(this,e,(function(e,t){return e^t}))},l.prototype.xor=u.prototype.xor;var B=1<<30,G=(t&-t)*(t&-t)|B;function V(e){var n=e.value,r="number"===typeof n?n|B:n[0]+n[1]*t|G;return r&-r}function H(e,t){if(t.compareTo(e)<=0){var r=H(e,t.square(t)),i=r.p,s=r.e,o=i.multiply(t);return o.compareTo(e)<=0?{p:o,e:2*s+1}:{p:i,e:2*s}}return{p:n(1),e:0}}function Z(e,t){return e=re(e),t=re(t),e.greater(t)?e:t}function z(e,t){return e=re(e),t=re(t),e.lesser(t)?e:t}function X(e,t){if(e=re(e).abs(),t=re(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;var n,r,i=a[1];while(e.isEven()&&t.isEven())n=Math.min(V(e),V(t)),e=e.divide(n),t=t.divide(n),i=i.multiply(n);while(e.isEven())e=e.divide(V(e));do{while(t.isEven())t=t.divide(V(t));e.greater(t)&&(r=t,t=e,e=r),t=t.subtract(e)}while(!t.isZero());return i.isUnit()?e:e.multiply(i)}function $(e,t){return e=re(e).abs(),t=re(t).abs(),e.divide(X(e,t)).multiply(t)}function W(e,n){e=re(e),n=re(n);var r=z(e,n),i=Z(e,n),s=i.subtract(r).add(1);if(s.isSmall)return r.add(Math.floor(Math.random()*s));for(var o=s.value.length-1,a=[],c=!0,f=o;f>=0;f--){var h=c?s.value[f]:t,m=g(Math.random()*h);a.unshift(m),m<h&&(c=!1)}return a=p(a),r.add("number"===typeof a?new l(a):new u(a,!1))}u.prototype.bitLength=function(){var e=this;return e.compareTo(n(0))<0&&(e=e.negate().subtract(n(1))),0===e.compareTo(n(0))?n(0):n(H(e,n(2)).e).add(n(1))},l.prototype.bitLength=u.prototype.bitLength;var Q=function(e,t){for(var n=e.length,r=Math.abs(t),i=0;i<n;i++){var s=e[i].toLowerCase();if("-"!==s&&/[a-z0-9]/.test(s)){if(/[0-9]/.test(s)&&+s>=r){if("1"===s&&1===r)continue;throw new Error(s+" is not a valid digit in base "+t+".")}if(s.charCodeAt(0)-87>=r)throw new Error(s+" is not a valid digit in base "+t+".")}}if(2<=t&&t<=36&&n<=o/Math.log(t)){var a=parseInt(e,t);if(isNaN(a))throw new Error(s+" is not a valid digit in base "+t+".");return new l(parseInt(e,t))}t=re(t);var u=[],c="-"===e[0];for(i=c?1:0;i<e.length;i++){s=e[i].toLowerCase();var f=s.charCodeAt(0);if(48<=f&&f<=57)u.push(re(s));else if(97<=f&&f<=122)u.push(re(s.charCodeAt(0)-87));else{if("<"!==s)throw new Error(s+" is not a valid character");var p=i;do{i++}while(">"!==e[i]);u.push(re(e.slice(p+1,i)))}}return Y(u,t,c)};function Y(e,t,n){var r,i=a[0],s=a[1];for(r=e.length-1;r>=0;r--)i=i.add(e[r].times(s)),s=s.times(t);return n?i.negate():i}function K(e){return e<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e):"<"+e+">"}function J(e,t){if(t=n(t),t.isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var r=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return r.unshift([1]),{value:[].concat.apply([],r),isNegative:!1}}var i=!1;if(e.isNegative()&&t.isPositive()&&(i=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:i};var s,o=[],a=e;while(a.isNegative()||a.compareAbs(t)>=0){s=a.divmod(t),a=s.quotient;var u=s.remainder;u.isNegative()&&(u=t.minus(u).abs(),a=a.next()),o.push(u.toJSNumber())}return o.push(a.toJSNumber()),{value:o.reverse(),isNegative:i}}function ee(e,t){var n=J(e,t);return(n.isNegative?"-":"")+n.value.map(K).join("")}function te(e){if(c(+e)){var t=+e;if(t===g(t))return new l(t);throw new Error("Invalid integer: "+e)}var n="-"===e[0];n&&(e=e.slice(1));var i=e.split(/e/i);if(i.length>2)throw new Error("Invalid integer: "+i.join("e"));if(2===i.length){var s=i[1];if("+"===s[0]&&(s=s.slice(1)),s=+s,s!==g(s)||!c(s))throw new Error("Invalid integer: "+s+" is not a valid exponent.");var o=i[0],a=o.indexOf(".");if(a>=0&&(s-=o.length-a-1,o=o.slice(0,a)+o.slice(a+1)),s<0)throw new Error("Cannot include negative exponent part for integers");o+=new Array(s+1).join("0"),e=o}var f=/^([0-9][0-9]*)$/.test(e);if(!f)throw new Error("Invalid integer: "+e);var p=[],m=e.length,v=r,d=m-v;while(m>0)p.push(+e.slice(d,m)),d-=v,d<0&&(d=0),m-=v;return h(p),new u(p,n)}function ne(e){if(c(e)){if(e!==g(e))throw new Error(e+" is not an integer.");return new l(e)}return te(e.toString())}function re(e){return"number"===typeof e?ne(e):"string"===typeof e?te(e):e}u.prototype.toArray=function(e){return J(this,e)},l.prototype.toArray=function(e){return J(this,e)},u.prototype.toString=function(t){if(t===e&&(t=10),10!==t)return ee(this,t);var n,r=this.value,i=r.length,s=String(r[--i]),o="0000000";while(--i>=0)n=String(r[i]),s+=o.slice(n.length)+n;var a=this.sign?"-":"";return a+s},l.prototype.toString=function(t){return t===e&&(t=10),10!=t?ee(this,t):String(this.value)},u.prototype.toJSON=l.prototype.toJSON=function(){return this.toString()},u.prototype.valueOf=function(){return parseInt(this.toString(),10)},u.prototype.toJSNumber=u.prototype.valueOf,l.prototype.valueOf=function(){return this.value},l.prototype.toJSNumber=l.prototype.valueOf;for(var ie=0;ie<1e3;ie++)a[ie]=new l(ie),ie>0&&(a[-ie]=new l(-ie));return a.one=a[1],a.zero=a[0],a.minusOne=a[-1],a.max=Z,a.min=z,a.gcd=X,a.lcm=$,a.isInstance=function(e){return e instanceof u||e instanceof l},a.randBetween=W,a.fromArray=function(e,t,n){return Y(e.map(re),re(t||10),n)},a}();return e.hasOwnProperty("exports")&&(e.exports=n),r=[],i=function(){return n}.apply(t,r),void 0===i||(e.exports=i),n}(),bigDec:function(r){"use strict";var s,o,a,u=9e15,l=1e9,c="0123456789abcdef",f="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",p="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",h={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-u,maxE:u,crypto:!1},m=!0,g="[DecimalError] ",v=g+"Invalid argument: ",d=g+"Precision limit exceeded",w=g+"crypto unavailable",y=Math.floor,b=Math.pow,S=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,M=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,E=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,N=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,x=1e7,q=7,_=f.length-1,A=p.length-1,O={name:"[object Decimal]"};function C(e){var t,n,r,i=e.length-1,s="",o=e[0];if(i>0){for(s+=o,t=1;t<i;t++)r=e[t]+"",(n=q-r.length)&&(s+=B(n)),s+=r;o=e[t],(n=q-(r=o+"").length)&&(s+=B(n))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function I(e,t,n){if(e!==~~e||e<t||e>n)throw Error(v+e)}function L(e,t,n,r){var i,s,o,a;for(s=e[0];s>=10;s/=10)--t;return--t<0?(t+=q,i=0):(i=Math.ceil((t+1)/q),t%=q),s=b(10,q-t),a=e[i]%s|0,null==r?t<3?(0==t?a=a/100|0:1==t&&(a=a/10|0),o=n<4&&99999==a||n>3&&49999==a||5e4==a||0==a):o=(n<4&&a+1==s||n>3&&a+1==s/2)&&(e[i+1]/s/100|0)==b(10,t-2)-1||(a==s/2||0==a)&&0==(e[i+1]/s/100|0):t<4?(0==t?a=a/1e3|0:1==t?a=a/100|0:2==t&&(a=a/10|0),o=(r||n<4)&&9999==a||!r&&n>3&&4999==a):o=((r||n<4)&&a+1==s||!r&&n>3&&a+1==s/2)&&(e[i+1]/s/1e3|0)==b(10,t-3)-1,o}function U(e,t,n){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=c.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(void 0===s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}O.absoluteValue=O.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),T(e)},O.ceil=function(){return T(new this.constructor(this),this.e+1,2)},O.comparedTo=O.cmp=function(e){var t,n,r,i,s=this,o=s.d,a=(e=new s.constructor(e)).d,u=s.s,l=e.s;if(!o||!a)return u&&l?u!==l?u:o===a?0:!o^u<0?1:-1:NaN;if(!o[0]||!a[0])return o[0]?u:a[0]?-l:0;if(u!==l)return u;if(s.e!==e.e)return s.e>e.e^u<0?1:-1;for(t=0,n=(r=o.length)<(i=a.length)?r:i;t<n;++t)if(o[t]!==a[t])return o[t]>a[t]^u<0?1:-1;return r===i?0:r>i^u<0?1:-1},O.cosine=O.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+q,r.rounding=1,n=function(e,t){var n,r,i=t.d.length;i<32?(n=Math.ceil(i/3),r=(1/Y(4,n)).toString()):(n=16,r="2.3283064365386962890625e-10"),e.precision+=n,t=Q(e,1,t.times(r),new e(1));for(var s=n;s--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return e.precision-=n,t}(r,K(r,n)),r.precision=e,r.rounding=t,T(2==a||3==a?n.neg():n,e,t,!0)):new r(1):new r(NaN)},O.cubeRoot=O.cbrt=function(){var e,t,n,r,i,s,o,a,u,l,c=this,f=c.constructor;if(!c.isFinite()||c.isZero())return new f(c);for(m=!1,(s=c.s*b(c.s*c,1/3))&&Math.abs(s)!=1/0?r=new f(s.toString()):(n=C(c.d),(s=((e=c.e)-n.length+1)%3)&&(n+=1==s||-2==s?"0":"00"),s=b(n,1/3),e=y((e+1)/3)-(e%3==(e<0?-1:2)),(r=new f(n=s==1/0?"5e"+e:(n=s.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=c.s),o=(e=f.precision)+3;;)if(l=(u=(a=r).times(a).times(a)).plus(c),r=R(l.plus(c).times(a),l.plus(u),o+2,1),C(a.d).slice(0,o)===(n=C(r.d)).slice(0,o)){if("9999"!=(n=n.slice(o-3,o+1))&&(i||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(T(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!i&&(T(a,e+1,0),a.times(a).times(a).eq(c))){r=a;break}o+=4,i=1}return m=!0,T(r,e,f.rounding,t)},O.decimalPlaces=O.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=((e=t.length-1)-y(this.e/q))*q,e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},O.dividedBy=O.div=function(e){return R(this,new this.constructor(e))},O.dividedToIntegerBy=O.divToInt=function(e){var t=this.constructor;return T(R(this,new t(e),0,1,1),t.precision,t.rounding)},O.equals=O.eq=function(e){return 0===this.cmp(e)},O.floor=function(){return T(new this.constructor(this),this.e+1,3)},O.greaterThan=O.gt=function(e){return this.cmp(e)>0},O.greaterThanOrEqualTo=O.gte=function(e){var t=this.cmp(e);return 1==t||0===t},O.hyperbolicCosine=O.cosh=function(){var e,t,n,r,i,s=this,o=s.constructor,a=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return a;n=o.precision,r=o.rounding,o.precision=n+Math.max(s.e,s.sd())+4,o.rounding=1,(i=s.d.length)<32?t=(1/Y(4,e=Math.ceil(i/3))).toString():(e=16,t="2.3283064365386962890625e-10"),s=Q(o,1,s.times(t),new o(1),!0);for(var u,l=e,c=new o(8);l--;)u=s.times(s),s=a.minus(u.times(c.minus(u.times(c))));return T(s,o.precision=n,o.rounding=r,!0)},O.hyperbolicSine=O.sinh=function(){var e,t,n,r,i=this,s=i.constructor;if(!i.isFinite()||i.isZero())return new s(i);if(t=s.precision,n=s.rounding,s.precision=t+Math.max(i.e,i.sd())+4,s.rounding=1,(r=i.d.length)<3)i=Q(s,2,i,i,!0);else{e=(e=1.4*Math.sqrt(r))>16?16:0|e,i=Q(s,2,i=i.times(1/Y(5,e)),i,!0);for(var o,a=new s(5),u=new s(16),l=new s(20);e--;)o=i.times(i),i=i.times(a.plus(o.times(u.times(o).plus(l))))}return s.precision=t,s.rounding=n,T(i,t,n,!0)},O.hyperbolicTangent=O.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,R(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},O.inverseCosine=O.acos=function(){var e,t=this,n=t.constructor,r=t.abs().cmp(1),i=n.precision,s=n.rounding;return-1!==r?0===r?t.isNeg()?F(n,i,s):new n(0):new n(NaN):t.isZero()?F(n,i+4,s).times(.5):(n.precision=i+6,n.rounding=1,t=t.asin(),e=F(n,i+4,s).times(.5),n.precision=i,n.rounding=s,e.minus(t))},O.inverseHyperbolicCosine=O.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,m=!1,n=n.times(n).minus(1).sqrt().plus(n),m=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},O.inverseHyperbolicSine=O.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,m=!1,n=n.times(n).plus(1).sqrt().plus(n),m=!0,r.precision=e,r.rounding=t,n.ln())},O.inverseHyperbolicTangent=O.atanh=function(){var e,t,n,r,i=this,s=i.constructor;return i.isFinite()?i.e>=0?new s(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=s.precision,t=s.rounding,r=i.sd(),Math.max(r,e)<2*-i.e-1?T(new s(i),e,t,!0):(s.precision=n=r-i.e,i=R(i.plus(1),new s(1).minus(i),n+e,1),s.precision=e+4,s.rounding=1,i=i.ln(),s.precision=e,s.rounding=t,i.times(.5))):new s(NaN)},O.inverseSine=O.asin=function(){var e,t,n,r,i=this,s=i.constructor;return i.isZero()?new s(i):(t=i.abs().cmp(1),n=s.precision,r=s.rounding,-1!==t?0===t?((e=F(s,n+4,r).times(.5)).s=i.s,e):new s(NaN):(s.precision=n+6,s.rounding=1,i=i.div(new s(1).minus(i.times(i)).sqrt().plus(1)).atan(),s.precision=n,s.rounding=r,i.times(2)))},O.inverseTangent=O.atan=function(){var e,t,n,r,i,s,o,a,u,l=this,c=l.constructor,f=c.precision,p=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&f+4<=A)return(o=F(c,f+4,p).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(f+4<=A)return(o=F(c,f+4,p).times(.5)).s=l.s,o}for(c.precision=a=f+10,c.rounding=1,e=n=Math.min(28,a/q+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(m=!1,t=Math.ceil(a/q),r=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(r+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),m=!0,T(o,c.precision=f,c.rounding=p,!0)},O.isFinite=function(){return!!this.d},O.isInteger=O.isInt=function(){return!!this.d&&y(this.e/q)>this.d.length-2},O.isNaN=function(){return!this.s},O.isNegative=O.isNeg=function(){return this.s<0},O.isPositive=O.isPos=function(){return this.s>0},O.isZero=function(){return!!this.d&&0===this.d[0]},O.lessThan=O.lt=function(e){return this.cmp(e)<0},O.lessThanOrEqualTo=O.lte=function(e){return this.cmp(e)<1},O.logarithm=O.log=function(e){var t,n,r,i,s,o,a,u,l=this.constructor,c=l.precision,f=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new l(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(n.length>1)s=!0;else{for(i=n[0];i%10==0;)i/=10;s=1!==i}if(m=!1,o=z(this,a=c+5),r=t?D(l,a+10):z(e,a),L((u=R(o,r,a,1)).d,i=c,f))do{if(o=z(this,a+=10),r=t?D(l,a+10):z(e,a),u=R(o,r,a,1),!s){+C(u.d).slice(i+1,i+15)+1==1e14&&(u=T(u,c+1,0));break}}while(L(u.d,i+=10,f));return m=!0,T(u,c,f)},O.minus=O.sub=function(e){var t,n,r,i,s,o,a,u,l,c,f,p,h=this,g=h.constructor;if(e=new g(e),!h.d||!e.d)return h.s&&e.s?h.d?e.s=-e.s:e=new g(e.d||h.s!==e.s?h:NaN):e=new g(NaN),e;if(h.s!=e.s)return e.s=-e.s,h.plus(e);if(l=h.d,p=e.d,a=g.precision,u=g.rounding,!l[0]||!p[0]){if(p[0])e.s=-e.s;else{if(!l[0])return new g(3===u?-0:0);e=new g(h)}return m?T(e,a,u):e}if(n=y(e.e/q),c=y(h.e/q),l=l.slice(),s=c-n){for((f=s<0)?(t=l,s=-s,o=p.length):(t=p,n=c,o=l.length),s>(r=Math.max(Math.ceil(a/q),o)+2)&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for((f=(r=l.length)<(o=p.length))&&(o=r),r=0;r<o;r++)if(l[r]!=p[r]){f=l[r]<p[r];break}s=0}for(f&&(t=l,l=p,p=t,e.s=-e.s),o=l.length,r=p.length-o;r>0;--r)l[o++]=0;for(r=p.length;r>s;){if(l[--r]<p[r]){for(i=r;i&&0===l[--i];)l[i]=x-1;--l[i],l[r]+=x}l[r]-=p[r]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=k(l,n),m?T(e,a,u):e):new g(3===u?-0:0)},O.modulo=O.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?T(new r(n),r.precision,r.rounding):(m=!1,9==r.modulo?(t=R(n,e.abs(),0,3,1)).s*=e.s:t=R(n,e,0,r.modulo,1),t=t.times(e),m=!0,n.minus(t))},O.naturalExponential=O.exp=function(){return Z(this)},O.naturalLogarithm=O.ln=function(){return z(this)},O.negated=O.neg=function(){var e=new this.constructor(this);return e.s=-e.s,T(e)},O.plus=O.add=function(e){var t,n,r,i,s,o,a,u,l,c,f=this,p=f.constructor;if(e=new p(e),!f.d||!e.d)return f.s&&e.s?f.d||(e=new p(e.d||f.s===e.s?f:NaN)):e=new p(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.minus(e);if(l=f.d,c=e.d,a=p.precision,u=p.rounding,!l[0]||!c[0])return c[0]||(e=new p(f)),m?T(e,a,u):e;if(s=y(f.e/q),r=y(e.e/q),l=l.slice(),i=s-r){for(i<0?(n=l,i=-i,o=c.length):(n=c,r=s,o=l.length),i>(o=(s=Math.ceil(a/q))>o?s+1:o+1)&&(i=o,n.length=1),n.reverse();i--;)n.push(0);n.reverse()}for((o=l.length)-(i=c.length)<0&&(i=o,n=c,c=l,l=n),t=0;i;)t=(l[--i]=l[i]+c[i]+t)/x|0,l[i]%=x;for(t&&(l.unshift(t),++r),o=l.length;0==l[--o];)l.pop();return e.d=l,e.e=k(l,r),m?T(e,a,u):e},O.precision=O.sd=function(e){var t,n=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(v+e);return n.d?(t=j(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},O.round=function(){var e=this,t=e.constructor;return T(new t(e),e.e+1,t.rounding)},O.sine=O.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+q,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return Q(e,2,t,t);n=(n=1.4*Math.sqrt(r))>16?16:0|n,t=t.times(1/Y(5,n)),t=Q(e,2,t,t);for(var i,s=new e(5),o=new e(16),a=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(r,K(r,n)),r.precision=e,r.rounding=t,T(a>2?n.neg():n,e,t,!0)):new r(NaN)},O.squareRoot=O.sqrt=function(){var e,t,n,r,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(m=!1,0==(l=Math.sqrt(+o))||l==1/0?(((t=C(a)).length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=y((u+1)/2)-(u<0||u%2),r=new c(t=l==1/0?"5e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):r=new c(l.toString()),n=(u=c.precision)+3;;)if(r=(s=r).plus(R(o,s,n+2,1)).times(.5),C(s.d).slice(0,n)===(t=C(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(T(r,u+1,1),e=!r.times(r).eq(o));break}if(!i&&(T(s,u+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}return m=!0,T(r,u,c.rounding,e)},O.tangent=O.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=R(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,T(2==a||4==a?n.neg():n,e,t,!0)):new r(NaN)},O.times=O.mul=function(e){var t,n,r,i,s,o,a,u,l,c=this,f=c.constructor,p=c.d,h=(e=new f(e)).d;if(e.s*=c.s,!(p&&p[0]&&h&&h[0]))return new f(!e.s||p&&!p[0]&&!h||h&&!h[0]&&!p?NaN:p&&h?0*e.s:e.s/0);for(n=y(c.e/q)+y(e.e/q),(u=p.length)<(l=h.length)&&(s=p,p=h,h=s,o=u,u=l,l=o),s=[],r=o=u+l;r--;)s.push(0);for(r=l;--r>=0;){for(t=0,i=u+r;i>r;)a=s[i]+h[r]*p[i-r-1]+t,s[i--]=a%x|0,t=a/x|0;s[i]=(s[i]+t)%x|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=k(s,n),m?T(e,f.precision,f.rounding):e},O.toBinary=function(e,t){return J(this,2,e,t)},O.toDecimalPlaces=O.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),void 0===e?n:(I(e,0,l),void 0===t?t=r.rounding:I(t,0,8),T(n,e+n.e+1,t))},O.toExponential=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=P(r,!0):(I(e,0,l),void 0===t?t=i.rounding:I(t,0,8),n=P(r=T(new i(r),e+1,t),!0,e+1)),r.isNeg()&&!r.isZero()?"-"+n:n},O.toFixed=function(e,t){var n,r,i=this,s=i.constructor;return void 0===e?n=P(i):(I(e,0,l),void 0===t?t=s.rounding:I(t,0,8),n=P(r=T(new s(i),e+i.e+1,t),!1,e+r.e+1)),i.isNeg()&&!i.isZero()?"-"+n:n},O.toFraction=function(e){var t,n,r,i,s,o,a,u,l,c,f,p,h=this,g=h.d,d=h.constructor;if(!g)return new d(h);if(l=n=new d(1),r=u=new d(0),o=(s=(t=new d(r)).e=j(g)-h.e-1)%q,t.d[0]=b(10,o<0?q+o:o),null==e)e=s>0?t:l;else{if(!(a=new d(e)).isInt()||a.lt(l))throw Error(v+a);e=a.gt(t)?s>0?t:l:a}for(m=!1,a=new d(C(g)),c=d.precision,d.precision=s=g.length*q*2;f=R(a,t,0,1,1),1!=(i=n.plus(f.times(r))).cmp(e);)n=r,r=i,i=l,l=u.plus(f.times(i)),u=i,i=t,t=a.minus(f.times(i)),a=i;return i=R(e.minus(n),r,0,1,1),u=u.plus(i.times(l)),n=n.plus(i.times(r)),u.s=l.s=h.s,p=R(l,r,s,1).minus(h).abs().cmp(R(u,n,s,1).minus(h).abs())<1?[l,r]:[u,n],d.precision=c,m=!0,p},O.toHexadecimal=O.toHex=function(e,t){return J(this,16,e,t)},O.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),null==e){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),void 0===t?t=r.rounding:I(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(m=!1,n=R(n,e,0,t,1).times(e),m=!0,T(n)):(e.s=n.s,n=e),n},O.toNumber=function(){return+this},O.toOctal=function(e,t){return J(this,8,e,t)},O.toPower=O.pow=function(e){var t,n,r,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(b(+a,l));if((a=new u(a)).eq(1))return a;if(r=u.precision,s=u.rounding,e.eq(1))return T(a,r,s);if((t=y(e.e/q))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return i=G(u,a,n,r),e.s<0?new u(1).div(i):T(i,r,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(n=b(+a,l))&&isFinite(n)?new u(n+"").e:y(l*(Math.log("0."+C(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(t>0?o/0:0):(m=!1,u.rounding=a.s=1,n=Math.min(12,(t+"").length),(i=Z(e.times(z(a,r+n)),r)).d&&L((i=T(i,r+5,1)).d,r,s)&&(t=r+10,+C((i=T(Z(e.times(z(a,t+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=T(i,r+1,0))),i.s=o,m=!0,u.rounding=s,T(i,r,s))},O.toPrecision=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=P(r,r.e<=i.toExpNeg||r.e>=i.toExpPos):(I(e,1,l),void 0===t?t=i.rounding:I(t,0,8),n=P(r=T(new i(r),e,t),e<=r.e||r.e<=i.toExpNeg,e)),r.isNeg()&&!r.isZero()?"-"+n:n},O.toSignificantDigits=O.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(I(e,1,l),void 0===t?t=n.rounding:I(t,0,8)),T(new n(this),e,t)},O.toString=function(){var e=this,t=e.constructor,n=P(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n},O.truncated=O.trunc=function(){return T(new this.constructor(this),this.e+1,1)},O.valueOf=O.toJSON=function(){var e=this,t=e.constructor,n=P(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};var R=function(){function e(e,t,n){var r,i=0,s=e.length;for(e=e.slice();s--;)r=e[s]*t+i,e[s]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function t(e,t,n,r){var i,s;if(n!=r)s=n>r?1:-1;else for(i=s=0;i<n;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function n(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&e.length>1;)e.shift()}return function(r,i,s,a,u,l){var c,f,p,h,m,g,v,d,w,b,S,M,E,N,_,A,O,C,I,L,U=r.constructor,R=r.s==i.s?1:-1,P=r.d,k=i.d;if(!(P&&P[0]&&k&&k[0]))return new U(r.s&&i.s&&(P?!k||P[0]!=k[0]:k)?P&&0==P[0]||!k?0*R:R/0:NaN);for(l?(m=1,f=r.e-i.e):(l=x,m=q,f=y(r.e/m)-y(i.e/m)),I=k.length,O=P.length,b=(w=new U(R)).d=[],p=0;k[p]==(P[p]||0);p++);if(k[p]>(P[p]||0)&&f--,null==s?(N=s=U.precision,a=U.rounding):N=u?s+(r.e-i.e)+1:s,N<0)b.push(1),g=!0;else{if(N=N/m+2|0,p=0,1==I){for(h=0,k=k[0],N++;(p<O||h)&&N--;p++)_=h*l+(P[p]||0),b[p]=_/k|0,h=_%k|0;g=h||p<O}else{for((h=l/(k[0]+1)|0)>1&&(k=e(k,h,l),P=e(P,h,l),I=k.length,O=P.length),A=I,M=(S=P.slice(0,I)).length;M<I;)S[M++]=0;(L=k.slice()).unshift(0),C=k[0],k[1]>=l/2&&++C;do{h=0,(c=t(k,S,I,M))<0?(E=S[0],I!=M&&(E=E*l+(S[1]||0)),(h=E/C|0)>1?(h>=l&&(h=l-1),1==(c=t(v=e(k,h,l),S,d=v.length,M=S.length))&&(h--,n(v,I<d?L:k,d,l))):(0==h&&(c=h=1),v=k.slice()),(d=v.length)<M&&v.unshift(0),n(S,v,M,l),-1==c&&(c=t(k,S,I,M=S.length))<1&&(h++,n(S,I<M?L:k,M,l)),M=S.length):0===c&&(h++,S=[0]),b[p++]=h,c&&S[0]?S[M++]=P[A]||0:(S=[P[A]],M=1)}while((A++<O||void 0!==S[0])&&N--);g=void 0!==S[0]}b[0]||b.shift()}if(1==m)w.e=f,o=g;else{for(p=1,h=b[0];h>=10;h/=10)p++;w.e=p+f*m-1,T(w,u?s+w.e+1:s,a,g)}return w}}();function T(e,t,n,r){var i,s,o,a,u,l,c,f,p,h=e.constructor;e:if(null!=t){if(!(f=e.d))return e;for(i=1,a=f[0];a>=10;a/=10)i++;if((s=t-i)<0)s+=q,o=t,u=(c=f[p=0])/b(10,i-o-1)%10|0;else if((p=Math.ceil((s+1)/q))>=(a=f.length)){if(!r)break e;for(;a++<=p;)f.push(0);c=u=0,i=1,o=(s%=q)-q+1}else{for(c=a=f[p],i=1;a>=10;a/=10)i++;u=(o=(s%=q)-q+i)<0?0:c/b(10,i-o-1)%10|0}if(r=r||t<0||void 0!==f[p+1]||(o<0?c:c%b(10,i-o-1)),l=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):u>5||5==u&&(4==n||r||6==n&&(s>0?o>0?c/b(10,i-o):0:f[p-1])%10&1||n==(e.s<0?8:7)),t<1||!f[0])return f.length=0,l?(t-=e.e+1,f[0]=b(10,(q-t%q)%q),e.e=-t||0):f[0]=e.e=0,e;if(0==s?(f.length=p,a=1,p--):(f.length=p+1,a=b(10,q-s),f[p]=o>0?(c/b(10,i-o)%b(10,o)|0)*a:0),l)for(;;){if(0==p){for(s=1,o=f[0];o>=10;o/=10)s++;for(o=f[0]+=a,a=1;o>=10;o/=10)a++;s!=a&&(e.e++,f[0]==x&&(f[0]=1));break}if(f[p]+=a,f[p]!=x)break;f[p--]=0,a=1}for(s=f.length;0===f[--s];)f.pop()}return m&&(e.e>h.maxE?(e.d=null,e.e=NaN):e.e<h.minE&&(e.e=0,e.d=[0])),e}function P(e,t,n){if(!e.isFinite())return X(e);var r,i=e.e,s=C(e.d),o=s.length;return t?(n&&(r=n-o)>0?s=s.charAt(0)+"."+s.slice(1)+B(r):o>1&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(e.e<0?"e":"e+")+e.e):i<0?(s="0."+B(-i-1)+s,n&&(r=n-o)>0&&(s+=B(r))):i>=o?(s+=B(i+1-o),n&&(r=n-i-1)>0&&(s=s+"."+B(r))):((r=i+1)<o&&(s=s.slice(0,r)+"."+s.slice(r)),n&&(r=n-o)>0&&(i+1===o&&(s+="."),s+=B(r))),s}function k(e,t){var n=e[0];for(t*=q;n>=10;n/=10)t++;return t}function D(e,t,n){if(t>_)throw m=!0,n&&(e.precision=n),Error(d);return T(new e(f),t,1,!0)}function F(e,t,n){if(t>A)throw Error(d);return T(new e(p),t,n,!0)}function j(e){var t=e.length-1,n=t*q+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function B(e){for(var t="";e--;)t+="0";return t}function G(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/q+4);for(m=!1;;){if(n%2&&ee((s=s.times(t)).d,o)&&(i=!0),0===(n=y(n/2))){n=s.d.length-1,i&&0===s.d[n]&&++s.d[n];break}ee((t=t.times(t)).d,o)}return m=!0,s}function V(e){return 1&e.d[e.d.length-1]}function H(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;){if(!(r=new e(t[s])).s){i=r;break}i[n](r)&&(i=r)}return i}function Z(e,t){var n,r,i,s,o,a,u,l=0,c=0,f=0,p=e.constructor,h=p.rounding,g=p.precision;if(!e.d||!e.d[0]||e.e>17)return new p(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(m=!1,u=g):u=t,a=new p(.03125);e.e>-2;)e=e.times(a),f+=5;for(u+=r=Math.log(b(2,f))/Math.LN10*2+5|0,n=s=o=new p(1),p.precision=u;;){if(s=T(s.times(e),u,1),n=n.times(++c),C((a=o.plus(R(s,n,u,1))).d).slice(0,u)===C(o.d).slice(0,u)){for(i=f;i--;)o=T(o.times(o),u,1);if(null!=t)return p.precision=g,o;if(!(l<3&&L(o.d,u-r,h,l)))return T(o,p.precision=g,h,m=!0);p.precision=u+=10,n=s=a=new p(1),c=0,l++}o=a}}function z(e,t){var n,r,i,s,o,a,u,l,c,f,p,h=1,g=e,v=g.d,d=g.constructor,w=d.rounding,y=d.precision;if(g.s<0||!v||!v[0]||!g.e&&1==v[0]&&1==v.length)return new d(v&&!v[0]?-1/0:1!=g.s?NaN:v?0:g);if(null==t?(m=!1,c=y):c=t,d.precision=c+=10,r=(n=C(v)).charAt(0),!(Math.abs(s=g.e)<15e14))return l=D(d,c+2,y).times(s+""),g=z(new d(r+"."+n.slice(1)),c-10).plus(l),d.precision=y,null==t?T(g,y,w,m=!0):g;for(;r<7&&1!=r||1==r&&n.charAt(1)>3;)r=(n=C((g=g.times(e)).d)).charAt(0),h++;for(s=g.e,r>1?(g=new d("0."+n),s++):g=new d(r+"."+n.slice(1)),f=g,u=o=g=R(g.minus(1),g.plus(1),c,1),p=T(g.times(g),c,1),i=3;;){if(o=T(o.times(p),c,1),C((l=u.plus(R(o,new d(i),c,1))).d).slice(0,c)===C(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(D(d,c+2,y).times(s+""))),u=R(u,new d(h),c,1),null!=t)return d.precision=y,u;if(!L(u.d,c-10,w,a))return T(u,d.precision=y,w,m=!0);d.precision=c+=10,l=o=g=R(f.minus(1),f.plus(1),c,1),p=T(g.times(g),c,1),i=a=1}u=l,i+=2}}function X(e){return String(e.s*e.s/0)}function $(e,t){var n,r,i;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%q,n<0&&(r+=q),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=q;r<i;)e.d.push(+t.slice(r,r+=q));t=t.slice(r),r=q-t.length}else r-=i;for(;r--;)t+="0";e.d.push(+t),m&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function W(e,t){var n,r,i,o,a,u,l,c,f;if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(M.test(t))n=16,t=t.toLowerCase();else if(S.test(t))n=2;else{if(!E.test(t))throw Error(v+t);n=8}for((o=t.search(/p/i))>0?(l=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),a=(o=t.indexOf("."))>=0,r=e.constructor,a&&(o=(u=(t=t.replace(".","")).length)-o,i=G(r,new r(n),o,2*o)),o=f=(c=U(t,n,x)).length-1;0===c[o];--o)c.pop();return o<0?new r(0*e.s):(e.e=k(c,f),e.d=c,m=!1,a&&(e=R(e,i,4*u)),l&&(e=e.times(Math.abs(l)<54?b(2,l):s.pow(2,l))),m=!0,e)}function Q(e,t,n,r,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/q);for(m=!1,u=n.times(n),a=new e(r);;){if(o=R(a.times(u),new e(t++*t++),l,1),a=i?r.plus(o):r.minus(o),r=R(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(r)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=r,r=o,o=s}return m=!0,o.d.length=c+1,o}function Y(e,t){for(var n=e;--t;)n*=e;return n}function K(e,t){var n,r=t.s<0,i=F(e,e.precision,1),s=i.times(.5);if((t=t.abs()).lte(s))return a=r?4:1,t;if((n=t.divToInt(i)).isZero())a=r?3:2;else{if((t=t.minus(n.times(i))).lte(s))return a=V(n)?r?2:3:r?4:1,t;a=V(n)?r?1:4:r?3:2}return t.minus(i).abs()}function J(e,t,n,r){var i,s,a,u,f,p,h,m,g,v=e.constructor,d=void 0!==n;if(d?(I(n,1,l),void 0===r?r=v.rounding:I(r,0,8)):(n=v.precision,r=v.rounding),e.isFinite()){for(d?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,(a=(h=P(e)).indexOf("."))>=0&&(h=h.replace(".",""),(g=new v(1)).e=h.length-a,g.d=U(P(g),10,i),g.e=g.d.length),s=f=(m=U(h,10,i)).length;0==m[--f];)m.pop();if(m[0]){if(a<0?s--:((e=new v(e)).d=m,e.e=s,m=(e=R(e,g,n,r,0,i)).d,s=e.e,p=o),a=m[n],u=i/2,p=p||void 0!==m[n+1],p=r<4?(void 0!==a||p)&&(0===r||r===(e.s<0?3:2)):a>u||a===u&&(4===r||p||6===r&&1&m[n-1]||r===(e.s<0?8:7)),m.length=n,p)for(;++m[--n]>i-1;)m[n]=0,n||(++s,m.unshift(1));for(f=m.length;!m[f-1];--f);for(a=0,h="";a<f;a++)h+=c.charAt(m[a]);if(d){if(f>1)if(16==t||8==t){for(a=16==t?4:3,--f;f%a;f++)h+="0";for(f=(m=U(h,i,t)).length;!m[f-1];--f);for(a=1,h="1.";a<f;a++)h+=c.charAt(m[a])}else h=h.charAt(0)+"."+h.slice(1);h=h+(s<0?"p":"p+")+s}else if(s<0){for(;++s;)h="0"+h;h="0."+h}else if(++s>f)for(s-=f;s--;)h+="0";else s<f&&(h=h.slice(0,s)+"."+h.slice(s))}else h=d?"0p+0":"0";h=(16==t?"0x":2==t?"0b":8==t?"0o":"")+h}else h=X(e);return e.s<0?"-"+h:h}function ee(e,t){if(e.length>t)return e.length=t,!0}function te(e){return new this(e).abs()}function ne(e){return new this(e).acos()}function re(e){return new this(e).acosh()}function ie(e,t){return new this(e).plus(t)}function se(e){return new this(e).asin()}function oe(e){return new this(e).asinh()}function ae(e){return new this(e).atan()}function ue(e){return new this(e).atanh()}function le(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?F(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=F(this,s,1).times(.5)).s=e.s:t.s<0?(this.precision=s,this.rounding=1,n=this.atan(R(e,t,s,1)),t=F(this,s,1),this.precision=r,this.rounding=i,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(R(e,t,s,1)):(n=F(this,s,1).times(t.s>0?.25:.75)).s=e.s:n=new this(NaN),n}function ce(e){return new this(e).cbrt()}function fe(e){return T(e=new this(e),e.e+1,2)}function pe(e){if(!e||"object"!=typeof e)throw Error(g+"Object expected");var t,n,r,i=!0===e.defaults,s=["precision",1,l,"rounding",0,8,"toExpNeg",-u,0,"toExpPos",0,u,"maxE",0,u,"minE",-u,0,"modulo",0,9];for(t=0;t<s.length;t+=3)if(n=s[t],i&&(this[n]=h[n]),void 0!==(r=e[n])){if(!(y(r)===r&&r>=s[t+1]&&r<=s[t+2]))throw Error(v+n+": "+r);this[n]=r}if(n="crypto",i&&(this[n]=h[n]),void 0!==(r=e[n])){if(!0!==r&&!1!==r&&0!==r&&1!==r)throw Error(v+n+": "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(w);this[n]=!0}else this[n]=!1}return this}function he(e){return new this(e).cos()}function me(e){return new this(e).cosh()}function ge(e,t){return new this(e).div(t)}function ve(e){return new this(e).exp()}function de(e){return T(e=new this(e),e.e+1,3)}function we(){var e,t,n=new this(0);for(m=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return m=!0,new this(1/0);n=t}return m=!0,n.sqrt()}function ye(e){return e instanceof s||e&&"[object Decimal]"===e.name||!1}function be(e){return new this(e).ln()}function Se(e,t){return new this(e).log(t)}function Me(e){return new this(e).log(2)}function Ee(e){return new this(e).log(10)}function Ne(){return H(this,arguments,"lt")}function xe(){return H(this,arguments,"gt")}function qe(e,t){return new this(e).mod(t)}function _e(e,t){return new this(e).mul(t)}function Ae(e,t){return new this(e).pow(t)}function Oe(e){var t,n,r,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:I(e,1,l),r=Math.ceil(e/q),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)(i=t[s])>=429e7?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(w);for(t=crypto.randomBytes(r*=4);s<r;)(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=r/4}else for(;s<r;)a[s++]=1e7*Math.random()|0;for(r=a[--s],e%=q,r&&e&&(i=b(10,q-e),a[s]=(r/i|0)*i);0===a[s];s--)a.pop();if(s<0)n=0,a=[0];else{for(n=-1;0===a[0];n-=q)a.shift();for(r=1,i=a[0];i>=10;i/=10)r++;r<q&&(n-=q-r)}return o.e=n,o.d=a,o}function Ce(e){return T(e=new this(e),e.e+1,this.rounding)}function Ie(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Le(e){return new this(e).sin()}function Ue(e){return new this(e).sinh()}function Re(e){return new this(e).sqrt()}function Te(e,t){return new this(e).sub(t)}function Pe(e){return new this(e).tan()}function ke(e){return new this(e).tanh()}function De(e){return T(e=new this(e),e.e+1,1)}return(s=function e(t){var n,r,i;function s(e){var t,n,r,i=this;if(!(i instanceof s))return new s(e);if(i.constructor=s,e instanceof s)return i.s=e.s,void(m?!e.d||e.e>s.maxE?(i.e=NaN,i.d=null):e.e<s.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d?e.d.slice():e.d));if("number"==(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;n>=10;n/=10)t++;return void(m?t>s.maxE?(i.e=NaN,i.d=null):t<s.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):$(i,e.toString())}if("string"!==r)throw Error(v+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),N.test(e)?$(i,e):W(i,e)}if(s.prototype=O,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=pe,s.clone=e,s.isDecimal=ye,s.abs=te,s.acos=ne,s.acosh=re,s.add=ie,s.asin=se,s.asinh=oe,s.atan=ae,s.atanh=ue,s.atan2=le,s.cbrt=ce,s.ceil=fe,s.cos=he,s.cosh=me,s.div=ge,s.exp=ve,s.floor=de,s.hypot=we,s.ln=be,s.log=Se,s.log10=Ee,s.log2=Me,s.max=Ne,s.min=xe,s.mod=qe,s.mul=_e,s.pow=Ae,s.random=Oe,s.round=Ce,s.sign=Ie,s.sin=Le,s.sinh=Ue,s.sqrt=Re,s.sub=Te,s.tan=Pe,s.tanh=ke,s.trunc=De,void 0===t&&(t={}),t&&!0!==t.defaults)for(i=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return s.config(t),s}(h)).default=s.Decimal=s,f=new s(f),p=new s(p),i=function(){return s}.call(t,n,t,e),void 0!==i&&(e.exports=i),s}()});e.exports=s}).call(this,n("62e4")(e))},"257f":function(module,__webpack_exports__,__webpack_require__){"use strict";var _ionic_vue__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("d867"),vue__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("7a23"),_components_help_vue__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("fbcc"),_components_header_vue__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("71c2"),_components_exit_vue__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("070d"),nerdamer_all_min__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("d779"),nerdamer_all_min__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(nerdamer_all_min__WEBPACK_IMPORTED_MODULE_5__);__webpack_exports__["a"]=Object(vue__WEBPACK_IMPORTED_MODULE_1__["k"])({components:{IonPage:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["r"],IonContent:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["g"],IonButton:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["b"],IonInput:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["m"],IonItem:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["n"],IonLabel:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["o"],Help:_components_help_vue__WEBPACK_IMPORTED_MODULE_2__["a"],Header:_components_header_vue__WEBPACK_IMPORTED_MODULE_3__["a"],Exit:_components_exit_vue__WEBPACK_IMPORTED_MODULE_4__["a"],IonSelect:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["w"],IonSelectOption:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["x"],IonList:_ionic_vue__WEBPACK_IMPORTED_MODULE_0__["p"]},data(){return{re:"",eqn:"",e:"",d:"",flow:"turbC"}},computed:{fShow(){if(""==this.re||""==this.eqn)return"";{let re=this.re;try{return parseFloat(eval(this.eqn.toLowerCase())).toFixed(this.$store.state.decimal)}catch(err){return console.log(re),""}}},fTurbShow(){if(""!=this.re&&""!=this.e&&""!=this.d&&"turbC"==this.flow){let temp="";temp+="10 ^ (-x/2) = (",temp+=String(this.e/1e3),temp+="/",temp+=String(this.d),temp+=") / 3.7 + 2.51 * x /",temp+=String(this.re);try{temp=nerdamer_all_min__WEBPACK_IMPORTED_MODULE_5___default.a.solveEquations(String(temp),"x").toString(),temp=((1/parseFloat(eval(temp)))**2).toFixed(this.$store.state.decimal)}catch(err){return""}return parseFloat(temp).toFixed(this.$store.state.decimal)}return""},fTurbShowH(){return""!=this.re&&""!=this.e&&""!=this.d&&"turbH"==this.flow?parseFloat((1/(-1.8*Math.log10(6.9/this.re+(this.e/1e3/this.d/3.7)**1.11)))**2).toFixed(this.$store.state.decimal):""}},methods:{clear(){this.re="",this.eqn="",this.e="",this.d=""}},watch:{flow:function(){"turbC"!=this.flow&&"turbH"!=this.flow||(this.e="",this.d="")}}})},"28dc":function(e,t,n){"use strict";n("05dd0")},4016:function(e,t,n){if("undefined"===typeof r){var r=n("15f6");n("aec1")}(function(){"use strict";var e=r.getCore(),t=e.PARSER,n=e.Frac,i=e.Settings,s=e.Utils.isSymbol,o=e.groups.FN,a=e.Symbol,u=e.Utils.text,l=e.Utils.inBrackets,c=e.Utils.isInt,f=e.Utils.format,p=e.Utils.even,h=e.Utils.evaluate,m=e.groups.N,g=e.groups.S,v=(o=e.groups.FN,e.groups.PL),d=e.groups.CP,w=e.groups.CB,y=e.groups.EX,b=e.groups.P,S=i.LOG,M="exp",E="abs",N="sqrt",x="sin",q="cos",_="tan",A="sec",O="csc",C="cot",I="asin",L="acos",U="atan",R="asec",T="acsc",P="acot",k="sinh",D="cosh",F="tanh",j="csch",B="sech",G="coth",V="asech",H="acsch",Z="acoth";function z(e){this.message=e||""}z.prototype=new Error,a.prototype.hasIntegral=function(){return this.containsFunction("integrate")},a.prototype.fnTransform=function(){if(this.group!==o)return this;var e,n=this.args[0],r=new a(this.multiplier),i=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case k:e=t.parse(f("(e^({0})-e^(-({0})))/2",n));break;case D:e=t.parse(f("(e^({0})+e^(-({0})))/2",n));break;case F:e=t.parse(f("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",n));break;case _:e=t.parse(f("sin({0})/cos({0})",n));break;case O:e=t.parse(f("1/sin({0})",n));break;case A:e=t.parse(f("1/cos({0})",n));break;default:e=i}else if(this.power.equals(2))switch(this.fname){case x:e=t.parse(f("1/2-cos(2*({0}))/2",n));break;case q:e=t.parse(f("1/2+cos(2*({0}))/2",n));break;case _:e=t.parse(f("sin({0})^2/cos({0})^2",n));break;case D:e=t.parse(f("1/2+cosh(2*({0}))/2",n));break;case k:e=t.parse(f("-1/2+cosh(2*({0}))/2",n));break;case F:e=t.parse(f("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",n));break;case A:e=t.parse(f("(1-cos(2*({0})))/(1+cos(2*({0})))+1",n));break;default:e=i}else if(this.fname===A)e=t.parse(f("1/cos({0})^({1})",this.args[0],this.power));else if(this.fname===O)e=t.parse(f("1/sin({0})^({1})",this.args[0],this.power));else if(this.fname===_)e=this.power.lessThan(0)?t.parse(f("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):t.parse(f("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power));else if(this.fname===x&&this.power.lessThan(0))e=t.parse(f("csc({0})^(-({1}))",this.args[0],this.power.negate()));else if(this.fname===q&&this.power.lessThan(0))e=t.parse(f("sec({0})^(-({1}))",this.args[0],this.power.negate()));else if(this.fname===x&&this.power.equals(3))e=t.parse(f("(3*sin({0})-sin(3*({0})))/4",this.args[0]));else if(this.fname===q&&this.power.equals(3))e=t.parse(f("(cos(3*({0}))+3*cos({0}))/4",this.args[0]));else if(this.fname!==q&&this.fname!==x||!p(this.power))e=i;else{var s=this.power/2,u=t.pow(this.clone().toLinear(),t.parse(2)).fnTransform(),l=t.expand(t.pow(u,t.parse(s)));e=new a(0),l.each((function(n){var r=n.fnTransform();e=t.add(e,r)}),!0)}return t.multiply(e,r)},a.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===g)return!1;if(this.fname&&(e.Utils.in_trig(this.fname)||e.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].hasTrig())return!0;return!1},e.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},e.Utils.toCommonDenominator=function(n){if(n.isComposite()&&n.isLinear()){var r=new a(n.multiplier),i=new a(1),s=new a(0);n.each((function(e){i=t.multiply(i,e.getDenom())}),!0),n.each((function(e){var n=e.getNum(),r=e.getDenom(),o=t.multiply(n,t.divide(i.clone(),r));s=t.add(s,o)}));var o=t.multiply(r,e.Algebra.divide(t.expand(s),t.expand(i)));return o}return n},e.Utils.in_inverse_trig=function(e){var t=[I,L,U,T,R,P];return-1!==t.indexOf(e)},e.Utils.in_trig=function(e){var t=[q,x,_,A,O,C];return-1!==t.indexOf(e)},e.Utils.in_htrig=function(e){var t=[k,D,F,H,V,Z];return-1!==t.indexOf(e)},e.Matrix.jacobian=function(t,n){var r=new e.Matrix;return n||(n=e.Utils.arrayGetVariables(t)),n.forEach((function(n,i){t.forEach((function(t,s){var o=e.Calculus.diff(t.clone(),n);r.set(s,i,o)}))})),r},e.Matrix.prototype.max=function(){var e=new a(0);return this.each((function(t){var n=t.abs();n.gt(e)&&(e=n)})),e},e.Matrix.cMatrix=function(n,r){var i=new e.Matrix;return r.forEach((function(e,r){i.set(r,0,t.parse(n))})),i};var X=e.Utils.all_functions=function(e){for(var t=0,n=e.length;t<n;t++)if(e[t].group!==o)return!1;return!0},$=e.Utils.cosAsinBtranform=function(e,n){var r,i;return r=e.args[0],i=n.args[0],t.parse(f("(sin(({0})+({1}))-sin(({0})-({1})))/2",r,i))},W=e.Utils.cosAsinAtranform=function(e,n){return 1!==Number(n.power)?t.multiply(e,n):(r=e.args[0],t.parse(f("(sin(2*({0})))/2",r)));var r},Q=e.Utils.cosAsinBtranform=function(e,n){var r,i;return r=e.args[0],i=n.args[0],t.parse(f("(cos(({0})+({1}))-cos(({0})-({1})))/2",r,i))},Y=e.Utils.trigTransform=function(e){for(var n,r,i={},s=new a(1),u=0,l=e.length;u<l;u++)if(n=e[u],n.group===o){var c=n.fname;c===q&&i[x]?(r=i[x].args[0].toString()!==n.args[0].toString()?$(n,i[x]):W(n,i[x]),delete i[x],s=t.multiply(s,r)):c===x&&i[q]?(r=i[q].args[0].toString()!==n.args[0].toString()?$(n,i[q]):W(n,i[q]),delete i[q],s=t.multiply(s,r)):c===x&&i[x]?(i[x].args[0].toString()!==n.args[0].toString()?(r=Q(n,i[x]),delete i[x]):(r=t.multiply(n,i[x]),delete i[x]),s=r):i[c]=n}else s=t.multiply(s,n);for(var f in i)s=t.multiply(s,i[f]);return s};e.Settings.integration_depth=10,e.Settings.max_lim_depth=10;var K=e.Calculus={version:"1.4.6",sum:function(n,r,i,s){if(r.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(r)+" provided");var o;if(r=r.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)){var l=s-i<200?"":"PARSE2NUMBER";i=Number(i),s=Number(s),o=e.Utils.block(l,(function(){for(var o=n.text(),u={"~":!0},l=new e.Symbol(0),c=i;c<=s;c++){u[r]=new a(c);var f=t.parse(o,u);l=t.add(l,f)}return l}))}else o=t.symfunction("sum",arguments);return o},product:function(n,r,i,s){if(r.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(r)+" provided");var o;if(r=r.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)){var l=s-i<200?"":"PARSE2NUMBER";o=e.Utils.block(l,(function(){i=Number(i),s=Number(s.multiplier);for(var o=n.text(),u={},l=new e.Symbol(1),c=i;c<=s;c++)u[r]=new a(c),l=t.multiply(l,t.parse(o,u));return l}))}else o=t.symfunction("product",arguments);return o},diff:function(r,c,p){if(e.Utils.isVector(r)){var h=new e.Vector([]);return r.each((function(e){h.elements.push(K.diff(e,c,p))})),h}if(e.Utils.isMatrix(r)){var M=new e.Matrix;return r.each((function(e,t,n){M.set(t,n,K.diff(e,c,p))})),M}var k=s(c)?c.text():c;if(p=s(p)?p.multiplier:p||1,void 0===k&&(k=e.Utils.variables(r)[0]),r.group===o&&r.fname===N){var D=r.args[0],z=r.power.clone();D.group===m&&D.group===b||(D.power=s(D.power)?t.multiply(D.power,t.multiply(new a(.5)),z):D.power.multiply(new n(.5)).multiply(z),D.multiplier=D.multiplier.multiply(r.multiplier)),r=D}if(r.group!==o||s(r.power))r=Q(r);else{var X=Q(t.parse(r)),$=K.diff(r.args[0].clone(),k);r=t.multiply(X,$)}return p>1&&(p--,r=K.diff(r,c,p)),r;function W(e){return(e.value===k||e.contains(k,!0))&&(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new n(1)),e.power.equals(0)&&(e=a(e.multiplier))),e}function Q(e){var r,p,h=e.group;if(h===m||h===g&&e.value!==k||h===b)e=a(0);else if(h===g)e=W(e);else{if(h===w){var M=e.multiplier.clone();e.toUnitMultiplier();var N=t.multiply(J(e),W(e));return N.multiplier=N.multiplier.multiply(M),N}if(h===o&&e.power.equals(1))switch(e.fname){case S:p=e.clone(),e=e.args[0].clone(),e.power=e.power.negate(),e.multiplier=p.multiplier.divide(e.multiplier);break;case q:e.fname=x,e.multiplier.negate();break;case x:e.fname=q;break;case _:e.fname=A,e.power=new n(2);break;case A:e=Y(e,_);break;case O:e=Y(e,"-cot");break;case C:e.fname=O,e.multiplier.negate(),e.power=new n(2);break;case I:e=t.parse("(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case L:e=t.parse("-(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case U:e=t.parse("(1+("+u(e.args[0])+")^2)^(-1)");break;case E:M=e.multiplier.clone(),e.toUnitMultiplier(),r=e.args[0].clone(),r.toUnitMultiplier(),e=t.parse(l(u(e.args[0]))+"/abs"+l(u(r))),e.multiplier=M;break;case"parens":e=a(1);break;case"cosh":e.fname="sinh";break;case"sinh":e.fname="cosh";break;case F:e.fname=B,e.power=new n(2);break;case B:e=Y(e,"-tanh");break;case j:var D=String(e.args[0]);return t.parse("-coth("+D+")*csch("+D+")");case G:D=String(e.args[0]);return t.parse("-csch("+D+")^2");case"asinh":e=t.parse("(sqrt(1+("+u(e.args[0])+")^2))^(-1)");break;case"acosh":e=t.parse("(sqrt(-1+("+u(e.args[0])+")^2))^(-1)");break;case"atanh":e=t.parse("(1-("+u(e.args[0])+")^2)^(-1)");break;case V:D=String(e.args[0]);e=t.parse("-1/(sqrt(1/("+D+")^2-1)*("+D+")^2)");break;case Z:e=t.parse("-1/(("+e.args[0]+")^2-1)");break;case H:D=String(e.args[0]);e=t.parse("-1/(sqrt(1/("+D+")^2+1)*("+D+")^2)");break;case R:D=String(e.args[0]);e=t.parse("1/(sqrt(1-1/("+D+")^2)*("+D+")^2)");break;case T:D=String(e.args[0]);e=t.parse("-1/(sqrt(1-1/("+D+")^2)*("+D+")^2)");break;case P:e=t.parse("-1/(("+e.args[0]+")^2+1)");break;case"S":D=String(e.args[0]);e=t.parse("sin((pi*("+D+")^2)/2)");break;case"C":D=String(e.args[0]);e=t.parse("cos((pi*("+D+")^2)/2)");break;case"Si":D=e.args[0];e=t.parse("sin("+D+")/("+D+")");break;case"Shi":D=e.args[0];e=t.parse("sinh("+D+")/("+D+")");break;case"Ci":D=e.args[0];e=t.parse("cos("+D+")/("+D+")");break;case"Chi":D=e.args[0];e=t.parse("cosh("+D+")/("+D+")");break;case"Ei":D=e.args[0];e=t.parse("e^("+D+")/("+D+")");break;case"Li":D=e.args[0];e=t.parse("1/"+i.LOG+"("+D+")");break;case"erf":e=t.parse("(2*e^(-("+e.args[0]+")^2))/sqrt(pi)");break;case"atan2":var z=String(e.args[0]),X=String(e.args[1]);e=t.parse("("+X+")/(("+X+")^2+("+z+")^2)");break;case"sign":e=new a(0);break;case"sinc":e=t.parse(f("(({0})*cos({0})-sin({0}))*({0})^(-2)",e.args[0]));break;case i.LOG10:e=t.parse("1/(("+e.args[0]+")*"+i.LOG+"(10))");break;default:e=t.symfunction("diff",[e,c])}else if(h===y||h===o&&s(e.power)){var $;$=h===y?e.value:h===o&&e.contains(k)?e.fname+l(u(e.args[0])):e.value+l(u(e.args[0])),t.multiply(t.parse(S+l($)),e.power.clone()),r=K.diff(t.multiply(t.parse(S+l($)),e.power.clone()),k),e=t.multiply(e,r)}else if(h!==o||e.power.equals(1)){if(h===d||h===v){var ee=e.clone(),te=new a(0);for(var ne in e.symbols)te=t.add(te,K.diff(e.symbols[ne].clone(),k));e=t.multiply(W(ee),te)}}else r=e.clone(),r.toLinear(),r.toUnitMultiplier(),e=t.multiply(W(e.clone()),Q(r))}return e.updateHash(),e}function Y(e,n,r){return t.multiply(e,t.parse(n+l(r||u(e.args[0]))))}function J(e){for(var n=e.collectSymbols(),r=new a(0),i=n.length,s=0;s<i;s++){for(var o=K.diff(n[s].clone(),k),u=0;u<i;u++)s!==u&&(o=t.multiply(o,n[u].clone()));r=t.add(r,o)}return r}},integration:{u_substitution:function(n,r){function i(e,n,i){var s=K.diff(n,r),o=i?i(e,n):t.divide(e.clone(),s);return o.contains(r,!0)?null:o}function s(e,n){var r=K.integrate(t.symfunction(e,[new a(h)]),h,0);return r=r.sub(new a(h),n),r.updateHash(),r}var u,l=n[0].clone(),c=n[1].clone(),f=l.group,p=c.group,h="__u__";if(f===o&&p!==o){var m=l.args[0];if(u=i(c,m.clone()),u)return t.multiply(u,s(l.fname,m));if(u=i(c,l),u)return K.integration.poly_integrate(l)}else if(p===o&&f!==o){m=c.args[0];if(u=i(l,m.clone()),u)return t.multiply(u,s(c.fname,m))}else if(f===o&&p===o){if(u=i(l.clone(),c.clone()),u)return t.multiply(K.integration.poly_integrate(c),u);if(u=i(c.clone(),l.clone()),u)return t.multiply(K.integration.poly_integrate(c),u)}else{if(f===y&&p!==y){var g=l.power;if(u=i(c,g.clone()),!u){var v=K.integration.decompose_arg(g.clone(),r),d=K.diff(v[2].clone(),r),w=K.integration.decompose_arg(d.clone(),r);if(t.multiply(v[1],w[1]).power.equals(c.power)){var b=t.divide(v[0].clone(),w[0].clone()),S=t.multiply(b.clone(),t.pow(new a(l.value),t.multiply(v[0],new a(h))));return S=t.multiply(S,new a(h)),K.integration.by_parts(S,h,0,{}).sub(h,v[1].clone())}}var M=K.integrate(l.sub(g.clone(),new a(h)),h,0),E=t.multiply(M.sub(new a(h),g),u);return E}if(p===y&&f!==y){g=c.power;u=i(l,g.clone());M=K.integrate(c.sub(g,new a(h)),h,0);return t.multiply(M.sub(new a(h),g),u)}if(l.isComposite()||c.isComposite()){var N=function(n,i){var s=K.diff(i,r),o=e.Algebra.Factor.factor(n),a=e.Algebra.Factor.factor(s),u=t.divide(o,a);return u},x=l.isComposite()?l.clone().toLinear():l.clone(),q=c.isComposite()?c.clone().toLinear():c.clone();if(u=i(x.clone(),q.clone(),N),u)return t.multiply(K.integration.poly_integrate(c),u);if(u=i(q.clone(),x.clone(),N),u)return t.multiply(K.integration.poly_integrate(l),u)}}},poly_integrate:function(e){var n=e.power.toString(),r=e.multiplier.toDecimal(),i=e.toUnitMultiplier().toLinear();return-1===Number(n)?t.multiply(new a(r),t.symfunction(S,[i])):t.parse(f("({0})*({1})^(({2})+1)/(({2})+1)",r,i,n))},stop:function(t){throw t=t||"Unable to compute integral!",e.Utils.warn(t),new z(t)},partial_fraction:function(n,r,i,o){var u,l;return s(r)||(r=t.parse(r)),u=new a(0),l=e.Algebra.PartFrac.partfrac(n,r),l.group===w&&l.isLinear()?(l.each((function(e){e.isLinear()||K.integration.stop()})),l.each((function(e){u=t.add(u,K.integrate(e,r,i,o))}))):u=t.add(u,K.integrate(l,r,i,o)),u},get_udv:function(n){var r=[[],[],[],[],[]],i=function(t){var n=t.group;if(n===o){var i=t.fname;e.Utils.in_trig(i)||e.Utils.in_htrig(i)?r[3].push(t):e.Utils.in_inverse_trig(i)?r[1].push(t):i===S?r[0].push(t):K.integration.stop()}else n===g||t.isComposite()&&t.isLinear()||n===w&&t.isLinear()?r[2].push(t):n===y||t.isComposite()&&!t.isLinear()?r[4].push(t):K.integration.stop()};n.group===w?n.each((function(e){i(a.unwrapSQRT(e,!0))})):i(n);for(var s,u=new a(1),l=0;l<5;l++){var c,f=r[l],p=f.length;if(p>0){if(p>1){c=new a(1);for(var h=0;h<p;h++)c=t.multiply(c,f[h].clone())}else c=f[0].clone();s?u=t.multiply(u,c):(s=c,s.multiplier=s.multiplier.multiply(n.multiplier))}}return[s,u]},trig_sub:function(n,r,i,s,o,a){o=o||K.integration.decompose_arg(n.clone().toLinear(),r);o[3],o[2];var u=o[0],c=o[1];if(c.power.equals(2)&&u.greaterThan(0)){var f=e.Utils.getU(n),p=t.parse(_+l(f)),h=t.parse(A+l(f)+"^2"),m=t.multiply(n.sub(c,p),h),g=K.integrate(m,f,i,s).sub(p,c);return e.Utils.clearU(p),g}},by_parts:function(n,r,i,s){var o,u,l,c,f,p,h,m,g,v,d,w;if(s.previous=s.previous||[],o=K.integration.get_udv(n),u=o[0],l=o[1],c=a.unwrapSQRT(t.expand(K.diff(u.clone(),r)),!0),d=c.clone().stripVar(r),c=t.divide(c,d.clone()),f=K.integrate(l.clone(),r,i||0),p=t.multiply(f.clone(),c),w=p.toString(),-1!==s.previous.indexOf(w)&&e.Utils.in_trig(u.fname)&&l.isE())return s.is_cyclic=!0,new a(1);if(s.previous.push(w),h=t.multiply(u,f),v=p.multiplier.clone(),p.toUnitMultiplier(),g=t.multiply(K.integrate(p.clone(),r,i,s),d),g.multiplier=g.multiplier.multiply(v),m=t.subtract(h,g),s.is_cyclic&&(s.previous.pop(),0===s.previous.length)){m=t.expand(m);var y=new a(0);m.each((function(e){e.contains(r)||(y=t.add(y,e.clone()))})),m=t.divide(t.subtract(m,y.clone()),t.subtract(new a(1),y))}return m},decompose_arg:e.Utils.decompose_fn},integrate:function(r,u,h,m){if(!u){var b=e.Utils.variables(r);1===b.length&&(u=b[0]),u=u||"x"}if(e.Utils.isVector(r)){var $=new e.Vector([]);return r.each((function(e){$.elements.push(K.integrate(e,u))})),$}return isNaN(u)||t.error("variable expected but received "+u),r.isConstant(!0)?t.multiply(r.clone(),t.parse(u)):(m=m||{},e.Utils.block("PARSE2NUMBER",(function(){h=h||0;var b,$=s(u)?u.toString():u,W=a.unwrapSQRT(r.clone(),!0),Q=W.group;try{if(++h>e.Settings.integration_depth&&K.integration.stop("Maximum depth reached. Exiting!"),W.contains($,!0)){if(Q===g)b=K.integration.poly_integrate(W,$,h);else if(Q===y)if(W.previousGroup===o&&"sqrt"!==W.fname&&W.fname!==i.PARENTHESIS&&K.integration.stop(),W.contains($)&&W.previousGroup!==o)if(W.power.contains($))K.integration.stop();else{var J=K.diff(W.clone().toLinear(),$);J.contains($)&&K.integration.stop(),b=K.integration.poly_integrate(W,$,h)}else{var ee=K.diff(W.power.clone(),$);if(ee.contains($)){var te=ee.stripVar($),ne=t.divide(ee.clone(),te.clone());if(ne.group===g&&ne.isLinear())return te.multiplier=te.multiplier.divide(new n(2)),t.parse(f("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",te,$,W.multiplier));K.integration.stop()}if(W.isE())ee.isLinear()?b=W:ee.isE()&&ee.power.group===g&&ee.power.power.equals(1)?b=t.multiply(t.symfunction("Ei",[W.power.clone()]),W.power):K.integration.stop();else{var re=t.symfunction(S,[t.parse(W.value)]);b=t.divide(W,re)}b=t.divide(b,ee)}else if(W.isComposite()&&W.isLinear()){var ie=t.parse(W.multiplier);W.toUnitMultiplier(),b=new a(0),W.each((function(e){b=t.add(b,K.integrate(e,$,h))})),b=t.multiply(ie,b)}else if(Q===d)if(W.power.greaterThan(1)&&(W=t.expand(W)),W.power.equals(1))b=new a(0),W.each((function(e){b=t.add(b,K.integrate(e,$,h))}),!0);else{var se=Number(W.power);ie=W.multiplier.clone();W.toUnitMultiplier();var oe=W.clone().toLinear(),ae=K.integration.decompose_arg(oe,$),ue=ae[3],le=ae[2];ee=ae[0],ne=ae[1];if(-1===se&&ne.group!==v&&ne.power.equals(2)){var ce=!c(ue)||ue>0;if(ne.group===g&&ne.power.equals(2)&&ce){var fe=function(e){var n=new a(1);return e.each((function(e){n=t.multiply(n,"abs"===e.fname?e.args[0]:e)})),n},pe=ee.clone(),he=ue.clone();pe=t.pow(pe,new a(.5)),he=t.pow(he,new a(.5));re=t.multiply(fe(he),fe(pe));var me=t.symfunction(U,[t.divide(t.multiply(ee,ne.toLinear()),re.clone())]);b=t.divide(me,re)}else if(ne.group===g&&ne.isLinear())b=t.divide(K.integration.poly_integrate(W),ee);else if(ne.power.equals(4)){var ge,ve,de,we,ye,be,Se=l;pe=t.parse(N+Se(ee)+"*"+$+"^2"),he=t.parse(N+Se(2)+"*"+Se(ee)+"^"+Se("1/4")+"*"+Se(ue)+"^"+Se("1/4")+"*"+$),ge=t.parse(N+Se(ue)),Te=t.add(t.add(pe.clone(),he.clone()),ge.clone()),st=t.add(t.subtract(pe,he),ge),ve=t.parse(N+Se(2)+"*"+Se(ue)+"^"+Se("3/4")),de=t.parse(N+Se(ue)+"*"+Se(ue)+"^"+Se("1/4")+"*"+$),we=t.parse("2*"+Se(ue)+"*"+N+Se(2)+"*"+Se(ue)+"^"+Se("1/4")),ye=t.divide(t.subtract(ve.clone(),de.clone()),t.multiply(we.clone(),st)),be=t.divide(t.add(ve,de),t.multiply(we,Te.clone())),b=t.add(K.integrate(ye,$,h,m),K.integrate(be,$,h,m))}else b=K.integration.partial_fraction(W,$,h)}else if(-.5===se)if(ne.group===g&&ne.power.equals(2))if(le.multiplier.lessThan(0)&&!ue.multiplier.lessThan(0))if(ee.negate(),ue.isConstant()&&ee.isConstant()){re=t.symfunction(N,[ee.clone()]);var Me=t.symfunction(N,[t.multiply(ee.clone(),ue)]);b=t.divide(t.symfunction(I,[t.divide(le.toLinear(),Me)]),re)}else{var Ee=t.symfunction(N,[ee]),Ne=t.multiply(Ee.clone(),ne.clone().toLinear());b=t.divide(t.symfunction(U,[t.divide(Ne,t.symfunction(N,[oe.clone()]))]),Ee)}else K.integration.stop();else K.integration.stop();else if(ne.isLinear()&&ne.group!==v)b=t.divide(K.integration.poly_integrate(W),ee);else{if(ne.power.equals(2)&&ee.greaterThan(0)){var xe,qe,_e,Ae,Oe,Ce;xe=t.parse(N+l(ee)),qe=t.parse(N+l(ue)),_e=t.multiply(xe.clone(),qe.clone()).invert(),Ae=t.pow(ue,new a(W.power)),Ce=e.Utils.getU(W),je=t.multiply(_e,ne.clone().toLinear()),Oe=t.parse(U+l(je));var Ie=2*(Math.abs(W.power)-1),Le=K.integrate(t.parse(q+l(Ce)+"^"+Ie));return e.Utils.clearU(Ce),t.multiply(Le.sub(Ce,Oe),Ae)}if(W.group===w||W.power.lessThan(0)){me=W.clone().toLinear();var Ue=e.Algebra.Factor.factor(me),Re=Ue.toString()!==me.toString();if(e.Algebra.degree(me,t.parse($)).equals(2)&&!Re)try{var Te,Pe,ke;ke=e.Algebra.sqComplete(me,$),je=e.Utils.getU(me),Te=ke.f.sub(ke.a,je),Pe=t.pow(Te,t.parse(W.power)),b=K.integrate(Pe,je).sub(je,ke.a)}catch(rn){K.integration.stop()}else b=K.integration.partial_fraction(W,$,h,m)}else b=K.integration.by_parts(W,$,h,m)}b.multiplier=b.multiplier.multiply(ie)}else if(Q===o){var De=W.args[0];ie=W.multiplier.clone();W.toUnitMultiplier();ae=K.integration.decompose_arg(De,$),ee=ae[0],ne=ae[1];var Fe=W.fname;if(Fe===S||Fe===I||Fe===L||Fe===U&&ne.isLinear()){se=W.power.toString();if(c(se)&&(h-=se),De.isComposite()){var je=e.Utils.getU(W),Be=(me=t.pow(t.parse(S+l(je)),new a(se)),K.diff(De,$)),Ge=t.multiply(me,Be);Le=K.integrate(Ge,je,h,m);b=t.multiply(t.parse(ie),Le.sub(je,De))}else b=t.multiply(t.parse(ie),K.integration.by_parts(W,$,h,m))}else{if(Fe===_&&W.power.lessThan(0)){var Ve=W.clone();return Ve.power.negate(),Ve.fname=C,t.multiply(t.parse(ie),K.integrate(Ve,$,h))}if(!ee.contains($,!0)&&W.isLinear())if(Fe===E){ne=t.divide(De.clone(),ee.clone());if(ne.group!==g||ne.power.lessThan(0))K.integration.stop();else if(e.Utils.even(ne.power))b=K.integrate(De,$,h);else{var He=K.integrate(ne,$,h);He.power=He.power.subtract(new n(1)),b=t.multiply(t.multiply(t.symfunction(E,[ne.toLinear()]),He),ee)}}else{var Ze=W.args[0].group,ze=K.integration.decompose_arg(De,$);switch((Ze!==d&&Ze!==g&&Ze!==w||!ze[1].power.equals(1)||De.hasFunc())&&K.integration.stop(),Fe){case q:b=t.symfunction(x,[De]);break;case x:b=t.symfunction(q,[De]),b.negate();break;case _:b=t.parse(f(i.LOG+"(sec({0}))",De));break;case A:b=t.parse(f(i.LOG+"(tan({0})+sec({0}))",De));break;case O:b=t.parse(f("-"+i.LOG+"(csc({0})+cot({0}))",De));break;case C:b=t.parse(f(i.LOG+"(sin({0}))",De));break;case k:b=t.symfunction(D,[De]);break;case D:b=t.symfunction(k,[De]);break;case F:b=t.parse(f(i.LOG+"(cosh({0}))",De));break;case R:b=K.integration.by_parts(W,$,h,m);break;case T:b=K.integration.by_parts(W,$,h,m);break;case P:b=K.integration.by_parts(W,$,h,m);break;case V:b=K.integration.by_parts(W,$,h,m);break;case H:b=K.integration.by_parts(W,$,h,m);break;case Z:b=K.integration.by_parts(W,$,h,m);break;case B:b=t.parse(f("atan(sinh({0}))",De));break;case j:b=t.parse(f(i.LOG+"(tanh(({0})/2))",De));break;case G:b=t.parse(f(i.LOG+"(sinh({0}))",De));break;case M:b=K.integrate(t.parse(f("e^({0})",De)),$,h);break;case"S":De=W.args[0].clone();var Xe=K.integration.decompose_arg(De,$),$e=Xe[1],We=Xe[0],Qe=Xe[3];b=t.parse(f("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",We,Qe,ne));break;case"C":De=W.args[0].clone(),Xe=K.integration.decompose_arg(De,$),$e=Xe[1],We=Xe[0],Qe=Xe[3];b=t.parse(f("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",We,Qe,$e));break;case"erf":De=W.args[0].clone(),Xe=K.integration.decompose_arg(De,$),$e=Xe[1],We=Xe[0];b=t.parse(f("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",We,$e,De));break;case"sign":b=t.multiply(W.clone(),De.clone());break;default:K.integration.stop()}b=t.divide(b,ee)}else if(ne.isLinear())if(Fe===q||Fe===x){se=Number(W.power);if(se<0)W.fname=Fe===x?O:A,W.invert().updateHash(),b=K.integrate(W,$,h);else{De=W.args[0];var Ye=W.clone(),Ke=W.clone(),Je=new a((se-1)/se),et=t.multiply(ee.clone(),new a(se)).invert();Ye.power=Ye.power.subtract(new n(1)),Ke.power=Ke.power.subtract(new n(2));J=t.symfunction(Fe===q?x:q,[De.clone()]);Fe===x&&J.negate(),b=t.add(t.multiply(t.multiply(et,Ye),J),t.multiply(Je,K.integrate(t.parse(Ke),$,h)))}}else if(Fe===_||Fe===C){if(W.args[0].isLinear($)){Ie=W.power.subtract(new n(1)).toString();var tt=W.clone().toUnitMultiplier(),nt=t.parse(f((Fe===C?"-":"")+"1/({2}*{0})*{3}({1})^({0})",Ie,De,ee,Fe));tt.power=tt.power.subtract(new n(2)),tt.power.equals(0)&&(tt=t.parse(tt)),b=t.subtract(nt,K.integrate(tt,$,h))}}else if(Fe===A||Fe===O){var rt=W.power.subtract(new n(1)).toString(),it=W.power.subtract(new n(2)).toString(),st=Fe===A?_:C,ot=(tt=W.clone().toUnitMultiplier(),f((Fe===O?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",ee,rt,it,De,Fe,st));nt=t.parse(ot);tt.power=tt.power.subtract(new n(2)),tt.power.equals(0)&&(tt=t.parse(tt)),b=t.add(nt,t.multiply(new a(it/rt),K.integrate(tt,$,h)))}else Fe!==D&&Fe!==k||!W.power.equals(2)?K.integration.stop():b=K.integrate(W.fnTransform(),$,h);else K.integration.stop();b.multiplier=b.multiplier.multiply(ie)}}else if(Q===v)b=K.integration.partial_fraction(W,$,h);else if(Q===w){var at=W.getDenom();at.group===g&&(W=t.expand(W));var ut=W.stripVar($),lt=t.divide(W.clone(),ut.clone());if(ut.contains($)&&(lt=t.multiply(lt,ut),ut=new a(1)),lt.group!==w){if(lt.equals(1))return K.integrate(t.expand(W),$,h);lt.clone().toLinear().isPoly(!0)&&e.Utils.variables(lt).length>1&&(lt=e.Algebra.Factor.factor(lt)),b=K.integrate(lt,$,h)}else{var ct=lt.collectSymbols().sort((function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group})).map((function(e){var n=a.unwrapSQRT(e,!0);return n.fname===M?t.parse(f("({1})*e^({0})",n.args[0],n.multiplier)):n})),ft=ct.length;if(W.power<0){if(2===ft)return K.integrate(t.expand(W),$,h,m)}else if(2===ft){try{b=K.integration.u_substitution(ct,$)}catch(rn){}if(!b){var pt=ct[0].group,ht=ct[1].group,mt=ct[0],gt=ct[1],vt=mt.fname,dt=gt.fname;if(W=t.multiply(mt.clone(),gt.clone()),pt===o&&ht===o)if(vt===S||dt===S)b=K.integration.by_parts(W.clone(),$,h,m);else{ct.sort((function(e,t){return t.fname>e.fname}));var wt=mt.args[0];(!wt.isLinear()||wt.group!==d&&wt.group!==w&&wt.group!==g)&&K.integration.stop();ae=K.integration.decompose_arg(wt,$);ne=ae[1],ee=ae[0],ne.isLinear()||K.integration.stop();var yt=gt.args[0];if(wt.equals(yt))if(vt===x&&dt===q||vt===q&&dt===x)if(mt.power.lessThan(0)&&K.integration.stop(),vt===x&&mt.power.add(gt.power).equals(0))mt.fname=_,mt.updateHash(),b=K.integrate(mt,$,h);else if(p(mt.power)&&dt===q&&gt.power.lessThan(0)){Ie=Number(mt.power)/2;var bt=t.parse(f("(1-cos({0})^2)^({1})",mt.args[0],Ie));b=K.integrate(t.expand(t.multiply(bt,gt.clone())),$,h,m)}else if(p(mt.power)&&dt===x&&gt.power.lessThan(0)){Ie=Number(mt.power)/2,bt=t.parse(f("(1-sin({0})^2)^({1})",mt.args[0],Ie));b=K.integrate(t.expand(t.multiply(bt,gt.clone())),$,h,m)}else{var St=e.Utils.even(mt.power),Mt=e.Utils.even(gt.power);if(b=new a(0),St&&Mt){var Et=function(e){var n,r=e.power,i=r/2;return n=e.fname===q?"((1/2)+(cos(2*("+e.args[0]+"))/2))^"+i:"((1/2)-(cos(2*("+e.args[0]+"))/2))^"+i,t.parse(n)};ee=Et(mt),ue=Et(gt),J=t.multiply(ee,ue),Ve=t.expand(J);return Ve.each((function(e){b=t.add(b,K.integrate(e,$,h))})),t.multiply(b,ut)}St?(je=mt,tt=gt):(je=gt,tt=mt);var Nt=je.fname===q?-1:1,xt=(Ie=tt.power,(Ie-1)/2),qt=t.parse("(1-"+je.fname+e.Utils.inBrackets(wt)+"^2)^"+xt),Ve=t.expand(t.multiply(new a(Nt),t.multiply(je.clone(),qt)));Ve.each((function(e){b=t.add(b,K.integration.poly_integrate(e.clone()))}))}else if(vt===A&&dt===_&&ne.isLinear()&&gt.isLinear())b=t.parse(f("sec({0})^({1})/({1})",mt.args[0],mt.power));else if(vt===_&&dt===A&&ne.isLinear())if(mt.isLinear()&&gt.isLinear())b=t.divide(t.symfunction(A,[wt.clone()]),ee);else if(p(mt.power)){se=Number(mt.power)/2,J=t.parse(f("(sec({0})^2-1)^({1})",mt.args[0],se));b=K.integrate(t.expand(t.multiply(J,gt)),$,h)}else K.integration.stop();else if(vt===A&&dt===q)mt.fname=q,mt.invert().updateHash(),b=K.integrate(t.multiply(mt,gt),$,h);else if(vt===x&&dt===O)gt.fname=x,gt.invert().updateHash(),b=K.integrate(t.multiply(mt,gt),$,h);else if(vt!==_||dt!==q&&dt!==x||!gt.power.lessThan(0)){J=t.multiply(mt.fnTransform(),gt.fnTransform());b=K.integrate(t.expand(J),$,h)}else{var J=t.multiply(mt.fnTransform(),gt);b=K.integrate(t.expand(J),$,h)}else if(vt!==x&&vt!==q||dt!==x&&dt!==q)K.integration.stop();else if(mt.isLinear()&&gt.isLinear())if(mt.args[0].isLinear()&&gt.args[0].isLinear()){dt===x?(le=mt.args[0],Zt=gt.args[0]):(Zt=mt.args[0],le=gt.args[0]),me=t.parse(f("(sin(({1})+({0}))+sin(({1})-({0})))/2",le.toString(),Zt.toString())),b=K.integrate(me,$,h)}else{var _t=Y(ct);b=K.integrate(t.expand(_t),$,h)}else{_t=new a(1);ct.map((function(e){var n=e.fnTransform();_t=t.multiply(_t,n)}));J=t.expand(_t);b=K.integrate(J,$,h),b.hasIntegral()&&(b=K.integrate(Y(_t.collectSymbols()),$,h))}}else if(pt===o&&ht===g){var At=mt.isLinear();if(mt.fname===q&&At&&gt.power.equals(-1))b=t.symfunction("Ci",[mt.args[0]]);else if(mt.fname===q&&gt.power.equals(-1))b=K.integrate(t.multiply(mt.fnTransform(),gt.clone()),$,h);else if(mt.fname===D&&At&&gt.power.equals(-1))b=t.symfunction("Chi",[mt.args[0]]);else if(mt.fname===D&&gt.power.equals(-1))b=K.integrate(t.multiply(mt.fnTransform(),gt.clone()),$,h);else if(mt.fname===x&&At&&gt.power.equals(-1))b=t.symfunction("Si",[mt.args[0]]);else if(mt.fname===x&&gt.power.equals(-1))b=K.integrate(t.multiply(mt.fnTransform(),gt.clone()),$,h);else if(mt.fname===k&&At&&gt.power.equals(-1))b=t.symfunction("Shi",[mt.args[0]]);else if(mt.fname===k&&gt.power.equals(-1))b=K.integrate(t.multiply(mt.fnTransform(),gt.clone()),$,h);else if(mt.fname===S&&gt.power.equals(-1))b=K.integration.poly_integrate(mt,$,h);else if("erf"===mt.fname){if(gt.power.equals(1)){Xe=K.integration.decompose_arg(mt.args[0],$),We=Xe[0],$e=Xe[1],De=mt.args[0].toString();b=t.parse(f("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",We,$e,De))}}else b=K.integration.by_parts(W,$,h,m)}else if(pt===y&&ht===g){ne=vt===S?K.integration.decompose_arg(mt.args[0],$)[1]:null;b=mt.isE()&&(mt.power.group===g||mt.power.group===w)&&gt.power.equals(-1)?t.symfunction("Ei",[mt.power.clone()]):vt===S&&ne.value===gt.value?K.integration.poly_integrate(mt,$,h):K.integration.by_parts(W,$,h,m)}else if(pt===v&&ht===g){if(gt.value===mt.value&&mt.power.equals(-1)){var Ot=Math.min.apply(null,e.Utils.keys(mt.symbols)),Ct=Math.min(Ot,gt.power),It=gt.clone();It.power=new n(Ct),gt=t.divide(gt,It.clone());J=new a(0);mt.each((function(e){J=t.add(J,t.divide(e.clone(),It.clone()))})),J.multiplier=mt.multiplier,W=t.divide(gt,J)}else W=t.expand(W);b=K.integration.partial_fraction(W,$,h)}else if(pt===d&&ht===g){me=mt.clone().toLinear();var Lt=e.Algebra.degree(me,t.parse($)).equals(1);if(mt.power.equals(-.5)){ae=K.integration.decompose_arg(mt.clone().toLinear(),$),ee=ae[0].negate(),ne=ae[1],ue=ae[3];var Ut=Number(mt.power),Rt=Number(gt.power);if(c(Rt)&&e.Utils.even(Rt)&&ne.power.equals(2)){var Tt=t.divide(t.multiply(t.pow(ue.clone(),new a(2)),t.symfunction(N,[t.divide(ue.clone(),ee.clone())])),t.pow(ee.clone(),new a(2)));Tt=t.multiply(Tt,t.symfunction(N,[ue]).invert());var Pt=t.parse("sin(u)");Pt.power=Pt.power.multiply(gt.power);Le=K.integrate(Pt,"u",h);var kt=t.parse(I+"("+N+"("+ee+"/"+ue+")*"+$+")");b=t.multiply(Tt,Le.sub(new a("u"),kt))}else if(-.5===Ut){var Dt=function(e,n){var r=t.parse(K.integrate(e,$,h,m).sub($,f(n,$)));if(!r.hasIntegral())return r};-1===Rt?b=Dt(t.expand(t.expand(t.pow(t.multiply(mt.invert(),gt.invert()),new a(2)))).invert(),"sqrt(1-1/({0})^2)"):-2===Rt&&(b=Dt(t.sqrt(t.expand(t.divide(t.pow(W,new a(2)).invert(),t.pow(new a($),new a(2))).negate())).invert(),"sqrt(1-1/({0})^2)"))}}else if(mt.power.equals(-1)&&gt.isLinear()&&Lt)b=K.integration.partial_fraction(W,$,h);else if(!mt.power.lessThan(0)&&c(mt.power)){var Ft=t.expand(mt);b=new a(0),Ft.each((function(e){e.group===v?e.each((function(e){b=t.add(b,K.integrate(t.multiply(gt.clone(),e),$,h))})):b=t.add(b,K.integrate(t.multiply(gt.clone(),e),$,h))}))}else if(mt.power.lessThan(-2))b=K.integration.by_parts(W,$,h,m);else if(mt.power.lessThan(0)&&gt.power.greaterThan(1)){ae=K.integration.decompose_arg(mt.clone().toLinear(),$),ee=ae[0].negate(),ne=ae[1],ue=ae[3],oe=mt.clone().toLinear();if(ne.group!==v&&ne.isLinear()){se=Number(gt.power),Be="_u_",je=new a(Be);var jt=t.expand(t.divide(t.pow(t.subtract(je.clone(),ue.clone()),new a(se)),je.clone())),Bt={};Bt[Be]=oe;var Gt=t.parse(jt,Bt);b=K.integrate(Gt,$,0)}else if(gt.power.greaterThan(ne.power)||gt.power.equals(ne.power)){var Vt=new e.Algebra.Classes.Factors;mt=e.Algebra.Factor.coeffFactor(mt.invert(),Vt);var Ht=e.Algebra.divide(gt,mt);Ht.group!==w?(b=new a(0),Ht.each((function(e){b=t.add(b,K.integrate(e,$,h))})),Vt.each((function(e){b=t.divide(b,e)})),b=t.expand(b)):b=K.integration.by_parts(W,$,h,m)}else b=K.integration.partial_fraction(W,$,h)}else if(mt.power.den.equals(2)){Xe=K.integration.decompose_arg(mt.clone().toLinear(),$),ee=Xe[3],ne=Xe[1],ue=Xe[0];var Zt=Xe[2];if(ne.power.equals(2)&&ue.lessThan(0)){ee.equals(1)||(ut=t.multiply(ut,t.pow(ee,new a(2))));je=$,Tt=t.divide(t.pow(ue.clone().negate(),new a(.5)),t.pow(ee,new a(.5))),Be=t.symfunction(q,[new a(je)]);var zt=t.pow(t.symfunction(q,[new a(je)]),new a(mt.power.num)),Xt=t.pow(t.symfunction(x,[new a(je)]),new a(gt.power)),$t=t.multiply(t.multiply(zt,Be),Xt);Le=K.integrate($t,je,h);b=Le.sub(je,t.symfunction(I,[t.multiply(new a($),Tt)]))}else b=K.integration.partial_fraction(W,$,h,m)}else Lt&&(b=K.integration.partial_fraction(W,$,h))}else if(mt.isComposite()&&gt.isComposite())if(b=new a(0),mt.power.greaterThan(0)&&gt.power.greaterThan(0)){Ve=t.expand(W);Ve.each((function(e){b=t.add(b,K.integrate(e,$,h))}),!0)}else{Ut=Number(mt.power),Rt=Number(gt.power);if(Ut<0&&Rt>0){J=mt;mt=gt,gt=J}-1===Ut&&-1===Rt?b=K.integration.partial_fraction(W,$):mt.each((function(e){var n=t.multiply(e,gt.clone()),r=K.integrate(n,$,h);b=t.add(b,r)}))}else if(pt===d&&ct[0].power.greaterThan(0))mt=t.expand(mt),b=new a(0),mt.each((function(e){b=t.add(b,K.integrate(t.multiply(e,gt.clone()),$,h))}),!0);else if(pt===o&&ht===y&&e.Utils.in_htrig(mt.fname))mt=mt.fnTransform(),b=K.integrate(t.expand(t.multiply(mt,gt)),$,h);else if(pt===o&&ht===d||ht===o&&pt===d){if(ht===o&&pt===d){J=mt;mt=gt,gt=J}var Wt,Qt,Yt;if(Be=a.unwrapSQRT(K.diff(mt.clone(),$),!0),Wt=a.unwrapSQRT(gt,!0),Be.power.equals(Wt.power)){if(se=new a(gt.power),Qt=Be.clone().toLinear(),Yt=gt.clone().toLinear(),Je=e.Algebra.divide(Qt.toLinear(),Yt),Je.isConstant()){var Kt=t.pow(Je,se.negate());b=t.multiply(Kt,K.integration.poly_integrate(mt.clone()))}}else b=K.integration.by_parts(W,$,h,m)}else{var Jt=mt.clone().toLinear(),en=gt.clone().toLinear();b=pt===y&&ht===y&&mt.power.contains($)&&gt.power.contains($)&&!Jt.contains($)&&!en.contains($)?t.parse(f("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",Jt.toString(),en.toString(),mt.power.multiplier.toString(),gt.power.multiplier.toString(),$)):K.integration.by_parts(W,$,h,m)}}}else if(3===ft&&(ct[2].group===g&&ct[2].power.lessThan(2)||ct[0].group===d)){var tn=ct[0];if(tn.group===d){tn.power.greaterThan(1)&&(tn=t.expand(tn));tt=t.multiply(ct[1],ct[2]);b=new a(0),tn.each((function(e){var n=t.multiply(e,tt.clone()),r=K.integrate(n,$,h);b=t.add(b,r)}),!0)}else b=K.integration.by_parts(W,$,h,m)}else if(X(ct)){J=new a(1);var nn=0;for(ft=ct.length;nn<ft;nn++)J=t.multiply(J,ct[nn].fnTransform());J=t.expand(J),b=K.integrate(J,$,h)}else{_t=Y(ct);b=K.integrate(t.expand(_t),$,h)}}b=t.multiply(b,ut)}}else b=t.multiply(W.clone(),t.parse($));if(b)return b}catch(sn){if(!(sn instanceof z||sn instanceof e.exceptions.DivisionByZero))throw sn}return t.symfunction("integrate",[r,u])}),!1))},defint:function(n,r,i,s){s=s||"x";var o,u,l=function(e,n,r){try{return t.parse(e,n)}catch(o){var i=K.Limit.limit(e,s,r);return i}},c=e.Utils.variables(n),f=n.hasTrig();if(1!==c.length||s||(s=c[0]),f||(u=K.integrate(n,s)),f||u.hasIntegral())if(1===c.length&&r.isConstant()&&i.isConstant()){var p=e.Utils.build(n);o=new a(e.Math2.num_integrate(p,Number(r),Number(i)))}else o=t.symfunction("defint",[n,r,i,s]);else{var h,m,g={},v={};g[s]=i,v[s]=r,h=l(u,g,i,s),m=l(u,v,r,s),o=t.subtract(h,m)}return o},Limit:{interval:function(e,n){return t.parse(f("[{0}, {1}]",e,n))},diverges:function(){return K.Limit.interval("-Infinity","Infinity")},divide:function(n,r,s,o,u){if(!(u++>i.max_lim_depth)){n.clone();var l=r.clone();if(r.fname===E){var c=n.sign(),f=o.sign();if(o.isInfinity)return t.multiply(new a(c),new a(f));if(o.equals(0)){var p=t.parse(n.multiplier),m=t.parse(r.multiplier);return t.divide(t.multiply(p,K.Limit.interval("-1","1")),m)}K.Limit.diverges()}var g,v=function(t){if(e.Utils.isVector(t)){for(var n=0;n<t.elements.length;n++)if(!t.elements[n].isInfinity)return!1;return!0}return t.isInfinity},d=function(t,n){return!e.Utils.isVector(t)&&t.equals(n)};do{var w=h(K.Limit.limit(n.clone(),s,o,u)),y=h(K.Limit.limit(r.clone(),s,o,u)),b=v(w)&&v(y)||d(w,0)&&d(y,0);if(b){var S=K.diff(n.clone(),s),M=K.diff(r.clone(),s),N=t.expand(t.divide(S,M));n=N.getNum(),r=N.getDenom()}}while(b);var x=y.equals(0),q=Number(l.power);return g=o.isConstant(!0)&&x?a.infinity(e.Utils.even(q)&&w.lessThan(0)?-1:void 0):x?K.Limit.diverges():t.divide(w,y),g}},rewriteToLog:function(e){var n=e.power.clone();return e.toLinear(),t.pow(new a("e"),t.multiply(n,t.symfunction(i.LOG+"",[e])))},getSubbed:function(e,t,n){var r;e.group===y&&(e=K.rewriteToLog(e));try{r=e.sub(t,n)}catch(i){r=e}return r},isInterval:function(t){return e.Utils.isVector(t)},isConvergent:function(e){return!(K.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction("limit"))},limit:function(n,r,s,u){if(n.isLinear()&&n.isComposite()){var l=new a(0);return n.each((function(e){l=t.add(l,K.Limit.limit(e,r,s,u))}),!0),l}if(n=e.Algebra.Simplify.simplify(n),u=u||1,!(u++>i.max_lim_depth)){var c=t.parse(n.multiplier);n.toUnitMultiplier();try{var p;if(n.isConstant(!0))p=n;else{var m={};m[r]=s;try{var v=t.parse(n.sub(r,s),m);(v.isConstant(!0)||v.isInfinity)&&(p=v)}catch(Y){}if(!p){var d=n.getNum(),b=n.getDenom();if(b.isConstant(!0)){if(n.group===y){var M=n.clone().toLinear(),E=(n.power.clone(),M.getNum()),N=M.getDenom(),A=e.Utils.decompose_fn(N,r,!0);if(E.group===g&&E.multiplier.isOne()&&A.ax.group===g&&A.b.isConstant(!0)&&A.a.isOne()&&A.b.isConstant(!0))p=t.parse(f("(1/e^({0}))",A.b));else{var O=K.Limit.rewriteToLog(n.clone()),C=O.power.clone(),I=O.clone().toLinear(),L=K.Limit.limit(I,r,s,u),U=K.Limit.limit(C,r,s,u);p=t.pow(L,U)}}else if(n.group===o&&1===n.args.length){var R,T=K.Limit.limit(n.args[0],r,s,u);if(e.Utils.isVector(T))return p=T.map((function(e){var i=n.clone();return i.args[0]=e,K.Limit.limit(t.symfunction(n.fname,[e]),r,s,u)})),t.multiply(c,p);if(T.isConstant(!0)){var P=t.symfunction(n.fname,[T]);try{h(P),R=!0}catch(Y){R=!1}}if(R)p=P;else if(K.Limit.isConvergent(T))if(n.fname===S)switch(T.toString()){case"0":p=a.infinity().negate();break;case"Infinity":p=a.infinity();break;case"-Infinity":p=a.infinity();break}else if(n.fname!==q&&n.fname!==x||!s.isInfinity){if(n.fname===_){var k=n.args[0],D=k.getNum(),F=k.getDenom(),j=D.toUnitMultiplier();(s.isInfinity||j.equals("pi")&&F.equals(2))&&(p=divergent())}else if(n.fname===i.FACTORIAL&&T.isInfinity)return a.infinity()}else p=K.Limit.interval(-1,1)}else if(n.group===g){if(n.power>0)return t.parse(n,m);p=e.Utils.even(n.power)?a.infinity():K.Limit.diverges()}else if(n.group===w){var B,G,V=n.collectSymbols().sort((function(e,t){return e.group-t.group}));M=V.pop();B=h(K.Limit.limit(M,r,s,u));while(V.length){var H=V.pop();G=h(K.Limit.limit(H,r,s,u)),B.isInfinity||!K.Limit.isConvergent(B)&&G.equals(0)||B.equals(0)&&K.Limit.isConvergent(G)?(H.containsFunction(S)&&(H=[M,M=H][0]),H.invert(),B=B.isInfinity&&G.isInfinity?a.infinity():K.Limit.divide(M,H,r,s,u)):(B=t.multiply(B,G),M=t.multiply(M,H))}p=B}else if(n.isComposite()){var Z;n.isLinear()||(n=t.expand(n)),p=new a(0);V=n.collectSymbols().sort((function(e,t){return t.group-e.group}));for(var z=[],X=new a(0),$=0,W=V.length;$<W;$++){var Q=V[$].clone();Q.group===o||Q.group===w&&Q.hasFunc()?X=t.add(X,Q):z.push(Q)}z.unshift(X),1!==z.length&&(V=z);for($=0,W=V.length;$<W;$++){Q=V[$];try{Z=K.Limit.limit(Q,r,s,u)}catch(Y){Z=K.Limit.diverges()}try{p=t.add(p,Z)}catch(Y){if(u++>i.max_lim_depth)return;p=K.Limit.limit(K.diff(n,r),r,s,u)}}}}else p=K.Limit.divide(d,b,r,s,u)}}p||(p=t.symfunction("limit",[n,r,s]))}catch(Y){p=t.symfunction("limit",[n,r,s])}return t.multiply(c,p)}}},Fresnel:{S:function(e){return e.isConstant(!0)?K.defint(t.parse("sin(pi*x^2/2)"),a(0),e,"x"):t.symfunction("S",arguments)},C:function(e){return e.isConstant(!0)?K.defint(t.parse("cos(pi*x^2/2)"),a(0),e,"x"):t.symfunction("C",arguments)}}};r.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return K.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return K.sum}},{name:"product",visible:!0,numargs:4,build:function(){return K.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return K.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return K.defint}},{name:"S",visible:!0,numargs:1,build:function(){return K.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return K.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return K.Limit.limit}}]),r.api()})()},"62e4":function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},"7c6f":function(e,t,n){"use strict";n.r(t);var r=n("7a23");Object(r["v"])("data-v-7e216362");const i={id:"container"},s=Object(r["i"])("Re : "),o=Object(r["i"])("Type of flow : "),a=Object(r["i"])("Turbulent ( Colebrook )"),u=Object(r["i"])("Turbulent ( Haaland )"),l=Object(r["h"])("br",null,null,-1),c=Object(r["h"])("br",null,null,-1),f={key:0,class:"invert",src:"/img/lamFriction.png",style:{"padding-left":"2%","padding-right":"2%"}},p={key:1},h={key:2},m={key:3},g=Object(r["i"])("Eqn : "),v={key:5,class:"invert",src:"/img/haaland.png",style:{"padding-left":"2%","padding-right":"2%"}},d={key:6},w={key:7},y={key:8},b={key:9,class:"invert",src:"/img/turbFriction.png",style:{"padding-left":"2%","padding-right":"2%"}},S={key:10},M={key:11},E={key:12},N=Object(r["i"])("ε : "),x=Object(r["i"])("D : "),q=Object(r["i"])("f  : "),_=Object(r["h"])("br",null,null,-1),A=Object(r["i"])("Clear");function O(e,t,n,O,C,I){const L=Object(r["z"])("Header"),U=Object(r["z"])("Exit"),R=Object(r["z"])("ion-label"),T=Object(r["z"])("ion-input"),P=Object(r["z"])("ion-item"),k=Object(r["z"])("ion-select-option"),D=Object(r["z"])("ion-select"),F=Object(r["z"])("ion-list"),j=Object(r["z"])("ion-button"),B=Object(r["z"])("ion-content"),G=Object(r["z"])("Help"),V=Object(r["z"])("ion-page");return Object(r["s"])(),Object(r["e"])(V,null,{default:Object(r["E"])(()=>[Object(r["j"])(L,{title:"Internal Flow",clear:e.clear},null,8,["clear"]),Object(r["j"])(B,{fullscreen:!0},{default:Object(r["E"])(()=>[Object(r["j"])(U),Object(r["h"])("div",i,[Object(r["j"])(F,null,{default:Object(r["E"])(()=>[Object(r["j"])(P,null,{default:Object(r["E"])(()=>[Object(r["j"])(R,null,{default:Object(r["E"])(()=>[s]),_:1}),Object(r["j"])(T,{modelValue:e.re,"onUpdate:modelValue":t[0]||(t[0]=t=>e.re=t),type:"number",placeholder:"Enter Reynold's Number"},null,8,["modelValue"])]),_:1}),parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["e"])(P,{key:0},{default:Object(r["E"])(()=>[Object(r["j"])(R,null,{default:Object(r["E"])(()=>[o]),_:1}),Object(r["j"])(D,{modelValue:e.flow,"onUpdate:modelValue":t[1]||(t[1]=t=>e.flow=t),interface:"popover"},{default:Object(r["E"])(()=>[Object(r["j"])(k,{value:"turbC"},{default:Object(r["E"])(()=>[a]),_:1}),Object(r["j"])(k,{value:"turbH"},{default:Object(r["E"])(()=>[u]),_:1})]),_:1},8,["modelValue"])]),_:1})):Object(r["f"])("",!0)]),_:1}),l,c,e.re<=2300?(Object(r["s"])(),Object(r["g"])("img",f)):Object(r["f"])("",!0),e.re<=2300?(Object(r["s"])(),Object(r["g"])("br",p)):Object(r["f"])("",!0),e.re<=2300?(Object(r["s"])(),Object(r["g"])("br",h)):Object(r["f"])("",!0),e.re<=2300?(Object(r["s"])(),Object(r["g"])("br",m)):Object(r["f"])("",!0),e.re<=2300?(Object(r["s"])(),Object(r["e"])(F,{key:4},{default:Object(r["E"])(()=>[Object(r["j"])(P,null,{default:Object(r["E"])(()=>[Object(r["j"])(R,null,{default:Object(r["E"])(()=>[g]),_:1}),Object(r["j"])(T,{modelValue:e.eqn,"onUpdate:modelValue":t[2]||(t[2]=t=>e.eqn=t),placeholder:"Enter Friction Equation ( 64/Re )"},null,8,["modelValue"])]),_:1})]),_:1})):Object(r["f"])("",!0),"turbH"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["g"])("img",v)):Object(r["f"])("",!0),"turbH"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["g"])("br",d)):Object(r["f"])("",!0),"turbH"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["g"])("br",w)):Object(r["f"])("",!0),"turbH"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["g"])("br",y)):Object(r["f"])("",!0),"turbC"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["g"])("img",b)):Object(r["f"])("",!0),"turbC"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["g"])("br",S)):Object(r["f"])("",!0),"turbC"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["g"])("br",M)):Object(r["f"])("",!0),"turbC"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["g"])("br",E)):Object(r["f"])("",!0),"turbC"==e.flow||"turbH"==e.flow&&parseFloat(e.re)>=2301?(Object(r["s"])(),Object(r["e"])(F,{key:13},{default:Object(r["E"])(()=>[Object(r["j"])(P,null,{default:Object(r["E"])(()=>[Object(r["j"])(R,null,{default:Object(r["E"])(()=>[N]),_:1}),Object(r["j"])(T,{modelValue:e.e,"onUpdate:modelValue":t[3]||(t[3]=t=>e.e=t),placeholder:"Enter Roughness ( mm )"},null,8,["modelValue"])]),_:1}),Object(r["j"])(P,null,{default:Object(r["E"])(()=>[Object(r["j"])(R,null,{default:Object(r["E"])(()=>[x]),_:1}),Object(r["j"])(T,{modelValue:e.d,"onUpdate:modelValue":t[4]||(t[4]=t=>e.d=t),placeholder:"Enter Diameter ( m )"},null,8,["modelValue"])]),_:1})]),_:1})):Object(r["f"])("",!0),Object(r["j"])(P,null,{default:Object(r["E"])(()=>[Object(r["j"])(R,null,{default:Object(r["E"])(()=>[q]),_:1}),e.fShow?(Object(r["s"])(),Object(r["e"])(T,{key:0,value:e.fShow,readonly:""},null,8,["value"])):Object(r["f"])("",!0),e.fTurbShow?(Object(r["s"])(),Object(r["e"])(T,{key:1,value:e.fTurbShow,readonly:""},null,8,["value"])):Object(r["f"])("",!0),e.fTurbShowH?(Object(r["s"])(),Object(r["e"])(T,{key:2,value:e.fTurbShowH,readonly:""},null,8,["value"])):Object(r["f"])("",!0)]),_:1}),_,Object(r["j"])(j,{color:"dark",onClick:t[5]||(t[5]=t=>e.clear()),id:"clear"},{default:Object(r["E"])(()=>[A]),_:1})])]),_:1}),Object(r["j"])(G)]),_:1})}Object(r["t"])();var C=n("257f");n("28dc");C["a"].render=O,C["a"].__scopeId="data-v-7e216362";t["default"]=C["a"]},aec1:function(e,t,n){var r=n("15f6");n("4016"),function(){"use strict";var e=r.getCore(),t=e.PARSER,n=e.groups.N,i=e.groups.P,s=e.groups.S,o=e.groups.EX,a=e.groups.FN,u=e.groups.PL,l=e.groups.CP,c=e.groups.CB,f=e.Utils.keys,p=e.Utils.even,h=e.Utils.variables,m=e.Utils.format,g=e.Utils.round,v=e.Frac,d=e.Utils.isInt,w=e.Symbol,y=e.Settings.CONST_HASH,b=e.Utils.importFunctions();e.Utils.evaluate;function S(n,r,i){if(e.Utils.isSymbol(n))this.parse(n),this.variable=this.variable||r;else if(isNaN(n))"string"===typeof n&&this.parse(t.parse(n));else{if(i=i||0,void 0===r)throw new e.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[i]=n,this.fill(n)}}function M(){this.factors={},this.length=0}function E(t,n,r){this.terms=n||[],this.coeff=t,this.map=r,this.sum=new e.Frac(0),this.image=void 0}S.fromArray=function(t,n){if("undefined"===typeof n)throw new e.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var r=new S;return r.coeffs=t,r.variable=n,r},S.fit=function(e,t,n,r,i,s){var o=new Array(i+1),a=n-t;o[0]=t,o[i]=e,a-=e*Math.pow(r,i);for(var u=i-1;u>0;u--){var l=Math.pow(r,u),c=a/l,f=Math.sign(c),p=f*Math.floor(Math.abs(c));a-=p*l,o[u]=p}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new v(o[u]);return S.fromArray(o,s)},S.prototype={parse:function(r,i){if(this.variable=h(r)[0],!r.isPoly())throw e.exceptions.NerdamerTypeError("Polynomial Expected! Received "+e.Utils.text(r));if(i=i||[],r.power.absEquals(1)||(r=t.expand(r)),r.group===e.groups.N)i[0]=r.multiplier;else if(r.group===e.groups.S)i[r.power.toDecimal()]=r.multiplier;else for(var s in r.symbols){var o=r.symbols[s],a=o.power;if(e.Utils.isSymbol(a))throw new e.exceptions.NerdamerTypeError("power cannot be a Symbol");a=o.group===n?0:a.toDecimal(),o.symbols?this.parse(o,i):i[a]=o.multiplier}this.coeffs=i,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,n=0;n<t;n++)void 0===this.coeffs[n]&&(this.coeffs[n]=new v(e));return this},trim:function(){var e=this.coeffs.length;while(e--){var t=this.coeffs[e],n=t.equals(0);if(!t||!n)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,n=0;n<t;n++){var r=this.coeffs[n];if(r<0){for(var i,s=n;s<t;s++)if(this.coeffs[s]>0){i=this.coeffs[s];break}if(i){for(s;s>n;s--)this.coeffs[s]=this.coeffs[s].subtract(new v(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new v(e));r=this.coeffs[n]}}var o=r.mod(e),a=r.subtract(o).divide(e);if(!a.equals(0)){var u=n+1,l=this.coeffs[u]||new v(0);l=l.add(a),this.coeffs[u]=new v(l),this.coeffs[n]=new v(o)}}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new v(0),i=e.coeffs[n]||new v(0);this.coeffs[n]=r.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new v(0),i=e.coeffs[n]||new v(0);this.coeffs[n]=r.subtract(i)}return this},divide:function(t){for(var n=this.variable,r=e.Utils.arrayClone(this.coeffs),i=e.Utils.arrayClone(t.coeffs),s=r.length,o=i.length-1,a=[],u=0;u<s;u++){var l=s-(u+1),c=l-o,f=r[l].divide(i[o]);if(c<0)break;a[c]=f;for(var p=0;p<=o;p++)r[p+c]=r[p+c].subtract(i[p].multiply(f))}var h=S.fromArray(r,n||"x").trim(),m=S.fromArray(a,n||"x");return[m,h]},multiply:function(e){for(var t=this.coeffs.length,n=e.coeffs.length,r=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<n;o++){var a=i+o,u=e.coeffs[o],l=r[a]||new v(0);r[a]=l.add(s.multiply(u))}return this.coeffs=r,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++){var n=this.coeffs[t];if(!n.equals(0))return!1}return!0},sub:function(e){for(var t=new v(0),n=this.coeffs.length,r=0;r<n;r++){var i=this.coeffs[r];i.equals(0)||(t=t.add(i.multiply(new v(Math.pow(e,r)))))}return t},clone:function(){var e=new S;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,n=0;n<t;n++)this.coeffs[n]=this.coeffs[n].divide(e);return this},gcd:function(t){var n,r=this.coeffs.length-1,i=t.coeffs.length-1;if(r<i)return t.gcd(this);var s=this;while(!t.isZero()){var o=t.clone();s=s.clone(),n=s.divide(o),t=n[1],s=o}var a=e.Math2.QGCD.apply(null,s.coeffs);if(!a.equals(1))for(var u=s.coeffs.length,l=0;l<u;l++)s.coeffs[l]=s.coeffs[l].divide(a);return s},diff:function(){for(var e=[],t=this.coeffs.length,n=1;n<t;n++)e.push(this.coeffs[n].multiply(new v(n)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,n=0;n<t;n++){var r=new v(n+1);e[r]=this.coeffs[n].divide(r)}return this.coeffs=e,this},gcf:function(t){for(var n=function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t},r=[],i=0;i<this.coeffs.length;i++){var s=this.coeffs[i];s.equals(0)||-1!==r.indexOf(s)||r.push(s)}var o=[e.Math2.QGCD.apply(void 0,r),n(this.coeffs)].toDecimal();if(t){var a=[];a[o[1]-1]=o[0],o=S.fromArray(a,this.variable).fill()}return o},quad:function(e){var t=[];if(this.coeffs.length>3)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error("Polynomial array has no terms");var n=this.coeffs[2]||0,r=this.coeffs[1]||0,i=this.coeffs[0],s=r*r-4*n*i;return s<0&&!e||(t[0]=(-r+Math.sqrt(s))/(2*n),t[1]=(-r-Math.sqrt(s))/(2*n)),t},squareFree:function(){var e=this.clone(),t=1,n=e.clone().diff(),r=e.clone().gcd(n),i=e.divide(r)[0],s=S.fromArray([new v(1)],e.variable);while(!r.equalsNumber(1)){var o=i.gcd(r),a=i.divide(o)[0];if(!a.equalsNumber(1)&&t>1){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,i=o,r=r.divide(o)[0]}return[s,i,t]},toSymbol:function(){var n=this.coeffs.length,r=this.variable;if(0===n)return new e.Symbol(0);for(var i=n-1,s="",o=0;o<n;o++){var a=o===i?"":"+",u=this.coeffs[o];u.equals(0)||(s+=u+"*"+r+"^"+o+a)}return t.parse(s)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},w.prototype.coeffs=function(e,n){n&&!this.isPoly(!0)&&t.error("Polynomial expected when requesting coefficients with order"),e=e||[];var r=this.clone().distributeMultiplier();if(r.isComposite())for(var i in r.symbols){var s=r.symbols[i];s.isComposite()?s.clone().distributeMultiplier().coeffs(e,n):n?e[s.isConstant()?0:s.power.toDecimal()]=s.multiplier:e.push(s.multiplier)}else if(n)e[r.isConstant(!0)?0:r.power.toDecimal()]=r.multiplier;else if(r.group===c&&r.isImaginary()){var o=new w(r.multiplier);r.each((function(e){(e.isConstant(!0)||e.imaginary)&&(o=t.multiply(o,e))})),e.push(o)}else e.push(r.multiplier);if(n)for(var a=0;a<e.length;a++)void 0===e[a]&&(e[a]=new w(0));return e},w.prototype.tBase=function(e){if("undefined"===typeof e)throw new Error("Symbol.tBase requires a map object!");for(var t=[],n=this.collectSymbols(null,null,null,!0),r=n.length,i=0;i<r;i++){var s=n[i],o=s.group,a=new E(s.multiplier,[],e);if(o===c)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},w.prototype.altVar=function(e){var t=this.multiplier.toString(),n=this.power.toString();return("1"===t?"":t+"*")+e+("1"===n?"":"^"+n)},w.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var n=this.symbols[t],r=e.symbols[t];if(!r)return!1;if(n.value!==r.value)return!1}return!0},w.prototype.groupTerms=function(n){var r,i,s;n=String(n);var o=[];return this.each((function(a){if(a.group===u){s=a.groupTerms(n);for(var l=0;l<s.length;l++){var c=s[l];c&&(o[l]=c)}}else r=e.Utils.decompose_fn(a,n,!0),i=r.x.value===n?Number(r.x.power):0,o[i]=t.add(o[i]||new w(0),r.a)})),o},w.prototype.collectFactors=function(){var e=[];return this.group===c?this.each((function(t){e.push(t.clone())})):e.push(this.clone()),e},M.prototype.getNumberSymbolics=function(){var e=0;return this.each((function(t){t.isConstant(!0)||e++})),e},M.prototype.add=function(n){if(n.equals(0))return this;if(n.equals(-1)&&this.length>0){var r=e.Utils.firstObject(this.factors,null,!0);return this.add(t.symfunction(e.Settings.PARENTHESIS,[r.obj]).negate()),delete this.factors[r.key],this.length--,this}if(n.group===c){var i=this;n.multiplier.equals(1)||i.add(new w(n.multiplier)),n.each((function(e){i.add(e)}))}else{this.preAdd&&(n=this.preAdd(n)),this.pFactor&&(n=t.pow(n,new w(this.pFactor)));var s=n.isConstant();if(s&&n.equals(1))return this;var o=s?n.value:n.text();o in this.factors?(this.factors[o]=t.multiply(this.factors[o],n),this.factors[o].equals(1)&&(delete this.factors[o],this.length--)):(this.factors[o]=n,this.length++)}return this},M.prototype.toSymbol=function(){for(var n=new w(1),r=Object.values(this.factors).sort((function(e,t){return e.group>t.group})),i=0,s=r.length;i<s;i++){var o=r[i],a=o.power.equals(1)&&""!==o.fname?t.symfunction(e.PARENTHESIS,[o]):o;n=t.multiply(n,a)}return""===n.fname&&(n=w.unwrapPARENS(n)),n},M.prototype.merge=function(e){for(var n in e)n in this.factors?this.factors[n]=t.multiply(this.factors[n],e[n]):this.factors[n]=e[n];return this},M.prototype.each=function(t){for(var n in this.factors){var r=this.factors[n];r.fname===e.PARENTHESIS&&r.isLinear()&&(r=r.args[0]),t.call(this,r,n)}return this},M.prototype.count=function(){return f(this.factors).length},M.prototype.clean=function(){try{var t=e.Settings.CONST_HASH;this.factors[t].lessThan(0)&&(this.factors[t].equals(-1)?delete this.factors[t]:this.factors[t].negate(),this.each((function(e){e.negate()})))}catch(n){}},M.prototype.toString=function(){return this.toSymbol().toString()},E.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},E.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var n=this.terms[t];this.getRevMap();n.equals(0)||e.push(this.rev_map[t])}return e.join(" ")},E.prototype.len=function(){return"undefined"===typeof this.count&&this.updateCount(),this.count},E.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var n=new w(this.coeff),r=0;r<this.terms.length;r++){var i=e[r],s=this.terms[r];if(!s.equals(0)&&i!==y){var o=new w(i);o.power=s,n=t.multiply(n,o)}}return n},E.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e={};for(var t in this.map)e[this.map[t]]=t;return this.rev_map=e,e},E.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},E.prototype.getImg=function(){return this.image||this.generateImage(),this.image},E.prototype.fill=function(){for(var t=this.map.length,n=0;n<t;n++)"undefined"===typeof this.terms[n]?this.terms[n]=new e.Frac(0):this.sum=this.sum.add(this.terms[n]);return this},E.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,r=new E(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].subtract(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},E.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,r=new E(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].add(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},E.prototype.isZero=function(){return this.coeff.equals(0)},E.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},e.Utils.toMapObj=function(e){for(var t=0,n={},r=0;r<e.length;r++){var i=e[r];"undefined"===typeof n[i]&&(n[i]=t,t++)}return n.length=t,n},e.Utils.filledArray=function(e,t,n){var r=[];while(t--)r[t]=n?new n(e):e;return r},e.Utils.arrSum=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t+=e[r];return t},e.Utils.haveIntersection=function(e,t){var n;return t.length>e.length&&(n=t,t=e,e=n),e.some((function(e){return t.indexOf(e)>-1}))},e.Utils.subFunctions=function(t,n){n=n||{};var r=[];return t.each((function(t){if(t.group===a||t.previousGroup===a){var i=e.Utils.text(t,"hash"),s=n[i];if(s)r.push(t.altVar(s));else{var o=t.fname+f(n).length;n[i]=o,r.push(t.altVar(o))}}else t.group===c||t.group===u||t.group===l?r.push(e.Utils.subFunctions(t,n)):r.push(t.text())})),t.group===l||t.group===u?t.altVar(e.Utils.inBrackets(r.join("+"))):t.group===c?t.altVar(e.Utils.inBrackets(r.join("*"))):t.text()},e.Utils.getFunctionsSubs=function(e){var n={};for(var r in e)n[e[r]]=t.parse(r);return n};var N=e.Algebra={version:"1.4.6",proots:function(n,r){r=r||7;var i=0,o=[],a=function(e,t,n){for(var r=C(e,t,n).concat(o),s=0;s<i;s++)r.unshift(0);return r};if(n instanceof w&&n.isPoly()){if(n.distributeMultiplier(),n.group===u){var l=e.Utils.arrayMin(f(n.symbols)),c=n.symbols[l].clone().toUnitMultiplier();n=t.expand(t.divide(n,c)),o.push(0)}if(n.group===e.groups.S)return[0];if(n.group===e.groups.PL){var p=f(n.symbols),h=e.Utils.arrayMin(p);n=e.PARSER.divide(n,e.PARSER.parse(n.value+"^"+h))}for(var m=f(n.symbols).sort().pop(),v=n.group===e.groups.PL?n.symbols:n.symbols[m],d=v.group,b=(p=d===s?[v.power.toDecimal()]:f(v.symbols),[]),S=e.Utils.arrayMax(p),M=1;M<=S;M++){var E=0;-1!==p.indexOf(M+"")&&(E=d===s?v.multiplier:v.symbols[M].multiplier),b.unshift(E)}return b.push(n.symbols[y].multiplier),v.group===s&&(b[0]=v.multiplier),a(b,p,S)}if(e.Utils.isArray(n)){var N=n,x=(b=[],p=[],0);for(M=0;M<N.length;M++){for(var q=N[M][0],_=N[M][1],A=_-x-1,O=0;O<A;O++)b.unshift(0);b.unshift(q),0!==_&&p.push(_),x=_}S=Math.max.apply(void 0,p);return a(b,p,S)}throw new e.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!");function C(t,n,i){var s=100,o=t.slice(0);if(t.unshift(i),i>s)throw new e.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to "+s+". ");var a=[],u={};for(u.Degree=i,M=0;M<i;M++)a.push(0);var l=a.slice(0);function c(e,t,n,r,i,s){i[0]=s.b=r[0],i[1]=s.a=-t*s.b+r[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+n*s.b)+r[o],s.b=s.a,s.a=i[o]}function f(e,t,n,r,i,s,o,a,u){var l=new Object,f=3;return l.b=l.a=0,c(t,o,a,s,u,l),i.c=l.a,i.d=l.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])||(i.h=a*r,Math.abs(i.d)>=Math.abs(i.c)?(f=2,i.e=n/i.d,i.f=i.c/i.d,i.g=o*r,i.a3=i.e*(i.g+n)+i.h*(r/i.d),i.a1=-n+i.f*r,i.a7=i.h+(i.f+o)*n):(f=1,i.e=n/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*n+(i.g+i.h/i.c)*r,i.a1=-n*(i.d/i.c)+r,i.a7=i.g*i.d+i.h*i.f+n)),f}function p(e,t,n,r,i,s,o,a,u){var l;if(3!=n)if(l=1==n?i:r,Math.abs(s.a1)>10*e*Math.abs(l)){s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-u[0]*s.a7+u[1];for(c=2;c<t;c++)o[c]=-u[c-1]*s.a7+a[c-2]*s.a3+u[c]}else{o[0]=0,o[1]=-u[0]*s.a7;for(c=2;c<t;c++)o[c]=-u[c-1]*s.a7+a[c-2]*s.a3}else{o[1]=o[0]=0;for(var c=2;c<t;c++)o[c]=a[c-2]}}function h(e,t,n,r,i,s,o,a,u,l,c,f,p,h,m,g,v){var d,w,y,b,S,M,E,N,x;t.b=t.a=0,3!=e&&(2!=e?(d=n+p*o+f*l,w=a+(p+h*l)*u):(d=(n+c)*l+f,w=(l+p)*a+h*u),y=-m[g-1]/v[g],b=-(m[g-2]+y*v[g-1])/v[g],S=h*b*r,M=y*s,E=y*y*i,N=-(M+E)+S,x=-N+w+y*d,0!=x&&(t.a=-(p*(E+M)+h*(y*r+b*s))/x+p,t.b=h*(1+N/x)))}function m(e,t,n,r){var i,s,o;r.sr=r.si=r.lr=r.li=0,0!=e?0!=n?(i=t/2,Math.abs(i)<Math.abs(n)?(o=n>=0?e:-e,o=-o+i*(i/Math.abs(n)),s=Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(n))):(o=-e/i*(n/i)+1,s=Math.sqrt(Math.abs(o))*Math.abs(i)),o>=0?(s=i>=0?-s:s,r.lr=(-i+s)/e,r.sr=0!=r.lr?n/r.lr/e:r.sr):(r.lr=r.sr=-i/e,r.si=Math.abs(s/e),r.li=-r.si)):r.lr=-t/e:r.sr=0!=t?-n/t:r.sr}function v(e,t,n,r,i,s,o,a,u,l,g,v){var d,w,y,b,S,M,E,N,x,q,_,A,O=new Object,C=0,I=0;n.NZ=0,M=r,N=i;do{if(O.li=O.lr=O.si=O.sr=0,m(1,M,N,O),n.szr=O.sr,n.szi=O.si,n.lzr=O.lr,n.lzi=O.li,Math.abs(Math.abs(n.szr)-Math.abs(n.lzr))>.01*Math.abs(n.lzr))break;for(c(o,M,N,u,s,a),w=Math.abs(-n.szr*a.b+a.a)+Math.abs(n.szi*a.b),q=Math.sqrt(Math.abs(N)),d=2*Math.abs(s[0]),S=-n.szr*a.b,_=1;_<t;_++)d=d*q+Math.abs(s[_]);if(d=d*q+Math.abs(S+a.a),d=(9*d+2*Math.abs(S)-7*(Math.abs(a.a+S)+q*Math.abs(a.b)))*e,w<=20*d){n.NZ=2;break}if(C++,C>20)break;if(C>=2&&b<=.01&&w>=y&&!I){for(b=b<e?Math.sqrt(e):Math.sqrt(b),M-=M*b,N+=N*b,c(o,M,N,u,s,a),_=0;_<5;_++)A=f(e,t,a.a,a.b,g,v,M,N,l),p(e,t,A,a.a,a.b,g,v,l,s);I=1,C=0}y=w,A=f(e,t,a.a,a.b,g,v,M,N,l),p(e,t,A,a.a,a.b,g,v,l,s),A=f(e,t,a.a,a.b,g,v,M,N,l),h(A,a,a.a,g.a1,g.a3,g.a7,a.b,g.c,g.d,g.f,g.g,g.h,M,N,v,t,u),E=a.a,x=a.b,0!=x&&(b=Math.abs((-N+x)/x),M=E,N=x)}while(0!=x)}function d(e,t,n,r,i,s,o,a,u){var l,c,f,p,h,m,g,v,d,w,y,b=r-1;for(t.NZ=y=d=0,g=n.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(f=Math.abs(m),p=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*p+Math.abs(o[w]);if(f<=20*e*(2*l-f)){t.NZ=1,t.szr=g,t.szi=0;break}if(y++,y>10)break;if(y>=2&&Math.abs(v)<=.001*Math.abs(-v+g)&&f>h){d=1,t.a=g;break}for(h=f,u[0]=c=a[0],w=1;w<r;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(v=-m/c,a[0]=o[0],w=1;w<r;w++)a[w]=v*u[w-1]+o[w];else for(a[0]=0,w=1;w<r;w++)a[w]=u[w-1];for(c=a[0],w=1;w<r;w++)c=c*g+a[w];v=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0,g+=v}return d}function w(e,t,n,r,i,s,o,a,u,l,m,g){var w,y,b,S,M,E,N,x,q,_,A,O,C,I,L,U,R,T,P,k,D,F,j,B,G,V=new Object,H=new Object,Z=new Array(t),z=new Array(t),X=1;for(g.NZ=0,S=b=.25,M=r,x=i,V.b=V.a=0,c(u,m,i,a,l,V),w=V.a,y=V.b,H.h=H.g=H.f=H.e=H.d=H.c=H.a7=H.a3=H.a1=0,j=f(e,o,w,y,H,s,m,i,Z),k=0;k<n;k++){if(T=1,p(e,o,j,w,y,H,s,Z,l),j=f(e,o,w,y,H,s,m,i,Z),h(j,V,w,H.a1,H.a3,H.a7,y,H.c,H.d,H.f,H.g,H.h,m,i,s,o,a),L=V.a,R=U=V.b,_=0!=s[o-1]?-a[o]/s[o-1]:0,A=C=1,0!=k&&3!=j&&(C=0!=R?Math.abs((R-x)/R):C,A=0!=_?Math.abs((_-M)/_):A,I=C<N?C*N:1,O=A<E?A*E:1,B=I<S?1:0,D=O<b?1:0,D||B)){for(P=0;P<o;P++)z[P]=s[P];for(q=_,F=G=0;;){if(T&&0==(T=0)&&D&&(!B||O<I));else{if(v(e,o,g,L,U,l,u,V,a,Z,H,s),w=V.a,y=V.b,g.NZ>0)return;if(X=G=1,S*=.25,F||!D)X=0;else for(P=0;P<o;P++)s[P]=z[P]}if(0!=X){if(V.a=q,X=d(e,g,V,o,a,u,l,s,Z),q=V.a,g.NZ>0)return;if(F=1,b*=.25,0!=X){L=-(q+q),U=q*q;continue}}for(P=0;P<o;P++)s[P]=z[P];if(!B||G)break}c(u,m,i,a,l,V),w=V.a,y=V.b,j=f(e,o,w,y,H,s,m,i,Z)}x=R,M=_,N=C,E=A}}function y(e,t,n,r){var i,s,o,a,u,l,c,f,p,h,g,v,d,y,b,S,M,E,N,x,q,_,A,O,C=e.Degree,I=.017453292519943295,L=Math.LN2,U=e.Degree+1,R=new Array(U),T=new Array(U),P=new Array(U),k=new Array(U),D=new Object,F=new Object;v=1;do{s=v,v/=2,d=1+v}while(d>1);var j=Number.MIN_VALUE/s,B=Math.cos(94*I),G=Math.sin(94*I),V=Math.sqrt(.5),H=-V;F.NZ=N=0,F.szr=F.szi=F.lzr=F.lzi=0;while(0==t[C])n[N]=r[N]=0,C--,N++;A=C+1;while(C>=1){if(C<=2){C<2?(n[e.Degree-1]=-t[1]/t[0],r[e.Degree-1]=0):(D.li=D.lr=D.si=D.sr=0,m(t[0],t[1],t[2],D),n[e.Degree-2]=D.sr,r[e.Degree-2]=D.si,n[e.Degree-1]=D.lr,r[e.Degree-1]=D.li);break}for(c=0,f=Number.MAX_VALUE,Z=0;Z<A;Z++)h=Math.abs(t[Z]),h>c&&(c=h),0!=h&&h<f&&(f=h);if(p=j/f,(p<=1&&c>=10||p>1&&Number.MAX_VALUE/p>=c)&&(p=0==p?Number.MIN_VALUE:p,q=Math.floor(Math.log(p)/L+.5),u=Math.pow(2,q),1!=u))for(Z=0;Z<A;Z++)t[Z]*=u;for(var Z=0;Z<A;Z++)T[Z]=Math.abs(t[Z]);T[C]=-T[C],_=C-1,h=Math.exp((Math.log(-T[C])-Math.log(T[0]))/C),0!=T[_]&&(g=-T[C]/T[_],h=g<h?g:h),g=h;do{h=g,g=.1*h,l=T[0];for(Z=1;Z<A;Z++)l=l*g+T[Z]}while(l>0);a=h;do{o=l=T[0];for(Z=1;Z<C;Z++)l=h*l+T[Z],o=h*o+l;l=h*l+T[C],a=l/o,h-=a}while(Math.abs(a/h)>.005);i=h;for(Z=1;Z<C;Z++)R[Z]=(C-Z)*t[Z]/C;for(R[0]=t[0],v=t[C],d=t[_],O=0==R[_]?1:0,x=0;x<5;x++)if(y=R[_],O){for(Z=0;Z<_;Z++)N=_-Z,R[N]=R[N-1];R[0]=0,O=0==R[_]?1:0}else{S=-v/y;for(Z=0;Z<_;Z++)N=_-Z,R[N]=S*R[N-1]+t[N];R[0]=t[0],O=Math.abs(R[_])<=Math.abs(d)*s*10?1:0}for(Z=0;Z<C;Z++)k[Z]=R[Z];for(x=1;x<=20;x++){if(E=-G*H+B*V,H=G*V+B*H,V=E,b=i*V,M=-2*b,w(s,U,20*x,b,i,R,C,t,A,P,M,F),0!=F.NZ){N=e.Degree-C,n[N]=F.szr,r[N]=F.szi,A-=F.NZ,C=A-1;for(Z=0;Z<A;Z++)t[Z]=P[Z];1!=F.NZ&&(n[N+1]=F.lzr,r[N+1]=F.lzi);break}for(Z=0;Z<C;Z++)R[Z]=k[Z]}if(x>20){e.Degree-=C;break}}}y(u,o,l,a);var b=a.length;for(M=0;M<b;M++){var S=g(a[M],r+8),E=g(l[M],r+8);E=r-String(E).length>2?E:l[M];var N=S<0?"-":"";0===E&&(E=""),0===S&&(S=""),S=1===Math.abs(S)?N+"i":S?S+"*i":"";var x=E&&S?E+"+"+S:E+S;l[M]=x.replace(/\+\-/g,"-")}return l}},roots:function(n){if(n.isConstant(!0,!0))return e.Utils.nroots(n);var r=N.proots(n).map((function(e){return t.parse(e)}));return e.Vector.fromArray(r)},froot:function(t,n,r){var i=function(n){var i=1e-12,s=r||e.Utils.build(e.Calculus.diff(t.clone())),o=t instanceof Function?t:e.Utils.build(t),a=1e4,u=!1,l=0;while(!u){var c=n-o(n)/s(n),f=Math.abs(c)-Math.abs(n),p=Math.abs(f);n=c,p<i?u=!0:l>a&&(n=null,u=!0),l++}return n};return i(Number(n))},quad:function(e,n,r){var i=function(e,n,r,i){return t.parse("-("+n+"+"+i+"*sqrt(("+n+")^2-4*("+e+")*("+r+")))/(2*"+e+")")};return[i(e,n,r,1),i(e,n,r,-1)]},sumProd:function(e,t){return N.quad(-t,e,-1).map((function(e){return e.invert()}))},coeffs:function(e,n,r){n=String(n),e=t.expand(e),r=r||[new w(0)],e.group===o&&e.contains(n,!0)&&t.error("Unable to get coefficients using expression "+e.toString());var i=h(e);if(1!==i.length||i[0]!==n||e.isImaginary())if(n||t.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),-1===i.indexOf(n))r[0]=t.add(e,r[0]);else if(r=r||[new w(0)],e.group===c){var s=e.symbols[n];s||t.error("Expression is not a polynomial!");var a=Number(s.power);m=t.divide(e.clone(),s.clone()),(m.contains(n,!0)||a<0||!d(a))&&t.error("Expression is not a polynomial!");g=r[a];g&&(m=t.add(g,m)),r[a]=m}else e.group===l&&e.each((function(e){N.coeffs(e.clone(),n,r)}),!0);else for(var u=new S(e).coeffs.map((function(e){return new w(e)})),f=0,p=u.length;f<p;f++){var m=u[f],g=r[f];g&&(m=t.add(g,m)),r[f]=m}for(f=0,p=r.length;f<p;f++)"undefined"===typeof r[f]&&(r[f]=new w(0));return r},polyPowers:function(t,r,i){i=i||[];var o=o=t.group;if(o===u&&r===t.value)i=i.concat(f(t.symbols));else if(o===l)for(var a in t.symbols){var p=t.symbols[a],h=(o=p.group,p.value);if(o===s&&r===h)i.push(p.power);else if(o===u||o===l)i=N.polyPowers(p,r,i);else if(o===c&&p.contains(r)){var m=p.symbols[r];m&&i.push(m.power)}else o!==n&&r===h||i.push(0)}else o===c&&t.contains(r)&&i.push(e.Utils.decompose_fn(t,r,!0).x.power);return e.Utils.arrayUnique(i).sort()},Factor:{split:function(e){var n=new w(1),r=new w(1);return N.Factor.factor(e,new M).each((function(e){var i=t.parse(e);e.isConstant(!0)?n=t.multiply(n,i):r=t.multiply(r,i)})),[n,r]},mix:function(e,t){for(var n=f(e),r=n.length,i=[],s=0;s<r;s++){for(var o=n[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(n,r){try{if(n.group===l){for(var i=t.expand(n.clone(),!0).collectSymbols(null,null,(function(e,t){return(t.length||1)-(e.length||1)})),s={},o=[],a=0;a<i.length;a++){var u=i[a];o.push(u.multiplier.clone()),u.each((function(e){var t=Number(e.power);if(isNaN(t))throw new Error("exiting");e.value in s?(t<s[e.value][0]&&(s[e.value][0]=t),s[e.value][1].push(e)):s[e.value]=[t,[e]]}))}var c=new w(1);for(var f in s)s[f][1].length===i.length&&(c=t.multiply(c,t.pow(new w(f),new w(s[f][0]))));var p=e.Math2.QGCD.apply(null,o);if(!p.equals(1)){r.add(new w(p));for(a=0;a<i.length;a++)i[a].multiplier=i[a].multiplier.divide(p)}if(!c.equals(1)){r.add(c),n=new w(0);for(a=0;a<i.length;a++)n=t.add(n,t.divide(i[a],c.clone()))}}}catch(h){}return n},zeroes:function(n,r){var i=function(){throw new e.exceptions.ValueLimitExceededError("Exiting")};try{var s,o,a,u,c;n=t.expand(n.clone()),c=n.toString(),s=h(n),a=new w(0);for(var f=[],p=[],m=0,g=s.length;m<s.length;m++){for(var y={},b=0;b<g;b++)m!==b&&(y[s[b]]=0);o=t.parse(c,y);var S=o.power;d(S)||i(),f.push(o),p.push(o.power)}if(e.Utils.allSame(p)){var M=n.length,E=f.length;2===E&&(u=new v(p[0]/(M-1))),3===E&&(u=new v(p[0]/Math.round((Math.sqrt(8*M-1)-3)/2)))}else u=e.Math2.QGCD.apply(null,p);d(u)||i();for(m=0;m<f.length;m++){var x=f[m],q=x.power.clone().divide(u);x.multiplier=new v(Math.pow(x.multiplier,1/q)),x.power=u.clone(),a=t.add(a,x)}if(a.group!==l)return n;while(1){var _=N.div(n.clone(),a.clone());if(!_[1].equals(0))break;if(n=_[0],r.add(a.clone()),n.equals(1))break}}catch(c){}return n},factor:function(n,r){if(n.isConstant())return e.Math2.factor(n);var i=t.parse(n),s=N.Factor._factor(i,r);if(s.equals(n))return s;if(s.group===c){var o=new w(1),a=t.parse(s.power),u=t.parse(s.multiplier);s.toUnitMultiplier(),s.multiplier.lessThan(0)&&(o.negate(),s.negate()),s.each((function(e){var n=t.parse(N.Factor._factor(e));n.group===c?(u=t.multiply(u,w.create(n.multiplier)),n.each((function(e){var n=t.parse(N.Factor._factor(e));o=t.multiply(o,n),n.group===c&&(u=t.multiply(u,w.create(n.multiplier)))}))):o=t.multiply(o,n)})),s=t.pow(t.multiply(u,o),a)}return s},quadFactor:function(n,r){if(n.isPoly()&&N.degree(n.equals(2))){var i=e.Utils.variables(n)[0],s=N.coeffs(n,i),o=N.Factor._factor(s[2].clone());if(o.group===c){var a=o.collectSymbols();if(a.length>2)return n;var u=t.multiply(t.parse(s[0]),t.parse(a[0])),l=t.parse(s[1]).negate(),f=t.parse(a[1]),p=N.quad(f,l,u).filter((function(t){if(e.Utils.isInt(t))return t}));if(1===p.length){var h=p[0],g=t.divide(s[0],t.parse(h));e.Utils.isInt(g)&&(r.add(t.parse(m("({0})*({1})+({2})",a[1],i,g))),r.add(t.parse(m("({0})*({1})+({2})",a[0],i,h))),n=new w(1))}}}return n},cubeFactor:function(e,n){if(e.isComposite()){var r=e.collectSymbols();if(2===r.length){var i=r[0].sign(),s=r[0].clone().abs(),o=r[1].sign(),a=r[1].clone().abs();if(s.isCube()&&a.isCube()){i<o&&([i,o]=[o,i],[s,a]=[a,s]);var u=t.parse(s.getNth(3)),l=t.parse(a.getNth(3)),c=t.multiply(t.expand(t.pow(s.clone().toUnitMultiplier(),t.parse("1/3"))),u),f=t.multiply(t.expand(t.pow(a.clone().toUnitMultiplier(),t.parse("1/3"))),l);1===i&&-1===o?(n.add(t.parse(m("(({0})-({1}))",c,f))),n.add(t.parse(m("(({0})^2+({0})*({1})+({1})^2)",c,f))),e=w(1)):1===i&&1===o&&(n.add(t.parse(m("(({0})+({1}))",c,f))),n.add(t.parse(m("(({0})^2-({0})*({1})+({1})^2)",c,f))),e=w(1))}}}return e},_factor:function(n,r){if(n.group===a){var i=n.args[0];if(i.group===s&&i.isSimple())return n}else if(n.group===s&&n.isSimple())return n;if(n.group===l){n.distributeMultiplier(!0);var o=new w(0);n.each((function(e){(e.group===l&&e.power.greaterThan(1)||e.group===c)&&(e=t.expand(e)),o=t.add(o,e)})),o.power=n.power,n=o}n.group===a&&"sqrt"!==n.fname&&(n=e.Utils.evaluate(n));var u=n.clone();try{if(n.group===c){var m,g,v,y,b,S,E=t.parse(n.power);if(m=N.Simplify.strip(n.getDenom()),g=N.Simplify.strip(n.getNum()),v=m.pop(),y=g.pop(),y.equals(n))return n;S=N.Factor.factor(y),b=N.Factor.factor(v);var x=N.Simplify.unstrip(g,S),q=N.Simplify.unstrip(m,b),_=t.divide(x,q);return _}if(n.group===s)return n;if(n.isConstant()){if(n.equals(1))return n.clone();var A=e.Math2.factor(n);return A}E=n.power.clone();if(d(E)&&(!E.lessThan(0)||n.group!==a)){var O=E.sign();n.toLinear(),r=r||new M;var C={};n=t.parse(e.Utils.subFunctions(n,C)),f(C).length>0&&(r.preAdd=function(n){var r=t.parse(n,e.Utils.getFunctionsSubs(C));return r}),n.isLinear()||(r.pFactor=n.power.toString(),n.toLinear());var I=h(n);n.isImaginary()&&I.push(e.Settings.IMAGINARY);var L=I.length>1;if(L){var U=!0,R=!0;if(n.each((function(e){e.group!==s&&(U=!1),e.multiplier.equals(1)||(R=!1)})),U&&R)return t.pow(t.parse(n,e.Utils.getFunctionsSubs(C)),t.parse(E))}var T=new M;n=N.Factor.coeffFactor(n,T),T.each((function(e){p(E)&&e.lessThan(0)&&e.negate(),O<0&&e.invert(),r.add(e)}));var P=new M;if(n=N.Factor.powerFactor(n,P),P.each((function(e){O<0&&e.invert(),r.add(e)})),L)n=N.Factor.cubeFactor(n,r),n=N.Factor.mfactor(n,r),r.each((function(e){O<0&&e.power.negate()}));else{var k=I[0];n=N.Factor.squareFree(n,r,k);var D=new M;n=N.Factor.trialAndError(n,D,k);var F=D.toSymbol();if(F.equals(u))return F;for(var j in D.factors){var B=D.factors[j];r.add(t.pow(B,t.parse(E)))}n.equals(u)&&(n=N.Factor.quadFactor(n,r))}n=t.parse(n,e.Utils.getFunctionsSubs(C)),r.add(t.pow(n,t.parse(E)));_=r.toSymbol();return _}return n}catch(G){return u}},reduce:function(e,n){if(e.group===l&&2===e.length){var r=e.collectSymbols().sort((function(e,t){return t.multiplier-e.multiplier}));if(r[0].power.equals(r[1].power)){var i=t.parse(r[0].power),s=r[0].clone().toLinear(),o=r[1].clone().toLinear();n.add(t.add(s.clone(),o.clone())),o.negate();for(var a=Number(i),u=new w(0),c=1;c<=a;c++){var f=t.pow(s.clone(),t.subtract(i.clone(),new w(c))),p=t.pow(o.clone(),t.subtract(new w(c),new w(1)));u=t.add(u,t.multiply(f,p))}return u}}return e},squareFree:function(e,t,n){if(e.isConstant()||e.group===s)return e;var r=new S(e,n),i=r.squareFree(),o=i[2];if(1!==o){var a=i[1].toSymbol();a.power=a.power.multiply(new v(o)),t.add(N.Factor.factor(a));var u=N.Factor.squareFree(i[0].toSymbol(),t);return u}return e},powerFactor:function(n,r){if(n.group!==u||n.previousGroup===o)return n;var i=f(n.symbols);if(!e.Utils.allNumeric(i))return n;var s=e.Utils.arrayMin(i),a=new w(0),l=t.parse(n.value+"^"+s);return n.each((function(e){e=t.divide(e,l.clone()),a=t.add(a,e)})),r.add(l),a},coeffFactor:function(t,n){if(t.isComposite()){var r=e.Math2.QGCD.apply(null,t.coeffs());if(r.equals(1)){var i=function(e){var t;return e.group===c?(t=0,e.each((function(e){t+=e.power}))):t=Number(e.power),t},s=t.collectSymbols(null,null,null,!0).sort((function(e,t){return e.isConstant(!0)?1:t.power-e.power})),o=s[0];(i(o)>i(s[1])||s[1].isConstant(!0))&&o.multiplier.lessThan(0)&&(n.add(new w(-1)),t.each((function(e){e.negate()}),!0))}else t.each((function(e){e.isComposite()?e.each((function(e){e.multiplier=e.multiplier.divide(r)})):e.multiplier=e.multiplier.divide(r)})),t.updateHash();n&&n.add(new w(r))}return t},trialAndError:function(t,n,r){var i=t.clone();try{var o=[];if(t.isConstant()||t.group===s)return t;for(var a=new S(t,r),u=a.coeffs[0],l=e.Math2.ifactor(u),c=N.proots(t),f=0;f<c.length;f++){var p=c[f],h=1;if(!isNaN(p)){for(var m in l){var g=e.Utils.round(Math.log(m)/Math.log(Math.abs(p)),8);if(d(g)){p=m,h=g;break}}var w=new v(p),y=[new v(w.num).negate()];y[h]=new v(w.den);var b=S.fromArray(y,a.variable).fill(),M=a.divide(b);M[1].equalsNumber(0)&&(a=M[0],o.push(b.toSymbol()))}}return a.equalsNumber(1)||(a=N.Factor.search(a,n)),o.forEach((function(e){n.add(e)})),a.toSymbol()}catch(E){return i}},search:function(t,n,r){r=r||10;var i=t.variable,s=function(e,s,o,a){var u=S.fit(e,s,o,r,a,i);if(u&&u.coeffs.length>1){var l=t.divide(u);if(l[1].equalsNumber(0))return n.add(u.toSymbol()),[l[0],u]}return null},o=t.coeffs[0],a=e.Math2.ifactor(o),u=t.lc(),l=e.Math2.ifactor(u),c=t.sub(r),f=e.Math2.ifactor(c),p=N.Factor.mix(f,c<0),h=Math.ceil(t.coeffs.length/2),m=u.lessThan(0),g=o.lessThan(0);l["1"]=1,a["1"]=1;while(h--)for(var v in l)for(var d in a)for(var w=0;w<p.length;w++){var y=s(v,d,p[w],h);if(y)return t=y[0],e.Utils.isPrime(t.sub(r))||(t=N.Factor.search(t,n)),t;y||(m&&g?y=s(-v,-d,p[w],h):m?y=s(-v,d,p[w],h):g&&(y=s(v,-d,p[w],h)))}return t},mSqfrFactor:function(t,n){if(t.group!==a)for(var r=h(t).reverse(),i=0;i<r.length;i++)do{if(r[i]!==t.value){var s=e.Calculus.diff(t,r[i]),o=N.Factor.coeffFactor(s);if(o.equals(0))break;var u=!0;if(o.isConstant()&&t.isComposite()&&t.each((function(e){e.multiplier%o!==0&&(u=!1)}),!0),u){var l=N.div(t,o.clone()),c=l[1].equals(0);if(l[0].isConstant()){n.add(l[0]);break}}else c=!1;c&&(n.add(l[0]),t=o)}else n.add(t),t=new w(1)}while(c);return t},sqdiff:function(n,r){if(n.isConstant("all"))return n;try{var i=function(t){return e.Utils.block("POSITIVE_MULTIPLIERS",(function(){return w.unwrapPARENS(b.sqrt(b.abs(t)))}),!0)},o=e.Utils.separate(n.clone()),a=[];for(var u in o)"constants"!==u&&a.push(o[u]);if(a.sort((function(e,t){return t.power-e.power})),2===a.length){var l,c;if(l=a.pop(),c=a.pop(),p(l.power)&&p(c.power)&&l.sign()===c.sign()&&l.group===s&&c.group===s)throw new Error("Unable to factor");if(l.isComposite()&&c.power.equals(2)){c=i(c);var f=N.Factor.factor(t.add(l,o.constants));f.power.equals(2)&&(f.toLinear(),r.add(t.subtract(f.clone(),c.clone())),r.add(t.add(f,c)),n=new w(1))}else if(l=l.powSimp(),c=c.powSimp(),(l.group===s||""===l.fname)&&l.power.equals(2)&&(c.group===s||""===c.fname)&&c.power.equals(2)&&!o.constants){if(l.multiplier.lessThan(0)){var h=c;c=l,l=h}l.multiplier.greaterThan(0)&&(l=i(l),c=i(c)),r.add(t.subtract(l.clone(),c.clone())),r.add(t.add(l,c)),n=new w(1)}}}catch(m){}return n},mfactor:function(n,r){if(n.group===a)if("sqrt"===n.fname){var i=new M,s=N.Factor.common(n.args[0].clone(),i);s=N.Factor.coeffFactor(s,i),n=t.multiply(t.symfunction("sqrt",[s]),t.parse(n.multiplier)),i.each((function(r){n=t.multiply(n,t.parse(e.Utils.format("sqrt({0})",r)))}))}else r.add(n);else{n=N.Factor.mSqfrFactor(n,r);for(var o=h(n),u=n.collectSymbols().map((function(e){return w.unwrapSQRT(e)})),l={},c={},f=o.length,p=u.length,m=0;m<f;m++){var g=o[m];l[g]=new w(0);for(var v=0;v<p;v++){var y=u[v];if(y.contains(g)){var b=y.value===g?y.power.toDecimal():y.symbols[g].power.toDecimal();(!c[g]||b<c[g])&&(c[g]=b),l[g]=t.add(l[g],y.clone())}}}for(var S in l){var E=t.parse(S+"^"+c[S]),x=t.divide(l[S],E),q=t.expand(x);if(q.equals(1))break;var _=N.div(n.clone(),q);if(_[0].equals(0))break;if(_[1].equals(0)){var A=!1;if(_[0].each((function(e){d(e.multiplier)||(A=!0)})),A){_[1]=t.expand(t.multiply(_[1],q));break}}var O=d(q)&&q.lessThan(0);if(_[1].equals(0)&&!O){var C=N.div(n.clone(),_[0].clone());E=C[0];if(E.equals(0))return n;if(n=C[1],E.equals(-1)&&!n.equals(0))return n;var I=_[0];if(n.equals(I)){var L=N.Factor.reduce(I,r);return n.equals(L)?L:N.Factor.mfactor(L,r)}return r.add(I),n.equals(0)?E:E.isConstant("all")?(r.add(E),E):N.Factor.mfactor(E,r)}}}return n=N.Factor.sqdiff(n,r),n=N.Factor.zeroes(n,r),n}},allLinear:function(e){for(var t=e.length,n=0;n<t;n++)if(!N.isLinear(e[n]))return!1;return!0},isLinear:function(e){var t=!1,r=e.group;if(r===u||r===l)for(var i in t=!0,e.symbols){var f=e.symbols[i],p=f.group;if(p!==a&&p!==o||(t=!1),p===c)t=1===h(f).length;else if(p===u||p===l)t=N.isLinear(f);else if(f.group!==n&&"1"!==f.power.toString()){t=!1;break}}else r===s&&1===e.power&&(t=!0);return t},gcd:function(){var n;if(n=1===arguments.length&&arguments[0]instanceof e.Vector?arguments[0].elements:e.Utils.arguments2Array(arguments),0===n.length)return new w(1);if(1===n.length)return n[0];for(var r=[],i=!1,s=0;s<n.length;s++)if(n[s].group===a&&"gcd"===n[s].fname)n=n.concat(arguments[s].args),n.splice(s,1);else{var o=h(n[s]);if(e.Utils.haveIntersection(o,r)){i=!0;break}r=r.concat(o)}if(i||0===r.length){if(n.every((function(e){return e.getDenom().equals(1)}))){var u=n[0];for(s=1;s<n.length;s++)u=N.gcd_(n[s],u);return u}return t.divide(N.gcd.apply(null,n.map((function(e){return e.getNum()}))),N.lcm.apply(null,n.map((function(e){return e.getDenom()}))))}return t.symfunction("gcd",n)},gcd_:function(n,r){if(n.group!==a&&n.group!==i||(n=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(n)}))),r.group===a&&(r=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(r)}))),n.isConstant()&&r.isConstant())return new w(e.Math2.QGCD(new v(+n),new v(+r)));var s=t.multiply(n.getDenom()||new w(1),r.getDenom()||new w(1)).invert();if(n=t.multiply(n.clone(),s.clone()),r=t.multiply(r.clone(),s.clone()),n=t.expand(n),r=t.expand(r),n.group===c||r.group===c){var u=t.divide(n.clone(),r.clone()),l=t.multiply(r.clone(),u.getDenom().invert());if(!l.equals(1))return l}if(n.group===o||r.group===o){var f=new w(e.Math2.GCD(n.multiplier,r.multiplier)),p=N.gcd_(n.value===y?new w(1):t.parse(n.value),r.value===y?new w(1):t.parse(r.value)),m=N.gcd_(t.parse(n.power),t.parse(r.power));return t.multiply(f,t.pow(p,m))}if(n.length<r.length){l=n;n=r,r=l}var g=h(n),d=h(r);if(g.length===d.length&&1===g.length&&g[0]===d[0]||1===g.length&&0===d.length||0===g.length&&1===d.length)return n=new S(n),r=new S(r),t.divide(n.gcd(r).toSymbol(),s);var b,M=[];n.each((function(e){M.push(e.multiplier)})),r.each((function(e){M.push(e.multiplier)}));while(!r.equals(0)){l=r.clone();if(n=n.clone(),b=N.div(n,l),r=b[1],b[0].equals(0))return t.divide(new w(e.Math2.QGCD(n.multiplier,r.multiplier)),s);n=l}var E=e.Math2.QGCD.apply(void 0,M);return E.equals(1)||n.each((function(e){e.multiplier=e.multiplier.divide(E)})),!n.equals(1)||n.isConstant()||r.isConstant()?t.divide(n,s):t.divide(t.symfunction("gcd",arguments),s)},lcm:function(){var n;1===arguments.length?arguments[0]instanceof e.Vector?n=arguments[0].elements:t.error("lcm expects either 1 vector or 2 or more arguments"):n=e.Utils.arguments2Array(arguments);var r,i=n.reduce((function(e,n){return t.multiply(e,n.clone())}),new w(1)),s=function(e,t){t=Number(t);var n,r,i,s=[],o=Math.pow(2,e.length);for(r=t;r<o;r++){n=[],i=e.length-1;do{0!==(r&1<<i)&&n.push(e[i])}while(i--);n.length===t&&s.push(n)}return s}(arguments,arguments.length-1).map((function(e){return e.reduce((function(e,n){return t.multiply(e,n.clone())}),new w(1))}));r=n.every((function(t){return e.Utils.isVariableSymbol(t)}))?t.symfunction("gcd",e.Utils.arrayUnique(s)):N.gcd.apply(null,s);var o=t.divide(i,r);return o},divide:function(n,r){var i,s,o,a;return o=e.Algebra.Factor.factor(n.clone()),a=o.getDenom(),a.isConstant("all")?a=new w(1):n=t.expand(w.unwrapPARENS(t.multiply(o,a.clone()))),i=N.div(n,r),s=t.divide(i[1],r),t.divide(t.add(i[0],s),a)},div:function(n,r){var i=[new w(0),n.clone()];try{if(r.isConstant("all"))return n.each((function(e){e.multiplier=e.multiplier.divide(r.multiplier)})),[n,new w(0)];if(n=t.expand(n),r=t.expand(r),n.group===s&&r.group===l){var o=n.value,a=e.Utils.decompose_fn(r.clone(),o,!0);if(n.isLinear()&&a.x&&a.x.isLinear()&&r.isLinear()){var u=w.create(n.multiplier);return[t.divide(u.clone(),a.a.clone()),t.divide(t.multiply(u,a.b),a.a).negate()]}}if(n.group===s&&r.group===s){var c=t.divide(n.clone(),r.clone());return c.isConstant()?[c,new w(0)]:[new w(0),n.clone()]}var f=n.hasFunc(),p=r.hasFunc(),m=!1;if(f||p){m=!0;var g={},d=(n=t.parse(e.Utils.subFunctions(n,g)),r=t.parse(e.Utils.subFunctions(r,g)),e.Utils.getFunctionsSubs(g))}var b,M,N=e.Utils.arrayUnique(h(n).concat(h(r)));if((n.isImaginary()||r.isImaginary())&&N.push(e.Settings.IMAGINARY),1===N.length){var x=new S(n).divide(new S(r));b=x[0].toSymbol(),M=x[1].toSymbol()}else{N.push(y);var q=function(e){for(var n=new w(0),r=0;r<e.length;r++){var i=e[r].toSymbol();n=t.add(n,i)}return n},_=function(e,t){var n,r=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)&&(n=s,i++),i>1)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)){n=s;break}return[r,n,e]},A=function(e,t){t=t||0;var n=e[t],r=e.length;if(n){for(var i,s,o=_(n),a=t+1;a<r;a++){var u=e[a],l=n.sum.equals(u.sum);if(!l&&o)break;if(l){for(var c,f,p,h,m=n.terms.length,g=0;g<m;g++){var v=n.terms[g],d=u.terms[g];("undefined"===typeof c||v.greaterThan(c))&&(c=v,p=g),("undefined"===typeof f||d.greaterThan(f))&&(f=d,h=g)}var w=c.subtract(u.terms[p]),y=f.subtract(n.terms[h]);if(y>w){o=[f,h,u];break}if(w>y){o=[c,p,n];break}}else if(o=_(u),o)break;o=_(u)}if(!o)return _(e[0],!0);for(a=0;a<U.length;a++){var b=U[a].terms;if(s=o[1],s===b.length-1)return;if(i=b[s],!i.equals(0))break}return i.equals(0)?A(e,++t):o}},O=e.Utils.toMapObj(N),C=function(e,t){return t.sum.subtract(e.sum)},I=function(e,t){if(!e||!t)return!1;for(var n=0;n<e.terms.length;n++)if(e.terms[n].lessThan(t.terms[n]))return!1;return!0},L=n.tBase(O).sort(C),U=r.tBase(O).sort(C),R=I(L[0],U[0])&&L[0].count>U[0].count?U:L,T=A(R),P=[];if(T){var k=T[1],D=function(e,t){return!e[0].sum.equals(t[0].sum)||e.length>=t.length},F=function(e,t,n){for(var r=[],i=0;i<e.length;i++)for(var s=e[i],o=0;o<s.terms.length;o++){var a=r[o],u=s.terms[o];0===i?r[o]=u:a&&!a.equals(u)&&(r[o]=void 0)}for(i=0;i<r.length;i++){s=r[i];if(s&&!s.equals(0))return i}return n},j=function(e,t){var n=e.len(),r=t.len(),i=t.terms[k],s=e.terms[k];return r>n&&i.greaterThan(s)?r-n:i.subtract(s)};k=F(L,U,k),L.sort(j),U.sort(j);var B=U[0],G=L[0],V=new E(new v(1),[],G.map);if(B.sum.greaterThan(G.sum)&&G.len()>1)for(var H=0;H<G.terms.length;H++){var Z=B.terms[H].subtract(G.terms[H]);if(Z.equals(0))V.terms[H]=new v(0);else{var z=Z.add(new v(1));V.terms[H]=Z;for(var X=0;X<L.length;X++)L[X].terms[H]=L[X].terms[H].add(z)}}var $=I(L[0],U[0]),W=0,Q=200;while($&&D(L,U)){if(W++>Q)throw new e.exceptions.InfiniteLoopError("Unable to compute!");x=L[0].divide(U[0]);P.push(x),L.shift();for(H=1;H<U.length;H++){var Y=U[H].multiply(x).generateImage(),K=L.length;0===K&&(Y.coeff=Y.coeff.neg(),L.push(Y),L.sort(j));for(X=0;X<K;X++){var J=L[X];if(J.getImg()===Y.getImg()){J.coeff=J.coeff.subtract(Y.coeff),J.coeff.equals(0)&&(e.Utils.remove(L,X),X--);break}X===K-1&&(Y.coeff=Y.coeff.neg(),L.push(Y),L.sort(j))}}if($=I(L[0],U[0]),!$&&L.length>=U.length)for(H=1;H<L.length;H++)if($=I(L[H],U[0]),$){L.unshift(e.Utils.remove(L,H));break}}}b=q(P),M=q(L),"undefined"!==typeof V&&(V=V.toSymbol(),b=t.divide(b,V.clone()),M=t.divide(M,V))}return m&&(b=t.parse(b.text(),d),M=t.parse(M.text(),d)),[b,M]}catch(ee){return i}},line:function(n,r,i){e.Utils.isArray(n)&&(n=e.Utils.convertToVector(n)),e.Utils.isArray(r)&&(r=e.Utils.convertToVector(r)),i=t.parse(i||"x"),e.Utils.isVector(n)&&e.Utils.isVector(r)||t.error('Line expects a vector! Received "'+n+'" & "'+r+'"');var s=t.subtract(r.e(1).clone(),n.e(1).clone()),o=t.subtract(r.e(2).clone(),n.e(2).clone()),a=t.divide(o,s),u=t.multiply(i,a.clone()),l=t.multiply(n.e(1).clone(),a);return t.add(t.subtract(u,l),n.e(2).clone())},PartFrac:{createTemplate:function(e,n,r,i){var o,u,l,c,f,p,h;e=N.Factor.factor(e),e.each((function(t,n){if(t.group===a&&""===t.fname&&t.args[0].group===s){var r=t.args[0];this.symbols?(delete this.symbols[n],this.symbols[r.value]=r):e=t.args[0]}})),o=n.collectFactors(),u=[],p=[],h=new w(1);for(var m=0;m<o.length;m++){var g=w.unwrapPARENS(o[m]);if(g.power.greaterThan(1)){c=Number(g.power),l=g.clone().toLinear(),f=Number(N.degree(l,i));for(var v=0;v<c;v++){var d=t.pow(l.clone(),new w(v+1));r.push(d.clone());var y=t.divide(e.clone(),d.clone());p.push(f),u.push(y)}}else{f=Number(N.degree(g,i)),r.push(g);y=t.divide(e.clone(),g.clone());y=t.expand(w.unwrapPARENS(y)),p.push(f),u.push(y)}}return r=r.map((function(e){return t.multiply(e,h.clone())})),[r,u,p]},partfrac:function(n,r,i){var s=h(n);r=r||t.parse(s[0]);try{var o,a,u,l,c,f,p,m,g,v,d,y,b,S,M,E,x,q,_;if(o=t.expand(n.getNum()),a=t.expand(n.getDenom().toUnitMultiplier()),o.multiplier=n.multiplier,c=o.groupTerms(r),Number(N.degree(o,r))>=Number(N.degree(a,r))?(y=N.div(o.clone(),t.expand(a.clone())),b=y[0],o=y[1],c=o.groupTerms(r)):b=new w(0),1===Number(N.degree(a,r))){var A=t.divide(o,a);return i?[b,A]:t.add(b,A)}l=N.Factor.factor(a),E=N.PartFrac.createTemplate(a.clone(),l,[],r),x=E[0],S=E[1],f=E[2],d=[c.length],p=[],u=[],M=[],S.map((function(e,n){q=x[n],_=f[n];for(var i=0;i<_;i++){u.push(q.clone());var s=w.create(r,i),o=t.expand(t.multiply(e,s.clone())).groupTerms(r),a=o.length;d.push(a),p.push(o),M.push(s.clone())}})),m=e.Utils.arrayMax(d),v=new e.Matrix(e.Utils.fillHoles(c,m)).transpose(),g=new e.Matrix;for(var O=0;O<p.length;O++)g.elements.push(e.Utils.fillHoles(p[O],m));var C=t.multiply(g.transpose().invert(),v),I=i?[b]:b;return C.each((function(e,n){var r=t.multiply(M[n],t.divide(e,u[n]));i?I.push(r):I=t.add(I,r)})),I}catch(T){try{if(n.isComposite()){var L={};n.each((function(e){var n=e.getDenom(),r=e.getNum(),i=L[n];L[n]=i?t.add(i,r):r}));var U=new w(0);for(var R in L)U=t.add(U,t.divide(L[R],t.parse(R)));n=U}}catch(P){}}return n}},degree:function(n,r,i){if(i=i||{nd:[],sd:[],depth:0},!r){var a=h(n);if(a.length>1)throw new Error("You must specify the variable for multivariate polynomials!");if(0===a.length)return new w(0);r=t.parse(a[0])}var u=n.group;n.isComposite()?(n=n.clone(),n.distributeExponent(),n.each((function(e){i.depth++,N.degree(e,r,i),i.depth--}))):n.group===c?n.each((function(e){i.depth++,N.degree(e,r,i),i.depth++})):u===o&&n.value===r.value?i.sd.push(n.power.clone()):u===s&&n.value===r.value?i.nd.push(t.parse(n.power)):i.nd.push(new w(0));var l=i.nd.length>0?e.Utils.arrayMax(i.nd):void 0;return 0===i.depth&&i.sd.length>0?(void 0!==l&&i.sd.unshift(l),t.symfunction("max",i.sd)):(e.Utils.isSymbol(l)||(l=t.parse(l)),l)},sqComplete:function(n,r,i){e.Utils.isSymbol(r)||(r=t.parse(r));var s,o,a,u,l,c,f,p,h,m,g,v=function(t){throw t=t||"Stopping",new e.exceptions.ValueLimitExceededError(t)};return n.isPoly(!0)||v("Must be a polynomial!"),h=e.Utils.inBrackets,n=n.clone(),s=e.Algebra.degree(n,r),s.equals(2)||v("Cannot complete square for degree "+s),f=e.Algebra.coeffs(n,r),o=f[2],p=f[1].sign(),a=t.divide(f[1],new w(2)),u=t.pow(a.clone(),new w(2)),i?[o,a,l]:(g=b.sqrt(o),c=t.divide(b.sqrt(u),g.clone()),l=t.subtract(f[0],t.pow(c.clone(),new w(2))),m=t.parse(h(g.clone()+"*"+r+(p<0?"-":"+")+c)),{a:m,c:l,f:t.add(t.pow(m.clone(),new w(2)),l.clone())})},Simplify:{strip:function(e){var n=t.parse(e.multiplier);e.toUnitMultiplier();var r=t.parse(e.power);return e.toLinear(),[n,r,e]},unstrip:function(e,n){var r=e[0],i=e[1];return t.multiply(r,t.pow(n,i))},complexSimp:function(e,n){var r,i,s,o,a,u,l,c,f;return u=e.realpart(),c=e.imagpart(),l=n.realpart(),f=n.imagpart(),r=t.multiply(u.clone(),l.clone()),i=t.multiply(c.clone(),f.clone()),s=t.multiply(l.clone(),c),o=t.multiply(u,f.clone()),a=t.add(t.pow(l,new w(2)),t.pow(f,new w(2))),t.divide(t.add(t.add(r,i),t.multiply(t.subtract(s,o),w.imaginary())),a)},trigSimp:function(n){if(n.containsFunction(["cos","sin","tan"])){n=n.clone();var r=N.Simplify.strip(n);n=r.pop();var i=n.clone();if(n.group===l){var s=new w(0);n.each((function(e){var n=N.Simplify.trigSimp(e.fnTransform());s=t.add(s,n)}),!0),i=t.pow(t.multiply(new w(n.multiplier),s),new w(n.power))}else if(n.group===c){var o=n.getNum(),a=n.getDenom();if("sin"===o.fname&&"cos"===a.fname&&o.args[0].equals(a.args[0])&&o.power.equals(a.power)&&(i=t.parse(e.Utils.format("({0})*({1})*tan({2})^({3})",a.multiplier,o.multiplier,o.args[0],o.power))),i.group===c){var u=new w(1);i.each((function(n){"tan"===n.fname&&(n=t.parse(e.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",n.multiplier,N.Simplify.simplify(n.args[0]),n.power))),u=t.multiply(u,n)})),i=u}}i=N.Simplify.unstrip(r,i).distributeMultiplier(),n=i}return n},fracSimp:function(e){var n=e.getDenom(),r=e.getNum();if(r.isImaginary()&&n.isImaginary()&&(e=N.Simplify.complexSimp(r,n)),e.isComposite()){e.power>1&&(e=t.expand(e));var i,s,o,a,u,l,c,f,p,h,m=e.collectSymbols();s=m.pop();while(m.length)o=m.pop(),a=t.parse(s.getDenom()),u=t.parse(o.getDenom()),l=s.getNum(),c=o.getNum(),h=t.multiply(a.clone(),u.clone()),f=t.multiply(l,u),p=t.multiply(c,a),s=t.divide(t.add(f,p),h);return n=t.expand(s.getDenom()),r=t.expand(s.getNum()),i=r.isImaginary()&&n.isImaginary()?N.Simplify.complexSimp(r,n):t.divide(r,n),i.equals(e)?e:N.Simplify.simplify(i)}return e},ratSimp:function(e){if(e.group===c){var n=e.getDenom(),r=e.getNum().distributeMultiplier(),i=N.Simplify.fracSimp(n),s=N.Simplify.fracSimp(r);e=t.divide(s,i)}return e},sqrtSimp:function(e,r){if(e.isSQRT()){var i,s=N.Factor.factor(e.args[0].clone()),o=t.parse(s.multiplier),a=o.sign(),u=t.sqrt(o.abs());if(d(u)){if(s.group===c){var l=new w(1);s.each((function(e){if(e.group===n){var r=t.sqrt(e.clone());d(r)?u=t.multiply(u,r):l=t.multiply(l,e)}else l=t.multiply(l,e)}));var f=t.multiply(l,t.parse(a));i=t.sqrt(f.clone()),i.isImaginary&&(i=t.sqrt(t.expand(f.clone())))}else i=t.sqrt(s.clone().toUnitMultiplier());return t.multiply(u,i)}}else e.isComposite()&&e.isLinear()?(u=new w(0),e.each((function(e){u=t.add(u,N.Simplify.sqrtSimp(e))}),!0),u=t.multiply(u,t.parse(e.multiplier))):e.group===c&&(u=t.parse(e.multiplier),e.each((function(e){var n=N.Simplify.sqrtSimp(e);u=t.multiply(u,n)}),!0),u=t.pow(u,t.parse(e.power)));return u||t.parse(e)},patternSub:function(t){var n={},r=function(e){var t=!1;return e.each((function(e){e.group===l?t=!0:e.symbols&&(t=r(e))})),t},i=function(s){s.each((function(s){if(s.symbols||s.group===a)if(r(s))i(s);else if(!n[s.value]){var o=e.Utils.getU(t);n[s.value]=o,t=t.sub(s.value,o)}}),!0)};return i(t),[t,n]},simplify:function(n){var r=N.Simplify.strip(n);if(n=r.pop(),n=N.Simplify.fracSimp(n),n.isConstant()||n.group===e.groups.S){r.push(n);var i=N.Simplify.unstrip(r,n);return i}var s=n.clone();if(s=N.Simplify.trigSimp(s),s=N.Simplify.ratSimp(s),s=N.Factor.factor(s),s.group===e.groups.CP&&s.isLinear()){var o=s.multiplier.clone();s.toUnitMultiplier();var a=new w(0);s.each((function(e){var n=N.Simplify.simplify(e);a=t.add(a,n)})),s=a,a.multiplier=a.multiplier.multiply(o)}var u=N.Simplify.unstrip(r,s);return u}},Classes:{Polynomial:S,Factors:M,MVTerm:E}};e.Expression.prototype.simplify=function(){return N.Simplify.simplify(this.symbol)},r.useAlgebraDiv=function(){var n=N.divideFn=t.divide,r=0;t.divide=function(t,i){var s;return r++,s=1===r?e.Algebra.divide(t,i):n(t,i),r=0,s}},r.useParserDiv=function(){N.divideFn&&(t.divide=N.divideFn),delete N.divideFn},r.register([{name:"factor",visible:!0,numargs:1,build:function(){return N.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return N.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return N.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return N.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return N.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return N.divide}},{name:"div",visible:!0,numargs:2,build:function(){return N.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return N.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return N.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){var t=function(){var t=N.coeffs.apply(N,arguments);return new e.Vector(t)};return t}},{name:"line",visible:!0,numargs:[2,3],build:function(){return N.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){var e=function(e,t){try{t=t||h(e)[0];var n=N.sqComplete(e.clone(),t);return n.f}catch(r){return e}};return e}}]),r.api()}()},d779:function(e,t,r){(function(e){var i,s,o=function(e){"use strict";var t=new je,n=e.bigInt,r=e.bigDec;r.set({precision:250});var i={},s=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],a={},u={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{"π":"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};function l(e){function t(t){this.name=e,this.message=void 0!==t?t:"",(t=new Error(this.message)).name=this.name,this.stack=t.stack}return t.prototype=Object.create(Error.prototype),t}function c(e){return-1!==U.indexOf(e)}function f(e){return e instanceof Pe}function p(e){return(e=V(e)?e.multiplier:e).lessThan(0)}function h(e){return Math.min.apply(void 0,e)}function m(e,t){if(Q(e))for(var n=e.length,r=0;r<n;r++)t.call(e,r);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)}function g(e){for(var t=e.length,n=[],r=0;r<t;r++){var i=e[r];-1===n.indexOf(i)&&n.push(i)}return n}function v(e){for(var t=s[s.length-1]||2;t<e;t++)j(t)&&s.push(t)}!function(){u.CACHE.roots={};for(var e=2;e<=40;e++)for(var t=2;t<=40;t++){var r=n(e).pow(t);u.CACHE.roots[r+"-"+t]=e}}();var d=i.N=1,w=i.P=2,y=i.S=3,b=i.EX=4,S=i.FN=5,M=i.PL=6,E=i.CB=7,N=i.CP=8,x=u.CONST_HASH="#",q=u.PARENTHESIS,_=u.SQRT,A=u.ABS,O=u.FACTORIAL,C=u.DOUBLEFACTORIAL,I=[],L={},U=[],R=[],T=function(e,t){if(!u.suppress_errors)throw new(t||Error)(e)},P=function(e){for(var t=e[0],n=1,r=e.length;n<r;n++)if(!e[n].equals(t))return!1;return!0},k=function(e){R.push(e),u.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},D=function(e,t){if(t=t||"variable",-1===u.ALLOW_CHARS.indexOf(e)&&!u.VALIDATION_REGEX.test(e))throw new Ae(e+" is not a valid "+t+" name")},F=function(e){var t,n,r,i=Math.sign(e);return e=Math.abs(e),/\d+\.?\d*e[\+\-]*\d+/i.test(e)&&(r=(r=(n=String(e).toLowerCase().split("e")).pop())/(t=Math.abs(r)),n=n[0].split("."),e=-1==r?(t-=n[0].length)<0?n[0].slice(0,t)+"."+n[0].slice(t)+(2===n.length?n[1]:""):"0."+new Array(t+1).join("0")+n.join(""):((r=n[1])&&(t-=r.length),t<0?n[0]+r.slice(0,t)+"."+r.slice(t):n.join("")+new Array(t+1).join("0"))),i<0?"-"+e:e},j=function(e){for(var t=Math.floor(Math.sqrt(e)),n=2;n<=t;n++)if(e%n==0)return!1;return!0},B=function(e){return/^\d+\.?\d*$/.test(e)},G=function(e){return V(e)?G(e.multiplier.toDecimal()):e%1!=0},V=function(e){return e instanceof Fe},H=function(e,t,n){if(n=n||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},V(e)){var r=e.group,i=e.previousGroup;if(r===b&&H(e.power,t,n),r===N||r===E||i===N||i===E)for(var s in e.symbols)H(e.symbols[s],t,n);else if(r===y||i===y)"e"!==e.value&&"pi"!==e.value&&e.value!==u.IMAGINARY&&n.add(e.value);else if(r===M||i===M)H(ne(e.symbols),t,n);else if(r===b)isNaN(e.value)||n.add(e.value),H(e.power,t,n);else if(r===S&&!t)for(var o=0;o<e.args.length;o++)H(e.args[o],t,n)}return n.c.sort()},Z=function(e,n){function r(e,r){n[e]||(n[e]=new Fe(0)),n[e]=t.add(n[e],r.clone())}return e=t.expand(e),n=n||{},e.each((function(e){if(e.isConstant("all"))r("constants",e);else if(e.group===y)r(e.value,e);else if(e.group!==S||e.fname!==A&&""!==e.fname){if(e.group===b||e.group===S)throw new Error("Unable to separate. Term cannot be a function!");r(H(e).join(" "),e)}else Z(e.args[0])})),n},z=function(e){return e instanceof Ve},X=function(e){return e instanceof He},$=function(e){return e instanceof Ze},W=function(e){return e.group===d||e.group===w},Q=function(e){return Array.isArray(e)},Y=function(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())},K=function(e){return e&&String(e)},J=function(e){return"("+e+")"},ee=function(){var e=[].slice.call(arguments);return e.shift().replace(/{(\d+)}/g,(function(t,n){return n=e[n],"function"==typeof n?n():n}))},te=Object.keys,ne=function(e,t,n){for(var r in e)break;return t?r:n?{key:r,obj:e[r]}:e[r]},re=function(e,n,r){return D(e),c(e)?null:(n=n||H(t.parse(r)),t.functions[e]=[t.mapped_function,n.length,{name:e,params:n,body:r}],r)},ie=function(e,n,r){var i,s;return n=String(n),e.group===N?(s=t.expand(e.clone()).stripVar(n),i=t.subtract(e.clone(),s.clone()),s=s):i=e.clone(),e=i.stripVar(n),n=t.divide(i.clone(),e.clone()),s=s||new Fe(0),r?{a:e,x:n,ax:i,b:s}:[e,n,i,s]},se=function(e,t){return Y(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t=void 0===t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},oe=function(e){return e%2==0},ae=function(e){return 1/(e%1)%2==0},ue=function(e,t){var n=typeof t;"function"==n&&"undefined"!=n||(t=function(e,t){return e===t});for(var r=[];e.length;){var i=e[0];if(1===e.length){r.push(i);break}var s=[];r.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return r},le=function(e){function t(e){-1===U.indexOf(e)&&U.push(e)}"string"==typeof e?t(e):m(e,(function(e){t(e)}))},ce=function(e,t){var n;return Q(e)?n=e.splice(t,1)[0]:(n=e[t],delete e[t]),n},fe=function(e,t,n,r){var i=u[e];return u[e]=void 0===n||!!n,r=t.call(r),u[e]=i,r},pe=function(e){return[].slice.call(e)},he=function(e,n){return fe("PARSE2NUMBER",(function(){return t.parse(e,n)}),!0)},me=function(e){if(Q(e)){for(var n=new Ve([]),r=0;r<e.length;r++)n.elements.push(me(e[r]));return n}return V(e)?e:t.parse(e)},ge=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==d)return!1;return!0},ve=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},de=function(e,n,r){(n.isComposite()&&!e.isComposite()||n.isLinear()&&!e.isLinear())&&([e,n]=[n,e]);var i=new Fe(0);return e.isLinear()?e.each((function(e){var s;n.isComposite()?n.isLinear()?n.each((function(n){n=t.multiply(t.parse(e),t.parse(n)),n=t.expand(t.parse(n),r),i=t.add(i,n)}),!0):i=t.add(i,t.multiply(e,t.parse(n))):(s=t.multiply(t.parse(e),t.parse(n)),i=t.add(i,t.expand(s,r)))}),!0):i=t.multiply(e,n),i},we=l("DivisionByZero"),ye=l("ParseError"),be=l("UndefinedError"),Se=l("OutOfFunctionDomainError"),Me=l("MaximumIterationsReached"),Ee=l("NerdamerTypeError"),Ne=l("ParityError"),xe=l("OperatorError"),qe=l("OutOfRangeError"),_e=l("DimensionError"),Ae=l("InvalidVariableNameError"),Oe=l("ValueLimitExceededError"),Ce=l("NerdamerValueError"),Ie=l("SolveError"),Le=(e=l("InfiniteLoopError"),l("UnexpectedTokenError")),Ue=(e={DivisionByZero:we,ParseError:ye,OutOfFunctionDomainError:Se,UndefinedError:be,MaximumIterationsReached:Me,NerdamerTypeError:Ee,ParityError:Ne,OperatorError:xe,OutOfRangeError:qe,DimensionError:_e,InvalidVariableNameError:Ae,ValueLimitExceededError:Oe,NerdamerValueError:Ce,SolveError:Ie,InfiniteLoopError:e,UnexpectedTokenError:Le},{csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e));t=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return 0<=e?t:-t},diff:function(e){return function(t){return(e(t+.001)-e(t-.001))/.002}},median:function(...e){e.sort((function(e,t){return e-t}));var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),n=1/t.pop(),r=0,i=t.length;r<i;r++)n=1/(t.pop()+n);return e.sign*(e.whole+n)},continuedFraction:function(e,t){t=t||20;for(var n=Math.sign(e),r=Math.abs(e),i=Math.floor(r),s=r-i,o=0,a=!1,u={whole:i,sign:n,fractions:[]};!a&&0!==s;){var l=1/s,c=Math.floor(l);if(1e7<c&&Ue.fromContinued(u)-e<=Number.EPSILON)break;u.fractions.push(c),((s=l-c)<=1e-14||t-1<=o)&&(a=!0),o++}return n=u.fractions.length-1,1===u.fractions[n]&&(u.fractions.pop(),u.fractions[--n]++),u},bigpow:function(e,t){e instanceof De||(e=De.create(e)),t instanceof De||(t=De.create(t));var n,r=new De(0);return t.isInteger()?(r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString())):(n=De.create(Math.pow(e.num,t.num)),e=De.create(Math.pow(e.den,t.num)),r.num=Ue.nthroot(n,t.den.toString()),r.den=Ue.nthroot(e,t.den)),r},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*Ue.gamma(1-e));--e;for(var n=t[0],r=1;r<9;r++)n+=t[r]/(e+r);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*n},bigfactorial:function(e){for(var t=new n(1),r=2;r<=e;r++)t=t.times(r);return new De(t)},bigLog:function(e){var t=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(t[e])return De.quick.apply(null,t[e].split("/"));e=new De(e);for(var n=new De(0),r=e.subtract(new De(1)),i=e.add(new De(1)),s=0;s<80;s++){var o=new De(2*s+1),a=Ue.bigpow(r.divide(i),o);a=o.clone().invert().multiply(a),n=n.add(a)}return n.multiply(new De(2))},factorial:function(e){var t=e%1==0;if(t&&e<0)return NaN;if(!t)return Ue.gamma(e+1);for(var n=1,r=2;r<=e;r++)n*=r;return n},dfactorial:function(e){if(Y(e)){var t=e%2==0,n=t?e/2:(e+1)/2,r=new De(1);if(t)for(var i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)));else for(i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)).subtract(new De(1)))}else r=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*Ue.gamma(1+e/2);return r},GCD:function(){for(var e=g([].slice.call(arguments).map((function(e){return Math.abs(e)}))).sort(),t=Math.abs(e.shift()),n=e.length;0<n--;)for(var r=Math.abs(e.shift());;){if(0===(t%=r)){t=r;break}if(0===(r%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],n=1;n<e.length;n++){var r=e[n],i=t.isNegative()&&r.isNegative()?-1:1;t=r.gcd(t);i<0&&t.negate()}return t},LCM:function(e,t){return e*t/Ue.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var n,r=Ue.ifactor(e),i=new Fe;for(n in i.symbols={},i.group=E,r){var s=new Fe(1);s.group=w,s.value=n,s.power=new Fe(r[n]),i.symbols[n]=s}return i.updateHash(),1===e&&(i=new Fe(e)),t<0&&i.negate(),i},sfactor:function(e,t){t=t||{};var n=Math.floor(Math.sqrt(e));s[s.length-1]<n&&e<1e6&&v(n);for(var r=s.length,i=0;i<r;i++)for(var o=s[i];e%o==0;)e/=o,t[o]=(t[o]||0)+1;return 1<e&&(t[e]=1),t},ifactor:function(e){var t=new n(e);if("0"===(e=String(e)))return{0:1};var r=(e=new n(e)).sign?-1:1;e=e.abs();var i={};if(e.lt("65536"))i=Ue.sfactor(e,i);else{var s=function(e){e.isPrime()?i[e]=(i[e]||0)+1:i=Ue.sfactor(e,i)};try{for(var o=1e3,a=0;!e.abs().equals(1);){if(e.isPrime()){s(e);break}var u=function t(r){for(var i=new n(r),s=2,u=new n(r),l=new n(1);l.equals(1);){for(var c=0;c<=s&&l.equals(1);c++){if(a++>o)throw new Error("stopping");u=u.pow(2).add(1).mod(e),l=n.gcd(u.minus(i).abs(),e)}s*=2,i=u}return l.equals(e)?t(r+1):l}(2);s(u),e=e.divide(u)}}catch(r){i={},s(t)}}return-1==r&&(r=h(te(i)),i["-"+r]=i[r],delete i[r]),i},boxfactor:function(e,t){t=t||200;for(var n,r,i=Math.floor(5/12*e),s=0,o=!1;n=Math.floor(e/i),0!=(r=e%i);){if(o)return[e,1];i=Math.max(r,i-r),o=t<++s}return[n,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e);t=oe(e)?t:Math.abs(t);for(var n=0,r=1,i=1,s=2;s<=e;s++)i=n+r,n=r,r=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,t,n,r){function i(e,t,n){var r=e(t);return isNaN(r)?e(1===n?t+1e-12:t-1e-12):r}r=r||1e-4;var s=Math.abs(Math.floor((n-t)/r));s%2!=0&&s++;for(var o=(n-t)/s,a=i(e,t,1),u=!1,l=t+o,c=1;c<s;c++)a+=(u?2:4)*i(e,l,1),u=!u,l+=o;return(a+i(e,l,2))*(o/3)},num_integrate:function(e,t,n,r,i){if(i<0)throw new Error("max depth cannot be negative");function s(e,t,n,r,i){var s={maxDepthCount:0,nanEncountered:!1};void 0===r&&(r=1e-9),void 0===i&&(i=45);var o=e(t),a=e(.5*(t+n)),u=e(n);r=function e(t,n,r,i,s,o,a,u,l,c,f){if(f.nanEncountered)return NaN;var p,h,m,g=r-n,v=t(n+.25*g),d=t(r-.25*g);if(isNaN(v))f.nanEncountered=!0;else if(isNaN(d))f.nanEncountered=!0;else if(a=((h=(m=g*(i+4*v+s)/12)+(p=g*(s+4*d+o)/12))-a)/15,!(f.maxDepthCount>1e3*l))return l<c?(f.maxDepthCount++,h+a):Math.abs(a)<u?h+a:(m=e(t,n,g=n+.5*g,i,v,s,m,.5*u,l,c+1,f),isNaN(m)?(f.nanEncountered=!0,NaN):(c=e(t,g,r,s,d,o,p,.5*u,l,c+1,f),isNaN(c)?(f.nanEncountered=!0,NaN):m+c))}(e,t,n,o,a,u,(o+4*a+u)*(n-t)/6,r,i,1,s);if(0<s.maxDepthCount&&k("integrate-adaptive-simpson: Warning: maximum recursion depth ("+i+") reached "+s.maxDepthCount+" times"),s.nanEncountered)throw new Error("Function does not converge over interval!");return r}var o;try{o=s(e,t,n,r,i)}catch(r){return Ue.simpson(e,t,n)}return se(o,12)},Ci:function(e){for(var t=0,n=1;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,r)/(r*Ue.factorial(r))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,n=0;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,1+r)/((1+r)*Ue.factorial(1+r))}return t},Ei:function(e){if(0===Number(e))return-1/0;for(var t=0,n=1;n<30;n++)t+=Math.pow(e,n)/(n*Ue.factorial(n));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,n,r=0,i=0;i<30;i++)n=1+(t=2*i),r+=Math.pow(e,n)/(n*n*Ue.factorial(t));return r},Chi:function(e){var t=function(e){return(Math.cosh(e)-1)/e};return Math.log(e)+.5772156649015329+Ue.num_integrate(t,.002,e,.001)},Li:function(e){return Ue.Ei(Ue.bigLog(e))},gamma_incomplete:function(e,t){for(var n=e-1,r=0,i=(t=t||0,0);i<n;i++)r+=Math.pow(t,i)/Ue.factorial(i);return Ue.factorial(n)*Math.exp(-t)*r},step:function(e){return 0<e?1:e<0?0:.5},rect:function(e){return.5===(e=Math.abs(e))?e:.5<e?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return 1<=(e=Math.abs(e))?0:1-e},nthroot:function(e,t){if(e instanceof De||(e=new De(e.toString())),(t=t instanceof De?t:new De(t.toString())).equals(1))return e;var n=e.divide(new De(2)),r=new De(1e-15),i=t.clone().invert(),s=t.subtract(new De(1));do{var o=Ue.bigpow(n,s),a=i.multiply(e.divide(o).subtract(n)).toDecimal(25);o=De.create(a);if(u)break;n=n.add(o),a=o.toDecimal();var u=!!l&&l===a,l=a}while(o.abs().gte(r));return n},sqrt:function(e){var t,n,r;e instanceof De||(e=new De(e));var i=0,s=!1,o=new De(1e-20),a=e.divide(new De(2));do{if(1e3<i)throw new Error("Unable to calculate square root for "+e)}while(a=a.add(e.divide(a)).divide(new De(2)),a=new De(a.decimal(30)),t=e.subtract(a.multiply(a)),r=!!n&&n.equals(t),(t.clone().abs().lessThan(o)||r)&&(s=!0),n=t,i++,!s);return a}});function Re(e,t,r,i){var s="hash"===t,o=void 0,l=s?void 0:t,c="decimal"===l||"decimals"===l;function f(e){switch(t){case"decimals":case"decimal":return o=o||function(e){return!1},e.valueOf();case"recurring":o=o||function(e){return-1!==e.indexOf("'")};var r=e.toString();if(0===(v=/^-?\d+(?:\/\d+)?$/.exec(r)).length)return r;var i=v[0].split("/"),s=!1,a=Number(i[0]);a<0&&(a=-a,s=!0);var l=(l=Number(i[1]))||1,c=10*(a-(d=Math.floor(a/l))*l);for(d=d.toString()+".";c&&c<l;)c*=10,d+="0";for(var f="",p=[],h=0;;){if(void 0!==p[c])return(s?"-":"")+(d+f.slice(0,p[c])+"'"+f.slice(p[c])+"'").replace("'0'","").replace(/\.$/,"");var m=Math.floor(c/l),g=c-m*l;p[c]=h,f+=m.toString(),h+=1,c=10*g}case"mixed":if(o=o||function(e){return-1!==e.indexOf("/")},r=e.toString(),0===(v=/^-?\d+(?:\/\d+)?$/.exec(r)).length)return r;i=v[0].split("/"),r=new n(i[0]);var v=new n(i[1]);v.equals(0)&&(v=new n(1));r=r.divmod(v);var d=r.quotient;v=r.remainder,r="-"===i[0][0]||d.equals(0)||v.equals(0)?"":"+";return(d.equals(0)?"":d.toString())+r+(v.equals(0)?"":v.toString()+"/"+i[1]);case"scientific":return o=o||function(e){return!1},new ke(e.valueOf()).toString(u.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return o=o||function(e){return-1!==e.indexOf("/")},e.toString()}}if(c&&void 0===i&&(i=16),V(e)){var p,h,m="",g="",v="",x=e.group||r,_=e.value;switch(s||("-1"==(p=f(e.multiplier))&&"-1"===String(e.multiplier)&&(v="-",p="1"),"1"!=p&&(m=p),"1"!=(h=e.power?f(e.power):"")&&(g=V(h)?Re(h,l):h)),x){case d:m="";var A=i&&c?e.multiplier.toDecimal(i):f(e.multiplier);_="-1"==String(e.multiplier)?"1":A,g="";break;case M:_=e.collectSymbols().map((function(e){return e=Re(e,l,r,i),"0"==e?"":e})).sort().join("+").replace(/\+\-/g,"-");break;case N:_=e.collectSymbols().map((function(e){return e=Re(e,l,r,i),"0"==e?"":e})).sort().join("+").replace(/\+\-/g,"-");break;case E:_=e.collectSymbols((function(e){var t=e.group;return(t===M||t===N)&&e.power.equals(1)&&e.multiplier.equals(1)?J(Re(e,l)):Re(e,l)})).join("*");break;case b:var O=e.previousGroup;A=e.power.group;O===M&&(_=e.collectSymbols(Re,l).join("+").replace("+-","-")),O===d||O===y||O===S||s||(_=J(_)),A!==N&&A!==E&&A!==M&&"1"==e.power.multiplier.toString()||!g||(g=J(g))}x===S&&(_=e.fname+J(e.args.map((function(e){return Re(e,l)})).join(","))),x===S&&e.fname in a&&(p=Re(e.args[0]),h=Re(e.args[1]),e.args[0].isComposite()&&(p=J(p)),e.args[1].isComposite()&&(h=J(h)),_=p+a[e.fname]+h),g&&x!==b&&o(g)&&(g=J(g)),((x===N||x===M)&&(m&&"1"!=m||"-"===v)||(x===E||x===N||x===M)&&g&&"1"!=g||!s&&x===w&&-1==_||e.fname===q)&&(_=J(_));var C=v+(m=i&&("decimal"===t||"decimals"===t&&m)?se(m,i):m);if(m&&o(m)&&(C=J(C)),m&&(C+="*"),g=g<0?J(g):g){if("e"===_&&u.E_TO_EXP)return C+"exp"+J(g);g=u.POWER_OPERATOR+g}return x=C+(_=x===b&&"-"===_.charAt(0)?J(_):_),(x=e.parens?J(x):x)+g}if(z(e)){for(var I=e.elements.length,L=(C=[],0);L<I;L++)C.push(e.elements[L].text(t));return"["+C.join(",")+"]"}try{return e.toString()}catch(e){return""}}function Te(e){if(j(e))return[e];for(var t=e,n=1,r=[];n<t;){var i=e/n,o=Math.floor(i);if(i-o<=2220446049250313e-31&&1<n){if(j(n)&&(-1===s.indexOf(n)&&s.push(n),r.push(n)),j(o)){r.push(o);break}t=o}n++}return r.sort((function(e,t){return e-t}))}function Pe(e){this.symbol=e}function ke(e){return this instanceof ke?((e=String(void 0===e?0:e)).startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,ke.isScientific(e)?this.fromScientific(e):this.convert(e),this):new ke(e)}function ke(e){return this instanceof ke?((e=String(void 0===e?0:e)).startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,ke.isScientific(e)?this.fromScientific(e):this.convert(e),this):new ke(e)}function De(e){if(e instanceof De)return e;if(void 0===e)return this;try{if(Y(e))try{this.num=n(e),this.den=n(1)}catch(t){return De.simple(e)}else{var t=e instanceof r?Be.quickConversion(e):Be.convert(e);this.num=new n(t[0]),this.den=new n(t[1])}}catch(t){return De.simple(e)}}function Fe(e){var t="Infinity"===e;return this instanceof Fe?(e instanceof r&&(e=e.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(e)||e instanceof r?(this.group=d,this.value=x,this.multiplier=new De(e)):(this.group=y,D(e),this.value=e,this.multiplier=new De(1),this.imaginary=e===u.IMAGINARY,this.isInfinity=t),this.power=new De(1),this):new Fe(e)}function je(){var e=this,t={},n={names:[],actions:[]};function i(e,t){this.start=e,this.end=t}function s(){this.elements=[]}function o(e,t,n){if(this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===o.OPERATOR){var r,i=f[e];for(r in i)this[r]=i[r]}else t===o.FUNCTION&&(this.precedence=o.MAX_PRECEDENCE,this.leftAssoc=!1)}i.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},i.prototype.text=function(){return Re(this.start)+":"+Re(this.end)},s.prototype.append=function(e){this.elements.push(e)},s.prototype.getItems=function(){return this.elements},s.prototype.toString=function(){return e.pretty_print(this.elements)},s.create=function(e){var t=new s;return e&&t.append(e),t},o.prototype.toString=function(){return this.value},o.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},o.OPERATOR="OPERATOR",o.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",o.FUNCTION="FUNCTION",o.UNIT="UNIT",o.KEYWORD="KEYWORD",o.MAX_PRECEDENCE=999,this.classes={Collection:s,Slice:i,Token:o};var a={prec:void 0,cos:function(t,n){var r=e.parse(Math.cos(t)*Math.cosh(n));n=e.parse(Math.sin(t)*Math.sinh(n));return e.subtract(r,e.multiply(n,Fe.imaginary()))},sin:function(t,n){var r=e.parse(Math.sin(t)*Math.cosh(n));n=e.parse(Math.cos(t)*Math.sinh(n));return e.subtract(r,e.multiply(n,Fe.imaginary()))},tan:function(t,n){var r=e.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*n)));n=e.parse(Math.sinh(2*n)/(Math.cos(2*t)+Math.cosh(2*n)));return e.add(r,e.multiply(n,Fe.imaginary()))},sec:function(t,n){return n=this.removeDen(this.cos(t,n)),e.subtract(n[0],e.multiply(n[1],Fe.imaginary()))},csc:function(t,n){return n=this.removeDen(this.sin(t,n)),e.add(n[0],e.multiply(n[1],Fe.imaginary()))},cot:function(t,n){return n=this.removeDen(this.tan(t,n)),e.subtract(n[0],e.multiply(n[1],Fe.imaginary()))},acos:function(t,n){t=this.fromArray([t,n]),n=e.pow(t.clone(),new Fe(2)),n=e.expand(n),n=e.multiply(D(e.subtract(new Fe(1),n)),Fe.imaginary()),n=Me(e.expand(e.add(t.clone(),n)));return e.expand(e.multiply(Fe.imaginary().negate(),n))},asin:function(t,n){return e.subtract(e.parse("pi/2"),this.acos(t,n))},atan:function(t,n){if(t.equals(0)&&(n.equals(1)||n.equals(-1)))return e.parse(`${Fe.infinity()}*${u.IMAGINARY}*${n}`);t=a.fromArray([t,n]),n=e.expand(e.multiply(Fe.imaginary(),t.clone())),t=Me(e.expand(e.subtract(new Fe(1),n.clone()))),n=Me(e.expand(e.add(new Fe(1),n.clone())));return e.expand(e.multiply(e.divide(Fe.imaginary(),new Fe(2)),e.subtract(t,n)))},asec:function(e,t){return t=this.removeDen([e,t]),t[1].negate(),this.acos.apply(this,t)},acsc:function(e,t){return t=this.removeDen([e,t]),t[1].negate(),this.asin.apply(this,t)},acot:function(e,t){return t=this.removeDen([e,t]),t[1].negate(),this.atan.apply(this,t)},cosh:function(t,n){var r=e.parse(Math.cosh(t)*Math.cos(n));n=e.parse(Math.sinh(t)*Math.sin(n));return e.add(r,e.multiply(n,Fe.imaginary()))},sinh:function(t,n){var r=e.parse(Math.sinh(t)*Math.cos(n));n=e.parse(Math.cosh(t)*Math.sin(n));return e.add(r,e.multiply(n,Fe.imaginary()))},tanh:function(t,n){var r=e.parse(Math.sinh(2*t)/(Math.cos(2*n)+Math.cosh(2*t)));t=e.parse(Math.sin(2*n)/(Math.cos(2*n)+Math.cosh(2*t)));return e.subtract(r,e.multiply(t,Fe.imaginary()))},sech:function(t,n){return n=this.removeDen(this.cosh(t,n)),e.subtract(n[0],e.multiply(n[1],Fe.imaginary()))},csch:function(t,n){return n=this.removeDen(this.sinh(t,n)),e.subtract(n[0],e.multiply(n[1],Fe.imaginary()))},coth:function(t,n){return n=this.removeDen(this.tanh(t,n)),e.add(n[0],e.multiply(n[1],Fe.imaginary()))},acosh:function(t,n){var r=this.fromArray([t,n]);t=D(e.add(r.clone(),new Fe(1))),n=D(e.subtract(r.clone(),new Fe(1)));return e.expand(Me(e.add(r,e.expand(e.multiply(t,n)))))},asinh:function(t,n){return t=this.fromArray([t,n]),n=D(e.add(new Fe(1),e.expand(e.pow(t.clone(),new Fe(2))))),e.expand(Me(e.add(t,n)))},atanh:function(t,n){t=this.fromArray([t,n]),n=Me(e.add(t.clone(),new Fe(1))),t=Me(e.subtract(new Fe(1),t));return e.expand(e.divide(e.subtract(n,t),new Fe(2)))},asech:function(e,t){return t=this.removeDen([e,t]),t[1].negate(),this.acosh.apply(this,t)},acsch:function(e,t){return t=this.removeDen([e,t]),t[1].negate(),this.asinh.apply(this,t)},acoth:function(e,t){return t=this.removeDen([e,t]),t[1].negate(),this.atanh.apply(this,t)},sqrt:function(t){var n=t.realpart(),r=t.imagpart();t=Fe.hyp(n,r),n=e.add(n.clone(),t),t=D(e.multiply(new Fe(2),n.clone()));return e.add(e.divide(n.clone(),t.clone()),e.multiply(e.divide(r,t),Fe.imaginary()))},log:function(t,n){var i=Me(Fe.hyp(t,n));t=u.USE_BIG?Fe(r.atan2(n.multiplier.toDecimal(),t.multiplier.toDecimal())):Math.atan2(n,t),t=e.parse(t);return e.add(i,e.multiply(Fe.imaginary(),t))},erf(t,n){return e.symfunction("erf",[t])},removeDen:function(t){var n,r=Q(t)?(n=t[0],t[1]):(n=t.realpart(),t.imagpart());t=Math.pow(n,2)+Math.pow(r,2);return[e.parse(n/t),e.parse(r/t)]},fromArray:function(t){return e.add(t[0],e.multiply(Fe.imaginary(),t[1]))},evaluate:function(t,n){var r,i,s=t.power.sign();return t.power=t.power.abs(),t.power.greaterThan(1)&&(t=e.expand(t)),i=s<0?(r=(i=this.removeDen(t))[0],i[1]):(r=t.realpart(),t.imagpart()),r.isConstant("all")&&i.isConstant("all")?this[n].call(this,r,i):e.symfunction(n,[t])}},l=this.trig={cos:function(t){if(t.equals("pi")&&t.multiplier.den.equals(2))return new Fe(0);if(u.PARSE2NUMBER){if(t.equals(new Fe(u.PI/2)))return new Fe(0);if(t.isConstant())return u.USE_BIG?new Fe(r.cos(t.multiplier.toDecimal())):new Fe(Math.cos(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"cos")}if(t.equals(0))return new Fe(1);var n,i=!1,s=Ae(t.multiplier.toDecimal()),o=t.multiplier.abs();return t.multiplier=o,t.isPi()&&t.isLinear()&&(Y(o)?n=new Fe(oe(o)?1:-1):(Number(o.num),2===(o=Number(o.den))?n=new Fe(0):3===o?(n=e.parse("1/2"),i=!0):4===o?(n=e.parse("1/sqrt(2)"),i=!0):6===o?(n=e.parse("sqrt(3)/2"),i=!0):n=e.symfunction("cos",[t]))),!i||2!==s&&3!==s||n.negate(),n||e.symfunction("cos",[t])},sin:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return t%Math.PI==0?new Fe(0):u.USE_BIG?new Fe(r.sin(t.multiplier.toDecimal())):new Fe(Math.sin(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"sin")}if(t.equals(0))return new Fe(0);var n,i=!1,s=Ae(t.multiplier.toDecimal()),o=t.multiplier.sign(),l=t.multiplier.abs();return t.multiplier=l,t.equals("pi")?n=new Fe(0):t.isPi()&&t.isLinear()&&(Y(l)?n=new Fe(0):(l.num,2==(l=l.den)?(n=new Fe(1),i=!0):3==l?(n=e.parse("sqrt(3)/2"),i=!0):4==l?(n=e.parse("1/sqrt(2)"),i=!0):6==l?(n=e.parse("1/2"),i=!0):n=e.multiply(new Fe(o),e.symfunction("sin",[t])))),n=n||e.multiply(new Fe(o),e.symfunction("sin",[t])),!i||3!==s&&4!==s||n.negate(),n},tan:function(t){if(u.PARSE2NUMBER){if(t%Math.PI==0&&t.isLinear())return new Fe(0);if(t.isConstant())return u.USE_BIG?new Fe(r.tan(t.multiplier.toDecimal())):new Fe(Math.tan(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"tan")}var n,i=!1,s=Ae(t.multiplier.toDecimal()),o=t.multiplier;if(t.multiplier=o,t.isPi()&&t.isLinear())if(Y(o))n=new Fe(0);else{if(o.num,o=o.den,2==o)throw new be("tan is undefined for "+t.toString());3==o?(n=e.parse("sqrt(3)"),i=!0):4==o?(n=new Fe(1),i=!0):6==o?(n=e.parse("1/sqrt(3)"),i=!0):n=e.symfunction("tan",[t])}return n=n||e.symfunction("tan",[t]),!i||2!==s&&4!==s||n.negate(),n},sec:function(t){if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Fe(new r(1).dividedBy(r.cos(t.multiplier.toDecimal()))):new Fe(Ue.sec(t.valueOf())):t.isImaginary()?a.evaluate(t,"sec"):e.parse(ee("1/cos({0})",t));var n,i=!1,s=Ae(t.multiplier.toDecimal()),o=t.multiplier.abs();if(t.multiplier=o,t.isPi()&&t.isLinear())if(Y(o))n=new Fe(oe(o)?1:-1);else{if(o.num,o=o.den,2==o)throw new be("sec is undefined for "+t.toString());3==o?(n=new Fe(2),i=!0):4==o?(n=e.parse("sqrt(2)"),i=!0):6==o?(n=e.parse("2/sqrt(3)"),i=!0):n=e.symfunction("sec",[t])}return!i||2!==s&&3!==s||n.negate(),n||e.symfunction("sec",[t])},csc:function(t){if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Fe(new r(1).dividedBy(r.sin(t.multiplier.toDecimal()))):new Fe(Ue.csc(t.valueOf())):t.isImaginary()?a.evaluate(t,"csc"):e.parse(ee("1/sin({0})",t));var n,i=!1,s=Ae(t.multiplier.toDecimal()),o=t.multiplier.sign(),l=t.multiplier.abs();if(t.multiplier=l,t.isPi()&&t.isLinear()){if(Y(l))throw new be("csc is undefined for "+t.toString());l.num,l=l.den,2==l?(n=new Fe(1),i=!0):3==l?(n=e.parse("2/sqrt(3)"),i=!0):4==l?(n=e.parse("sqrt(2)"),i=!0):6==l?(n=new Fe(2),i=!0):n=e.multiply(new Fe(o),e.symfunction("csc",[t]))}return n=n||e.multiply(new Fe(o),e.symfunction("csc",[t])),!i||3!==s&&4!==s||n.negate(),n},cot:function(t){if(u.PARSE2NUMBER)return t%(Math.PI/2)==0?new Fe(0):t.isConstant()?u.USE_BIG?new Fe(new r(1).dividedBy(r.tan(t.multiplier.toDecimal()))):new Fe(Ue.cot(t.valueOf())):t.isImaginary()?a.evaluate(t,"cot"):e.parse(ee("1/tan({0})",t));var n,i=!1,s=Ae(t.multiplier.toDecimal()),o=t.multiplier;if(t.multiplier=o,t.isPi()&&t.isLinear()){if(Y(o))throw new be("cot is undefined for "+t.toString());o.num,o=o.den,2==o?n=new Fe(0):3==o?(n=e.parse("1/sqrt(3)"),i=!0):4==o?(n=new Fe(1),i=!0):6==o?(n=e.parse("sqrt(3)"),i=!0):n=e.symfunction("cot",[t])}return n=n||e.symfunction("cot",[t]),!i||2!==s&&4!==s||n.negate(),n},acos:function(t){if(u.PARSE2NUMBER){if(t.isConstant()){if(t.gt(1)||t.lt(-1)){var n=t.toString();return Ie(he(`pi/2-asin(${n})`))}return u.USE_BIG?new Fe(r.acos(t.multiplier.toDecimal())):new Fe(Math.acos(t.valueOf()))}if(t.isImaginary())return a.evaluate(t,"acos")}return e.symfunction("acos",arguments)},asin:function(t){if(u.PARSE2NUMBER){if(t.isConstant()){if(t.gt(1)||t.lt(-1)){var n=u.IMAGINARY,i=t.multiplier.toDecimal();return Ie(he(`${n}*log(sqrt(1-${i}^2)-${n}*${i})`))}return u.USE_BIG?new Fe(r.asin(t.multiplier.toDecimal())):new Fe(Math.asin(t.valueOf()))}if(t.isImaginary())return a.evaluate(t,"asin")}return e.symfunction("asin",arguments)},atan:function(t){var n;if(t.equals(0))n=new Fe(0);else{if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Fe(r.atan(t.multiplier.toDecimal())):new Fe(Math.atan(t.valueOf())):t.isImaginary()?a.evaluate(t,"atan"):e.symfunction("atan",arguments);n=t.equals(-1)?e.parse("-pi/4"):e.symfunction("atan",arguments)}return n},asec:function(t){if(u.PARSE2NUMBER){if(t.equals(0))throw new Se("Input is out of the domain of sec!");if(t.isConstant())return l.acos(t.invert());if(t.isImaginary())return a.evaluate(t,"asec")}return e.symfunction("asec",arguments)},acsc:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return l.asin(t.invert());if(t.isImaginary())return a.evaluate(t,"acsc")}return e.symfunction("acsc",arguments)},acot:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new e.add(e.parse("pi/2"),l.atan(t).negate());if(t.isImaginary())return a.evaluate(t,"acot")}return e.symfunction("acot",arguments)},atan2:function(t,n){if(t.equals(0)&&n.equals(0))throw new be("atan2 is undefined for 0, 0");return u.PARSE2NUMBER&&t.isConstant()&&n.isConstant()?new Fe(Math.atan2(t,n)):e.symfunction("atan2",arguments)}},c=this.trigh={cosh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Fe(Math.cosh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"cosh")}return e.symfunction("cosh",arguments)},sinh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Fe(Math.sinh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"sinh")}return e.symfunction("sinh",arguments)},tanh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Fe(Math.tanh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"tanh")}return e.symfunction("tanh",arguments)},sech:function(t){return u.PARSE2NUMBER?t.isConstant()?new Fe(Math.sech(t.valueOf())):t.isImaginary()?a.evaluate(t,"sech"):e.parse(ee("1/cosh({0})",t)):e.symfunction("sech",arguments)},csch:function(t){return u.PARSE2NUMBER?t.isConstant()?new Fe(Math.csch(t.valueOf())):t.isImaginary()?a.evaluate(t,"csch"):e.parse(ee("1/sinh({0})",t)):e.symfunction("csch",arguments)},coth:function(t){return u.PARSE2NUMBER?t.isConstant()?new Fe(Math.coth(t.valueOf())):t.isImaginary()?a.evaluate(t,"coth"):e.parse(ee("1/tanh({0})",t)):e.symfunction("coth",arguments)},acosh:function(t){return t=u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acosh"):u.PARSE2NUMBER?he(e.parse(ee(u.LOG+"(({0})+sqrt(({0})^2-1))",t.toString()))):e.symfunction("acosh",arguments),t},asinh:function(t){return t=u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"asinh"):u.PARSE2NUMBER?he(e.parse(ee(u.LOG+"(({0})+sqrt(({0})^2+1))",t.toString()))):e.symfunction("asinh",arguments),t},atanh:function(t){return t=u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"atanh"):u.PARSE2NUMBER?he(e.parse(ee("(1/2)*"+u.LOG+"((1+({0}))/(1-({0})))",t.toString()))):e.symfunction("atanh",arguments),t},asech:function(t){return t=u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"asech"):u.PARSE2NUMBER?he(Me(e.add(t.clone().invert(),D(e.subtract(e.pow(t,new Fe(-2)),new Fe(1)))))):e.symfunction("asech",arguments),t},acsch:function(t){return t=u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acsch"):u.PARSE2NUMBER?he(e.parse(ee(u.LOG+"((1+sqrt(1+({0})^2))/({0}))",t.toString()))):e.symfunction("acsch",arguments),t},acoth:function(t){return t=u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acoth"):u.PARSE2NUMBER?t.equals(1)?Fe.infinity():he(e.divide(Me(e.divide(e.add(t.clone(),new Fe(1)),e.subtract(t.clone(),new Fe(1)))),new Fe(2))):e.symfunction("acoth",arguments),t}},f={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!(this.units={}),leftAssoc:!0,operation:function(e){return e}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(t){return e.symfunction(u.DOUBLEFACTORIAL,[t])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:I},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(t){return e.divide(t,new Fe(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},p={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},h=this.functions={cos:[l.cos,1],sin:[l.sin,1],tan:[l.tan,1],sec:[l.sec,1],csc:[l.csc,1],cot:[l.cot,1],acos:[l.acos,1],asin:[l.asin,1],atan:[l.atan,1],arccos:[l.acos,1],arcsin:[l.asin,1],arctan:[l.atan,1],asec:[l.asec,1],acsc:[l.acsc,1],acot:[l.acot,1],atan2:[l.atan2,2],acoth:[c.acoth,1],asech:[c.asech,1],acsch:[c.acsch,1],sinh:[c.sinh,1],cosh:[c.cosh,1],tanh:[c.tanh,1],asinh:[c.asinh,1],sech:[c.sech,1],csch:[c.csch,1],coth:[c.coth,1],acosh:[c.acosh,1],atanh:[c.atanh,1],log10:[,1],exp:[function(t){return t.fname===u.LOG&&t.isLinear()?e.pow(t.args[0],Fe.create(t.multiplier)):e.parse(ee("e^({0})",t))},1],radians:[function(t){return e.parse(ee("({0})*pi/180",t))},1],degrees:[function(t){return e.parse(ee("({0})*180/pi",t))},1],min:[function(){var t=[].slice.call(arguments);return P(t)?t[0]:ge(t)?new Fe(Math.min.apply(null,t)):u.SYMBOLIC_MIN_MAX&&ve(t)?me("min",t):e.symfunction("min",t)},-1],max:[function(){var t=[].slice.call(arguments);return P(t)?t[0]:ge(t)?new Fe(Math.max.apply(null,t)):u.SYMBOLIC_MIN_MAX&&ve(t)?me("max",t):e.symfunction("max",t)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(t){return u.PARSE2NUMBER?t.isConstant()?new Fe(Ue.sinc(t)):e.parse(ee("sin({0})/({0})",t)):e.symfunction("sinc",[t])},1],tri:[,1],sign:[function(t){return t.isConstant(!0)?new Fe(Math.sign(he(t))):e.symfunction("sign",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[I,1],factorial:[I,1],continued_fraction:[function(t,n){return t=he(t),t.isConstant()?(t=Ue.continuedFraction(t,n),n=Ve.fromArray(t.fractions.map((function(e){return new Fe(e)}))),Ve.fromArray([new Fe(t.sign),new Fe(t.whole),n])):e.symfunction("continued_fraction",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[Ee,[1,2]],scientific:[function(e,t){return e.scientific=t||10,e},[1,2]],mod:[U,2],pfactor:[H,1],vector:[function(){return new Ve([].slice.call(arguments))},-1],matrix:[function(){return He.fromArray(arguments)},-1],Set:[function(){return Ze.fromArray(arguments)},-1],imatrix:[function(e){return He.identity(e)},-1],parens:[function(t){return u.PARSE2NUMBER?t:e.symfunction("parens",[t])},-1],sqrt:[D,1],cbrt:[j,1],nthroot:[G,2],log:[Me,[1,2]],expand:[function(e,t){return Ie(e,t=t||{expand_denominator:!0,expand_functions:!0})},1],abs:[x,1],invert:[function(e){if(X(e))return e.invert();T("invert expects a matrix")},1],determinant:[function(e){return X(e)?e.determinant():e},1],size:[function(e){var t;return X(e)?t=[new Fe(e.cols()),new Fe(e.rows())]:z(e)||$(e)?t=new Fe(e.elements.length):T("size expects a matrix or a vector"),t},1],transpose:[function(e){if(X(e))return e.transpose();T("function transpose expects a matrix")},1],dot:[function(e,t){if(z(e)&&z(t))return e.dot(t);T("function dot expects 2 vectors")},2],cross:[function(e,t){if(z(e)&&z(t))return e.cross(t);T("function cross expects 2 vectors")},2],vecget:[function(t,n){return n.isConstant()&&Y(n)?t.elements[n]:e.symfunction("vecget",arguments)},2],vecset:[function(t,n,r){return n.isConstant?(t.elements[n]=r,t):e.symfunction("vecset",arguments)},3],vectrim:[function(t,n){return n=void 0===n?1e-14:n,t=t.clone(),n=Number(n),t.elements.sort((function(e,t){return t.group-e.group})),t.elements=ue(t.elements,(function(t,r){return Number(e.subtract(he(t),he(r)).abs())<=n})),t},[1,2]],matget:[function(t,n,r){return n.isConstant()&&r.isConstant()?t.elements[n][r]:e.symfunction("matget",arguments)},3],matset:[function(e,t,n,r){return e.elements[t][n]=r,e},4],matgetrow:[function(t,n){return n.isConstant()?new He(t.elements[n]):e.symfunction("matgetrow",arguments)},2],matsetrow:[function(t,n,r){if(!n.isConstant())return e.symfunction("matsetrow",arguments);if(t.elements[n].length!==r.elements.length)throw new _e("Matrix row must match row dimensions!");return t=t.clone(),t.elements[n]=r.clone().elements,t},3],matgetcol:[function(t,n){if(!n.isConstant())return e.symfunction("matgetcol",arguments);n=Number(n);var r=He.fromArray([]);return t.each((function(e,t,i){i===n&&r.elements.push([e.clone()])})),r},2],matsetcol:[function(t,n,r){if(!n.isConstant())return e.symfunction("matsetcol",arguments);if(n=Number(n),t.rows()!==r.elements.length)throw new _e("Matrix columns must match number of columns!");return r.each((function(e,r){t.set(r-1,n,e.elements[0].clone())})),t},3],rationalize:[R,1],IF:[function(e,t,n){return"boolean"!=typeof e&&W(e)&&(e=!!Number(e)),e?t:n},3],is_in:[function(e,t){if(X(e)){for(var n=0,r=e.rows();n<r;n++)for(var i=0,s=e.cols();i<s;i++)if(e.elements[n][i].equals(t))return new Fe(1)}else if(e.elements)for(n=0,r=e.elements.length;n<r;n++)if(e.elements[n].equals(t))return new Fe(1);return new Fe(0)},2],realpart:[Z,1],imagpart:[J,1],conjugate:[te,1],arg:[le,1],polarform:[function(t){var n;return n=Fe.toPolarFormArray(t),t=n[1],n=n[0],t=e.parse(ee("e^({0}*({1}))",u.IMAGINARY,t)),e.multiply(n,t)},1],rectform:[function(t){var n,r,i,s,o,a=t.clone();try{return n=ie(t,"e",!0),r=e.divide(n.x.power,Fe.imaginary()),i=he(l.tan(r)),e.pow(n.a,new Fe(2)),s=i.getDenom(!0),o=i.getNum(),Fe.hyp(o,s).equals(n.a)?e.add(s,e.multiply(Fe.imaginary(),o)):a}catch(t){return a}},1],sort:[function(e,t){t=t?t.toString():"asc";var n=function(e){return e.group===d?e.multiplier:e.group===S?""===e.fname?n(e.args[0]):e.fname:e.group===y?e.power:e.value};return new Ve((z(e)?e.elements:e.collectSymbols()).sort((function(e,r){return e=n(e),r=n(r),"desc"===t?r-e:e-r})))},[1,2]],integer_part:[,1],union:[function(e,t){return e.union(t)},2],contains:[function(e,t){return e.contains(t)},2],intersection:[function(e,t){return e.intersection(t)},2],difference:[function(e,t){return e.difference(t)},2],intersects:[function(e,t){return new Fe(Number(e.intersects(t)))},2],is_subset:[function(e,t){return new Fe(Number(e.is_subset(t)))},2],print:[function(){pe(arguments).map((function(e){console.log(e.toString())}))},-1]};function m(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}function g(e){for(var t=0,n=[[]],r=0,i=e.length;r<i;r++)","===e[r]?n[++t]=[]:n[t].push(e[r]);return n}function v(e){return e.replace(/^\\left\((.+)\\right\)$/g,(function(e,t){return t||e}))}function x(t){if(t.isInfinity)return Fe.infinity();if(t.multiplier.lessThan(0)&&t.multiplier.negate(),t.isImaginary()){var n=t.realpart(),r=t.imagpart();if(n.isConstant()&&r.isConstant())return D(e.add(e.pow(n,new Fe(2)),e.pow(r,new Fe(2))))}else if(W(t)||oe(t.power))return t;var i;return t.isComposite()&&(i=[],t.each((function(e){i.push(e.multiplier)})),Ue.QGCD.apply(null,i).lessThan(0)&&(t.multiplier=t.multiplier.multiply(new De(-1)),t.distributeMultiplier())),r=e.parse(t.multiplier),t.toUnitMultiplier(),e.multiply(r,e.symfunction(A,[t]))}function I(t){if(z(t)){var n=new Ve;return t.each((function(e,t){n.set(t-1,I(e))})),n}if(X(t)){var r=new He;return t.each((function(e,t,n){r.set(t,n,I(e))})),r}if(u.PARSE2NUMBER&&t.isConstant())return Oe(Y(t)?Ue.bigfactorial(t):Ue.gamma(t.multiplier.add(new De(1)).toDecimal()));if(t.isConstant()&&t.getDenom().equals(2)){var i,s=t.getNum(),o=t.multiplier.isNegative()?(o=e.subtract(s.negate(),new Fe(1)).multiplier.divide(new De(2)),i=e.pow(new Fe(-4),new Fe(o)).multiplier.multiply(Ue.bigfactorial(o)),Ue.bigfactorial(new De(2).multiply(o))):(o=e.add(s,new Fe(1)).multiplier.divide(new De(2)),i=Ue.bigfactorial(new De(2).multiply(o)),e.pow(new Fe(4),new Fe(o)).multiplier.multiply(Ue.bigfactorial(o)));o=i.divide(o);return e.multiply(e.parse("sqrt(pi)"),new Fe(o))}return e.symfunction(O,[t])}function U(t,n){if(t.isConstant()&&n.isConstant()){var r=new Fe(1);return r.multiplier=r.multiplier.multiply(t.multiplier.mod(n.multiplier)),r}return r=e.divide(t.clone(),n.clone()),Y(r)?new Fe(0):e.symfunction("mod",[t,n])}function R(t){if(t.isComposite()){var n,r,i,s,o=new Fe(0);return t.each((function(t){i=t.getNum(),s=t.getDenom(),r=o.getNum(),n=o.getDenom(),r=e.multiply(s,r),i=e.multiply(i,n),i=e.expand(e.add(r,i)),s=e.multiply(n,s),o=e.divide(i,s)}),!0),o}return t}function D(t){if((t=V(t)?t:e.parse(t)).group===b)return e.symfunction(_,[t]);var n=(t=""===t.fname&&t.power.equals(1)?t.args[0]:t).multiplier.sign()<0;if(u.PARSE2NUMBER){if(t.isConstant()&&!n)return new Fe(r.sqrt(t.multiplier.toDecimal()));if(t.isImaginary())return a.sqrt(t);if(t.group===y)return e.symfunction("sqrt",[t])}var i,s=t.isConstant();if(t.group===E&&t.isLinear()){var o=D(Fe(t.multiplier));for(c in t.symbols){var l=t.symbols[c];o=e.multiply(o,D(l))}h=o}else if(t.fname===_){var c=t.args[0],f=t.multiplier;c.setPower(t.power.multiply(new De(.25))),h=c,f.equals(1)||(h=e.multiply(D(e.parse(f)),h))}else if(t.power.isInteger())if(t.multiplier<0&&t.group===y)var p=e.parse(t.multiplier).negate(),h=(f=e.parse(t).toUnitMultiplier().negate(),e.multiply(e.symfunction(u.SQRT,[f]),D(p)));else{p=t.power.sign(),t.power=t.power.abs(),s&&t.multiplier.lessThan(0)&&(i=Fe.imaginary(),t.multiplier=t.multiplier.abs());var m=t.multiplier.toDecimal();s=Math.abs(m),s=Math.sqrt(s);if(Y(s))o=new Fe(s);else if(Y(m)){var g=Ue.ifactor(m),v=1;for(l in g){var d,w=(S=g[l])-S%2;w&&(d=Math.pow(l,w),v*=Math.pow(l,w/2),m/=d)}o=e.multiply(e.symfunction(_,[new Fe(m)]),new Fe(v))}else{for(var S,M=[new Fe(t.multiplier.num),new Fe(t.multiplier.den)],N=[new Fe(1),new Fe(1)],x=[new Fe(1),new Fe(1)],q=0;q<2;q++)H(S=M[q]).each((function(t){var n=(t=Fe.unwrapPARENS(t)).clone().toLinear(),r=Number(t.power);t=r%2;N[q]=e.multiply(N[q],e.pow(n,new Fe((r-t)/2))),x[q]=e.multiply(x[q],D(e.pow(n,new Fe(t))))}));o=e.divide(e.multiply(N[0],x[0]),e.multiply(N[1],x[1]))}h=(t=t.toUnitMultiplier(!0)).isOne()?t:oe(t.power.toString())?e.pow(t.clone(),new Fe(.5)):e.symfunction(_,[t]),p<0&&h.power.negate(),o&&(h=e.multiply(o,h)),i&&(h=e.multiply(i,h))}else t.setPower(t.power.multiply(new De(.5))),h=t;return n&&u.PARSE2NUMBER?e.parse(h):h}function j(t){if(t.isConstant(!0))return G(t,new Fe(3));var n,r=t.power/3,i=e.pow(e.parse(t.multiplier),new Fe(1/3));t=t.toUnitMultiplier();return Y(r)?n=e.pow(t.toLinear(),e.parse(r)):t.group===E?(n=new Fe(1),t.each((function(t){n=e.multiply(n,j(t))}))):n=e.symfunction("cbrt",[t]),e.multiply(i,n)}function G(t,n,r,i){if((n=he(e.parse(n))).equals(0))throw new be("Unable to calculate nthroots of zero");if(t<0&&oe(n))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!t.isConstant(!0))return e.symfunction("nthroot",arguments);void 0===i&&(i=!0),r=r||25;var s=(t=t.group!==d?he(t):t).sign();if(s<0&&(t=x(t)),Y(t)&&n.isConstant()){var o;n=t<0x10000000000000000?De.create(Math.pow(t,1/n)):Ue.nthroot(t,n);return i&&(o=new Fe(n)),o=new Fe(n.toDecimal(r)),e.multiply(new Fe(s),o)}}function H(t){if(t.greaterThan(9999999999998891e26)||t.equals(-1))return t;if(t.equals(Math.PI))return new Fe(Math.PI);if((t=he(t.clone())).isConstant()){var n=new Fe(1),r=t.toString();if(Y(r)){var i,s=Ue.ifactor(r);for(i in s){var o=s[i];n=e.multiply(n,e.symfunction("parens",[new Fe(i).setPower(new De(o))]))}}else r=H(new Fe(t.multiplier.num)),t=H(new Fe(t.multiplier.den)),n=e.multiply(e.symfunction("parens",[r]),e.symfunction("parens",[t]).invert())}else n=e.symfunction("pfactor",arguments);return n}function Z(e){return e.realpart()}function J(e){return e.imagpart()}function te(t){var n=t.realpart();t=t.imagpart();return e.add(n,e.multiply(t.negate(),Fe.imaginary()))}function le(t){var n=t.realpart();t=t.imagpart();return n.isConstant()&&t.isConstant()?new Fe(Math.atan2(t,n)):e.symfunction("atan2",[t,n])}function le(t){var n=t.realpart();t=t.imagpart();return n.isConstant()&&t.isConstant()?t.equals(0)&&n.equals(-1)?e.parse("pi"):t.equals(1)&&n.equals(0)?e.parse("pi/2"):t.equals(1)&&n.equals(1)?e.parse("pi/4"):new Fe(Math.atan2(t,n)):e.symfunction("atan2",[t,n])}function me(e,t){var n,r;for(t.map((function(e){e.numVal=he(e).multiplier}));;){if((r=t.length)<2)return t[0];n=t.pop(),r=t[r-2],("min"===e?n.numVal<r.numVal:n.numVal>r.numVal)&&(t.pop(),t.push(n))}}function Me(t,n){if(t.equals(1))return new Fe(0);var r,i,s;if(t.fname===_&&t.multiplier.equals(1))return r=e.divide(Me(t.args[0]),new Fe(2)),t.power.sign()<0&&r.negate(),r;if(t.equals(0))throw new be(u.LOG+"(0) is undefined!");return t.isImaginary()?a.evaluate(t,u.LOG):(t.isConstant()&&void 0!==n&&n.isConstant()?r=new Fe(Math.log(t)/Math.log(n)):t.group===b&&t.power.multiplier.lessThan(0)||"-1"===t.power.toString()?(t.power.negate(),r=Me(t).negate()):"e"===t.value&&t.multiplier.equals(1)?(n=t.power,r=V(n)?n:new Fe(n)):t.group===S&&"exp"===t.fname?(s=t.args[0],r=t.multiplier.equals(1)?e.multiply(s,new Fe(t.power)):e.symfunction(u.LOG,[t])):u.PARSE2NUMBER&&W(t)?((t=e.parse(t)).multiplier.lessThan(0)&&(t.negate(),i=e.multiply(new Fe(Math.PI),new Fe("i"))),r=new Fe(Math.log(t.multiplier.toDecimal())),i&&(r=e.add(r,i))):(t.power.equals(1)||t.contains("e")||(s=t.group===b?t.power:new Fe(t.power),t.toLinear()),r=1<arguments.length&&P(arguments)?new Fe(1):e.symfunction(u.LOG,arguments),s&&(r=e.multiply(s,r))),r)}function Ee(t,n){var r=n&&n.isConstant()||void 0===n;if(t.isConstant()&&r){var i;r=t;return n&&n.lessThan(0)&&(n=x(n),r=(i=Number(t).toExponential().toString().split("e"))[0],i=i[1]),n=new Fe(se(r,Number(n||0))),e.multiply(n,e.pow(new Fe(10),new Fe(i||0)))}return e.symfunction("round",arguments)}function Ae(e){return e%=2,0<=(e=e<0?2+e:e)&&e<=.5?1:.5<e&&e<=1?2:1<e&&e<=1.5?3:4}function Oe(e){if(!isFinite(e)){var t=Math.sign(e),n=new Fe(String(Math.abs(e)));return n.multiplier=n.multiplier.multiply(new De(t)),n}if(V(e))return e;if("number"==typeof e)try{e=De.simple(e)}catch(t){e=new De(e)}return n=new Fe(0),n.multiplier=e,n}function Ie(t,n){if(Array.isArray(t))return t.map((function(e){return Ie(e,n)}));if(n=n||{},t.group===S&&""===t.fname){var r=Ie(t.args[0],n),i=Ie(e.pow(r,e.parse(t.power)),n);return e.multiply(e.parse(t.multiplier),i).distributeMultiplier()}if(-1!==[d,w,y].indexOf(t.group))return t;i=t.clone();try{var s,o,a,u=t.multiplier.toString(),l=Number(t.power),c=t;if(t.isComposite()&&Y(t.power)&&0<t.power){var f=l-1;r=new Fe(0);t.each((function(t){r=e.add(r,Ie(e.parse(t),n))}));for(var p=e.parse(r),h=0;h<f;h++)p=de(p,r,n);c=e.multiply(e.parse(u),p).distributeMultiplier()}else t.group===S&&!0===n.expand_functions?(s=[],t.args.forEach((function(e){s.push(Ie(e,n))})),c=e.pow(e.symfunction(t.fname,s),e.parse(t.power)),c=e.multiply(c,e.parse(t.multiplier))):t.isComposite()&&Y(t.power)&&t.power<0&&!0===n.expand_denominator?(t=t.invert(),(c=Ie(t,n)).invert()):t.group===E?(o=function(e){switch(e.group){case N:return 0;case M:return 1;case E:return 2;case S:return 3;default:return 4}},a=t.collectSymbols().sort((function(e,t){return o(t)-o(e)})).map((function(t){return Ie(e.pow(t,e.parse(l)),n)})),r=a.pop(),(c=r.isComposite()&&r.isLinear()?(a.forEach((function(e){r=de(r,e,n)})),r.isComposite()?(1<r.power&&(r=Ie(e.pow(r,e.parse(r.power)),n)),e.multiply(e.parse(u),r).distributeMultiplier()):r):(c=r,a.forEach((function(t){c=e.multiply(c,t)})),e.multiply(c,e.parse(u)).distributeMultiplier())).group===E&&(c=e.parse(c))):c=t;return c}catch(t){return i}return i}function Pe(e){if(V(e.power)||!e.power.absEquals(.5))return e;var t=e.power.sign();e=D(e.group===w?new Fe(e.value):e.toLinear());return t<0&&e.invert(),e}function ke(e){return new Fe(!0===e?1:0)}this.error=T,this.override=function(e,n){t[e]||(t[e]=[]),t[e].push(this[e]),this[e]=n},this.restore=function(e){this[e]&&(this[e]=t[e].pop())},this.extend=function(e,t,n){var r,i=this;"function"==typeof this[e]&&"function"==typeof t&&(r=this[e],this[e]=function(e,s){return V(e)&&V(s)&&!n?r.call(i,e,s):t.call(i,e,s,r)})},this.symfunction=function(e,t){var n=new Fe(e);return n.group=S,"object"==typeof t&&(t=[].slice.call(t)),n.args=t,n.fname=e===q?"":e,n.updateHash(),n},this.callfunction=function(t,n,r){var i=h[t];i||T("Nerdamer currently does not support the function "+t);var s,o=i[1]||r,a=i[0];n instanceof Array||(n=void 0!==n?[n]:[]),-1!==o&&(s=(l=Q(o))?o[0]:o,r=l?o[1]:o,o=t+" requires a {0} of {1} arguments. {2} provided!",(l=n.length)<s&&T(ee(o,"minimum",s,l)),r<l&&T(ee(o,"maximum",r,l)));var l=ge(n);return a?a.apply(i[2],n):(a=function(e){for(var t=u.FUNCTION_MODULES,n=t.length,r=0;r<n;r++){var i=t[r];if(e in i)return i[e]}T("The function "+e+" is undefined!")}(t),u.PARSE2NUMBER&&l?Oe(a.apply(a,n)):e.symfunction(t,n))},this.operator_filter_regex=(c="^\\"+Object.keys(f).filter((function(e){if(1===e.length)return e})).join("\\"),new RegExp("(["+c+"])\\s+(["+c+"])")),this.setOperator=function(t,n,r){var i=t.operator;if(f[i]=t,n&&(this[t.action]=n),e[i]=t.operation,t.action||t.prefix||t.postif||(t.action=i),"over"===r||"under"===r){var s,o=t.precedence;for(s in f){var a=f[s];("over"===r?a.precedence>=o:a.precedence>o)&&a.precedence++}}},this.getOperator=function(e){return f[e]},this.aliasOperator=function(e,t){var n,r={},i=f[e];for(n in i)r[n]=i[n];r.operator=t,this.setOperator(r)},this.getOperators=function(){return f},this.getBrackets=function(){return p},this.initConstants=function(){this.CONSTANTS={E:new Fe(u.E),PI:new Fe(u.PI)}},this.pretty_print=function(t){if(Array.isArray(t)){var n=t.map(t=>e.pretty_print(t)).join(", ");return"vector"===t.type?"vector<"+n+">":"("+n+")"}return t.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){if(u.callPeekers)for(var t=this.peekers[e],n=pe(arguments).slice(1).map(K),r=0;r<t.length;r++)t[r].apply(null,n)},this.tokenize=function(t){for(var n in t=(t=String(t)).trim().replace(/\s+/g," "),p){var r=new RegExp(p[n].is_close?"\\s+\\"+n:"\\"+n+"\\s+","g");t=t.replace(r,n)}for(var i=0,s=t.length,a=0,u=[],l=[u],c=l[0],m=0,g=[],v=!1,d=function(e,t){var n=[];void 0!==e&&(n.type=e),n.column=t,l.push(n),c.push(n),c=n,m++},w=function(){l.pop(),c=l[--m]},y=function(n,r){(r=void 0===r?t.substring(a,n):r)in e.units?c.push(new o(r,o.UNIT,a)):""!==r&&c.push(new o(r,o.VARIABLE_OR_LITERAL,a))},b=function(e){c.push(new o(e,o.FUNCTION,a))},S=function(e){a=e+1};i<s;i++){var M=t.charAt(i);if(M in f){y(i);var E=c[0]&&B(c[0]);v&&a<i&&","!==M&&!(E&&"*"===M)&&(v=!1,w()),S(i+1);var N=function(e){for(var n=(e=void 0!==e?e:i)+1;t.charAt(n++)in f;);return t.substring(e,n-1)}(i);i=(a=a+N.length-2)-1;c.push.apply(c,function(e){for(var t=i-e.length,n=[],r=e.charAt(0),s=1,a=e.length;s<a;s++){var u=e.charAt(s),l=r+u;r=l in f?l:(n.push(new o(r,o.OPERATOR,t+s)),u)}return n.push(new o(r,o.OPERATOR,t+s)),n}(N))}else if(M in p){var x,q=p[M];if(q.is_open)g.push([q,a]),(x=t.substring(a,i))in h?b(x):""!==x&&c.push(new o(x,o.VARIABLE_OR_LITERAL,a)),d(q.maps_to,i);else if(q.is_close){var _=g.pop();if(!_)throw new Ne("Missing open bracket for bracket at: "+(i+1));if(_[0].id!==q.id-1)throw new Ne("Parity error");y(i),w()}S(i)}else" "===M&&(_=t.substring(a,i),q=t.charAt(i+1),v?(_ in f?c.push(new o(_,o.OPERATOR,i)):(y(void 0,_),w(),((M=q in f)&&"-"===f[q].value||!M)&&c.push(new o("*",o.OPERATOR,i))),v=!1):(x=t.substring(a,i))in h?(v=!0,b(x),d()):x in f?c.push(new o(x,o.OPERATOR,i)):(y(void 0,x),q=t.charAt(i+1),""===_||""===q||_ in f||q in f||c.push(new o("*",o.OPERATOR,i))),S(i))}if(g.length){var A=g.pop();throw new Ne("Missing closed bracket for bracket at "+(A[1]+1))}return y(i),u},this.toRPN=function(e){for(var t=e.type,n=e.length,r=[],i=[],s=[],a=function(e,t){for(;e.length;)t.push(e.pop())},u=0;u<n;u++){var l=e[u];if(l.type!==o.OPERATOR)break;if(!l.prefix)throw new xe("Not a prefix operator");l.is_prefix=!0,i.push(l)}for(;u<n;u++){var c=e[u];if(c.type===o.OPERATOR){var f=c;for(f.overloaded&&(m=e[u+1])&&m.type===o.VARIABLE_OR_LITERAL&&(f.postfix=!1,f.action=f.overloadAction,f.leftAssoc=f.overloadLeftAssoc);i.length;){var p=i[i.length-1];if(!(p.precedence>f.precedence||!f.leftAssoc&&p.precedence===f.precedence))break;r.push(i.pop())}if(("vector"===t||"set"===t)&&"vectorFn"in f&&(f.action=f.vectorFn),f.postfix){var h=e[u-1];if(!h)throw new xe("Unexpected prefix operator '"+c.value+"'! at "+c.column);if(h.type===o.OPERATOR&&!h.postfix)throw new xe("Unexpected prefix operator '"+h.value+"'! at "+h.column)}else do{var m,g=!!(m=e[u+1])&&m.type===o.OPERATOR;if(g){if(!m.prefix)throw new xe("A prefix operator was expected at "+m.column);m.is_prefix=!0,s.push(m),u++}}while(g);for((f.is_prefix?s:i).push(f);s.length&&(f.leftAssoc||!f.leftAssoc&&s[s.length-1].precedence>=f.precedence);)i.push(s.pop())}else c.type===o.VARIABLE_OR_LITERAL?(0===r.length&&a(s,i),r.push(c),(h=i[i.length-1])&&h.leftAssoc||a(s,r)):c.type===o.FUNCTION?i.push(c):c.type===o.UNIT&&r.push(c);Array.isArray(c)&&(r.push(this.toRPN(c)),c.type&&r.push(new o(c.type,o.FUNCTION,c.column)))}return a(i,r),a(s,r),r},this.parseRPN=function(t,n){try{for(var r in n=n||{})n[r]=e.parse(n[r],{});u.PARSE2NUMBER&&("e"in n||(n.e=new Fe(u.E)),"pi"in n||(n.pi=new Fe(u.PI)));for(var a=[],l=0,c=t.length;l<c;l++){var f=t[l];if(f=Array.isArray(f)?this.parseRPN(f,n):f)if(f.type===o.OPERATOR)if(f.is_prefix||f.postfix)a.push(f.operation(a.pop()));else{var p=a.pop(),h=a.pop();if(void 0===h)throw new xe(f+" is not a valid postfix operator at "+f.column);var m="comma"===f.action;h instanceof Ze&&!m&&(h=Ve.fromSet(h)),p instanceof Ze&&!m&&(p=Ve.fromSet(p)),this.callPeekers("pre_operator",h,p,f);var g=e[f.action](h,p);this.callPeekers("post_operator",g,h,p,f),a.push(g)}else if(f.type===o.FUNCTION){var v=a.pop(),d=v.parent;v instanceof s||(v=s.create(v));var w=f.value,y=v.getItems();this.callPeekers("pre_function",w,y);var b=e.callfunction(w,y);this.callPeekers("post_function",b,w,y);var S=a[a.length-1],M=t[l+1];if(M&&M.type===o.OPERATOR&&","===M.value||!(b instanceof Ve)||!S||!S.elements||S instanceof s)d&&(b.parent=d),a.push(b);else{var E=a.pop(),N=b.elements[0];if(N.isConstant())if(N instanceof i)a.push(Ve.fromArray(E.elements.slice(N.start,N.end)));else{var x=Number(N),q=E.elements.length;if((x=x<0?q+x:x)<0||q<=x)throw new qe("Index out of range "+(f.column+1));var _=E.elements[x];E.getter=x,_.parent=E,a.push(_)}else E.getter=N,a.push(E),a.push(b)}}else{var A,O=f.value;O in u.ALIASES?f=e.parse(u.ALIASES[f]):f.type===o.VARIABLE_OR_LITERAL?f=new Fe(O):f.type===o.UNIT&&((f=new Fe(O)).isUnit=!0),O in e.CONSTANTS?(A=f,f=new Fe(e.CONSTANTS[O])):O in n&&O!==n[O].toString()?(A=f,f=n[O].clone()):O in L&&(A=f,f=L[O].clone()),A&&(f.subbed=A),a.push(f)}}var C=a[0];if(-1!==["undefined","string","number"].indexOf(typeof C))throw new Le("Unexpected token!");return C}catch(n){throw[Se].forEach((function(e){if(n instanceof e)throw new e(n.message+": "+f.column)})),new ye(n.message+": "+f.column)}},m.prototype.toString=function(){var e=this.left?this.left.toString()+"---":"",t=this.right?"---"+this.right.toString():"";return e+"("+this.value+")"+t},m.prototype.toHTML=function(e,t){function n(e){return" ".repeat(t*e)}e=e||0,t=void 0===t?4:t;var r="",i=this.left?n(e+1)+"<li>\n"+this.left.toHTML(e+2,t)+n(e+1)+"</li> \n":"",s=this.right?n(e+1)+"<li>\n"+this.right.toHTML(e+2,t)+n(e+1)+"</li>\n":"";r=n(e)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+n(e)+"\n";return(i||s)&&(r+=n(e)+"<ul>\n"+i+s+n(e)+"</ul>\n"),r+""},this.tree=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(Array.isArray(r))r=this.tree(r),t.push(r);else if(r.type===o.OPERATOR)r.is_prefix||r.postfix?(s=r.is_prefix?"left":"right",i=t.pop(),(r=new m(r))[s]=i):((r=new m(r)).right=t.pop(),r.left=t.pop()),t.push(r);else if(r.type===o.FUNCTION){r=new m(r);var i,s=t.pop();if(r.right=s,"object"===r.value&&(i=t[t.length-1])){for(;i.right;)i=i.right;i.right=r;continue}t.push(r)}else t.push(new m(r))}return t[0]},this.parse=function(e,t){return e=function(e){e=String(e);for(var t=0;t<n.actions.length;t++)e=n.actions[t].call(this,e);for(e=e.replace(/\s+/g," "),e=(e=/e/gi.test(e)?e.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,(function(e){return F(e)})):e).replace(u.IMPLIED_MULTIPLICATION_REGEX,(function(){var e=arguments[4],t=arguments[1],n=arguments[2],r=arguments[3],i="",s="*";return t+(s=(i=e.charAt(r).match(/[\+\-\/\*]/)?i:e.charAt(r-1)).match(/[a-z]/i)?"":s)+n})).replace(/([a-z0-9_]+)/gi,(function(e,t){return!1===u.USE_MULTICHARACTER_VARS&&!(t in h)&&isNaN(t)?t.split("").join("*"):t})).replace(/\)\(/g,")*(")||"0";;)if(e===(e=e.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,(function(e,t,n,r,i){return r=t||r,i=n||i,r in h?r+i:r+"*"+i}))))break;return e}(e),t=t||{},e=this.tokenize(e),e=this.toRPN(e),this.parseRPN(e,t)},this.toObject=function(t){var n=function(t){for(var r=[],i=0,s=t.length;i<s;i++){var a,u=t[i],l=u.value;u.type===o.VARIABLE_OR_LITERAL?r.push(new Fe(l)):u.type===o.FUNCTION?(i++,(a=e.symfunction(l,n(t[i]))).isConversion=!0,r.push(a)):u.type===o.OPERATOR?r.push(l):r.push(n(u))}return r};return n(e.tokenize(t))},this.toTeX=function(t,n){var r=!0===(n=n||{}).decimals?"decimals":void 0,i="string"==typeof t?this.toObject(t):t,s=[],o=void 0===n.cdot?"\\cdot":n.cdot;i=function(e){for(var t=[];e.length;){var n,r,i=e.shift(),s=e[0],o=Q(s),a="-"===s;"^"===i&&("+"===s?e.shift():o&&"+"===s[0]&&s.shift(),o&&1===s.length&&e.unshift(e.shift()[0])),"^"===i&&(o&&"-"===s[0]||a)?(n=t.pop(),r="1","*"===(a=t[t.length-1])?(t.pop(),r=t.pop()):Q(a)&&(r=t.pop()),t.push(r,"/",n,i),(o?s:e).shift(),o&&1===s.length&&t.push(e.shift()[0])):t.push(i)}return t}(i);if(Q(i)){for(var a,l,c=[],f=0;f<i.length;f++)a=i[f],"^"===i[f+1]?(l=i[f+2],c.push(Ge.braces(this.toTeX([a]))+"^"+Ge.braces(this.toTeX([l]))),f+=2):c.push(a);i=c}f=0;for(var p=i.length;f<p;f++){var h=i[f];if(V(h="*"===h?o:h))if(h.group===S){var m,d=h.fname;if(d===_)y="\\sqrt"+Ge.braces(this.toTeX(h.args));else if(d===A)y=Ge.brackets(this.toTeX(h.args),"abs");else if(d===q)y=Ge.brackets(this.toTeX(h.args),"parens");else if(d===u.LOG10)y="\\"+u.LOG10_LATEX+"\\left( "+this.toTeX(h.args)+"\\right)";else if("integrate"===d)var w=g(h.args),y="\\int "+(b=Ge.braces(this.toTeX(w[0])))+"\\, d"+(M=this.toTeX(w[1]));else if("defint"===d){w=g(h.args);var b=Ge.braces(this.toTeX(w[0])),M=this.toTeX(w[3]);y="\\int\\limits_{"+this.toTeX(w[1])+"}^{"+this.toTeX(w[2])+"} "+b+"\\, d"+M}else if("diff"===d){if(w=g(h.args),M="",b=Ge.braces(this.toTeX(w[0])),1===w.length){for(var E=[],N=0;N<w[0].length;N++)3===w[0][N].group&&E.push(w[0][N].value);E.sort(),M=0<E.length?"\\frac{d}{d "+E[0]+"}":"\\frac{d}{d x}"}else M=2===w.length?"\\frac{d}{d "+w[1]+"}":"\\frac{d^{"+w[2]+"}}{d "+this.toTeX(w[1])+"^{"+w[2]+"}}";y=M+"\\left("+b+"\\right)"}else if("sum"===d||"product"===d){var x=[[],[],[],[]];N=0;for(f=0;f<h.args.length;f++)","!==h.args[f]?x[N].push(h.args[f]):N++;y=("sum"===d?"\\sum_":"\\prod_")+Ge.braces(this.toTeX(x[1])+" = "+this.toTeX(x[2])),y+="^"+Ge.braces(this.toTeX(x[3]))+Ge.braces(this.toTeX(x[0]))}else y="limit"===d?(m=g(h.args).map((function(t){return Array.isArray(t)?e.toTeX(t.join("")):e.toTeX(String(t))})),"\\lim_"+Ge.braces(m[1]+"\\to "+m[2])+" "+Ge.braces(m[0])):d===O||d===C?this.toTeX(h.args)+(d===O?"!":"!!"):Ge.latex(h,r);s.push(y)}else s.push(Ge.latex(h,r));else Q(h)?s.push(Ge.brackets(this.toTeX(h))):"/"===h?s.push(Ge.frac(v(s.pop()),v(this.toTeX([i[++f]])))):s.push(h)}return s.join(" ")},this.expand=Ie,this.round=Ee,this.clean=function t(n){var r,i,s,o,a,u,l,c=n.group;return c===N?(i=n.getNum(),s=n.getDenom()||new Fe(1),o=Number(n.power),a=new Fe(1),1===Math.abs(o)&&(s.each((function(n){n.group===E?a=e.multiply(a,t(n.getDenom())):n.power.lessThan(0)&&(a=e.multiply(a,t(n.clone().toUnitMultiplier())))})),u=new Fe(0),s.each((function(t){u=e.add(e.divide(t,a.clone()),u)})),a.invert(),i.isComposite()?(l=new Fe(0),i.each((function(n){l=e.add(e.multiply(t(n),a.clone()),l)}))):l=e.multiply(a,i),r=e.divide(l,u))):c===E?(r=new Fe(1),n.each((function(t){r=e.multiply(r,e.clean(t))}))):c===S&&1===n.args.length&&n.args[0].isConstant()&&(r=fe("PARSE2NUMBER",(function(){return e.parse(n)}),!0)),r=r||n},this.sqrt=D,this.cbrt=j,this.abs=x,this.log=Me,this.rationalize=R,this.nthroot=G,this.arg=le,this.conjugate=te,this.imagpart=J,this.realpart=Z,this.getFunction=function(e){return h[e][0]},this.addPreprocessor=function(e,t,r,i){var s=n.names,o=n.actions;if("function"!=typeof t)throw new PreprocessorError("Incorrect parameters. Function expected!");r?i?(s.splice(r,0,e),o.splice(r,0,t)):(s[r]=e,o[r]=t):(s.push(e),o.push(t))},this.getPreprocessors=function(){for(var e={},t=0,n=e.names.length;t<n;t++)e[e.names[t]]={order:t,action:e.actions[t]};return e},this.removePreprocessor=function(e,t){e=n.names.indexOf(e),t?(ce(n.names,e),ce(n.actions,e)):(n.names[e]=void 0,n.actions[e]=void 0)},this.mapped_function=function(){for(var t={},n=this.params,r=0;r<n.length;r++)t[n[r]]=String(arguments[r]);return e.parse(this.body,t)},this.add=function(t,n){var r=V(t),i=V(n);if(r&&i){if(t.unit||n.unit)return e.Unit.add(t,n);if(t.isInfinity||n.isInfinity){var s=t.multiplier.lessThan(0),o=n.multiplier.lessThan(0);if(t.isInfinity&&n.isInfinity&&s!==o)throw new be("("+t+")+("+n+") is not defined!");var a=Fe.infinity();return o&&a.negate(),a}if(t.isComposite()&&t.isLinear()&&n.isComposite()&&n.isLinear()&&(t.distributeMultiplier(),n.distributeMultiplier(),n.length>t.length&&t.group===n.group&&([t,n]=[n,t])),t.multiplier.equals(0))return n;if(n.multiplier.equals(0))return t;if(t.isConstant()&&n.isConstant()&&u.PARSE2NUMBER)return new Fe(t.multiplier.add(n.multiplier).toDecimal(u.PRECISION));var l=t.group,c=n.group,f=t.power.toString(),p=n.power.toString();if(l<c||l===c&&p<f&&0<p)return this.add(n,t);l===E&&c===M&&t.value===n.value&&(O=t,l=(t=n).group,c=(n=O).group,f=t.power.toString(),p=n.power.toString());var h,m,g,v=f===p;s=t.value,o=n.value,a=t.isComposite(),f=n.isComposite();if(a&&(h=Re(t,"hash")),f&&(m=Re(n,"hash")),l===N&&c===N&&n.isLinear()&&!t.isLinear()&&h!==m)return this.add(n,t);l===M&&c===M&&(s=h,o=m);var x;p=l===w&&c===d,f=t.value===n.multiplier.toString(),f=s===o||h===m&&void 0!==h||p&&f;if(f&&v&&l===c)if(p&&(n=n.convert(w)),l!==M||c!==y&&c!==w)if((g=t).multiplier.isOne()&&n.multiplier.isOne()&&l===N&&t.isLinear()&&n.isLinear())for(var q in n.symbols){var A=n.symbols[q];g.attach(A)}else g.multiplier=g.multiplier.add(n.multiplier);else t.distributeMultiplier(),g=t.attach(n);else if(f&&l!==M)l===N&&c===M?(n.insert(t,"add"),g=n):(g=Fe.shell(M).attach([t,n])).value=l===M?h:s;else if(a&&t.isLinear())if(s=l===c,a=l===M&&c===M,a&&(s=t.value===n.value),t.distributeMultiplier(),n.isComposite()&&n.isLinear()&&s){for(var q in n.distributeMultiplier(),n.symbols)A=n.symbols[q],t.attach(A);g=t}else a&&t.value!==m||l===M&&!f?(g=Fe.shell(N).attach([t,n])).updateHash():g=t.attach(n);else l===S&&t.fname===_&&c!==b&&n.power.equals(.5)&&(x=n.multiplier.clone(),(n=D(n.toUnitMultiplier().toLinear())).multiplier=x),2===t.length&&2===n.length&&oe(t.power)&&oe(n.power)?g=e.add(Ie(t),Ie(n)):(g=Fe.shell(N).attach([t,n])).updateHash();return 1===(g=g.multiplier.equals(0)?new Fe(0):g).length&&(x=g.multiplier,(g=ne(g.symbols)).multiplier=g.multiplier.multiply(x)),g}i&&!r&&(O=t,t=n,n=O,O=i,i=r,r=O);var O=X(n);if(r&&O){var C=new He;n.eachElement((function(n,r,i){C.set(r,i,e.add(t.clone(),n))})),n=C}else if(X(t)&&O)n=t.add(n);else if(r&&z(n))n.each((function(r,i){n.elements[--i]=e.add(t.clone(),n.elements[i])}));else if(z(t)&&z(n))n.each((function(r,i){n.elements[--i]=e.add(t.elements[i],n.elements[i])}));else{if(z(t)&&X(n))return e.add(n,t);if(X(t)&&z(n)){if(n.elements.length===t.rows()){C=new He;var I=t.cols();return n.each((function(n,r){for(var i=[],s=0;s<I;s++)i.push(e.add(t.elements[r-1][s].clone(),n.clone()));C.elements.push(i)})),C}T("Dimensions must match!")}}return n},this.subtract=function(t,n){var r=V(t),i=V(n);if(r&&i)return t.unit||n.unit?e.Unit.subtract(t,n):this.add(t,n.negate());if(i&&z(t))n=t.map((function(t){return e.subtract(t,n.clone())}));else if(r&&z(n))n=n.map((function(n){return e.subtract(t.clone(),n)}));else if(z(t)&&z(n))t.dimensions()===n.dimensions()?n=t.subtract(n):e.error("Unable to subtract vectors. Dimensions do not match.");else if(X(t)&&z(n)){if(n.elements.length===t.rows()){var s=new He,o=t.cols();return n.each((function(n,r){for(var i=[],a=0;a<o;a++)i.push(e.subtract(t.elements[r-1][a].clone(),n.clone()));s.elements.push(i)})),s}T("Dimensions must match!")}else{if(z(t)&&X(n)){s=n.clone().negate();return e.add(s,t)}X(t)&&X(n)?n=t.subtract(n):X(t)&&i?(s=new He,t.each((function(t,r,i){s.set(r,i,e.subtract(t,n.clone()))})),n=s):r&&X(n)&&(s=new He,n.each((function(n,r,i){s.set(r,i,e.subtract(t.clone(),n))})),n=s)}return n},this.multiply=function(t,n){var i=V(t),o=V(n);if(i&&n instanceof s)return n.elements.push(t),n;if(i&&o){if(n.isUnit){var a=t.clone();return t.unit=n,a}if(t.unit||n.unit)return e.Unit.multiply(t,n);if(t.isInfinity||n.isInfinity){if(t.equals(0)||n.equals(0))throw new be(t+"*"+n+" is undefined!");if(n.power.lessThan(0)){if(t.isInfinity)throw new be("Infinity/Infinity is not defined!");return new Fe(0)}var l=t.multiplier.multiply(n.multiplier).sign(),c=Fe.infinity();if(t.isConstant()||n.isConstant()||t.isInfinity&&n.isInfinity)return l<0&&c.negate(),c}if(t.isConstant()&&n.isConstant()&&u.PARSE2NUMBER)return new Fe(g=new r(t.multiplier.toDecimal()).times(new r(n.multiplier.toDecimal())).toFixed());if(t.isOne())return n.clone();if(n.isOne())return t.clone();if(t.multiplier.equals(0)||n.multiplier.equals(0))return new Fe(0);if(n.group>t.group&&n.group!==N)return this.multiply(n,t);t.group===E&&n.group===M&&t.value===n.value&&(g=t,t=n,n=g);var f=t.group,p=n.group,h=n.multiplier.num,m=n.multiplier.den;f!==S||t.fname!==_||n.isConstant()||t.args[0].value!==n.value||t.args[0].multiplier.lessThan(0)?f===S&&t.fname===_&&t.multiplier.equals(1)&&t.power.equals(-1)&&n.isConstant()&&t.args[0].equals(n)&&(t=e.symfunction(_,[n.clone()]),n=new Fe(1)):(q=t.power,x=e.parse(t.multiplier),(t=e.multiply(x,t.args[0].clone())).setPower(new De(.5).multiply(q)),f=t.group);var g,v=t.value,x=(c=n.value,l=new De(t.sign()),f===w&&p===d&&n.multiplier.equals(t.value)),q=(x?new De(1).multiply(t.multiplier):t.multiplier.multiply(n.multiplier)).abs();a=t.clone().toUnitMultiplier();if(n=n.clone().toUnitMultiplier(!0),f===S&&p===S){var A=t.args[0].clone(),C=n.args[0].clone();if(t.fname===_&&n.fname===_&&t.isLinear()&&n.isLinear()){var I=e.divide(A,C).invert();I.gt(1)&&Y(I)&&(a=e.multiply(t.args[0].clone(),D(I.clone())),n=new Fe(1))}else if(t.fname===O&&n.fname===O&&!A.isConstant()&&!C.isConstant()&&n.power<0&&(I=e.subtract(A.clone(),C.clone()),I.isConstant()))if(g=new Fe(1),I<0){for(var L=0,U=Math.abs(I);L<=U;L++){var R=e.add(A.clone(),new Fe(L));g=e.multiply(g,R)}a=e.multiply(e.pow(A,new Fe(t.power)),e.pow(g,new Fe(n.power))),n=new Fe(1)}else{for(L=0,U=Math.abs(I);L<=U;L++)R=e.add(C.clone(),new Fe(L)),g=e.multiply(g,R);a=e.multiply(e.pow(g,new Fe(t.power)),e.pow(C,new Fe(n.power))),n=new Fe(1)}}if(v===c&&f===M&&f===p&&(v=t.text("hash"),c=n.text("hash")),(v=p===b&&n.previousGroup===M&&f===M?Re(t,"hash",b):v)!==c&&!x||f===M&&(p===y||p===w||p===S)||f===M&&p===E)if(f===E&&t.isLinear())if(p===E&&n.distributeExponent(),p===E&&n.isLinear()){for(var R in n.symbols){var P=n.symbols[R];a=a.combine(P)}a.multiplier=a.multiplier.multiply(n.multiplier)}else a.combine(n);else f!==d?f===E?(a.distributeExponent(),a.combine(n)):n.isOne()||(j=n.multiplier.clone(),n.toUnitMultiplier(),(a=Fe.shell(E).combine([a,n])).multiplier=a.multiplier.multiply(j)):a=n.clone().toUnitMultiplier();else{var k=t.power,F=n.power,j=V(k),B=V(F);B=j||B;f===M&&p!==M&&n.previousGroup!==M&&k.equals(1)?(a=new Fe(0),t.each((function(t){a=e.add(a,e.multiply(t,n.clone()))}),!0)):(a.power=B?e.add(V(k)?k:new Fe(k),V(F)?F:new Fe(F)):f===d?k:k.add(F),a.power.equals(0)&&(a=a.convert(d)),B&&a.convert(b),t.imaginary&&n.imaginary&&oe(a.power%2)&&(a=new Fe(1),q.negate()),a.group!==b&&a.previousGroup&&(a.previousGroup=void 0),a.multiplier=a.multiplier.multiply(n.multiplier))}return a.group===w&&(f=Math.log(a.value),k=Math.log(h)/f,F=Math.log(m)/f,B=q.num/h,f=q.den/m,0!=k&&Y(k)&&Y(B)&&(a.power=a.power.add(new De(k)),q.num/=h),0!=F&&Y(F)&&Y(f)&&(a.power=a.power.subtract(new De(F)),q.den/=m)),1===a.length&&(g=a.multiplier,(a=ne(a.symbols)).multiplier=a.multiplier.multiply(g)),m=a.power.toString(),oe(m)&&a.fname===_?(l*=a.sign(),m=a.power,a=a.args[0],a=e.multiply(new Fe(q),e.pow(a,new Fe(m.divide(new De(2))))),l<0&&a.negate()):(a.multiplier=a.multiplier.multiply(q).multiply(l),a.group===N&&a.isImaginary()&&a.distributeMultiplier()),a=a.group===w&&Y(a.power.toDecimal())?a.convert(d):a}if(o&&!i&&(g=t,t=n,n=g,g=o,o=i,i=g),l=X(n),o=X(t),i&&l){var G=new He;n.eachElement((function(n,r,i){G.set(r,i,e.multiply(t.clone(),n))})),n=G}else if(o&&l)n=t.multiply(n);else if(i&&z(n))n.each((function(r,i){n.elements[--i]=e.multiply(t.clone(),n.elements[i])}));else if(z(t)&&z(n))n.each((function(r,i){n.elements[--i]=e.multiply(t.elements[i],n.elements[i])}));else{if(z(t)&&X(n))return this.multiply(n,t);if(X(t)&&z(n)){if(n.elements.length===t.rows()){G=new He;var H=t.cols();return n.each((function(n,r){for(var i=[],s=0;s<H;s++)i.push(e.multiply(t.elements[r-1][s].clone(),n.clone()));G.elements.push(i)})),G}T("Dimensions must match!")}}return n},this.divide=function(t,n){var r=V(t),i=V(n);if(r&&i){if(t.unit||n.unit)return e.Unit.divide(t,n);if(n.equals(0))throw new we("Division by zero not allowed!");return t.isConstant()&&n.isConstant()?(s=t.clone()).multiplier=s.multiplier.divide(n.multiplier):(n.invert(),s=e.multiply(t,n)),s}var s,o,a=z(t),u=z(n);return r&&u?n=n.map((function(n){return e.divide(t.clone(),n)})):a&&i?n=t.map((function(t){return e.divide(t,n.clone())})):a&&u?t.dimensions()===n.dimensions()?n=n.map((function(n,r){return e.divide(t.elements[--r],n)})):e.error("Cannot divide vectors. Dimensions do not match!"):(s=X(t),a=X(n),s&&i?(o=new He,t.eachElement((function(t,r,i){o.set(r,i,e.divide(t,n.clone()))})),n=o):r&&a?(o=new He,n.eachElement((function(n,r,i){o.set(r,i,e.divide(t.clone(),n))})),n=o):s&&a?(o=new He,t.rows()===n.rows()&&t.cols()===n.cols()?(t.eachElement((function(t,r,i){o.set(r,i,e.divide(t,n.elements[r][i]))})),n=o):e.error("Dimensions do not match!")):s&&u&&(t.cols()===n.dimensions()?(o=new He,t.eachElement((function(t,r,i){o.set(r,i,e.divide(t,n.elements[r].clone()))})),n=o):e.error("Unable to divide matrix by vector."))),n},this.pow=function(t,n){var i,s=V(t),o=V(n);if(s&&o){if(t.unit||n.unit)return e.Unit.pow(t,n);if(t.group===S&&t.fname===A&&oe(n)){var a=t.multiplier.clone(),c=e.pow(t.args[0],n);return c.multiplier=a,c}if(t.isInfinity||n.isInfinity){if(t.isInfinity&&n.isInfinity)throw new be("("+t+")^("+n+") is undefined!");if(t.isConstant()&&n.isInfinity){if(t.equals(0)){if(n.lessThan(0))throw new be("0^Infinity is undefined!");return new Fe(0)}if(t.equals(1))throw new be("1^"+n.toString()+" is undefined!");if(n.lessThan(0))return new Fe(0);if(!t.lessThan(0))return Fe.infinity()}if(t.isInfinity&&n.isConstant()){if(n.equals(0))throw new be(t+"^0 is undefined!");return n.lessThan(0)?new Fe(0):e.multiply(Fe.infinity(),e.pow(new Fe(t.sign()),n.clone()))}}var f=t.equals(0),p=n.equals(0);if(f&&p)throw new be("0^0 is undefined!");if(f&&n.isConstant()&&n.multiplier.greaterThan(0))return new Fe(0);if(p)return new Fe(1);var h,m=n.isConstant(),g=t.isConstant();c=n.isInteger(),a=t.multiplier,f=t.clone();if(g&&m&&t.equals(0)&&n.lessThan(0))throw new be("Division by zero is not allowed!");if(u.PARSE2NUMBER&&g&&m&&t.sign()<0&&ae(n)){var v=Math.PI*n;return U=new Fe(Math.cos(v)),C=e.multiply(Fe.imaginary(),new Fe(Math.sin(v))),e.add(U,C)}if(u.PARSE2NUMBER&&t.isImaginary()&&m&&Y(n)&&!n.lessThan(0)&&(U=t.realpart(),C=t.imagpart(),U.isConstant("all")&&C.isConstant("all")))return p=u.USE_BIG?Fe(r.atan2(O.multiplier.toDecimal(),L.multiplier.toDecimal()).times(n.toString())):Math.atan2(C,U)*n,h=new Fe(p),L=e.pow(Fe.hyp(U,C),n),v=e.multiply(L.clone(),e.trig.cos(h.clone())),p=e.multiply(L,e.trig.sin(h)),e.add(v,e.multiply(Fe.imaginary(),p));if(f.toUnitMultiplier(),f.group!==S||f.fname!==_||m?(B=a.sign(),ae(n)&&B<0&&(f.negate(),(f=e.symfunction(q,[f])).negate()),f.multiplyPower(n)):((P=f.args[0]).multiplyPower(new Fe(.5)),P.multiplier.multiply(f.multiplier),P.multiplyPower(n),f=P),g&&m&&u.PARSE2NUMBER)B<0&&(t.negate(),M=n.multiplier.den.equals(2)?new Fe(u.IMAGINARY):Y(n.multiplier)?oe(n.multiplier)?new Fe(1):new Fe(-1):oe(n.multiplier.den)?e.pow(e.symfunction(q,[new Fe(B)]),n.clone()):new Fe(Math.pow(B,n.multiplier.num))),f=new Fe(Math.pow(t.multiplier.toDecimal(),n.multiplier.toDecimal())),M&&(f=e.multiply(f,M));else if(c&&!a.equals(1)){if(n.abs().gt(u.MAX_EXP))return n.sign()<0?new Fe(0):Fe.infinity();var y=n.multiplier.toDecimal(),M=Math.sign(y);y=Math.abs(y);var N=new De(1);N.num=a.num.pow(y),N.den=a.den.pow(y),M<0&&N.invert(),f.multiplier=f.multiplier.multiply(N)}else{var O,C,I,L,U,R,T,P,D,F,j,B=t.sign();n.isConstant()&&t.isConstant()&&!n.multiplier.den.equals(1)&&B<0?f=n.multiplier.den.equals(2)?(O=new Fe(u.IMAGINARY),t.negate(),n.lessThan(0)&&(O.negate(),n.negate()),e.multiply(e.pow(t,n),O)):((I=t.clone()).multiplier.negate(),f=e.pow(e.symfunction(q,[new Fe(B)]),n.clone()),N=e.pow(new Fe(I.multiplier.num),n.clone()),O=e.pow(new Fe(I.multiplier.den),n.clone()),L=e.divide(N,O),e.multiply(f,L)):u.PARSE2NUMBER&&n.isImaginary()?(U=n.realpart(),C=n.imagpart(),I=t.clone().toLinear(),L=e.pow(I.clone(),U),D=Me(I.clone()),U=l.cos(e.multiply(C.clone(),D)),D=e.multiply(l.sin(e.multiply(C,Me(I))),Fe.imaginary()),f=e.multiply(L,e.add(U,D)),f=e.expand(e.parse(f))):(R=Pe(new Fe((D=t.group===d&&B<0)?a.num:Math.abs(a.num)).setPower(n.clone())),T=Pe(new Fe(a.den).setPower(n.clone()).invert()),t.imaginary&&(c?(P=Math.sign(n),y=x(n),f=new Fe(oe(F=y%4)?-1:u.IMAGINARY),(0===F||P<0&&1===F||0<P&&3===F)&&f.negate()):(c=n.multiplier.multiply(De.quick(1,2)),P=Math.pow(-1,c.num),f=oe(c.den)?new Fe(-1).setPower(c,!0):new Fe(P))),B<0&&!D&&f.negate(),m&&t.group!==b&&(B=oe(n.multiplier.den),D=oe(t.power),F=f.power.toDecimal(),m=oe(F),B&&D&&!m&&(f=1===F?e.symfunction(A,[f]):Y(F)?e.multiply(e.symfunction(A,[f.clone().toLinear()]),f.clone().setPower(new De(F-1))):(y=f.power,e.symfunction(A,[f.toLinear()]).setPower(y)),u.POSITIVE_MULTIPLIERS&&f.fname===A&&(f=f.args[0]))),n.equals(2)&&f.group===E&&(j=new Fe(1),f.each((function(t){j=e.multiply(j,e.pow(t,n))})),f=j))}return f=Pe(f),(f=R&&T?e.multiply(f,function(e){if(e.group===w){var t=e.value,n=Te(t)[0];if(!n)return k("Unable to compute prime factors. This should not happen. Please review and report."),e;if(t=new De(Math.log(t)/Math.log(n)).multiply(e.power),t.den>e.power.den)return e;e=Y(t)?Fe(Math.pow(n,t)):new Fe(n).setPower(t)}return e}(e.multiply(R,T))):f).fname===_?(T=((R=f.group===b)?f.power.multiplier:f.power).toString(),oe(T)&&(R=R?e.divide(f.power,new Fe(2)):new Fe(f.power.divide(new De(2))),a=f.multiplier,(f=e.pow(f.args[0],R)).multiplier=f.multiplier.multiply(a))):!u.IGNORE_E&&f.isE()&&f.group===b&&f.power.contains("pi")&&f.power.contains(u.IMAGINARY)&&n.group===E&&(h=n.stripVar(u.IMAGINARY),f=e.add(l.cos(h),e.multiply(Fe.imaginary(),l.sin(h)))),f}return z(t)&&o?t=t.map((function(t){return e.pow(t,n.clone())})):X(t)&&o?(i=new He,t.eachElement((function(t,r,s){i.set(r,s,e.pow(t,n.clone()))})),t=i):s&&X(n)&&(i=new He,n.eachElement((function(n,r,s){i.set(r,s,e.pow(t.clone(),n))})),t=i),t},this.comma=function(e,t){return(e=e instanceof s?e:s.create(e)).append(t),e},this.mod=U,this.slice=function(e,t){return new i(e,t)},this.equals=function(e,t){return e.group===y||e.isLinear()||T("Cannot set equality for "+e.toString()),L[e.value]=t.clone(),t},this.percent=function(t){return e.divide(t,new Fe(100))},this.assign=function(t,n){if(t instanceof s&&n instanceof s)return t.elements.map((function(t,r){return e.assign(t,n.elements[r])})),Ve.fromArray(n.elements);if(t.parent){var r=t.parent;return r.elements[r.getter]=n,delete r.getter,r}if(t.group!==y)throw new Ce("Cannot complete operation. Incorrect LH value for "+t);return L[t.value]=n},this.function_assign=function(e,t){var n=e.elements.pop();return re(n,e.elements,t)},this.eq=function(e,t){return ke(e.equals(t))},this.gt=function(e,t){return ke(e.gt(t))},this.gte=function(e,t){return ke(e.gte(t))},this.lt=function(e,t){return ke(e.lt(t))},this.lte=function(e,t){return ke(e.lte(t))},this.factorial=function(e){return this.symfunction(O,[e])},this.dfactorial=function(e){return this.symfunction(C,[e])}}u.FUNCTION_MODULES.push(Ue),le(Ue),Math.sign=Math.sign||function(e){return 0===(e=+e)||isNaN(e)?e:0<e?1:-1},Math.cosh=Math.cosh||function(e){return e=Math.exp(e),(e+1/e)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){return e=Math.exp(e),(e-1/e)/2},Math.tanh=Math.tanh||function(e){return e===1/0?1:e===-1/0?-1:(e=Math.exp(2*e),(e-1)/(e+1))},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:0<e?Math.floor(e):Math.ceil(e)},Te(314146179365),Pe.getExpression=function(e,t){return"last"!==e&&e||(e=I.length),e=I[(e="first"===e?1:e)-1],e&&new Pe(e)},(Pe.prototype={text:function(e,t){return t=t||19,e=e||"decimals",this.symbol.text_?this.symbol.text_(e):Re(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):Ge.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(z(this.symbol)&&0===this.symbol.dimensions())return this;var e,n=arguments[0],r=1;"string"==typeof n?e="%"===n.charAt(0)?Pe.getExpression(n.substr(1)).text():n:n instanceof Pe||V(n)?e=n.text():(e=this.symbol.text(),r--);var i=arguments[r]||{};return new Pe(fe("PARSE2NUMBER",(function(){return t.parse(e,i)}),!0))},buildFunction:function(e){return ze.build(this.symbol,e)},isNumber:function(){return W(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return he(t.parse(this.symbol)).isImaginary()},variables:function(){return H(this.symbol)},toString:function(){try{return Q(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch(e){return""}},toDecimal:function(e){return u.precision=e,e=Re(this.symbol,"decimals"),u.precision=void 0,e},isFraction:function(){return G(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,n){return new Pe(this.symbol.sub(t.parse(e),t.parse(n)))},operation:function(e,n){return f(n)?n=n.symbol:V(n)||(n=t.parse(n)),new Pe(t[e](this.symbol.clone(),n.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new Pe(t.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(Q(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){V(e)||(e=t.parse(e));try{return t.subtract(this.symbol.clone(),e).equals(0)}catch(e){return!1}},lt:function(e){V(e)||(e=t.parse(e));try{return he(t.subtract(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}},gt:function(e){V(e)||(e=t.parse(e));try{return he(t.subtract(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new Pe(this.symbol.getNum())},denominator:function(){return new Pe(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}}).toTeX=Pe.prototype.latex,ke.prototype={fromScientific:function(e){return e=String(e).toLowerCase().split("e"),this.coeff=e[0],this.exponent=e[1],this},convert:function(e){var t=e.split("."),n=t[0]||"";e=t[1]||"",n=ke.removeLeadingZeroes(n),e=ke.removeTrailingZeroes(e),t=n.length,n+=e,e=ke.leadingZeroes(n).length;return this.exponent=t-(e+1),n=ke.removeLeadingZeroes(n),this.coeff=n.charAt(0)+"."+(n.substr(1,n.length)||"0"),this},round:function(e){var t,n,r=this.copy();return 0===(e=Number(e))?r.coeff=r.coeff.charAt(0):(t=this.coeff.substring(0,e+1),e=(n=this.coeff.substring(e+1,e+3)).charAt(0),4<n.charAt(1)&&e++,r.coeff=t+e),r},copy:function(){var e=new ke(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){return e=void 0===e?this.coeff:ke.round(this.coeff,e),e=0===this.exponent&&u.SCIENTIFIC_IGNORE_INTS?this.coeff:e+"e"+this.exponent,(-1===this.sign?"-":"")+e}},ke.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},ke.leadingZeroes=function(e){return e=e.match(/^(0*).*$/),e?e[1]:""},ke.removeLeadingZeroes=function(e){return e=e.match(/^0*(.*)$/),e?e[1]:""},ke.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},ke.round=function(e,t){return e=se(e,t),t-=String(e).split(".").pop().length,0<t&&(e+=new Array(1+t).join(0)),e},ke.prototype={fromScientific:function(e){return e=String(e).toLowerCase().split("e"),this.coeff=e[0],this.exponent=e[1],this},convert:function(e){var t=e.split("."),n=t[0]||"",r=t[1]||"",i=(n=ke.removeLeadingZeroes(n),r=ke.removeTrailingZeroes(r),n.length);e=n+r,t=ke.leadingZeroes(e).length;return this.exponent=i-(t+1),e=ke.removeLeadingZeroes(e),this.coeff=e.charAt(0)+"."+(e.substr(1,e.length)||"0"),e=this.coeff.split(".")[1]||"",this.decp="0"===e?0:e.length,this.dec=r,this.wholes=n,this},round:function(e){var t,n,r=this.copy();return 0===(e=Number(e))?r.coeff=r.coeff.charAt(0):(t=this.coeff.substring(0,e+1),e=(n=this.coeff.substring(e+1,e+3)).charAt(0),4<n.charAt(1)&&e++,r.coeff=t+e),r},copy:function(){var e=new ke(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;return t=u.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&0===this.exponent&&this.decp<e?0===this.decp?this.wholes:this.coeff:(t=void 0===e?this.coeff:ke.round(this.coeff,Math.min(e,this.decp||1)),0===this.exponent?t:t+"e"+this.exponent),(-1===this.sign?"-":"")+t}},ke.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},ke.leadingZeroes=function(e){return e=e.match(/^(0*).*$/),e?e[1]:""},ke.removeLeadingZeroes=function(e){return e=e.match(/^0*(.*)$/),e?e[1]:""},ke.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},De.create=function(e){if(e instanceof De)return e;var t="-"===(e=e.toString()).charAt(0);e=new De(e=t?e.substr(1,e.length-1):e);return t&&e.negate(),e},De.isFrac=function(e){return e instanceof De},De.quick=function(e,t){var r=new De;return r.num=new n(e),r.den=new n(t),r},De.simple=function(e){for(var t=String(F(e)).split("."),n=(e=t.join(""),1),r=(t[1]||"").length,i=0;i<r;i++)n+="0";return De.quick(e,n).simplify()},De.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new we("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,n=e.den,r=this.clone(),i=r.num;e=e.num;return t.equals(n)?r.num=i.add(e):(r.num=i.multiply(n).add(e.multiply(t)),r.den=t.multiply(n)),r.simplify()},mod:function(e){var t=this.clone();e=e.clone();return t.num=t.num.multiply(e.den),t.den=t.den.multiply(e.den),e.num=e.num.multiply(this.den),e.den=e.den.multiply(this.den),t.num=t.num.mod(e.num),t.simplify()},simplify:function(){var e=n.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new De;return e.num=new n(this.num),e.den=new n(this.den),e},decimal:function(e){var t=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||u.PRECISION,e++;for(var n=[],r=this.num.abs(),i=this.den,s=0;s<e;s++){var o=r.divide(i),a=r.subtract(o.multiply(i));if(n.push(o),a.equals(0))break;r=a.times(10)}var l=n.shift();if(0===n.length)return t+l.toString();if(s===e){var c=[];for(s=0;s<2;s++)c.unshift(n.pop());n.push(Math.round(c.join(".")))}return t+(l.toString()+".")+n.join("")},toDecimal:function(e){return(e=e||u.PRECISION)?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){return isNaN(e)||(e=new De(e)),e=this.qcompare(e),e[0].equals(e[1])},absEquals:function(e){return isNaN(e)||(e=new De(e)),e=this.qcompare(e),e[0].abs().equals(e[1])},greaterThan:function(e){return isNaN(e)||(e=new De(e)),e=this.qcompare(e),e[0].gt(e[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){return isNaN(e)||(e=new De(e)),e=this.qcompare(e),e[0].lt(e[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e,t=this.den;return this.num.equals(0)||(e=this.num.isNegative(),this.den=this.num.abs(),this.num=t,e&&(this.num=this.num.multiply(-1))),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return De.quick(n.gcd(e.num,this.num),n.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){return u.USE_BIG?new r(this.num.toString()).div(new r(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},Fe.imaginary=function(){var e=new Fe(u.IMAGINARY);return e.imaginary=!0,e},Fe.infinity=function(e){var t=new Fe("Infinity");return-1===e&&t.negate(),t},Fe.shell=function(e,t){return t=new Fe(t),t.group=e,t.symbols={},t.length=0,t},Fe.unwrapSQRT=function(e,t){var n,r=e.power;return e.fname===_&&(e.isLinear()||t)&&((n=e.args[0].clone()).power=n.power.multiply(new De(.5)),n.multiplier=n.multiplier.multiply(e.multiplier),e=n,t&&(e.power=r.multiply(new De(.5)))),e},Fe.hyp=function(e,n){return e=e||new Fe(0),n=n||new Fe(0),t.sqrt(t.add(t.pow(e.clone(),new Fe(2)),t.pow(n.clone(),new Fe(2))))},Fe.toPolarFormArray=function(e){var n=e.realpart();e=e.imagpart();return[Fe.hyp(n,e),n.equals(0)?t.parse("pi/2"):t.trig.atan(t.divide(e,n))]},Fe.unwrapPARENS=function(e){if(""!==e.fname)return e;var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),""===e.fname?Fe.unwrapPARENS(t):t},Fe.create=function(e,n){return t.parse("("+e+")^("+(n=void 0===n?1:n)+")")},Fe.prototype={getNth:function(e){var n=he(t.pow(t.parse(this.multiplier),t.parse(e).invert())),r=t.parse(se(n));return he(t.pow(r,t.parse(e))).equals(t.parse(this.multiplier))?r:n},isToNth:function(e){var n,r=this.getNth(e);r=Y(r);return this.group===E?(n=!0,this.each((function(t){t.isToNth(e)||(n=!1)}))):n=this.group===d||Y(t.divide(t.parse(this.power),t.parse(e))),r&&n},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group!==E)return this.clone();var e=[],n=this.multiplier.sign();this.each((function(t){if(t=t.power,V(t)||t.equals(1))return this.clone();e.push(t)}));var r,i=new De(h(e)),s=(n=this.multiplier.sign(),this.multiplier.clone().abs()),o=Ue.ifactor(s),a=new De(1),u=new De(1);for(r in o){var l=new De(o[r]);l.lessThan(i)||(l=l.divide(i).subtract(new De(1)),u=u.multiply(new De(r))),a=a.multiply(t.parse(J(r)+"^"+J(l)).multiplier)}var c=new Fe(u);return this.each((function(e){(e=e.clone()).power=e.power.divide(i),c=t.multiply(c,e)})),s=t.symfunction(q,[c]),s.power=i,s.multiplier=n<0?a.negate():a,s},equals:function(e){return V(e)||(e=new Fe(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return V(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return V(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return V(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return V(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,n=this.power;if(!Y(n)||n<0)return!1;if(t===d||t===y||this.isConstant(!0))return!0;if(n=H(this),t===E&&1===n.length){var r=n[0];if(!r)return!0;for(s in this.symbols){var i=this.symbols[s];if(i.group===S&&!i.args[0].isConstant())return!1;if(!i.contains(r)&&!i.isConstant(!0))return!1}return!0}if(this.isComposite()||t===E&&e){if(!e&&1<n.length)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(e,n){var r;return this.group!==M&&this.group!==y||this.value!==e?this.group===E&&this.isLinear()?(r=new Fe(1),this.each((function(n){n.contains(e,!0)||(r=t.multiply(r,n.clone()))})),r.multiplier=r.multiplier.multiply(this.multiplier)):this.group!==N||this.isLinear()?this.group===N&&this.isLinear()?(r=new Fe(0),this.each((function(n){n.contains(e)||((n=n.clone()).multiplier=n.multiplier.multiply(this.multiplier),r=t.add(r,n))})),r.equals(0)&&(r=new Fe(this.multiplier))):r=this.group===b&&this.power.contains(e,!0)||this.group===S&&this.contains(e)?new Fe(this.multiplier):this.clone():r=new Fe(this.multiplier):r=new Fe(n?0:this.multiplier),r},toArray:function(e,n){n=n||{arr:[],add:function(e,n){var r=this.arr[n];this.arr[n]=r?t.add(r,e):e}};var r=this.group;if(r===y&&this.contains(e))n.add(new Fe(this.multiplier),this.power);else if(r===E){var i=this.stripVar(e),s=t.divide(this.clone(),i.clone());s=s.isConstant()?0:s.power;n.add(i,s)}else if(r===M&&this.value===e)this.each((function(t,r){n.add(t.stripVar(e),r)}));else if(r===N)this.each((function(t){t.toArray(e,n)}));else{if(this.contains(e))throw new Ee("Cannot convert to array! Exiting");n.add(this.clone(),0)}n=n.arr;for(var o=0;o<n.length;o++)n[o]||(n[o]=new Fe(0));return n},hasFunc:function(e){var t=this.group===S||this.group===b;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].hasFunc(e))return!0;return!1},sub:function(e,n){e=V(e)?e.clone():t.parse(e),n=V(n)?n.clone():t.parse(n),e.group!==d&&e.group!==w||T("Cannot substitute a number. Must be a variable");var r,i=!1,s=e.multiplier.equals(1),o=this.multiplier.clone();if(this.value===e.value&&(this.group!==M&&e.group!==M||this.group===M&&e.group===M))(s||e.multiplier.equals(this.multiplier))&&(e.isLinear()?r=n:e.power.equals(this.power)&&(r=n,i=!0),e.multiplier.equals(this.multiplier)&&(o=new De(1)));else if(this.group===E||this.previousGroup===E)r=new Fe(1),this.each((function(i){i=t.parse(i.sub(e,n)),r=t.multiply(r,i)}));else if(this.isComposite()){var a=this.clone();if(e.isComposite()&&a.isComposite()&&a.isLinear()&&e.isLinear()){var u,l=function(e,t){for(var n in e.symbols)if(n=e.symbols[n],n.isComposite()&&l(n,t)||n.equals(t))return!0;return!1};for(u in e.symbols)if(!l(a,e.symbols[u]))return a.clone();r=t.add(t.subtract(a.clone(),e),n)}else r=new Fe(0),a.each((function(i){r=t.add(r,i.sub(e,n))}))}else if(this.group===b)r=t.parse(this.value).sub(e,n);else if(this.group===S){for(var c=[],f=0;f<this.args.length;f++){var p=this.args[f];V(p)||(p=t.parse(p)),c.push(p.sub(e,n))}r=t.symfunction(this.fname,c)}return r?(i||(i=this.group===b?this.power.sub(e,n):t.parse(this.power),r=t.pow(r,i)),r.multiplier=r.multiplier.multiply(o),r):this.clone()},isMonomial:function(){if(this.group===y)return!0;if(this.group!==E)return!1;for(var e in this.symbols)if(this.symbols[e].group!==y)return!1;return!0},isPi:function(){return this.group===y&&"pi"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return"e"===this.value},isSQRT:function(){return this.fname===_},isConstant:function(e,t){if(t&&this.group===E)for(var n in this.symbols)if(this.symbols[n].isConstant(!0))return!0;if("functions"===e&&this.isComposite()){var r=!0;return this.each((function(n){n.isConstant(e,t)||(r=!1)}),!0),r}if("all"===e&&(this.isPi()||this.isE()))return!0;if(e&&this.group===S){for(var i=0;i<this.args.length;i++)if(!this.args[i].isConstant(e))return!1;return!0}return e?W(this):this.value===x},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new Fe(0);if(this.isComposite()){var e=new Fe(0);return this.each((function(n){e=t.add(e,n.realpart())})),e}return this.isImaginary()?new Fe(0):this.clone()},imagpart:function(){if(this.group===y&&this.isImaginary())return new Fe(this.multiplier);if(this.isComposite()){var e=new Fe(0);return this.each((function(n){e=t.add(e,n.imagpart())})),e}return this.group===E?this.stripVar(u.IMAGINARY):new Fe(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===y)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return!(this.group!==E||!this.symbols[e])&&this.symbols[e].isLinear(e)}return this.power.equals(1)},containsFunction:function(e){if("string"==typeof e&&(e=[e]),this.group===S&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===d&&this.multiplier.equals(1))return this;var n,r=this.power;return this.group!==b&&e.group===d?(n=e.multiplier,this.group!==d||n.isInteger()||this.convert(w),this.power=r.equals(1)?n.clone():r.multiply(n),this.group===w&&Y(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(d))):(this.group!==b&&(r=new Fe(r),this.convert(b)),this.power=t.multiply(r,e)),this},setPower:function(e,t){return this.group===d&&this.multiplier.equals(1)||(this.group!==b||V(e)?(n=!1,V(e)&&(e.group===d?e=e.multiplier:n=!0),n=n?b:w,this.power=e,this.group===d&&n&&this.convert(n,t)):(this.group=this.previousGroup,delete this.previousGroup,this.group===d?(this.multiplier=new De(this.value),this.value=x):this.power=e)),this;var n},isInverse:function(){return this.group===b?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,n=e||new Fe(0),r=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],i=r.length;if(this.symbols)for(var s in n.symbols={},this.symbols)n.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[r[t]]&&(n[r[t]]=this[r[t]]);return n.power=this.power.clone(),n.multiplier=this.multiplier.clone(),this.isConversion&&(n.isConversion=this.isConversion),this.isUnit&&(n.isUnit=this.isUnit),n},toUnitMultiplier:function(e){return this.multiplier.num=new n(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new n(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new De(1)),this},each:function(e,t){if(this.symbols)for(var n in this.symbols){var r=this.symbols[n];if(r.group===M&&t)for(var i in r.symbols)e.call(n,r.symbols[i],i);else e.call(this,r,n)}else e.call(this,this,this.value)},valueOf:function(){return this.group===d?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:Re(this,"decimals")},contains:function(e,t){e=String(e);var n=this.group;if(this.value===e)return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(n===S||this.previousGroup===S)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(n===b){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==N&&this.group!==M||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),V(this.power)?this.power.negate():this.group===E&&t?this.each((function(e){return e.invert()})):this.power&&this.group!==d&&this.power.negate(),this},distributeMultiplier:function(e){if(e=e?this.power.absEquals(1):this.power.equals(1),this.symbols&&e&&this.group!==E&&!this.multiplier.equals(1)){for(var t in this.symbols)t=this.symbols[t],t.multiplier=t.multiplier.multiply(this.multiplier),t.distributeMultiplier();this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e,n=this.power;for(e in this.symbols){var r=this.symbols[e];r.group===b?r.power=t.multiply(r.power,new Fe(n)):this.symbols[e].power=this.symbols[e].power.multiply(n)}this.toLinear()}return this},convert:function(e,t){var n;return S<e?(n=this.clone(),this.symbols={},(e===E?n:this).toUnitMultiplier(),this.group===S&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1):e===b?this.group===d&&this.multiplier.equals(1)||(this.group!==b&&(this.previousGroup=this.group),this.group===d?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=Re(this,"hash"),this.group=b):e===d?(n=this.multiplier.toDecimal(),this.symbols&&(this.symbols=void 0),new Fe(this.group===w?n*Math.pow(this.value,this.power):n).clone(this)):e===w&&this.group===d&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=w),this},insert:function(e,n){var r,i;return V(e)||T("Object "+e+" is not of type Symbol!"),this.symbols&&(i=this.group,S<i&&(i=(r=e.keyForGroup(i))in this.symbols&&this.symbols[r],"add"===n?(n=r,i?(this.symbols[n]=t.add(i,e),this.symbols[n].multiplier.equals(0)&&(delete this.symbols[n],this.length--,0===this.length&&(this.convert(d),this.multiplier=new De(0)))):(this.symbols[r]=e,this.length++)):(e.group===w&&Y(e.power)&&e.convert(d),e.group!==b?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),i&&((e=t.multiply(ce(this.symbols,r),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new Fe(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[r]=e,this.length++)),0===this.length&&this.convert(d),this.group!==N&&this.group!==E||this.updateHash())),this},attach:function(e){if(Q(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"add");return this}return this.insert(e,"add")},combine:function(e){if(Q(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==d)if(this.group===S){for(var e="",t=this.args,n=this.fname===q,r=0;r<t.length;r++)e+=(0===r?"":",")+Re(t[r]);var i=n?"":this.fname;this.value=i+(n?e:J(e))}else this.group!==y&&this.group!==M&&(this.value=Re(this,"hash"))},keyForGroup:function(e){var t,n=this.group;if(n===d)t=this.value;else if(n===y||n===w)t=e===M?this.power.toDecimal():this.value;else if(n===S)t=e===M?this.power.toDecimal():Re(this,"hash");else{if(n===M)return e===E?Re(this,"hash"):e===N?this.power.equals(1)?this.value:J(Re(this,"hash"))+u.POWER_OPERATOR+this.power.toDecimal():e===M?this.power.toString():this.value;n===N?(e===N&&(t=Re(this,"hash")),t=e===M?this.power.toDecimal():this.value):n===E?t=e===M?this.power.toDecimal():Re(this,"hash"):n===b&&(t=e===M?Re(this.power):Re(this,"hash"))}return t},collectSymbols:function(e,t,n,r){var i=[];if(this.symbols)for(var s in this.symbols)s=this.symbols[s],!r||s.group!==M&&s.group!==N?i.push(e?e(s,t):s):i=i.concat(s.collectSymbols());else i.push(this);return i.sort(n=null===n?void 0:n)},latex:function(e){return Ge.latex(this,e)},text:function(e){return Re(this,e)},isOne:function(e){return this.group===d?this.multiplier[e?"absEquals":"equals"](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===N||e===M||t===M||t===N},isCombination:function(){var e=this.group,t=this.previousGroup;return e===E||t===E},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return V(e)||(e=new Fe(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e=this.clone();if((e=this.group===E&&this.power.lessThan(0)?t.expand(e):e).power.lessThan(0)){var n,r=t.parse(e.multiplier.den);(n=e.toUnitMultiplier()).power.negate(),n=t.multiply(r,n)}else if(e.group===E)for(var i in n=t.parse(e.multiplier.den),e.symbols)e.symbols[i].power<0&&(n=t.multiply(n,e.symbols[i].clone().invert()));else n=t.parse(e.multiplier.den);return n},getNum:function(){var e,n=this.clone();return(n=n.group===E&&n.power.lessThan(0)?t.expand(n):n).power.greaterThan(0)&&n.group!==E?e=t.multiply(t.parse(n.multiplier.num),n.toUnitMultiplier()):n.group===E?(e=t.parse(n.multiplier.num),n.each((function(n){(0<n.power||n.group===b&&0<n.power.multiplier)&&(e=t.multiply(e,n.clone()))}))):e=t.parse(n.multiplier.num),e},toString:function(){return this.text()}};var Be={convert:function(e,t){var n,r,i,s;return 0===e?s=[0,1]:e<1e-6||1e20<e?(n=this.quickConversion(Number(e)))[1]<=1e20?(i=e/(r=Math.abs(e)),(s=this.fullConversion(r.toFixed((n[1]+"").length-1)))[0]=s[0]*i):s=n:s=this.fullConversion(e),s},quickConversion:function(e){return function(e){ke.isScientific(e)&&(e=F(e));var t=1===(n=(n="","-"===(e=(t="string"!=typeof(t=e)?t.toString():t).charAt(0))?(t=t.substr(1,t.length),n="-"):"+"===e&&(t=t.substr(1,t.length)),e={sign:n,value:t}).value.split(".")).length?n[0]:n[0]+n[1],n=n[1]?n[1].length:0;n="1"+"0".repeat(n);return"0"!==t&&(t=t.replace(/^0+/,"")),[e.sign+t,n]}(e)},fullConversion:function(e){for(var t=!1,n=0,r=1,i=1,s=0,o=0,a=e;!t;){1e4<++o&&(t=!0);var u=Math.floor(a),l=n+u*i,c=r+u*s;u=a-u;u<1e-16&&(t=!0),a=1/u,n=i,r=s,i=l,s=c,(Math.abs(l/c-e)<1e-16||30<o)&&(t=!0)}return[l,c]}},Ge={parser:function(){var e,t=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],n=new je;for(e in n)-1===t.indexOf(e)&&delete n[e];return n.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.getBrackets()["{"].maps_to=void 0,n}(),space:"~",dot:" \\cdot ",latex:function(e,n){if((e=e.clone?e.clone():e)instanceof t.classes.Collection&&(e=e.elements),Q(e)){for(var r=[],i=0;i<e.length;i++){var s=e[i];V(s)||(s=t.parse(s)),r.push(this.latex(s,n))}return this.brackets(r.join(", "),"square")}if(X(e)){var o="\\begin{pmatrix}\n";for(i=0;i<e.elements.length;i++){for(var a=[],u=e.elements[i],l=0;l<u.length;l++)a.push(this.latex(u[l],n));o+=a.join(" & "),i<e.elements.length-1&&(o+="\\\\\n")}return o+"\\end{pmatrix}"}if(z(e)){for(o="\\left[",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],n)+" "+(i!==e.elements.length-1?",\\,":"");return o+"\\right]"}if($(e)){for(o="\\{",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],n)+" "+(i!==e.elements.length-1?",\\,":"");return o+"\\}"}var c,f="decimal"===n||"decimals"===n,h=(e=e.clone()).power,m=p(h),g=e.multiplier.lessThan(0);if(e.group===w&&f)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),c=f?[String(e.multiplier.toDecimal()),""]:[e.multiplier.num,e.multiplier.den];var v,d=this.value(e,m,n,g);return m&&h.negate(),f?(v=V(h)?Ge.latex(h,n):String(h.toDecimal()),"1"===String(v)&&(v="")):v=V(h)?this.latex(h,n):this.formatFrac(h,!0),h=["",""],h[m?1:0]=v,((g?"-":"")+this.set(c,d,h,e.group===E)).replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(e,t,n,r){var i,s,o,a,l,c,f=e.group,h=e.previousGroup,m=["",""],g=t?1:0;if(e.isInfinity)m[g]="\\infty";else if(f===y||f===w||h===y||h===w||h===d){(j=this.formatSubscripts(e.value)).replace&&(j=j.replace(/(.+)_$/,"$1\\_"));var v=String(j).split("_");t=this.greek[v[0]];t&&(v[0]=t,j=v.join("_")),(e=this.symbols[v[0]])&&(v[0]=e,j=v.join("_")),m[g]=j}else if(f===S||h===S){for(var M,x,I,L,U=[],R=(v=e.fname,0);R<e.args.length;R++){var T,P="string"==typeof(T=e.args[R])?T:this.latex(T,n);U.push(P)}v===_?m[g]="\\sqrt"+this.braces(U.join(",")):v===A?m[g]=this.brackets(U.join(","),"abs"):v===q?m[g]=this.brackets(U.join(","),"parens"):"limit"===v?m[g]=" \\lim\\limits_{"+U[1]+" \\to "+U[2]+"} "+U[0]:"integrate"===v?m[g]="\\int"+this.braces(U[0])+this.braces("d"+U[1]):"defint"===v?m[g]="\\int\\limits_"+this.braces(U[1])+"^"+this.braces(U[2])+" "+U[0]+" d"+U[3]:v===O||v===C?((T=e.args[0]).power.equals(1)&&(T.isComposite()||T.isCombination())&&(U[0]=this.brackets(U[0])),m[g]=U[0]+(v===O?"!":"!!")):"floor"===v?m[g]="\\left \\lfloor"+this.braces(U[0])+"\\right \\rfloor":"ceil"===v?m[g]="\\left \\lceil"+this.braces(U[0])+"\\right \\rceil":v===u.LOG&&1<U.length?m[g]="\\mathrm"+this.braces(u.LOG)+"_"+this.braces(U[1])+this.brackets(U[0]):v===u.LOG10?m[g]="\\mathrm"+this.braces(u.LOG)+"_"+this.braces(10)+this.brackets(U[0]):"sum"===v?(M=U[0],x=U[1],I=U[2],L=U[3],m[g]="\\sum\\limits_{"+this.braces(x)+"="+this.braces(I)+"}^"+this.braces(L)+" "+this.braces(M)):"product"===v?(M=U[0],x=U[1],I=U[2],L=U[3],m[g]="\\prod\\limits_{"+this.braces(x)+"="+this.braces(I)+"}^"+this.braces(L)+" "+this.braces(M)):"nthroot"===v?m[g]="\\sqrt["+U[1]+"]"+this.braces(U[0]):"mod"===v?m[g]=U[0]+" \\bmod "+U[1]:"realpart"===v?m[g]="\\operatorname{Re}"+this.brackets(U[0]):"imagpart"===v?m[g]="\\operatorname{Im}"+this.brackets(U[0]):(v=""!==v?"\\mathrm"+this.braces(v.replace(/_/g,"\\_")):"",e.isConversion?m[g]=v+this.brackets(U.join(""),"parens"):m[g]=v+this.brackets(U.join(","),"parens"))}else if(e.isComposite()){var k=e.collectSymbols().sort(f===N||h===N?function(e,t){return t.group-e.group}:function(e,t){return e=V(e.power)?-1:e.power,(V(t.power)?-1:t.power)-e}),D=[],F=k.length;for(R=0;R<F;R++)D.push(Ge.latex(k[R],n));var j=D.join("+");m[g]=e.isLinear()&&e.multiplier.equals(1)&&!r?j:this.brackets(j,"parens")}else f!==E&&h!==b&&h!==E||(f===E&&e.distributeExponent(),i=[],s=[],o=[],a=[],c=l=0,f=function(e,t,n){if(1<n&&0<t.length)for(var r=t.length,i=0;i<r;i++){var s=t[i],o=e[s];/^\\left\(.+\\right\)\^\{.+\}$/g.test(o)||/^\\left\(.+\\right\)$/g.test(o)||(e[s]=Ge.brackets(o,"parens"))}return e},e.each((function(t){var r;p(t.power)?(r=Ge.latex(t.invert(),n),c++,t.isComposite()&&(1!=e.multiplier.den&&1==Math.abs(t.power)&&(r=Ge.brackets(r,"parens")),o.push(i.length)),i.push(r)):(r=Ge.latex(t,n),l++,t.isComposite()&&(1!=e.multiplier.num&&1==Math.abs(t.power)&&(r=Ge.brackets(r,"parens")),a.push(s.length)),s.push(r))})),f(s,a,l),m[0]=s.join(this.dot),f(i,o,c),m[1]=i.join(this.dot));return m},set:function(e,t,n,r){function i(e){return/^\\left\(.+\\right\)$/.test(e)}var s;n=n&&this.formatP(n),r&&(s=n[0],n[0]=""),t=this.merge(t,n);var o=e[0];n=e[1],e=t[0],t=t[1];return e&&1===Number(o)&&(o=""),1===Number(n)&&(n=""),e=this.join(o,e,i(e)?"":this.dot),t=this.join(n,t,i(t)?"":this.dot),e&&t?(t=this.frac(e,t),r&&s?this.brackets(t)+s:t):e},merge:function(e,t){for(var n=[],r=0;r<2;r++)n[r]=e[r]+t[r];return n},join:function(e,t,n){return e||t?e&&!t?e:t&&!e?t:e+n+t:""},formatSubscripts:function(e){for(var t=e.toString().split("_"),n="";1<t.length;)0<t.length&&(n="_"+this.braces(t.pop()+n));return t[0]+n},formatP:function(e){for(var t=0;t<2;t++){var n=e[t];n&&(e[t]="^"+this.braces(n))}return e},formatFrac:function(e,t){var n=e.num.toString();e=e.den.toString();return t&&"1"===n&&"1"===e?"":"1"===e?n:this.frac(n,e)},frac:function(e,t){return"\\frac"+this.braces(e)+this.braces(t)},braces:function(e){return"{"+e+"}"},brackets:function(e,t){return t={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]}[t=t||"parens"],"\\left"+t[0]+e+"\\right"+t[1]},filterTokens:function(e){var t=[];Q(e)&&(t.type=e.type);for(var n=["\\","left","right","big","Big","large","Large"],r=0,i=e.length;r<i;r++){var s=e[r],o=e[r+1];"\\"===s.value&&"\\"===o.value?t.push(s):Q(s)?t.push(Ge.filterTokens(s)):-1===n.indexOf(s.value)&&t.push(s)}return t},parse:function(e){function t(e){return s[void 0===e?++a:a+=e]}function n(){return Ge.parse(t())}function r(e){return e in o?o[e]:"*"===e&&"&"===s[a+1].value?(t(2),","):"&"===e?(t(),","):"\\"===e?"],[":e}var i="",s=this.filterTokens(e),o={cdot:"",times:"",infty:"Infinity"},a=0;for(u=s.length;a<u;a++){var u,l,c,f,p,h,m,g=s[a];"frac"===g.value?i+=n()+"/"+n():g.value in Ge.symbols?g.value===_&&"vector"===s[a+1].type&&"Set"===s[a+2].type?(p=n(),i+=n()+"^"+J("1/"+p)):i+=g.value+n():"int"===g.value?(h=n(),a++,c=r((c=t().value).substring(1,c.length)),i+="integrate"+J(h+","+c)):"int_"===g.value?(u=n(),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),"differentialD"===(c=","===(c=t().value)?t().value:c)&&(a++,c=t().value),"mathrm"===c&&(a++,c=t().value),i+="defint"+J(h+","+u+","+l+","+c)):g.value&&g.value.startsWith("int_")?(u=g.value.replace("int_",""),console.log("uppernow"),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),"differentialD"===(c=","===(c=t().value)?t().value:c)&&(a++,c=t().value),"mathrm"===c&&(a++,c=t().value),i+="defint"+J(h+","+u+","+l+","+c)):"mathrm"===g.value?i+=(h=s[++a][0].value)+n():"sum_"===g.value||"prod_"===g.value?(f="sum_"===g.value?"sum":"product",m=t(),a++,p=n(),h=n(),i+=f+J([h,r(m[0]),r(m[2]),r(p)].join(","))):"lim_"===g.value?(m=t(),i+="limit"+J([n(),r(m[0]),r(m[2])].join(","))):"begin"===g.value?(m=t(),Array.isArray(m)&&"matrix"===m[0].value&&(i+="matrix([")):"end"===g.value?(m=t(),Array.isArray(m)&&"matrix"===m[0].value&&(i+="])")):Array.isArray(g)?i+=r(Ge.parse(g)):i+=r(g.value.toString())}return J(i)}};function Ve(e){z(e)?this.elements=e.items.slice(0):Q(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function He(){var e=arguments,t=e.length,n=[];if(X(e))for(o=0;o<t;o++)n.push(e[o].slice(0));else for(var r,i,s,o=0;o<t;o++)r=e[o],z(r)&&(r=r.elements),s=(r=Q(r)?r:[r]).length,i&&i!==s&&T("Unable to create Matrix. Row dimensions do not match!"),n.push(r),i=s;this.elements=n}function Ze(e){if(this.elements=[],e=z(e)?e:Ve.fromArray(arguments))for(var t=e.elements,n=0,r=t.length;n<r;n++)this.add(t[n])}Ve.arrayPrefill=function(e,t){var n=[];t=t||0;for(var r=0;r<e;r++)n[r]=t;return n},Ve.fromArray=function(e){var t=new Ve;return t.elements=e,t},Ve.fromSet=function(e){return Ve.fromArray(e.elements)},Ve.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){V(t)||(t=new Fe(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return fe("SAFE",(function(){return t.pow(this.dot(this.clone()),new Fe(.5))}),void 0,this)},eql:function(e){var n=this.elements.length,r=e.elements||e;if(n!==r.length)return!1;do{if(Math.abs(t.subtract(this.elements[n-1],r[n-1]).valueOf())>PRECISION)return!1}while(--n);return!0},clone:function(){for(var e=new Ve,t=this.elements.length,n=0;n<t;n++)e.elements.push(this.elements[n].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(e){var t=[];return this.each((function(n,r){t.push(e(n,r))})),new Ve(t)},each:function(e){for(var t,n=this.elements.length,r=n;e(this.elements[t=r-n],1+t),--n;);},toUnitVector:function(){return fe("SAFE",(function(){var e=this.modulus();return 0===e.valueOf()?this.clone():this.map((function(n){return t.divide(n,e)}))}),void 0,this)},angleFrom:function(e){return fe("SAFE",(function(){var n=e.elements||e;if(this.elements.length!==n.length)return null;var r=new Fe(0),i=new Fe(0),s=new Fe(0);this.each((function(e,o){r=t.add(r,t.multiply(e,n[o-1])),i=t.add(i,t.multiply(e,e)),s=t.add(s,t.multiply(n[o-1],n[o-1]))}));i=t.pow(i,new Fe(.5)),s=t.pow(s,new Fe(.5));var o=t.multiply(i,s);if(0===o.valueOf())return null;var a=t.divide(r,o);o=a.valueOf();return o<-1&&(a=-1),1<o&&(a=1),new Fe(Math.acos(a))}),void 0,this)},isParallelTo:function(e){return e=this.angleFrom(e).valueOf(),null===e?null:e<=PRECISION},isAntiparallelTo:function(e){return e=this.angleFrom(e).valueOf(),null===e?null:Math.abs(e-Math.PI)<=PRECISION},isPerpendicularTo:function(e){return e=this.dot(e),null===e?null:Math.abs(e)<=PRECISION},add:function(e){return fe("SAFE",(function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map((function(e,r){return t.add(e,n[r-1])}))}),void 0,this)},subtract:function(e){return fe("SAFE",(function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map((function(e,r){return t.subtract(e,n[r-1])}))}),void 0,this)},multiply:function(e){return this.map((function(t){return t.clone()*e.clone()}))},x:function(e){return this.multiply(e)},dot:function(e){return fe("SAFE",(function(){var n=e.elements||e,r=new Fe(0),i=this.elements.length;if(i!==n.length)return null;for(;r=t.add(r,t.multiply(this.elements[i-1],n[i-1])),--i;);return r}),void 0,this)},cross:function(e){var n=e.elements||e;if(3!==this.elements.length||3!==n.length)return null;var r=this.elements;return fe("SAFE",(function(){return new Ve([t.subtract(t.multiply(r[1],n[2]),t.multiply(r[2],n[1])),t.subtract(t.multiply(r[2],n[0]),t.multiply(r[0],n[2])),t.subtract(t.multiply(r[0],n[1]),t.multiply(r[1],n[0]))])}),void 0,this)},max:function(){for(var e,t=0,n=this.elements.length,r=n;e=r-n,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e]),--n;);return t},magnitude:function(){var e=new Fe(0);return this.each((function(n){e=t.add(e,t.pow(n,new Fe(2)))})),t.sqrt(e)},indexOf:function(e){for(var t,n=null,r=this.elements.length,i=r;t=i-r,null===n&&this.elements[t].valueOf()===e.valueOf()&&(n=1+t),--r;);return n},text:function(e){return Re(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],n=0;n<this.elements.length;n++)t.push(Ge.latex.call(Ge,this.elements[n],e));return"["+t.join(", ")+"]"}},He.identity=function(e){for(var t=new He,n=0;n<e;n++){t.elements.push([]);for(var r=0;r<e;r++)t.set(n,r,new Fe(n===r?1:0))}return t},He.fromArray=function(e){function t(e){return He.apply(this,e)}return t.prototype=He.prototype,new t(e)},He.zeroMatrix=function(e,t){for(var n=new He,r=0;r<e;r++)n.elements.push(Ve.arrayPrefill(t,new Fe(0)));return n},(He.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(e,t){var n=new He;return this.each((function(r,i,s){n.set(i,s,e.call(n,r),t)})),n},set:function(e,t,n,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=r||V(n)?n:new Fe(n)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),n=[];if(e>this.cols()||!e)return n;for(var r=0;r<t;r++)n.push(this.elements[r][e-1]);return n},eachElement:function(e){for(var t,n=this.rows(),r=this.cols(),i=0;i<n;i++)for(t=0;t<r;t++)e.call(this,this.elements[i][t],i,t)},determinant:function(){if(!this.isSquare())return null;for(var e,n=this.toRightTriangular(),r=n.elements[0][0],i=n.elements.length-1,s=i;r=t.multiply(r,n.elements[e=s-i+1][e]),--i;);return r},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows();t!==e.rows()&&T("Cannot augment matrix. Rows don't match.");for(var n=0;n<t;n++)this.elements[n]=this.elements[n].concat(e.elements[n]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),n=new He,r=0;r<e;r++){n.elements[r]=[];for(var i=0;i<t;i++){var s=this.elements[r][i];n.elements[r][i]=V(s)?s.clone():s}}return n},invert:function(){return this.isSquare()||T("Matrix is not square!"),fe("SAFE",(function(){var e,n,r,i,s,o,a,u=this.elements.length,l=u,c=He.identity(u),f=this.augment(c).toRightTriangular(),p=f.elements[0].length,h=[];do{for(s=[],r=p,h[e=u-1]=[],o=f.elements[e][e];a=t.divide(f.elements[e][i=p-r],o.clone()),s.push(a),l<=i&&h[e].push(a),--r;);for(f.elements[e]=s,n=0;n<e;n++){for(s=[],r=p;s.push(t.subtract(f.elements[n][i=p-r].clone(),t.multiply(f.elements[e][i].clone(),f.elements[n][e].clone()))),--r;);f.elements[n]=s}}while(--u);return He.fromArray(h)}),void 0,this)},toRightTriangular:function(){return fe("SAFE",(function(){var e,n,r,i=this.clone(),s=this.elements.length,o=s,a=this.elements[0].length;do{if(0===i.elements[n=o-s][n].valueOf())for(var u=1+n;u<o;u++)if((e=i.elements[u][n])&&0!==e.valueOf()){for(c=[],f=a;c.push(t.add(i.elements[n][r=a-f].clone(),i.elements[u][r].clone())),--f;);i.elements[n]=c;break}if(0!==i.elements[n][n].valueOf())for(u=1+n;u<o;u++){for(var l=t.divide(i.elements[u][n].clone(),i.elements[n][n].clone()),c=[],f=a;c.push((r=a-f)<=n?new Fe(0):t.subtract(i.elements[u][r].clone(),t.multiply(i.elements[n][r].clone(),l.clone()))),--f;);i.elements[u]=c}}while(--s);return i}),void 0,this)},transpose:function(){var e,t,n,r=this.elements.length,i=this.elements[0].length,s=new He,o=i;do{for(s.elements[e=i-o]=[],t=r;s.elements[e][n=r-t]=this.elements[n][e].clone(),--t;);}while(--o);return s},canMultiplyFromLeft:function(e){return e=(X(e)?e.elements:e).length,this.elements[0].length===e},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return fe("SAFE",(function(){var n=e.elements||e;if(!this.canMultiplyFromLeft(n)){if(this.sameSize(e)){for(var r=new He,i=this.rows(),s=0;s<i;s++){var o=t.multiply(new Ve(this.elements[s]),new Ve(e.elements[s]));r.elements[s]=o.elements}return r}return null}var a,u,l,c,f,p=this.elements.length,h=p,m=n[0].length,g=this.elements[0].length,v=[];do{v[s=h-p]=[],a=m;do{for(u=m-a,l=new Fe(0),c=g;l=t.add(l,t.multiply(this.elements[s][f=g-c],n[f][u])),--c;);}while(v[s][u]=l,--a)}while(--p);return He.fromArray(v)}),void 0,this)},add:function(e,n){var r=new He;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=t.add(i.clone(),e.elements[s][o].clone());n&&(a=n.call(r,a,i,e.elements[s][o])),r.set(s,o,a)})),r},subtract:function(e,n){var r=new He;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=t.subtract(i.clone(),e.elements[s][o].clone());n&&(a=n.call(r,a,i,e.elements[s][o])),r.set(s,o,a)})),r},negate:function(){return this.each((function(e){return e.negate()})),this},toVector:function(){if(1!==this.rows()&&1!==this.cols())return this;var e=new Ve;return e.elements=this.elements,e},toString:function(e,t){for(var n=this.rows(),r=[],i=0;i<n;i++)r.push("["+this.elements[i].map((function(e){var n=t?e.multiplier.toDecimal():e.toString();return void 0!==e?n:""})).join(",")+"]");return"matrix"+J(r.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(e){var t=this.cols(),n=this.elements;return ee("\\begin{vmatrix}{0}\\end{vmatrix}",(function(){var r,i=[];for(r in n){for(var s=[],o=0;o<t;o++)s.push(Ge.latex.call(Ge,n[r][o],e));i.push(s.join(" & "))}return i.join(" \\cr ")}))}}).each=He.prototype.eachElement,Ze.fromArray=function(e){function t(e){return Ze.apply(this,e)}return t.prototype=Ze.prototype,new t(e)},Ze.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var n=this.elements[t];if(e.equals(n))return!0}return!1},each:function(e){for(var t=this.elements,n=new Ze,r=0,i=t.length;r<i;r++){var s=t[r];e.call(this,s,n,r)}return n},clone:function(){var e=new Ze;return this.each((function(t){e.add(t.clone())})),e},union:function(e){var t=this.clone();return e.each((function(e){t.add(e)})),t},difference:function(e){var t=this.clone();return e.each((function(e){t.remove(e)})),t},remove:function(e){for(var t=0,n=this.elements.length;t<n;t++)if(this.elements[t].equals(e))return ce(this.elements,t),!0;return!1},intersection:function(e){var t=new Ze,n=this;return e.each((function(e){n.contains(e)&&t.add(e)})),t},intersects:function(e){return 0<this.intersection(e).elements.length},is_subset:function(e){for(var t=e.elements,n=0,r=t.length;n<r;n++)if(!this.contains(t[n]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var ze={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":Ue.gamma},gamma_incomplete:{"Math2.factorial":Ue.factorial},Li:{"Math2.Ei":Ue.Ei,"Math2.bigLog":Ue.bigLog,Frac:De},Ci:{"Math2.factorial":Ue.factorial},Ei:{"Math2.factorial":Ue.factorial},Si:{"Math2.factorial":Ue.factorial},Shi:{"Math2.factorial":Ue.factorial},Chi:{isInt:Y,nround:se,"Math2.num_integrate":Ue.num_integrate},factor:{"Math2.ifactor":Ue.ifactor,Symbol:Fe},num_integrate:{"Math2.simpson":Ue.simpson,nround:se},fib:{even:oe}},reformat:{diff:function(e,t){var n=e.args[1].toString();e="var f = "+ze.build(e.args[0].toString(),[n])+";";return t[1]+="var diff = "+Ue.diff.toString()+";",t[1]+=e,["diff(f)("+n+")",t]}},getProperName:function(e){return{continued_fraction:"continuedFraction"}[e]||e},compileDependencies:function(e,t){var n,r,i=ze.dependencies[e],s=t&&t[1]?t[1]:"",o=t&&t[0]?t[0]:{};for(n in i)"object"!=typeof i[n]&&(s+="var "+(1<(r=n.split(".")).length?r[1]:r[0])+"="+i[n]+";",o[n]=r.pop());return[o,s]},getArgsDeps:function(e,t){for(var n=e.args,r=0;r<n.length;r++)e.args[r].each((function(e){e.group===S&&(t=ze.compileDependencies(e.fname,t))}));return t},build:function(e,n){e=fe("PARSE2NUMBER",(function(){return t.parse(e)}),!0);var r=H(e),i=[],s=[],o=function(e,n){function r(t){return t=t in Math?"Math."+t:(t=ze.getProperName(t),-1===i.indexOf(t)&&(n.push("var "+t+" = "+Ue[t].toString()+"; "),i.push(t)),t),t+J(e.args.map((function(e){return o(e,n)[0]})).join(","))}""===e.fname&&(e=Fe.unwrapPARENS(e)),n=n||[];var a,u,l=[],c=e.group,f="",p=function(t){t=t===E?"*":"+";var r,i=[];for(r in e.symbols){var s=e.symbols[r],a=o(s,n)[0];s.isComposite()&&(a=J(a)),i.push(a)}return t=i.join(t),t&&!e.multiplier.equals(1)?J(t):t};return c===d?l.push(e.multiplier.toDecimal()):e.multiplier.equals(-1)?f="-":e.multiplier.equals(1)||l.push(e.multiplier.toDecimal()),c===y||c===w?a=e.value:c===S?(s=ze.compileDependencies(e.fname,s),s=ze.getArgsDeps(e,s),a=ze.reformat[e.fname]?(u=ze.reformat[e.fname](e,s),s=u[1],u[0]):r(e.fname)):c===b?(c=e.previousGroup)===d||c===y?a=e.value:c===S?(a=r(e.fname),s=ze.compileDependencies(e.fname,s),s=ze.getArgsDeps(e,s)):a=p(e.previousGroup):a=p(e.group),e.group===d||e.power.equals(1)||(p=o(t.parse(e.power)),n.push(p[1]),a="Math.pow"+J(a+","+p[0])),a&&l.push(f+a),[l.join("*"),n.join("").replace(/\n+\s+/g," ")]};n&&(r=n);var a,u=o(e);for(a in s[0]){var l=s[0][a];u[1]=u[1].replace(a,l),s[1]=s[1].replace(a,l)}return new Function(r,(s[1]||"")+u[1]+" return "+u[0]+";")}};function Xe(e,n,r,i){var s=!1,a=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);return a?o.setFunction(a[1],a[2].split(","),a[3]):(e instanceof Pe&&(e=e.toString()),(r=Q(r)?r:void 0===r?[]:[r]).forEach((function(n){var i;"numer"!==n?(i=t.functions[r])&&1===i[1]&&(e=`${n}(${e})`):s=!0})),a=fe("PARSE2NUMBER",(function(){return t.parse(e,n)}),s||u.PARSE2NUMBER),i?I[i-1]=a:I.push(a),new Pe(a))}le(t.CONSTANTS),le(t.functions),t.initConstants(),t.error||(t.error=T),u.LOG_FNS={log:t.functions.log,log10:t.functions.log10};le={allSame:P,allNumeric:function(e){for(var t=0;t<e.length;t++)if(!B(e[t]))return!1;return!0},arguments2Array:pe,arrayAddSlices:function(e,t){t=t||20;var n=[];n.push(e[0]);for(var r=0;r<e.length-1;r++)for(var i=e[r],s=(e[r+1]-i)/t,o=0;o<t;o++)n.push(i+=s);return n},arrayClone:function(e){for(var t=[],n=e.length,r=0;r<n;r++)t[r]=e[r].clone();return t},arrayMax:function(e){return Math.max.apply(void 0,e)},arrayMin:h,arrayEqual:function(e,t){if(e.sort(),t.sort(),e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0},arrayUnique:g,arrayGetVariables:function(e){for(var t=H(e[0],null,null,!0),n=1,r=e.length;n<r;n++)t=t.concat(H(e[n]));return g(t).sort()},arraySum:function(e,n){for(var r=new Fe(0),i=0;i<e.length;i++){var s=e[i];r=t.add(r,V(s)?s:t.parse(s))}return n?Number(r):r},block:fe,build:ze.build,clearU:function(e){e=U.indexOf(e),-1!==e&&(U[e]=void 0)},comboSort:function(e,t){for(var n=e.length,r=[],i=0;i<e.length;i++)r.push([e[i],t[i]]);r.sort((function(e,t){return e[0]-t[0]}));var s=[],o=[];for(i=0;i<n;i++)s.push(r[i][0]),o.push(r[i][1]);return[s,o]},compare:function(e,n,r){for(var i,s={},o=0;o<r.length;o++)s[r[o]]=new Fe(Math.floor(5*Math.random())+1);return fe("PARSE2NUMBER",(function(){i=t.parse(e,s).equals(t.parse(n,s))})),i},convertToVector:me,customError:l,customType:function(e){return void 0!==e&&e.custom},decompose_fn:ie,each:m,evaluate:he,even:oe,evenFraction:ae,fillHoles:function(e,t){t=t||e.length;for(var n=0;n<t;n++)e[n]||(e[n]=new Fe(0));return e},firstObject:ne,format:ee,generatePrimes:v,getCoeffs:function(e,n,r){var i=[];e.each((function(e){var r,s=e.contains(n)?(r=e.stripVar(n),t.divide(e.clone(),r.clone()).power.toDecimal()):(r=e,0);e=i[s];i[s]=e?t.add(e,r):r}),!0);for(var s=0;s<i.length;s++)i[s]||(i[s]=new Fe(0));return i},getU:function(e){for(var t="u",n=0,r=H(e);-1!==U.indexOf(t)||-1!==r.indexOf(t);)t="u"+n++;for(var i=0,s=U.length;i<=s;i++)if(!U[i]){U[i]=t;break}return t},importFunctions:function(){var e,n={};for(e in t.functions)n[e]=t.functions[e][0];return n},inBrackets:J,isArray:Q,isExpression:f,isFraction:G,isInt:Y,isMatrix:X,isNegative:p,isNumericSymbol:W,isPrime:j,isReserved:c,isSymbol:V,isVariableSymbol:function(e){return e.group===y&&e.multiplier.equals(1)&&e.power.equals(1)},isVector:z,keys:te,knownVariable:function(e,t){var n={};return n[e]=t,n},nroots:function(e){var n,r;if(e.group===S&&""===e.fname?(n=Fe.unwrapPARENS(t.parse(e).toLinear()),r=t.parse(e.power)):e.group===w&&(n=t.parse(e.value),r=t.parse(e.power)),n&&r&&n.group===d&&r.group===d&&n.multiplier.isNegative()){for(var i=[],s=Fe.toPolarFormArray(he(e))[0],o=t.arg(n),a=r.multiplier.den.toString(),l=r.multiplier.num.toString(),c=0;c<a;c++){var f=he(t.parse(ee("(({0})+2*pi*({1}))/({2})",o,c,a))).multiplier.toDecimal();i.push(he(t.parse(ee("(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",s,a,u.IMAGINARY,f,l))))}return Ve.fromArray(i)}return e.isConstant(!0,!0)?(n=e.sign(),o=he(e.abs()),i=[(r=t.sqrt(o)).clone(),r.negate()],n<0&&(i=i.map((function(e){return t.multiply(e,Fe.imaginary())})))):i=[t.parse(e)],Ve.fromArray(i)},remove:ce,reserveNames:le,range:function(e,t,n){var r=[];n=n||1;for(var i=e;i<=t;i++)r.push(i*n);return r},round:se,sameSign:function(e,t){return e<0==t<0},scientificToDecimal:F,separate:Z,stringReplace:function(e,t,n,r){return e.substr(0,t)+r+e.substr(n,e.length)},text:Re,validateName:D,variables:H,warn:k};var $e={groups:i,Symbol:Fe,Expression:Pe,Frac:De,Vector:Ve,Matrix:He,Parser:je,Scientific:ke,Fraction:Be,Math2:Ue,LaTeX:Ge,Utils:le,PARSER:t,PARENTHESIS:q,Settings:u,err:T,bigInt:n,bigDec:r,exceptions:e};return Xe.rpn=function(e){return t.tokenize(t.toRPN(e))},Xe.convertToLaTeX=function(e,n){return t.toTeX(e,n)},Xe.convertFromLaTeX=function(e){return e=Ge.parse(t.tokenize(e)),new Pe(t.parse(e))},Xe.version=function(t){if(t)try{return $e[t].version}catch(e){return"No module named "+t+" found!"}return"1.1.12"},Xe.getWarnings=function(){return R},Xe.setConstant=function(e,n){if(D(e),!c(e))if("delete"===n||""===n)delete t.CONSTANTS[e];else{if(isNaN(n))throw new Ee("Constant must be a number!");t.CONSTANTS[e]=n}return this},Xe.getConstant=function(e){return String(t.constant[e])},Xe.setFunction=re,Xe.getCore=function(){return $e},Xe.getExpression=Xe.getEquation=Pe.getExpression,Xe.reserved=function(e){return e?U:U.join(", ")},Xe.clear=function(e,t){return"all"===e?I=[]:"last"===e?I.pop():"first"===e?I.shift():(e=e?e-1:I.length,!0===t?I[e]=void 0:ce(I,e)),this},Xe.flush=function(){return this.clear("all"),this},Xe.expressions=function(e,t,n){for(var r=e?{}:[],i=0;i<I.length;i++){var s=t?Ge.latex(I[i],n):Re(I[i],n);e?r[i+1]=s:r.push(s)}return r},Xe.register=function(e){var n=this.getCore();if(Q(e))for(var r=0;r<e.length;r++)e&&this.register(e[r]);else if(e&&-1===u.exclude.indexOf(e.name)){if(e.dependencies)for(r=0;r<e.dependencies.length;r++)if(!n[e.dependencies[r]])throw new Error(ee("{0} requires {1} to be loaded!",e.name,e.dependencies[r]));var i=e.parent,s=e.build.call(n);i&&(n[i]||(n[e.parent]={}),("nerdamer"===i?this:n[i])[e.name]=s),e.visible&&(t.functions[e.name]=[s,e.numargs])}},Xe.validateName=D,Xe.validVarName=function(e){try{return D(e),-1===U.indexOf(e)}catch(e){return!1}},Xe.supported=function(){return te(t.functions)},Xe.numEquations=Xe.numExpressions=function(){return I.length},Xe.setVar=function(e,n){return D(e),e in t.CONSTANTS&&T("Cannot set value for constant "+e),"delete"===n||""===n?delete L[e]:L[e]=V(n)?n:t.parse(n),this},Xe.getVar=function(e){return L[e]},Xe.clearVars=function(){return L={},this},Xe.load=function(e){return e.call(this),this},Xe.getVars=function(e,t){var n={};if("object"===(e=e||"text"))n=L;else for(var r in L)"latex"===e?n[r]=L[r].latex(t):"text"===e&&(n[r]=L[r].text(t));return n},Xe.set=function(e,n){if("object"==typeof e)for(var i in e)Xe.set(i,e[i]);-1!==["SAFE"].indexOf(e)&&T("Cannot modify setting: "+e),"PRECISION"===e?(r.set({precision:n}),21<(u.PRECISION=n)&&this.set("USE_BIG",!0)):"USE_LN"===e&&!0===n?(u.LOG="LN",u.LOG10="log",t.functions.log=u.LOG_FNS.log10,t.functions.log[0]=function(e){return e.isConstant()?new Fe(Math.log10(e)):t.symfunction(u.LOG10,[e])},t.functions.LN=u.LOG_FNS.log,delete t.functions.log10):u[e]=n},Xe.get=function(e){return u[e]},Xe.api=function(e){for(var n in t.functions)n in Xe&&!e||(Xe[n]=function(e){return function(){for(var n=[].slice.call(arguments),r=0;r<n.length;r++)n[r]=t.parse(n[r]);return new Pe(fe("PARSE2NUMBER",(function(){return t.callfunction(e,n)})))}}(n))},Xe.replaceFunction=function(e,n,r){var i=t.functions[e];r=void 0===r?i[1]:r;t.functions[e]=[n.call(void 0,i[0],$e),r]},Xe.setOperator=function(e,n){t.setOperator(e,n)},Xe.getOperator=function(e){return t.getOperator(e)},Xe.aliasOperator=function(e,n){t.aliasOperator(e,n)},Xe.tree=function(e){return t.tree(t.toRPN(t.tokenize(e)))},Xe.htmlTree=function(e,t){return'<div class="tree">\n    <ul>\n        <li>\n'+this.tree(e).toHTML(3,t)+"\n        </li>\n    </ul>\n</div>"},Xe.addPeeker=function(e,n){t.peekers[e]&&t.peekers[e].push(n)},Xe.removePeeker=function(e,n){ce(t.peekers[e],n)},Xe.parse=function(e){return String(e).split(";").map((function(e){return t.parse(e)}))},Xe.api(),Xe}({bigInt:function(){var n=function(e){"use strict";var t=1e7,r=7,i=9007199254740992,s=f(i),o=Math.log(i);function a(e,t){return void 0===e?a[0]:void 0===t||10==+t?$(e):G(e,t)}function u(e,t){this.value=e,this.sign=t,this.isSmall=!1}function l(e){this.value=e,this.sign=e<0,this.isSmall=!0}function c(e){return-i<e&&e<i}function f(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function p(e){h(e);var n=e.length;if(n<4&&A(e,s)<0)switch(n){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*t;default:return e[0]+(e[1]+e[2]*t)*t}return e}function h(e){for(var t=e.length;0===e[--t];);e.length=t+1}function m(e){for(var t=new Array(e),n=-1;++n<e;)t[n]=0;return t}function g(e){return 0<e?Math.floor(e):Math.ceil(e)}function v(e,n){for(var r,i=e.length,s=n.length,o=new Array(i),a=0,u=t,l=0;l<s;l++)r=e[l]+n[l]+a,o[l]=r-(a=u<=r?1:0)*u;for(;l<i;)r=e[l]+a,o[l++]=r-(a=r===u?1:0)*u;return 0<a&&o.push(a),o}function d(e,t){return e.length>=t.length?v(e,t):v(t,e)}function w(e,n){for(var r,i=e.length,s=new Array(i),o=t,a=0;a<i;a++)r=e[a]-o+n,n=Math.floor(r/o),s[a]=r-n*o,n+=1;for(;0<n;)s[a++]=n%o,n=Math.floor(n/o);return s}function y(e,n){for(var r,i=e.length,s=n.length,o=new Array(i),a=0,u=t,l=0;l<s;l++)a=(r=e[l]-a-n[l])<0?(r+=u,1):0,o[l]=r;for(l=s;l<i;l++){if(!((r=e[l]-a)<0)){o[l++]=r;break}r+=u,o[l]=r}for(;l<i;l++)o[l]=e[l];return h(o),o}function b(e,n,r){for(var i,s=e.length,o=new Array(s),a=-n,c=t,f=0;f<s;f++)i=e[f]+a,a=Math.floor(i/c),o[f]=(i%=c)<0?i+c:i;return"number"==typeof(o=p(o))?new l(o=r?-o:o):new u(o,r)}function S(e,n){for(var r,i,s=e.length,o=n.length,a=m(s+o),u=t,l=0;l<s;++l)for(var c=e[l],f=0;f<o;++f)r=c*n[f]+a[l+f],i=Math.floor(r/u),a[l+f]=r-i*u,a[l+f+1]+=i;return h(a),a}function M(e,n){for(var r,i=e.length,s=new Array(i),o=t,a=0,u=0;u<i;u++)r=e[u]*n+a,a=Math.floor(r/o),s[u]=r-a*o;for(;0<a;)s[u++]=a%o,a=Math.floor(a/o);return s}function E(e,t){for(var n=[];0<t--;)n.push(0);return n.concat(e)}function N(e,n,r){return new u(e<t?M(n,e):S(n,f(e)),r)}function x(e){for(var n,r=e.length,i=m(r+r),s=t,o=0;o<r;o++){for(var a,u=0-(a=e[o])*a,l=o;l<r;l++)n=a*e[l]*2+i[o+l]+u,u=Math.floor(n/s),i[o+l]=n-u*s;i[o+r]=u}return h(i),i}function q(e,n){for(var r,i=e.length,s=m(i),o=t,a=0,u=i-1;0<=u;--u)a=(r=a*o+e[u])-(r=g(r/n))*n,s[u]=0|r;return[s,0|a]}function _(e,n){var r=$(n),i=e.value,s=r.value;if(0===s)throw new Error("Cannot divide by zero");if(e.isSmall)return r.isSmall?[new l(g(i/s)),new l(i%s)]:[a[0],e];if(r.isSmall){if(1===s)return[e,a[0]];if(-1==s)return[e.negate(),a[0]];var o=Math.abs(s);if(o<t){var c=p((v=q(i,o))[0]);n=v[1];return e.sign&&(n=-n),"number"==typeof c?[new l(c=e.sign!==r.sign?-c:c),new l(n)]:[new u(c,e.sign!==r.sign),new l(n)]}s=f(o)}if(o=A(i,s),-1===o)return[a[0],e];if(0===o)return[a[e.sign===r.sign?1:-1],a[0]];c=(v=(i.length+s.length<=200?function(e,n){var r,i,s,o,a,u,l,c=e.length,f=n.length,h=t,g=m(n.length),v=n[f-1],d=Math.ceil(h/(2*v)),w=M(e,d),y=M(n,d);for(w.length<=c&&w.push(0),y.push(0),v=y[f-1],i=c-f;0<=i;i--){for(r=h-1,w[i+f]!==v&&(r=Math.floor((w[i+f]*h+w[i+f-1])/v)),u=y.length,a=o=s=0;a<u;a++)s+=r*y[a],l=Math.floor(s/h),o+=w[i+a]-(s-l*h),s=l,o=o<0?(w[i+a]=o+h,-1):(w[i+a]=o,0);for(;0!==o;){for(--r,a=s=0;a<u;a++)s=(s+=w[i+a]-h+y[a])<0?(w[i+a]=s+h,0):(w[i+a]=s,1);o+=s}g[i]=r}return w=q(w,d)[0],[p(g),p(w)]}:function(e,n){for(var r,i,s,o,a,u=e.length,l=n.length,c=[],f=[],m=t;u;)if(f.unshift(e[--u]),h(f),A(f,n)<0)c.push(0);else{for(s=f[(i=f.length)-1]*m+f[i-2],o=n[l-1]*m+n[l-2],l<i&&(s=(s+1)*m),r=Math.ceil(s/o);!(A(a=M(n,r),f)<=0)&&--r;);c.push(r),f=y(f,a)}return c.reverse(),[p(c),p(f)]})(i,s))[0];r=e.sign!==r.sign;var v=v[1];e=e.sign;return[c="number"==typeof c?new l(c=r?-c:c):new u(c,r),v="number"==typeof v?new l(v=e?-v:v):new u(v,e)]}function A(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;0<=n;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function O(e){return e=e.abs(),!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function C(e,t){for(var r,i,s,o=e.prev(),u=o,l=0;u.isEven();)u=u.divide(2),l++;e:for(i=0;i<t.length;i++)if(!e.lesser(t[i])&&!(s=n(t[i]).modPow(u,e)).equals(a[1])&&!s.equals(o)){for(r=l-1;0!=r;r--){if((s=s.square().mod(e)).isUnit())return!1;if(s.equals(o))continue e}return!1}return!0}u.prototype=Object.create(a.prototype),l.prototype=Object.create(a.prototype),u.prototype.plus=u.prototype.add=function(e){var t=$(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value;e=t.value;return t.isSmall?new u(w(n,Math.abs(e)),this.sign):new u(d(n,e),this.sign)},l.prototype.plus=l.prototype.add=function(e){var t=$(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());if(e=t.value,t.isSmall){if(c(n+e))return new l(n+e);e=f(Math.abs(e))}return new u(w(e,Math.abs(n)),n<0)},u.prototype.minus=u.prototype.subtract=function(e){var t=$(e);if(this.sign!==t.sign)return this.add(t.negate());var n,r=this.value;e=t.value;return t.isSmall?b(r,Math.abs(e),this.sign):(t=r,r=e,e=this.sign,0<=A(t,r)?n=y(t,r):(n=y(r,t),e=!e),"number"==typeof(n=p(n))?new l(n=e?-n:n):new u(n,e))},l.prototype.minus=l.prototype.subtract=function(e){var t=$(e),n=this.value;return n<0!==t.sign?this.add(t.negate()):(e=t.value,t.isSmall?new l(n-e):b(e,Math.abs(n),0<=n))},u.prototype.negate=function(){return new u(this.value,!this.sign)},l.prototype.negate=function(){var e=this.sign,t=new l(-this.value);return t.sign=!e,t},u.prototype.abs=function(){return new u(this.value,!1)},l.prototype.abs=function(){return new l(Math.abs(this.value))},u.prototype.times=u.prototype.multiply=function(e){var n,r=$(e),i=this.value,s=r.value;e=this.sign!==r.sign;if(r.isSmall){if(0===s)return a[0];if(1===s)return this;if(-1===s)return this.negate();if((n=Math.abs(s))<t)return new u(M(i,n),e);s=f(n)}return r=i.length,n=s.length,new u((0<-.012*r-.012*n+15e-6*r*n?function e(t,n){if((r=Math.max(t.length,n.length))<=30)return S(t,n);var r=Math.ceil(r/2),i=t.slice(r),s=t.slice(0,r),o=n.slice(r),a=n.slice(0,r);t=e(s,a),n=e(i,o),o=e(d(s,i),d(a,o)),r=d(d(t,E(y(y(o,t),n),r)),E(n,2*r));return h(r),r}:S)(i,s),e)},l.prototype._multiplyBySmall=function(e){return c(e.value*this.value)?new l(e.value*this.value):N(Math.abs(e.value),f(Math.abs(this.value)),this.sign!==e.sign)},u.prototype._multiplyBySmall=function(e){return 0===e.value?a[0]:1===e.value?this:-1===e.value?this.negate():N(Math.abs(e.value),this.value,this.sign!==e.sign)},l.prototype.times=l.prototype.multiply=function(e){return $(e)._multiplyBySmall(this)},u.prototype.square=function(){return new u(x(this.value),!1)},l.prototype.square=function(){var e=this.value*this.value;return c(e)?new l(e):new u(x(f(Math.abs(this.value))),!1)},l.prototype.divmod=u.prototype.divmod=function(e){return e=_(this,e),{quotient:e[0],remainder:e[1]}},l.prototype.over=l.prototype.divide=u.prototype.over=u.prototype.divide=function(e){return _(this,e)[0]},l.prototype.remainder=l.prototype.mod=u.prototype.remainder=u.prototype.mod=function(e){return _(this,e)[1]},u.prototype.pow=function(e){var t,n,r,i=$(e),s=(e=this.value,i.value);if(0===s)return a[1];if(0===e)return a[0];if(1===e)return a[1];if(-1===e)return i.isEven()?a[1]:a[-1];if(i.sign)return a[0];if(!i.isSmall)throw new Error("The exponent "+i.toString()+" is too large.");if(this.isSmall&&c(t=Math.pow(e,s)))return new l(g(t));for(n=this,r=a[1];!0&s&&(r=r.times(n),--s),0!==s;)s/=2,n=n.square();return r},l.prototype.pow=u.prototype.pow,l.prototype.modPow=u.prototype.modPow=function(e,t){if(e=$(e),(t=$(t)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var n=a[1],r=this.mod(t);e.isPositive();){if(r.isZero())return a[0];e.isOdd()&&(n=n.multiply(r).mod(t)),e=e.divide(2),r=r.square().mod(t)}return n},u.prototype.compareAbs=function(e){var t=$(e),n=this.value;e=t.value;return t.isSmall?1:A(n,e)},l.prototype.compareAbs=function(e){var t=$(e),n=Math.abs(this.value);e=t.value;return t.isSmall?n===(e=Math.abs(e))?0:e<n?1:-1:-1},u.prototype.compareTo=u.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=$(e),n=this.value;e=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:A(n,e)*(this.sign?-1:1)},l.prototype.compareTo=l.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=$(e),n=this.value;e=t.value;return t.isSmall?n==e?0:e<n?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},l.prototype.eq=l.prototype.equals=u.prototype.eq=u.prototype.equals=function(e){return 0===this.compare(e)},l.prototype.neq=l.prototype.notEquals=u.prototype.neq=u.prototype.notEquals=function(e){return 0!==this.compare(e)},l.prototype.gt=l.prototype.greater=u.prototype.gt=u.prototype.greater=function(e){return 0<this.compare(e)},l.prototype.lt=l.prototype.lesser=u.prototype.lt=u.prototype.lesser=function(e){return this.compare(e)<0},l.prototype.geq=l.prototype.greaterOrEquals=u.prototype.geq=u.prototype.greaterOrEquals=function(e){return 0<=this.compare(e)},l.prototype.leq=l.prototype.lesserOrEquals=u.prototype.leq=u.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},u.prototype.isEven=function(){return 0==(1&this.value[0])},l.prototype.isEven=function(){return 0==(1&this.value)},u.prototype.isOdd=function(){return 1==(1&this.value[0])},l.prototype.isOdd=function(){return 1==(1&this.value)},u.prototype.isPositive=function(){return!this.sign},l.prototype.isPositive=function(){return 0<this.value},u.prototype.isNegative=function(){return this.sign},l.prototype.isNegative=function(){return this.value<0},u.prototype.isUnit=function(){return!1},l.prototype.isUnit=function(){return 1===Math.abs(this.value)},u.prototype.isZero=function(){return!1},l.prototype.isZero=function(){return 0===this.value},l.prototype.isDivisibleBy=u.prototype.isDivisibleBy=function(e){var t=$(e);e=t.value;return 0!==e&&(1===e||(2===e?this.isEven():this.mod(t).equals(a[0])))},l.prototype.isPrime=u.prototype.isPrime=function(t){var r=O(this);if(r!==e)return r;var i=this.abs();r=i.bitLength();if(r<=64)return C(i,[2,325,9375,28178,450775,9780504,1795265022]);r=Math.log(2)*r;for(var s=Math.ceil(!0===t?2*Math.pow(r,2):r),o=[],a=0;a<s;a++)o.push(n(a+2));return C(i,o)},l.prototype.isProbablePrime=u.prototype.isProbablePrime=function(t){var r=O(this);if(r!==e)return r;for(var i=this.abs(),s=t===e?5:t,o=[],a=0;a<s;a++)o.push(n.randBetween(2,i.minus(2)));return C(i,o)},l.prototype.modInv=u.prototype.modInv=function(e){for(var t,r,i=n.zero,s=n.one,o=$(e),a=this.abs();!a.equals(n.zero);)t=o.divide(a),r=o,o=a,s=i.subtract(t.multiply(i=s)),a=r.subtract(t.multiply(a));if(!o.equals(1))throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===i.compare(0)&&(i=i.add(e)),this.isNegative()?i.negate():i},u.prototype.next=function(){var e=this.value;return this.sign?b(e,1,this.sign):new u(w(e,1),this.sign)},l.prototype.next=function(){var e=this.value;return e+1<i?new l(e+1):new u(s,!1)},u.prototype.prev=function(){var e=this.value;return this.sign?new u(w(e,1),!0):b(e,1,this.sign)},l.prototype.prev=function(){var e=this.value;return-i<e-1?new l(e-1):new u(s,!0)};for(var I=[1];2*I[I.length-1]<=t;)I.push(2*I[I.length-1]);var L=I.length,U=I[L-1];function R(e){return("number"==typeof e||"string"==typeof e)&&+Math.abs(e)<=t||e instanceof u&&e.value.length<=1}function T(e,t,r){t=$(t);for(var i=e.isNegative(),s=t.isNegative(),o=i?e.not():e,a=s?t.not():t,u=0,l=0,c=null,f=null,p=[];!o.isZero()||!a.isZero();)u=(c=_(o,U))[1].toJSNumber(),i&&(u=U-1-u),l=(f=_(a,U))[1].toJSNumber(),o=c[0],a=f[0],p.push(r(u,l=s?U-1-l:l));for(var h=0!==r(i?1:0,s?1:0)?n(-1):n(0),m=p.length-1;0<=m;--m)h=h.multiply(U).add(n(p[m]));return h}l.prototype.shiftLeft=u.prototype.shiftLeft=function(e){if(!R(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;L<=e;)t=t.multiply(U),e-=L-1;return t.multiply(I[e])},l.prototype.shiftRight=u.prototype.shiftRight=function(e){var t;if(!R(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftLeft(-e);for(var n=this;L<=e;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(t=_(n,U))[1].isNegative()?t[0].prev():t[0],e-=L-1}return(t=_(n,I[e]))[1].isNegative()?t[0].prev():t[0]},l.prototype.not=u.prototype.not=function(){return this.negate().prev()},l.prototype.and=u.prototype.and=function(e){return T(this,e,(function(e,t){return e&t}))},l.prototype.or=u.prototype.or=function(e){return T(this,e,(function(e,t){return e|t}))},l.prototype.xor=u.prototype.xor=function(e){return T(this,e,(function(e,t){return e^t}))};var P=1<<30,k=(t&-t)*(t&-t)|P;function D(e){return e=e.value,e="number"==typeof e?e|P:e[0]+e[1]*t|k,e&-e}function F(e,t){return e=$(e),t=$(t),e.greater(t)?e:t}function j(e,t){return e=$(e),t=$(t),e.lesser(t)?e:t}function B(e,t){if(e=$(e).abs(),t=$(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var n,r,i=a[1];e.isEven()&&t.isEven();)n=Math.min(D(e),D(t)),e=e.divide(n),t=t.divide(n),i=i.multiply(n);for(;e.isEven();)e=e.divide(D(e));do{for(;t.isEven();)t=t.divide(D(t))}while(e.greater(t)&&(r=t,t=e,e=r),!(t=t.subtract(e)).isZero());return i.isUnit()?e:e.multiply(i)}l.prototype.bitLength=u.prototype.bitLength=function(){var e=this;return 0===(e=e.compareTo(n(0))<0?e.negate().subtract(n(1)):e).compareTo(n(0))?n(0):n(function e(t,r){if(r.compareTo(t)<=0){var i=e(t,r.square(r)),s=i.p;i=i.e,r=s.multiply(r);return r.compareTo(t)<=0?{p:r,e:2*i+1}:{p:s,e:2*i}}return{p:n(1),e:0}}(e,n(2)).e).add(n(1))};var G=function(e,t){for(var n=e.length,r=Math.abs(t),i=0;i<n;i++){var s=e[i].toLowerCase();if("-"!==s&&/[a-z0-9]/.test(s))if(/[0-9]/.test(s)&&r<=+s){if("1"!==s||1!==r)throw new Error(s+" is not a valid digit in base "+t+".")}else if(s.charCodeAt(0)-87>=r)throw new Error(s+" is not a valid digit in base "+t+".")}if(2<=t&&t<=36&&n<=o/Math.log(t)){var a=parseInt(e,t);if(isNaN(a))throw new Error(s+" is not a valid digit in base "+t+".");return new l(parseInt(e,t))}t=$(t);var u=[];a="-"===e[0];for(i=a?1:0;i<e.length;i++){var c=(s=e[i].toLowerCase()).charCodeAt(0);if(48<=c&&c<=57)u.push($(s));else if(97<=c&&c<=122)u.push($(s.charCodeAt(0)-87));else{if("<"!==s)throw new Error(s+" is not a valid character");for(c=i;">"!==e[++i];);u.push($(e.slice(c+1,i)))}}return V(u,t,a)};function V(e,t,n){for(var r=a[0],i=a[1],s=e.length-1;0<=s;s--)r=r.add(e[s].times(i)),i=i.times(t);return n?r.negate():r}function H(e){return e<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e):"<"+e+">"}function Z(e,t){if((t=n(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var r=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return r.unshift([1]),{value:[].concat.apply([],r),isNegative:!1}}if(r=!1,e.isNegative()&&t.isPositive()&&(r=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:r};for(var i=[],s=e;s.isNegative()||0<=s.compareAbs(t);){s=(o=s.divmod(t)).quotient;var o=o.remainder;o.isNegative()&&(o=t.minus(o).abs(),s=s.next()),i.push(o.toJSNumber())}return i.push(s.toJSNumber()),{value:i.reverse(),isNegative:r}}function z(e,t){return t=Z(e,t),(t.isNegative?"-":"")+t.value.map(H).join("")}function X(e){if(c(+e)){var t=+e;if(t===g(t))return new l(t);throw new Error("Invalid integer: "+e)}var n="-"===e[0],i=(e=n?e.slice(1):e).split(/e/i);if(2<i.length)throw new Error("Invalid integer: "+i.join("e"));if(2===i.length){var s=i[1];if((s=+(s="+"===s[0]?s.slice(1):s))!==g(s)||!c(s))throw new Error("Invalid integer: "+s+" is not a valid exponent.");if(t=i[0],i=t.indexOf("."),0<=i&&(s-=t.length-i-1,t=t.slice(0,i)+t.slice(i+1)),s<0)throw new Error("Cannot include negative exponent part for integers");e=t+=new Array(s+1).join("0")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error("Invalid integer: "+e);for(var o=[],a=e.length,f=r,p=a-f;0<a;)o.push(+e.slice(p,a)),(p-=f)<0&&(p=0),a-=f;return h(o),new u(o,n)}function $(e){return"number"==typeof e?function(e){if(c(e)){if(e!==g(e))throw new Error(e+" is not an integer.");return new l(e)}return X(e.toString())}(e):"string"==typeof e?X(e):e}u.prototype.toArray=function(e){return Z(this,e)},l.prototype.toArray=function(e){return Z(this,e)},u.prototype.toString=function(t){if(10!==(t=t===e?10:t))return z(this,t);for(var n,r=this.value,i=r.length,s=String(r[--i]);0<=--i;)n=String(r[i]),s+="0000000".slice(n.length)+n;return(this.sign?"-":"")+s},l.prototype.toString=function(t){return 10!=(t=t===e?10:t)?z(this,t):String(this.value)},u.prototype.toJSON=l.prototype.toJSON=function(){return this.toString()},u.prototype.toJSNumber=u.prototype.valueOf=function(){return parseInt(this.toString(),10)},l.prototype.toJSNumber=l.prototype.valueOf=function(){return this.value};for(var W=0;W<1e3;W++)a[W]=new l(W),0<W&&(a[-W]=new l(-W));return a.one=a[1],a.zero=a[0],a.minusOne=a[-1],a.max=F,a.min=j,a.gcd=B,a.lcm=function(e,t){return e=$(e).abs(),t=$(t).abs(),e.divide(B(e,t)).multiply(t)},a.isInstance=function(e){return e instanceof u||e instanceof l},a.randBetween=function(e,n){var r=j(e=$(e),n=$(n)),i=F(e,n).subtract(r).add(1);if(i.isSmall)return r.add(Math.floor(Math.random()*i));for(var s=[],o=!0,a=i.value.length-1;0<=a;a--){var c=o?i.value[a]:t,f=g(Math.random()*c);s.unshift(f),f<c&&(o=!1)}return s=p(s),r.add("number"==typeof s?new l(s):new u(s,!1))},a.fromArray=function(e,t,n){return V(e.map($),$(t||10),n)},a}();return e.hasOwnProperty("exports")&&(e.exports=n),i=[],s=function(){return n}.apply(t,i),void 0!==s&&(e.exports=s),n}(),bigDec:function(n){"use strict";var i,o,a,u=9e15,l=1e9,c="0123456789abcdef",f="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",p="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",h={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-u,maxE:u,crypto:!1},m=!0,g="[DecimalError] ",v=g+"Invalid argument: ",d=g+"Precision limit exceeded",w=g+"crypto unavailable",y=Math.floor,b=Math.pow,S=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,M=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,E=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,N=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,x=1e7,q=7,_=f.length-1,A=p.length-1,O={name:"[object Decimal]"};function C(e){var t,n,r,i=e.length-1,s="",o=e[0];if(0<i){for(s+=o,t=1;t<i;t++)r=e[t]+"",(n=q-r.length)&&(s+=H(n)),s+=r;o=e[t],(n=q-(r=o+"").length)&&(s+=H(n))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function I(e,t,n){if(e!==~~e||e<t||n<e)throw Error(v+e)}function L(e,t,n,r){for(var i,s,o=e[0];10<=o;o/=10)--t;return--t<0?(t+=q,i=0):(i=Math.ceil((t+1)/q),t%=q),o=b(10,q-t),s=e[i]%o|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),n<4&&99999==s||3<n&&49999==s||5e4==s||0==s):(n<4&&s+1==o||3<n&&s+1==o/2)&&(e[i+1]/o/100|0)==b(10,t-2)-1||(s==o/2||0==s)&&0==(e[i+1]/o/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),(r||n<4)&&9999==s||!r&&3<n&&4999==s):((r||n<4)&&s+1==o||!r&&3<n&&s+1==o/2)&&(e[i+1]/o/1e3|0)==b(10,t-3)-1}function U(e,t,n){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=c.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(void 0===s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}O.absoluteValue=O.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),D(e)},O.ceil=function(){return D(new this.constructor(this),this.e+1,2)},O.comparedTo=O.cmp=function(e){var t,n,r=this,i=r.d,s=(e=new r.constructor(e)).d,o=r.s,a=e.s;if(!i||!s)return o&&a?o!==a?o:i===s?0:!i^o<0?1:-1:NaN;if(!i[0]||!s[0])return i[0]?o:s[0]?-a:0;if(o!==a)return o;if(r.e!==e.e)return r.e>e.e^o<0?1:-1;for(t=0,n=(r=i.length)<(e=s.length)?r:e;t<n;++t)if(i[t]!==s[t])return i[t]>s[t]^o<0?1:-1;return r===e?0:e<r^o<0?1:-1},O.cosine=O.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+q,r.rounding=1,n=function(e,t){var n,r=t.d.length;r=r<32?(1/J(4,n=Math.ceil(r/3))).toString():(n=16,"2.3283064365386962890625e-10");e.precision+=n,t=K(e,1,t.times(r),new e(1));for(var i=n;i--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=n,t}(r,ee(r,n)),r.precision=e,r.rounding=t,D(2==a||3==a?n.neg():n,e,t,!0)):new r(1):new r(NaN)},O.cubeRoot=O.cbrt=function(){var e,t,n,r,i,s,o,a,u,l,c=this,f=c.constructor;if(!c.isFinite()||c.isZero())return new f(c);for(m=!1,(s=c.s*b(c.s*c,1/3))&&Math.abs(s)!=1/0?r=new f(s.toString()):(n=C(c.d),(s=((e=c.e)-n.length+1)%3)&&(n+=1==s||-2==s?"0":"00"),s=b(n,1/3),e=y((e+1)/3)-(e%3==(e<0?-1:2)),(r=new f(n=s==1/0?"5e"+e:(n=s.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=c.s),o=(e=f.precision)+3;;)if(l=(u=(a=r).times(a).times(a)).plus(c),r=R(l.plus(c).times(a),l.plus(u),o+2,1),C(a.d).slice(0,o)===(n=C(r.d)).slice(0,o)){if("9999"!=(n=n.slice(o-3,o+1))&&(i||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(D(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!i&&(D(a,e+1,0),a.times(a).times(a).eq(c))){r=a;break}o+=4,i=1}return m=!0,D(r,e,f.rounding,t)},O.decimalPlaces=O.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=((e=t.length-1)-y(this.e/q))*q,e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},O.dividedBy=O.div=function(e){return R(this,new this.constructor(e))},O.dividedToIntegerBy=O.divToInt=function(e){var t=this.constructor;return D(R(this,new t(e),0,1,1),t.precision,t.rounding)},O.equals=O.eq=function(e){return 0===this.cmp(e)},O.floor=function(){return D(new this.constructor(this),this.e+1,3)},O.greaterThan=O.gt=function(e){return 0<this.cmp(e)},O.greaterThanOrEqualTo=O.gte=function(e){return e=this.cmp(e),1==e||0===e},O.hyperbolicCosine=O.cosh=function(){var e,t,n,r=(a=this).constructor,i=new r(1);if(!a.isFinite())return new r(a.s?1/0:NaN);if(a.isZero())return i;t=r.precision,n=r.rounding,r.precision=t+Math.max(a.e,a.sd())+4,r.rounding=1;for(var s,o=(o=a.d.length)<32?(1/J(4,e=Math.ceil(o/3))).toString():(e=16,"2.3283064365386962890625e-10"),a=K(r,1,a.times(o),new r(1),!0),u=e,l=new r(8);u--;)s=a.times(a),a=i.minus(s.times(l.minus(s.times(l))));return D(a,r.precision=t,r.rounding=n,!0)},O.hyperbolicSine=O.sinh=function(){var e,t,n,r=(o=this).constructor;if(!o.isFinite()||o.isZero())return new r(o);if(e=r.precision,t=r.rounding,r.precision=e+Math.max(o.e,o.sd())+4,r.rounding=1,(n=o.d.length)<3)o=K(r,2,o,o,!0);else for(var i,s=16<(s=1.4*Math.sqrt(n))?16:0|s,o=K(r,2,o=o.times(1/J(5,s)),o,!0),a=new r(5),u=new r(16),l=new r(20);s--;)i=o.times(o),o=o.times(a.plus(i.times(u.times(i).plus(l))));return D(o,r.precision=e,r.rounding=t,!0)},O.hyperbolicTangent=O.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,R(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},O.inverseCosine=O.acos=function(){var e=this,t=e.constructor,n=e.abs().cmp(1),r=t.precision,i=t.rounding;return-1!==n?0===n?e.isNeg()?G(t,r,i):new t(0):new t(NaN):e.isZero()?G(t,r+4,i).times(.5):(t.precision=r+6,t.rounding=1,e=e.asin(),n=G(t,r+4,i).times(.5),t.precision=r,t.rounding=i,n.minus(e))},O.inverseHyperbolicCosine=O.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,m=!1,n=n.times(n).minus(1).sqrt().plus(n),m=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},O.inverseHyperbolicSine=O.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,m=!1,n=n.times(n).plus(1).sqrt().plus(n),m=!0,r.precision=e,r.rounding=t,n.ln())},O.inverseHyperbolicTangent=O.atanh=function(){var e,t,n,r=this,i=r.constructor;return r.isFinite()?0<=r.e?new i(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(e=i.precision,t=i.rounding,n=r.sd(),Math.max(n,e)<2*-r.e-1?D(new i(r),e,t,!0):(i.precision=n-=r.e,r=R(r.plus(1),new i(1).minus(r),n+e,1),i.precision=e+4,i.rounding=1,r=r.ln(),i.precision=e,i.rounding=t,r.times(.5))):new i(NaN)},O.inverseSine=O.asin=function(){var e,t,n,r=this,i=r.constructor;return r.isZero()?new i(r):(e=r.abs().cmp(1),t=i.precision,n=i.rounding,-1!==e?0===e?((e=G(i,t+4,n).times(.5)).s=r.s,e):new i(NaN):(i.precision=t+6,i.rounding=1,r=r.div(new i(1).minus(r.times(r)).sqrt().plus(1)).atan(),i.precision=t,i.rounding=n,r.times(2)))},O.inverseTangent=O.atan=function(){var e,t,n,r,i,s,o,a,u,l=this,c=l.constructor,f=c.precision,p=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&f+4<=A)return(o=G(c,f+4,p).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(f+4<=A)return(o=G(c,f+4,p).times(.5)).s=l.s,o}for(c.precision=a=f+10,c.rounding=1,e=n=Math.min(28,a/q+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(m=!1,t=Math.ceil(a/q),r=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(r+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),m=!0,D(o,c.precision=f,c.rounding=p,!0)},O.isFinite=function(){return!!this.d},O.isInteger=O.isInt=function(){return!!this.d&&y(this.e/q)>this.d.length-2},O.isNaN=function(){return!this.s},O.isNegative=O.isNeg=function(){return this.s<0},O.isPositive=O.isPos=function(){return 0<this.s},O.isZero=function(){return!!this.d&&0===this.d[0]},O.lessThan=O.lt=function(e){return this.cmp(e)<0},O.lessThanOrEqualTo=O.lte=function(e){return this.cmp(e)<1},O.logarithm=O.log=function(e){var t,n,r,i,s,o,a,u,l=this.constructor,c=l.precision,f=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new l(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(1<n.length)s=!0;else{for(i=n[0];i%10==0;)i/=10;s=1!==i}if(m=!1,o=W(this,a=c+5),r=t?B(l,a+10):W(e,a),L((u=R(o,r,a,1)).d,i=c,f))do{if(o=W(this,a+=10),r=t?B(l,a+10):W(e,a),u=R(o,r,a,1),!s){+C(u.d).slice(i+1,i+15)+1==1e14&&(u=D(u,c+1,0));break}}while(L(u.d,i+=10,f));return m=!0,D(u,c,f)},O.minus=O.sub=function(e){var t,n,r,i,s,o,a,u,l,c,f,p=this,h=p.constructor;if(e=new h(e),!p.d||!e.d)return p.s&&e.s?p.d?e.s=-e.s:e=new h(e.d||p.s!==e.s?p:NaN):e=new h(NaN),e;if(p.s!=e.s)return e.s=-e.s,p.plus(e);if(l=p.d,f=e.d,a=h.precision,u=h.rounding,!l[0]||!f[0]){if(f[0])e.s=-e.s;else{if(!l[0])return new h(3===u?-0:0);e=new h(p)}return m?D(e,a,u):e}if(n=y(e.e/q),p=y(p.e/q),l=l.slice(),s=p-n){for(o=(c=s<0)?(t=l,s=-s,f.length):(t=f,n=p,l.length),s>(r=Math.max(Math.ceil(a/q),o)+2)&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for((c=(r=l.length)<(o=f.length))&&(o=r),r=0;r<o;r++)if(l[r]!=f[r]){c=l[r]<f[r];break}s=0}for(c&&(t=l,l=f,f=t,e.s=-e.s),o=l.length,r=f.length-o;0<r;--r)l[o++]=0;for(r=f.length;s<r;){if(l[--r]<f[r]){for(i=r;i&&0===l[--i];)l[i]=x-1;--l[i],l[r]+=x}l[r]-=f[r]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=j(l,n),m?D(e,a,u):e):new h(3===u?-0:0)},O.modulo=O.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?D(new r(n),r.precision,r.rounding):(m=!1,9==r.modulo?(t=R(n,e.abs(),0,3,1)).s*=e.s:t=R(n,e,0,r.modulo,1),t=t.times(e),m=!0,n.minus(t))},O.naturalExponential=O.exp=function(){return $(this)},O.naturalLogarithm=O.ln=function(){return W(this)},O.negated=O.neg=function(){var e=new this.constructor(this);return e.s=-e.s,D(e)},O.plus=O.add=function(e){var t,n,r,i,s,o,a,u,l=this,c=l.constructor;if(e=new c(e),!l.d||!e.d)return l.s&&e.s?l.d||(e=new c(e.d||l.s===e.s?l:NaN)):e=new c(NaN),e;if(l.s!=e.s)return e.s=-e.s,l.minus(e);if(a=l.d,u=e.d,s=c.precision,o=c.rounding,!a[0]||!u[0])return u[0]||(e=new c(l)),m?D(e,s,o):e;if(c=y(l.e/q),l=y(e.e/q),a=a.slice(),r=c-l){for(i=r<0?(n=a,r=-r,u.length):(n=u,l=c,a.length),r>(i=(c=Math.ceil(s/q))>i?c+1:i+1)&&(r=i,n.length=1),n.reverse();r--;)n.push(0);n.reverse()}for((i=a.length)-(r=u.length)<0&&(r=i,n=u,u=a,a=n),t=0;r;)t=(a[--r]=a[r]+u[r]+t)/x|0,a[r]%=x;for(t&&(a.unshift(t),++l),i=a.length;0==a[--i];)a.pop();return e.d=a,e.e=j(a,l),m?D(e,s,o):e},O.precision=O.sd=function(e){var t;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(v+e);return this.d?(t=V(this.d),e&&this.e+1>t&&(t=this.e+1)):t=NaN,t},O.round=function(){var e=this.constructor;return D(new e(this),this.e+1,e.rounding)},O.sine=O.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+q,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return K(e,2,t,t);n=16<(n=1.4*Math.sqrt(r))?16:0|n,t=K(e,2,t=t.times(1/J(5,n)),t);for(var i,s=new e(5),o=new e(16),a=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(r,ee(r,n)),r.precision=e,r.rounding=t,D(2<a?n.neg():n,e,t,!0)):new r(NaN)},O.squareRoot=O.sqrt=function(){var e,t,n,r,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(m=!1,r=0==(l=Math.sqrt(+o))||l==1/0?(((t=C(a)).length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=y((u+1)/2)-(u<0||u%2),new c(t=l==1/0?"5e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):new c(l.toString()),n=(u=c.precision)+3;;)if(r=(s=r).plus(R(o,s,n+2,1)).times(.5),C(s.d).slice(0,n)===(t=C(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(D(r,u+1,1),e=!r.times(r).eq(o));break}if(!i&&(D(s,u+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}return m=!0,D(r,u,c.rounding,e)},O.tangent=O.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=R(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,D(2==a||4==a?n.neg():n,e,t,!0)):new r(NaN)},O.times=O.mul=function(e){var t,n,r,i,s,o,a,u,l,c=this.constructor,f=this.d,p=(e=new c(e)).d;if(e.s*=this.s,!(f&&f[0]&&p&&p[0]))return new c(!e.s||f&&!f[0]&&!p||p&&!p[0]&&!f?NaN:f&&p?0*e.s:e.s/0);for(n=y(this.e/q)+y(e.e/q),(u=f.length)<(l=p.length)&&(s=f,f=p,p=s,o=u,u=l,l=o),s=[],r=o=u+l;r--;)s.push(0);for(r=l;0<=--r;){for(t=0,i=u+r;r<i;)a=s[i]+p[r]*f[i-r-1]+t,s[i--]=a%x|0,t=a/x|0;s[i]=(s[i]+t)%x|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=j(s,n),m?D(e,c.precision,c.rounding):e},O.toBinary=function(e,t){return te(this,2,e,t)},O.toDecimalPlaces=O.toDP=function(e,t){var n=this.constructor,r=new n(this);return void 0===e?r:(I(e,0,l),void 0===t?t=n.rounding:I(t,0,8),D(r,e+r.e+1,t))},O.toExponential=function(e,t){var n=this,r=n.constructor;e=void 0===e?F(n,!0):(I(e,0,l),void 0===t?t=r.rounding:I(t,0,8),F(n=D(new r(n),e+1,t),!0,e+1));return n.isNeg()&&!n.isZero()?"-"+e:e},O.toFixed=function(e,t){var n=this,r=n.constructor,i=void 0===e?F(n):(I(e,0,l),void 0===t?t=r.rounding:I(t,0,8),F(i=D(new r(n),e+n.e+1,t),!1,e+i.e+1));return n.isNeg()&&!n.isZero()?"-"+i:i},O.toFraction=function(e){var t,n,r,i,s,o,a,u,l,c,f=this,p=f.d,h=f.constructor;if(!p)return new h(f);if(u=n=new h(1),r=a=new h(0),l=(s=(t=new h(r)).e=V(p)-f.e-1)%q,t.d[0]=b(10,l<0?q+l:l),null==e)e=0<s?t:u;else{if(!(o=new h(e)).isInt()||o.lt(u))throw Error(v+o);e=o.gt(t)?0<s?t:u:o}for(m=!1,o=new h(C(p)),l=h.precision,h.precision=s=p.length*q*2;c=R(o,t,0,1,1),1!=(i=n.plus(c.times(r))).cmp(e);)n=r,r=i,u=a.plus(c.times(i=u)),a=i,t=o.minus(c.times(i=t)),o=i;return i=R(e.minus(n),r,0,1,1),a=a.plus(i.times(u)),n=n.plus(i.times(r)),a.s=u.s=f.s,f=R(u,r,s,1).minus(f).abs().cmp(R(a,n,s,1).minus(f).abs())<1?[u,r]:[a,n],h.precision=l,m=!0,f},O.toHexadecimal=O.toHex=function(e,t){return te(this,16,e,t)},O.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);if(null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:I(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(m=!1,r=R(r,e,0,t,1).times(e),m=!0,D(r)):(e.s=r.s,r=e),r},O.toNumber=function(){return+this},O.toOctal=function(e,t){return te(this,8,e,t)},O.toPower=O.pow=function(e){var t,n,r,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(b(+a,l));if((a=new u(a)).eq(1))return a;if(r=u.precision,s=u.rounding,e.eq(1))return D(a,r,s);if((t=y(e.e/q))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return i=Z(u,a,n,r),e.s<0?new u(1).div(i):D(i,r,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(n=b(+a,l))&&isFinite(n)?new u(n+"").e:y(l*(Math.log("0."+C(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(0<t?o/0:0):(m=!1,u.rounding=a.s=1,n=Math.min(12,(t+"").length),(i=$(e.times(W(a,r+n)),r)).d&&L((i=D(i,r+5,1)).d,r,s)&&+C((i=D($(e.times(W(a,(t=r+10)+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=D(i,r+1,0)),i.s=o,m=!0,D(i,r,u.rounding=s))},O.toPrecision=function(e,t){var n=this,r=n.constructor;e=void 0===e?F(n,n.e<=r.toExpNeg||n.e>=r.toExpPos):(I(e,1,l),void 0===t?t=r.rounding:I(t,0,8),F(n=D(new r(n),e,t),e<=n.e||n.e<=r.toExpNeg,e));return n.isNeg()&&!n.isZero()?"-"+e:e},O.toSignificantDigits=O.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(I(e,1,l),void 0===t?t=n.rounding:I(t,0,8)),D(new n(this),e,t)},O.toString=function(){var e=this.constructor;e=F(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()&&!this.isZero()?"-"+e:e},O.truncated=O.trunc=function(){return D(new this.constructor(this),this.e+1,1)},O.valueOf=O.toJSON=function(){var e=this.constructor;e=F(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()?"-"+e:e};var R=function(e,t,n,r,i,s){var a,u,l,c,f,p,h,m,g,v,d,w,b,S,M,E,N,_,A,O=e.constructor,C=e.s==t.s?1:-1,I=e.d,L=t.d;if(!(I&&I[0]&&L&&L[0]))return new O(e.s&&t.s&&(I?!L||I[0]!=L[0]:L)?I&&0==I[0]||!L?0*C:C/0:NaN);for(u=s?(f=1,e.e-t.e):(s=x,y(e.e/(f=q))-y(t.e/f)),_=L.length,E=I.length,g=(C=new O(C)).d=[],l=0;L[l]==(I[l]||0);l++);if(L[l]>(I[l]||0)&&u--,null==n?(b=n=O.precision,r=O.rounding):b=i?n+(e.e-t.e)+1:n,b<0)g.push(1),p=!0;else{if(b=b/f+2|0,l=0,1==_){for(L=L[c=0],b++;(l<E||c)&&b--;l++)S=c*s+(I[l]||0),g[l]=S/L|0,c=S%L|0;p=c||l<E}else{for(1<(c=s/(L[0]+1)|0)&&(L=T(L,c,s),I=T(I,c,s),_=L.length,E=I.length),d=(v=I.slice(0,M=_)).length;d<_;)v[d++]=0;for((A=L.slice()).unshift(0),N=L[0],L[1]>=s/2&&++N;c=0,(a=P(L,v,_,d))<0?(w=v[0],1<(c=(w=_!=d?w*s+(v[1]||0):w)/N|0)?1==(a=P(h=T(L,c=s<=c?s-1:c,s),v,m=h.length,d=v.length))&&(c--,k(h,_<m?A:L,m,s)):(0==c&&(a=c=1),h=L.slice()),(m=h.length)<d&&h.unshift(0),k(v,h,d,s),-1==a&&(a=P(L,v,_,d=v.length))<1&&(c++,k(v,_<d?A:L,d,s)),d=v.length):0===a&&(c++,v=[0]),g[l++]=c,a&&v[0]?v[d++]=I[M]||0:(v=[I[M]],d=1),(M++<E||void 0!==v[0])&&b--;);p=void 0!==v[0]}g[0]||g.shift()}if(1==f)C.e=u,o=p;else{for(l=1,c=g[0];10<=c;c/=10)l++;C.e=l+u*f-1,D(C,i?n+C.e+1:n,r,p)}return C};function T(e,t,n){var r,i=0,s=e.length;for(e=e.slice();s--;)r=e[s]*t+i,e[s]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function P(e,t,n,r){var i,s;if(n!=r)s=r<n?1:-1;else for(i=s=0;i<n;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function k(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&1<e.length;)e.shift()}function D(e,t,n,r){var i,s,o,a,u,l,c,f,p=e.constructor;e:if(null!=t){if(!(c=e.d))return e;for(i=1,a=c[0];10<=a;a/=10)i++;if((s=t-i)<0)s+=q,u=(l=c[f=0])/b(10,i-(o=t)-1)%10|0;else if((f=Math.ceil((s+1)/q))>=(a=c.length)){if(!r)break e;for(;a++<=f;)c.push(0);l=u=0,o=(s%=q)-q+(i=1)}else{for(l=a=c[f],i=1;10<=a;a/=10)i++;u=(o=(s%=q)-q+i)<0?0:l/b(10,i-o-1)%10|0}if(r=r||t<0||void 0!==c[f+1]||(o<0?l:l%b(10,i-o-1)),u=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):5<u||5==u&&(4==n||r||6==n&&(0<s?0<o?l/b(10,i-o):0:c[f-1])%10&1||n==(e.s<0?8:7)),t<1||!c[0])return c.length=0,u?(t-=e.e+1,c[0]=b(10,(q-t%q)%q),e.e=-t||0):c[0]=e.e=0,e;if(0==s?(c.length=f,a=1,f--):(c.length=f+1,a=b(10,q-s),c[f]=0<o?(l/b(10,i-o)%b(10,o)|0)*a:0),u)for(;;){if(0==f){for(s=1,o=c[0];10<=o;o/=10)s++;for(o=c[0]+=a,a=1;10<=o;o/=10)a++;s!=a&&(e.e++,c[0]==x&&(c[0]=1));break}if(c[f]+=a,c[f]!=x)break;c[f--]=0,a=1}for(s=c.length;0===c[--s];)c.pop()}return m&&(e.e>p.maxE?(e.d=null,e.e=NaN):e.e<p.minE&&(e.e=0,e.d=[0])),e}function F(e,t,n){if(!e.isFinite())return Q(e);var r,i=e.e,s=C(e.d),o=s.length;return t?(n&&0<(r=n-o)?s=s.charAt(0)+"."+s.slice(1)+H(r):1<o&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(e.e<0?"e":"e+")+e.e):i<0?(s="0."+H(-i-1)+s,n&&0<(r=n-o)&&(s+=H(r))):o<=i?(s+=H(i+1-o),n&&0<(r=n-i-1)&&(s=s+"."+H(r))):((r=i+1)<o&&(s=s.slice(0,r)+"."+s.slice(r)),n&&0<(r=n-o)&&(i+1===o&&(s+="."),s+=H(r))),s}function j(e,t){var n=e[0];for(t*=q;10<=n;n/=10)t++;return t}function B(e,t,n){if(_<t)throw m=!0,n&&(e.precision=n),Error(d);return D(new e(f),t,1,!0)}function G(e,t,n){if(A<t)throw Error(d);return D(new e(p),t,n,!0)}function V(e){var t=e.length-1,n=t*q+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];10<=t;t/=10)n++}return n}function H(e){for(var t="";e--;)t+="0";return t}function Z(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/q+4);for(m=!1;;){if(n%2&&ne((s=s.times(t)).d,o)&&(i=!0),0===(n=y(n/2))){n=s.d.length-1,i&&0===s.d[n]&&++s.d[n];break}ne((t=t.times(t)).d,o)}return m=!0,s}function z(e){return 1&e.d[e.d.length-1]}function X(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;){if(!(r=new e(t[s])).s){i=r;break}i[n](r)&&(i=r)}return i}function $(e,t){var n,r,i,s,o,a,u,l=0,c=0,f=0,p=e.constructor,h=p.rounding,g=p.precision;if(!e.d||!e.d[0]||17<e.e)return new p(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(u=null==t?(m=!1,g):t,a=new p(.03125);-2<e.e;)e=e.times(a),f+=5;for(u+=r=Math.log(b(2,f))/Math.LN10*2+5|0,n=s=o=new p(1),p.precision=u;;){if(s=D(s.times(e),u,1),n=n.times(++c),C((a=o.plus(R(s,n,u,1))).d).slice(0,u)===C(o.d).slice(0,u)){for(i=f;i--;)o=D(o.times(o),u,1);if(null!=t)return p.precision=g,o;if(!(l<3&&L(o.d,u-r,h,l)))return D(o,p.precision=g,h,m=!0);p.precision=u+=10,n=s=a=new p(1),c=0,l++}o=a}}function W(e,t){var n,r,i,s,o,a,u,l,c,f,p,h=1,g=e,v=g.d,d=g.constructor,w=d.rounding,y=d.precision;if(g.s<0||!v||!v[0]||!g.e&&1==v[0]&&1==v.length)return new d(v&&!v[0]?-1/0:1!=g.s?NaN:v?0:g);if(c=null==t?(m=!1,y):t,d.precision=c+=10,r=(n=C(v)).charAt(0),!(Math.abs(s=g.e)<15e14))return l=B(d,c+2,y).times(s+""),g=W(new d(r+"."+n.slice(1)),c-10).plus(l),d.precision=y,null==t?D(g,y,w,m=!0):g;for(;r<7&&1!=r||1==r&&3<n.charAt(1);)r=(n=C((g=g.times(e)).d)).charAt(0),h++;for(s=g.e,1<r?(g=new d("0."+n),s++):g=new d(r+"."+n.slice(1)),u=o=g=R((f=g).minus(1),g.plus(1),c,1),p=D(g.times(g),c,1),i=3;;){if(o=D(o.times(p),c,1),C((l=u.plus(R(o,new d(i),c,1))).d).slice(0,c)===C(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(B(d,c+2,y).times(s+""))),u=R(u,new d(h),c,1),null!=t)return d.precision=y,u;if(!L(u.d,c-10,w,a))return D(u,d.precision=y,w,m=!0);d.precision=c+=10,l=o=g=R(f.minus(1),f.plus(1),c,1),p=D(g.times(g),c,1),i=a=1}u=l,i+=2}}function Q(e){return String(e.s*e.s/0)}function Y(e,t){var n,r,i;for(0<(r=(t=-1<(n=t.indexOf("."))?t.replace(".",""):t).search(/e/i))?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%q,n<0&&(r+=q),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=q;r<i;)e.d.push(+t.slice(r,r+=q));t=t.slice(r),r=q-t.length}else r-=i;for(;r--;)t+="0";e.d.push(+t),m&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function K(e,t,n,r,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/q);for(m=!1,u=n.times(n),a=new e(r);;){if(o=R(a.times(u),new e(t++*t++),l,1),a=i?r.plus(o):r.minus(o),r=R(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(r)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=r,r=o,o=s}return m=!0,o.d.length=c+1,o}function J(e,t){for(var n=e;--t;)n*=e;return n}function ee(e,t){var n=t.s<0,r=G(e,e.precision,1),i=r.times(.5);if((t=t.abs()).lte(i))return a=n?4:1,t;if((e=t.divToInt(r)).isZero())a=n?3:2;else{if((t=t.minus(e.times(r))).lte(i))return a=z(e)?n?2:3:n?4:1,t;a=z(e)?n?1:4:n?3:2}return t.minus(r).abs()}function te(e,t,n,r){var i,s,a,u,f,p,h,m,g=e.constructor,v=void 0!==n;if(v?(I(n,1,l),void 0===r?r=g.rounding:I(r,0,8)):(n=g.precision,r=g.rounding),e.isFinite()){for(v?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,0<=(a=(p=F(e)).indexOf("."))&&(p=p.replace(".",""),(m=new g(1)).e=p.length-a,m.d=U(F(m),10,i),m.e=m.d.length),s=u=(h=U(p,10,i)).length;0==h[--u];)h.pop();if(h[0]){if(a<0?s--:((e=new g(e)).d=h,e.e=s,h=(e=R(e,m,n,r,0,i)).d,s=e.e,f=o),a=h[n],m=i/2,f=f||void 0!==h[n+1],f=r<4?(void 0!==a||f)&&(0===r||r===(e.s<0?3:2)):m<a||a===m&&(4===r||f||6===r&&1&h[n-1]||r===(e.s<0?8:7)),h.length=n,f)for(;++h[--n]>i-1;)h[n]=0,n||(++s,h.unshift(1));for(u=h.length;!h[u-1];--u);for(a=0,p="";a<u;a++)p+=c.charAt(h[a]);if(v){if(1<u)if(16==t||8==t){for(a=16==t?4:3,--u;u%a;u++)p+="0";for(u=(h=U(p,i,t)).length;!h[u-1];--u);for(a=1,p="1.";a<u;a++)p+=c.charAt(h[a])}else p=p.charAt(0)+"."+p.slice(1);p=p+(s<0?"p":"p+")+s}else if(s<0){for(;++s;)p="0"+p;p="0."+p}else if(++s>u)for(s-=u;s--;)p+="0";else s<u&&(p=p.slice(0,s)+"."+p.slice(s))}else p=v?"0p+0":"0";p=(16==t?"0x":2==t?"0b":8==t?"0o":"")+p}else p=Q(e);return e.s<0?"-"+p:p}function ne(e,t){return e.length>t&&(e.length=t,1)}function re(e){return new this(e).abs()}function ie(e){return new this(e).acos()}function se(e){return new this(e).acosh()}function oe(e,t){return new this(e).plus(t)}function ae(e){return new this(e).asin()}function ue(e){return new this(e).asinh()}function le(e){return new this(e).atan()}function ce(e){return new this(e).atanh()}function fe(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?G(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=G(this,s,1).times(.5)).s=e.s:n=t.s<0?(this.precision=s,this.rounding=1,n=this.atan(R(e,t,s,1)),t=G(this,s,1),this.precision=r,this.rounding=i,e.s<0?n.minus(t):n.plus(t)):this.atan(R(e,t,s,1)):(n=G(this,s,1).times(0<t.s?.25:.75)).s=e.s:n=new this(NaN),n}function pe(e){return new this(e).cbrt()}function he(e){return D(e=new this(e),e.e+1,2)}function me(e){if(!e||"object"!=typeof e)throw Error(g+"Object expected");for(var t,n,r=!0===e.defaults,i=["precision",1,l,"rounding",0,8,"toExpNeg",-u,0,"toExpPos",0,u,"maxE",0,u,"minE",-u,0,"modulo",0,9],s=0;s<i.length;s+=3)if(t=i[s],r&&(this[t]=h[t]),void 0!==(n=e[t])){if(!(y(n)===n&&i[s+1]<=n&&n<=i[s+2]))throw Error(v+t+": "+n);this[t]=n}if(t="crypto",r&&(this[t]=h[t]),void 0!==(n=e[t])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(v+t+": "+n);if(n){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(w);this[t]=!0}else this[t]=!1}return this}function ge(e){return new this(e).cos()}function ve(e){return new this(e).cosh()}function de(e,t){return new this(e).div(t)}function we(e){return new this(e).exp()}function ye(e){return D(e=new this(e),e.e+1,3)}function be(){var e,t,n=new this(0);for(m=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return m=!0,new this(1/0);n=t}return m=!0,n.sqrt()}function Se(e){return e instanceof i||e&&"[object Decimal]"===e.name||!1}function Me(e){return new this(e).ln()}function Ee(e,t){return new this(e).log(t)}function Ne(e){return new this(e).log(2)}function xe(e){return new this(e).log(10)}function qe(){return X(this,arguments,"lt")}function _e(){return X(this,arguments,"gt")}function Ae(e,t){return new this(e).mod(t)}function Oe(e,t){return new this(e).mul(t)}function Ce(e,t){return new this(e).pow(t)}function Ie(e){var t,n,r,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:I(e,1,l),r=Math.ceil(e/q),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)429e7<=(i=t[s])?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(w);for(t=crypto.randomBytes(r*=4);s<r;)214e7<=(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=r/4}else for(;s<r;)a[s++]=1e7*Math.random()|0;for(r=a[--s],e%=q,r&&e&&(i=b(10,q-e),a[s]=(r/i|0)*i);0===a[s];s--)a.pop();if(s<0)a=[n=0];else{for(n=-1;0===a[0];n-=q)a.shift();for(r=1,i=a[0];10<=i;i/=10)r++;r<q&&(n-=q-r)}return o.e=n,o.d=a,o}function Le(e){return D(e=new this(e),e.e+1,this.rounding)}function Ue(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Re(e){return new this(e).sin()}function Te(e){return new this(e).sinh()}function Pe(e){return new this(e).sqrt()}function ke(e,t){return new this(e).sub(t)}function De(e){return new this(e).tan()}function Fe(e){return new this(e).tanh()}function je(e){return D(e=new this(e),e.e+1,1)}return(i=function e(t){var n,r,s;function o(e){var t,n,r,s=this;if(!(s instanceof o))return new o(e);if(e instanceof(s.constructor=o))return s.s=e.s,void(m?!e.d||e.e>o.maxE?(s.e=NaN,s.d=null):e.e<o.minE?(s.e=0,s.d=[0]):(s.e=e.e,s.d=e.d.slice()):(s.e=e.e,s.d=e.d&&e.d.slice()));if("number"==(r=typeof e)){if(0===e)return s.s=1/e<0?-1:1,s.e=0,void(s.d=[0]);if(e<0?(e=-e,s.s=-1):s.s=1,e===~~e&&e<1e7){for(t=0,n=e;10<=n;n/=10)t++;return void(m?o.maxE<t?(s.e=NaN,s.d=null):t<o.minE?(s.e=0,s.d=[0]):(s.e=t,s.d=[e]):(s.e=t,s.d=[e]))}return 0*e!=0?(e||(s.s=NaN),s.e=NaN,void(s.d=null)):Y(s,e.toString())}if("string"!=r)throw Error(v+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),s.s=-1):(43===n&&(e=e.slice(1)),s.s=1),(N.test(e)?Y:function(e,t){var n,r,s,o,a,u,l,c;if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(M.test(t))c=16,t=t.toLowerCase();else if(S.test(t))c=2;else{if(!E.test(t))throw Error(v+t);c=8}for(o=0<=(s=(t=0<(s=t.search(/p/i))?(u=+t.slice(s+1),t.substring(2,s)):t.slice(2)).indexOf(".")),n=e.constructor,o&&(s=(a=(t=t.replace(".","")).length)-s,r=Z(n,new n(c),s,2*s)),s=c=(l=U(t,c,x)).length-1;0===l[s];--s)l.pop();return s<0?new n(0*e.s):(e.e=j(l,c),e.d=l,m=!1,o&&(e=R(e,r,4*a)),u&&(e=e.times(Math.abs(u)<54?b(2,u):i.pow(2,u))),m=!0,e)})(s,e)}if(o.prototype=O,o.ROUND_UP=0,o.ROUND_DOWN=1,o.ROUND_CEIL=2,o.ROUND_FLOOR=3,o.ROUND_HALF_UP=4,o.ROUND_HALF_DOWN=5,o.ROUND_HALF_EVEN=6,o.ROUND_HALF_CEIL=7,o.ROUND_HALF_FLOOR=8,o.EUCLID=9,o.config=o.set=me,o.clone=e,o.isDecimal=Se,o.abs=re,o.acos=ie,o.acosh=se,o.add=oe,o.asin=ae,o.asinh=ue,o.atan=le,o.atanh=ce,o.atan2=fe,o.cbrt=pe,o.ceil=he,o.cos=ge,o.cosh=ve,o.div=de,o.exp=we,o.floor=ye,o.hypot=be,o.ln=Me,o.log=Ee,o.log10=xe,o.log2=Ne,o.max=qe,o.min=_e,o.mod=Ae,o.mul=Oe,o.pow=Ce,o.random=Ie,o.round=Le,o.sign=Ue,o.sin=Re,o.sinh=Te,o.sqrt=Pe,o.sub=ke,o.tan=De,o.tanh=Fe,o.trunc=je,(t=void 0===t?{}:t)&&!0!==t.defaults)for(s=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<s.length;)t.hasOwnProperty(r=s[n++])||(t[r]=this[r]);return o.config(t),o}(h)).default=i.Decimal=i,f=new i(f),p=new i(p),s=function(){return i}.call(t,r,t,e),void 0!==s&&(e.exports=s),i}()});e.exports=o,o=r("15f6"),r("4016"),function(){"use strict";var e=o.getCore(),t=e.PARSER,n=e.groups.N,r=e.groups.P,i=e.groups.S,s=e.groups.EX,a=e.groups.FN,u=e.groups.PL,l=e.groups.CP,c=e.groups.CB,f=e.Utils.keys,p=e.Utils.even,h=e.Utils.variables,m=e.Utils.format,g=e.Utils.round,v=e.Frac,d=e.Utils.isInt,w=e.Symbol,y=e.Settings.CONST_HASH,b=e.Utils.importFunctions();function S(n,r,i){if(e.Utils.isSymbol(n))this.parse(n),this.variable=this.variable||r;else if(isNaN(n))"string"==typeof n&&this.parse(t.parse(n));else{if(i=i||0,void 0===r)throw new e.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[i]=n,this.fill(n)}}function M(){this.factors={},this.length=0}function E(t,n,r){this.terms=n||[],this.coeff=t,this.map=r,this.sum=new e.Frac(0),this.image=void 0}e.Utils.evaluate,S.fromArray=function(t,n){if(void 0===n)throw new e.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var r=new S;return r.coeffs=t,r.variable=n,r},S.fit=function(e,t,n,r,i,s){var o=new Array(i+1),a=n-t;o[0]=t,a-=(o[i]=e)*Math.pow(r,i);for(var u=i-1;0<u;u--){var l=Math.pow(r,u),c=a/l;c=Math.sign(c)*Math.floor(Math.abs(c));a-=c*l,o[u]=c}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new v(o[u]);return S.fromArray(o,s)},S.prototype={parse:function(r,i){if(this.variable=h(r)[0],!r.isPoly())throw e.exceptions.NerdamerTypeError("Polynomial Expected! Received "+e.Utils.text(r));if(i=i||[],(r=r.power.absEquals(1)?r:t.expand(r)).group===e.groups.N)i[0]=r.multiplier;else if(r.group===e.groups.S)i[r.power.toDecimal()]=r.multiplier;else for(var s in r.symbols){var o=r.symbols[s];s=o.power;if(e.Utils.isSymbol(s))throw new e.exceptions.NerdamerTypeError("power cannot be a Symbol");s=o.group===n?0:s.toDecimal(),o.symbols?this.parse(o,i):i[s]=o.multiplier}this.coeffs=i,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,n=0;n<t;n++)void 0===this.coeffs[n]&&(this.coeffs[n]=new v(e));return this},trim:function(){for(var e=this.coeffs.length;e--;){var t=this.coeffs[e],n=t.equals(0);if(!t||!n)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,n=0;n<t;n++){var r=this.coeffs[n];if(r<0){for(var i,s=n;s<t;s++)if(0<this.coeffs[s]){i=this.coeffs[s];break}if(i){for(;n<s;s--)this.coeffs[s]=this.coeffs[s].subtract(new v(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new v(e));r=this.coeffs[n]}}var o,a=r.mod(e),u=r.subtract(a).divide(e);u.equals(0)||(r=(r=this.coeffs[o=n+1]||new v(0)).add(u),this.coeffs[o]=new v(r),this.coeffs[n]=new v(a))}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new v(0),i=e.coeffs[n]||new v(0);this.coeffs[n]=r.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new v(0),i=e.coeffs[n]||new v(0);this.coeffs[n]=r.subtract(i)}return this},divide:function(t){for(var n=this.variable,r=e.Utils.arrayClone(this.coeffs),i=e.Utils.arrayClone(t.coeffs),s=r.length,o=i.length-1,a=[],u=0;u<s;u++){var l=s-(u+1),c=l-o,f=r[l].divide(i[o]);if(c<0)break;a[c]=f;for(var p=0;p<=o;p++)r[p+c]=r[p+c].subtract(i[p].multiply(f))}return t=S.fromArray(r,n||"x").trim(),[S.fromArray(a,n||"x"),t]},multiply:function(e){for(var t=this.coeffs.length,n=e.coeffs.length,r=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<n;o++){var a=i+o,u=e.coeffs[o],l=r[a]||new v(0);r[a]=l.add(s.multiply(u))}return this.coeffs=r,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++)if(!this.coeffs[t].equals(0))return!1;return!0},sub:function(e){for(var t=new v(0),n=this.coeffs.length,r=0;r<n;r++){var i=this.coeffs[r];i.equals(0)||(t=t.add(i.multiply(new v(Math.pow(e,r)))))}return t},clone:function(){var e=new S;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,n=0;n<t;n++)this.coeffs[n]=this.coeffs[n].divide(e);return this},gcd:function(t){if(this.coeffs.length-1<t.coeffs.length-1)return t.gcd(this);for(var n=this;!t.isZero();){var r=t.clone();t=(n=n.clone()).divide(r)[1],n=r}var i=e.Math2.QGCD.apply(null,n.coeffs);if(!i.equals(1))for(var s=n.coeffs.length,o=0;o<s;o++)n.coeffs[o]=n.coeffs[o].divide(i);return n},diff:function(){for(var e=[],t=this.coeffs.length,n=1;n<t;n++)e.push(this.coeffs[n].multiply(new v(n)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,n=0;n<t;n++){var r=new v(n+1);e[r]=this.coeffs[n].divide(r)}return this.coeffs=e,this},gcf:function(t){for(var n=[],r=0;r<this.coeffs.length;r++){var i=this.coeffs[r];i.equals(0)||-1!==n.indexOf(i)||n.push(i)}var s=[e.Math2.QGCD.apply(void 0,n),function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t}(this.coeffs)].toDecimal();return t&&((t=[])[s[1]-1]=s[0],s=S.fromArray(t,this.variable).fill()),s},quad:function(e){var t=[];if(3<this.coeffs.length)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error("Polynomial array has no terms");var n=this.coeffs[2]||0,r=this.coeffs[1]||0,i=r*r-4*n*this.coeffs[0];return i<0&&!e||(t[0]=(-r+Math.sqrt(i))/(2*n),t[1]=(-r-Math.sqrt(i))/(2*n)),t},squareFree:function(){for(var e=this.clone(),t=1,n=e.clone().diff(),r=e.clone().gcd(n),i=e.divide(r)[0],s=S.fromArray([new v(1)],e.variable);!r.equalsNumber(1);){var o=i.gcd(r),a=i.divide(o)[0];if(!a.equalsNumber(1)&&1<t){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,r=r.divide(i=o)[0]}return[s,i,t]},toSymbol:function(){var n=this.coeffs.length,r=this.variable;if(0===n)return new e.Symbol(0);for(var i=n-1,s="",o=0;o<n;o++){var a=o===i?"":"+",u=this.coeffs[o];u.equals(0)||(s+=u+"*"+r+"^"+o+a)}return t.parse(s)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},w.prototype.coeffs=function(e,n){n&&!this.isPoly(!0)&&t.error("Polynomial expected when requesting coefficients with order"),e=e||[];var r,i=this.clone().distributeMultiplier();if(i.isComposite())for(var s in i.symbols)s=i.symbols[s],s.isComposite()?s.clone().distributeMultiplier().coeffs(e,n):n?e[s.isConstant()?0:s.power.toDecimal()]=s.multiplier:e.push(s.multiplier);else n?e[i.isConstant(!0)?0:i.power.toDecimal()]=i.multiplier:i.group===c&&i.isImaginary()?(r=new w(i.multiplier),i.each((function(e){(e.isConstant(!0)||e.imaginary)&&(r=t.multiply(r,e))})),e.push(r)):e.push(i.multiplier);if(n)for(var o=0;o<e.length;o++)void 0===e[o]&&(e[o]=new w(0));return e},w.prototype.tBase=function(e){if(void 0===e)throw new Error("Symbol.tBase requires a map object!");for(var t=[],n=this.collectSymbols(null,null,null,!0),r=n.length,i=0;i<r;i++){var s=n[i],o=s.group,a=new E(s.multiplier,[],e);if(o===c)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},w.prototype.altVar=function(e){var t=this.multiplier.toString(),n=this.power.toString();return("1"===t?"":t+"*")+e+("1"===n?"":"^"+n)},w.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var n=this.symbols[t];t=e.symbols[t];if(!t)return!1;if(n.value!==t.value)return!1}return!0},w.prototype.groupTerms=function(n){var r,i,s;n=String(n);var o=[];return this.each((function(a){if(a.group===u){s=a.groupTerms(n);for(var l=0;l<s.length;l++){var c=s[l];c&&(o[l]=c)}}else r=e.Utils.decompose_fn(a,n,!0),i=r.x.value===n?Number(r.x.power):0,o[i]=t.add(o[i]||new w(0),r.a)})),o},w.prototype.collectFactors=function(){var e=[];return this.group===c?this.each((function(t){e.push(t.clone())})):e.push(this.clone()),e},M.prototype.getNumberSymbolics=function(){var e=0;return this.each((function(t){t.isConstant(!0)||e++})),e},M.prototype.add=function(n){if(n.equals(0))return this;if(n.equals(-1)&&0<this.length){var r=e.Utils.firstObject(this.factors,null,!0);return this.add(t.symfunction(e.Settings.PARENTHESIS,[r.obj]).negate()),delete this.factors[r.key],this.length--,this}if(n.group===c){var i=this;n.multiplier.equals(1)||i.add(new w(n.multiplier)),n.each((function(e){i.add(e)}))}else{if(this.preAdd&&(n=this.preAdd(n)),r=(n=this.pFactor?t.pow(n,new w(this.pFactor)):n).isConstant(),r&&n.equals(1))return this;r=r?n.value:n.text(),r in this.factors?(this.factors[r]=t.multiply(this.factors[r],n),this.factors[r].equals(1)&&(delete this.factors[r],this.length--)):(this.factors[r]=n,this.length++)}return this},M.prototype.toSymbol=function(){for(var n=new w(1),r=Object.values(this.factors).sort((function(e,t){return e.group>t.group})),i=0,s=r.length;i<s;i++){var o=r[i];o=o.power.equals(1)&&""!==o.fname?t.symfunction(e.PARENTHESIS,[o]):o,n=t.multiply(n,o)}return""===n.fname?w.unwrapPARENS(n):n},M.prototype.merge=function(e){for(var n in e)n in this.factors?this.factors[n]=t.multiply(this.factors[n],e[n]):this.factors[n]=e[n];return this},M.prototype.each=function(t){for(var n in this.factors){var r=this.factors[n];r.fname===e.PARENTHESIS&&r.isLinear()&&(r=r.args[0]),t.call(this,r,n)}return this},M.prototype.count=function(){return f(this.factors).length},M.prototype.clean=function(){try{var t=e.Settings.CONST_HASH;this.factors[t].lessThan(0)&&(this.factors[t].equals(-1)?delete this.factors[t]:this.factors[t].negate(),this.each((function(e){e.negate()})))}catch(t){}},M.prototype.toString=function(){return this.toSymbol().toString()},E.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},E.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var n=this.terms[t];this.getRevMap(),n.equals(0)||e.push(this.rev_map[t])}return e.join(" ")},E.prototype.len=function(){return void 0===this.count&&this.updateCount(),this.count},E.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var n=new w(this.coeff),r=0;r<this.terms.length;r++){var i=e[r],s=this.terms[r];s.equals(0)||i===y||((i=new w(i)).power=s,n=t.multiply(n,i))}return n},E.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e,t={};for(e in this.map)t[this.map[e]]=e;return this.rev_map=t},E.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},E.prototype.getImg=function(){return this.image||this.generateImage(),this.image},E.prototype.fill=function(){for(var t=this.map.length,n=0;n<t;n++)void 0===this.terms[n]?this.terms[n]=new e.Frac(0):this.sum=this.sum.add(this.terms[n]);return this},E.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,r=new E(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].subtract(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},E.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,r=new E(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].add(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},E.prototype.isZero=function(){return this.coeff.equals(0)},E.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},e.Utils.toMapObj=function(e){for(var t=0,n={},r=0;r<e.length;r++){var i=e[r];void 0===n[i]&&(n[i]=t,t++)}return n.length=t,n},e.Utils.filledArray=function(e,t,n){for(var r=[];t--;)r[t]=n?new n(e):e;return r},e.Utils.arrSum=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t+=e[r];return t},e.Utils.haveIntersection=function(e,t){var n;return t.length>e.length&&(n=t,t=e,e=n),e.some((function(e){return-1<t.indexOf(e)}))},e.Utils.subFunctions=function(t,n){n=n||{};var r=[];return t.each((function(t){var i,s;t.group===a||t.previousGroup===a?(i=e.Utils.text(t,"hash"),(s=n[i])||(s=t.fname+f(n).length,n[i]=s),r.push(t.altVar(s))):t.group===c||t.group===u||t.group===l?r.push(e.Utils.subFunctions(t,n)):r.push(t.text())})),t.group===l||t.group===u?t.altVar(e.Utils.inBrackets(r.join("+"))):t.group===c?t.altVar(e.Utils.inBrackets(r.join("*"))):t.text()},e.Utils.getFunctionsSubs=function(e){var n,r={};for(n in e)r[e[n]]=t.parse(n);return r};var N=e.Algebra={version:"1.4.6",proots:function(n,r){function s(t,n,i){for(var s=function(t,n){var i=t.slice(0);if(t.unshift(n),100<n)throw new e.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to 100. ");var s=[];t={};for(t.Degree=n,d=0;d<n;d++)s.push(0);var o=s.slice(0);function a(e,t,n,r,i,s){i[0]=s.b=r[0],i[1]=s.a=-t*s.b+r[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+n*s.b)+r[o],s.b=s.a,s.a=i[o]}function u(e,t,n,r,i,s,o,u,l){var c=new Object,f=3;return c.b=c.a=0,a(t,o,u,s,l,c),i.c=c.a,i.d=c.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])||(i.h=u*r,Math.abs(i.d)>=Math.abs(i.c)?(f=2,i.e=n/i.d,i.f=i.c/i.d,i.g=o*r,i.a3=i.e*(i.g+n)+i.h*(r/i.d),i.a1=-n+i.f*r,i.a7=i.h+(i.f+o)*n):(f=1,i.e=n/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*n+(i.g+i.h/i.c)*r,i.a1=-n*(i.d/i.c)+r,i.a7=i.g*i.d+i.h*i.f+n)),f}function l(e,t,n,r,i,s,o,a,u){if(3!=n)if(r=1==n?i:r,Math.abs(s.a1)>10*e*Math.abs(r))for(s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-u[0]*s.a7+u[1],l=2;l<t;l++)o[l]=-u[l-1]*s.a7+a[l-2]*s.a3+u[l];else for(o[0]=0,o[1]=-u[0]*s.a7,l=2;l<t;l++)o[l]=-u[l-1]*s.a7+a[l-2]*s.a3;else{o[1]=o[0]=0;for(var l=2;l<t;l++)o[l]=a[l-2]}}function c(e,t,n,r,i,s,o,a,u,l,c,f,p,h,m,g,v){var d;t.b=t.a=0,3!=e&&(a=2!=e?(d=n+p*o+f*l,a+(p+h*l)*u):(d=(n+c)*l+f,(l+p)*a+h*u),u=-m[g-1]/v[g],0!=(d=-(i=h*(m=-(m[g-2]+u*v[g-1])/v[g])*r-((v=u*s)+(g=u*u*i)))+a+u*d)&&(t.a=-(p*(g+v)+h*(u*r+m*s))/d+p,t.b=h*(1+i/d)))}function f(e,t,n,r){var i,s,o;(r.sr=r.si=r.lr=r.li=0)!=e?0!=n?(i=t/2,s=Math.abs(i)<Math.abs(n)?(o=-(o=0<=n?e:-e)+i*(i/Math.abs(n)),Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(n))):(o=-e/i*(n/i)+1,Math.sqrt(Math.abs(o))*Math.abs(i)),0<=o?(r.lr=(-i+(s=0<=i?-s:s))/e,r.sr=0!=r.lr?n/r.lr/e:r.sr):(r.lr=r.sr=-i/e,r.si=Math.abs(s/e),r.li=-r.si)):r.lr=-t/e:r.sr=0!=t?-n/t:r.sr}function p(e,t,n,r,i,s,o,p,h,m,g,v){var d,w,y,b,S,M,E,N,x,q,_,A,O,C,I,L,U,R,T,P,k,D,F,j,B,G=new Object,V=new Object,H=new Array(t),Z=new Array(t),z=1;for(v.NZ=0,b=y=.25,S=r,N=i,G.b=G.a=0,a(h,g,i,p,m,G),d=G.a,w=G.b,V.h=V.g=V.f=V.e=V.d=V.c=V.a7=V.a3=V.a1=0,F=u(e,o,d,w,V,s,g,i,H),P=0;P<n;P++){if(R=1,l(e,o,F,d,w,V,s,H,m),c(F=u(e,o,d,w,V,s,g,i,H),G,d,V.a1,V.a3,V.a7,w,V.c,V.d,V.f,V.g,V.h,g,i,s,o,p),I=G.a,U=L=G.b,q=0!=s[o-1]?-p[o]/s[o-1]:0,_=O=1,0!=P&&3!=F&&(j=(C=(O=0!=U?Math.abs((U-N)/U):O)<E?O*E:1)<b?1:0,(k=(A=(_=0!=q?Math.abs((q-S)/q):_)<M?_*M:1)<y?1:0)||j)){for(T=0;T<o;T++)Z[T]=s[T];for(x=q,D=B=0;;){if(!R||0!=(R=0)||!k||j&&!(A<C)){if(function(e,t,n,r,i,s,o,p,h,m,g,v){var d,w,y,b,S,M,E,N,x,q=new Object,_=0,A=0;n.NZ=0,b=r,M=i;do{if(q.li=q.lr=q.si=q.sr=0,f(1,b,M,q),n.szr=q.sr,n.szi=q.si,n.lzr=q.lr,n.lzi=q.li,Math.abs(Math.abs(n.szr)-Math.abs(n.lzr))>.01*Math.abs(n.lzr))break;for(a(o,b,M,h,s,p),E=Math.abs(-n.szr*p.b+p.a)+Math.abs(n.szi*p.b),N=Math.sqrt(Math.abs(M)),d=2*Math.abs(s[0]),S=-n.szr*p.b,x=1;x<t;x++)d=d*N+Math.abs(s[x]);if(E<=20*(d=(9*(d=d*N+Math.abs(S+p.a))+2*Math.abs(S)-7*(Math.abs(p.a+S)+N*Math.abs(p.b)))*e)){n.NZ=2;break}if(20<++_)break;if(2<=_&&y<=.01&&w<=E&&!A){for(a(o,b-=b*(y=y<e?Math.sqrt(e):Math.sqrt(y)),M+=M*y,h,s,p),x=0;x<5;x++)l(e,t,u(e,t,p.a,p.b,g,v,b,M,m),p.a,p.b,g,v,m,s);A=1,_=0}}while(w=E,l(e,t,u(e,t,p.a,p.b,g,v,b,M,m),p.a,p.b,g,v,m,s),c(u(e,t,p.a,p.b,g,v,b,M,m),p,p.a,g.a1,g.a3,g.a7,p.b,g.c,g.d,g.f,g.g,g.h,b,M,v,t,h),S=p.a,0!=(E=p.b)&&(y=Math.abs((-M+E)/E),b=S,M=E),0!=E)}(e,o,v,I,L,m,h,G,p,H,V,s),d=G.a,w=G.b,0<v.NZ)return;if(z=B=1,b*=.25,D||!k)z=0;else for(T=0;T<o;T++)s[T]=Z[T]}if(0!=z){if(G.a=x,z=function(e,t,n,r,i,s,o,a,u){var l,c,f,p,h,m,g,v,d,w,y,b=r-1;for(t.NZ=y=d=0,g=n.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(f=Math.abs(m),p=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*p+Math.abs(o[w]);if(f<=20*e*(2*l-f)){t.NZ=1,t.szr=g,t.szi=0;break}if(10<++y)break;if(2<=y&&Math.abs(v)<=.001*Math.abs(-v+g)&&h<f){d=1,t.a=g;break}for(h=f,u[0]=c=a[0],w=1;w<r;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(v=-m/c,a[0]=o[0],w=1;w<r;w++)a[w]=v*u[w-1]+o[w];else for(a[0]=0,w=1;w<r;w++)a[w]=u[w-1];for(c=a[0],w=1;w<r;w++)c=c*g+a[w];g+=v=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0}return d}(e,v,G,o,p,h,m,s,H),x=G.a,0<v.NZ)return;if(D=1,y*=.25,0!=z){I=-(x+x),L=x*x;continue}}for(T=0;T<o;T++)s[T]=Z[T];if(!j||B)break}a(h,g,i,p,m,G),F=u(e,o,d=G.a,w=G.b,V,s,g,i,H)}N=U,S=q,E=O,M=_}}!function(e,t,n,r){for(var i,s,o,a,u,l,c,h,m,g,v,d,w,y,b=e.Degree,S=.017453292519943295,M=Math.LN2,E=e.Degree+1,N=new Array(E),x=new Array(E),q=new Array(E),_=new Array(E),A=new Object,O=new Object,C=1;i=C,1<(l=1+(C/=2)););var I=Number.MIN_VALUE/i,L=Math.cos(94*S),U=Math.sin(94*S),R=Math.sqrt(.5),T=-R;for(O.NZ=m=0,O.szr=O.szi=O.lzr=O.lzi=0;0==t[b];)n[m]=r[m]=0,b--,m++;for(w=b+1;1<=b;){if(b<=2){b<2?(n[e.Degree-1]=-t[1]/t[0],r[e.Degree-1]=0):(f(t[A.li=A.lr=A.si=A.sr=0],t[1],t[2],A),n[e.Degree-2]=A.sr,r[e.Degree-2]=A.si,n[e.Degree-1]=A.lr,r[e.Degree-1]=A.li);break}for(a=0,u=Number.MAX_VALUE,P=0;P<w;P++)a<(k=Math.abs(t[P]))&&(a=k),0!=k&&k<u&&(u=k);if(((v=I/u)<=1&&10<=a||1<v&&Number.MAX_VALUE/v>=a)&&(v=0==v?Number.MIN_VALUE:v,v=Math.floor(Math.log(v)/M+.5),1!=(o=Math.pow(2,v))))for(P=0;P<w;P++)t[P]*=o;for(var P=0;P<w;P++)x[P]=Math.abs(t[P]);x[b]=-x[b],d=b-1,k=Math.exp((Math.log(-x[b])-Math.log(x[0]))/b),D=k=0!=x[d]&&(D=-x[b]/x[d])<k?D:k;do{var k,D=.1*(k=D),F=x[0];for(P=1;P<w;P++)F=F*D+x[P]}while(0<F);do{var j=F=x[0];for(P=1;P<b;P++)j=k*j+(F=k*F+x[P])}while(k-=s=(F=k*F+x[b])/j,.005<Math.abs(s/k));var B=k;for(P=1;P<b;P++)N[P]=(b-P)*t[P]/b;for(N[0]=t[0],C=t[b],l=t[d],y=0==N[d]?1:0,g=0;g<5;g++)if(c=N[d],y){for(P=0;P<d;P++)N[m=d-P]=N[m-1];y=(N[0]=0)==N[d]?1:0}else{var G=-C/c;for(P=0;P<d;P++)N[m=d-P]=G*N[m-1]+t[m];N[0]=t[0],y=Math.abs(N[d])<=Math.abs(l)*i*10?1:0}for(P=0;P<b;P++)_[P]=N[P];for(g=1;g<=20;g++){if(h=-U*T+L*R,T=U*R+L*T,p(i,E,20*g,h=B*(R=h),B,N,b,t,w,q,-2*h,O),0!=O.NZ){for(n[m=e.Degree-b]=O.szr,r[m]=O.szi,b=(w-=O.NZ)-1,P=0;P<w;P++)t[P]=q[P];1!=O.NZ&&(n[m+1]=O.lzr,r[m+1]=O.lzi);break}for(P=0;P<b;P++)N[P]=_[P]}if(20<g){e.Degree-=b;break}}}(t,i,o,s);var h=s.length;for(d=0;d<h;d++){var m=g(s[d],r+8),v=g(o[d],r+8);v=2<r-String(v).length?v:o[d];var w=m<0?"-":"";0===v&&(v=""),0===m&&(m=""),m=1===Math.abs(m)?w+"i":m?m+"*i":"",m=v&&m?v+"+"+m:v+m,o[d]=m.replace(/\+\-/g,"-")}return o}(t,i).concat(a),o=0;o<0;o++)s.unshift(0);return s}r=r||7;var o,a=[];if(n instanceof w&&n.isPoly()){if(n.distributeMultiplier(),n.group===u&&(o=e.Utils.arrayMin(f(n.symbols)),o=n.symbols[o].clone().toUnitMultiplier(),n=t.expand(t.divide(n,o)),a.push(0)),n.group===e.groups.S)return[0];n.group===e.groups.PL&&(h=f(n.symbols),l=e.Utils.arrayMin(h),n=e.PARSER.divide(n,e.PARSER.parse(n.value+"^"+l)));for(var l=f(n.symbols).sort().pop(),c=n.group===e.groups.PL?n.symbols:n.symbols[l],p=c.group,h=p===i?[c.power.toDecimal()]:f(c.symbols),m=[],v=e.Utils.arrayMax(h),d=1;d<=v;d++){var b=0;-1!==h.indexOf(d+"")&&(b=(p===i?c:c.symbols[d]).multiplier),m.unshift(b)}return m.push(n.symbols[y].multiplier),c.group===i&&(m[0]=c.multiplier),s(m,0,v)}if(e.Utils.isArray(n)){var S=n,M=(m=[],h=[],0);for(d=0;d<S.length;d++){for(var E=S[d][0],N=S[d][1],x=N-M-1,q=0;q<x;q++)m.unshift(0);m.unshift(E),0!==N&&h.push(N),M=N}return s(m,0,v=Math.max.apply(void 0,h))}throw new e.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!")},roots:function(n){return n.isConstant(!0,!0)?e.Utils.nroots(n):(n=N.proots(n).map((function(e){return t.parse(e)})),e.Vector.fromArray(n))},froot:function(t,n,r){return function(n){for(var i=r||e.Utils.build(e.Calculus.diff(t.clone())),s=t instanceof Function?t:e.Utils.build(t),o=!1,a=0;!o;){var u=n-s(n)/i(n),l=Math.abs(u)-Math.abs(n);n=u,Math.abs(l)<1e-12?o=!0:1e4<a&&(o=!(n=null)),a++}return n}(Number(n))},quad:function(e,n,r){function i(e,n,r,i){return t.parse("-("+n+"+"+i+"*sqrt(("+n+")^2-4*("+e+")*("+r+")))/(2*"+e+")")}return[i(e,n,r,1),i(e,n,r,-1)]},sumProd:function(e,t){return N.quad(-t,e,-1).map((function(e){return e.invert()}))},coeffs:function(e,n,r){n=String(n),e=t.expand(e),r=r||[new w(0)],e.group===s&&e.contains(n,!0)&&t.error("Unable to get coefficients using expression "+e.toString());var i,o=h(e);if(1!==o.length||o[0]!==n||e.isImaginary())n||t.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),-1===o.indexOf(n)?r[0]=t.add(e,r[0]):(r=r||[new w(0)],e.group===c?((i=e.symbols[n])||t.error("Expression is not a polynomial!"),o=Number(i.power),((m=t.divide(e.clone(),i.clone())).contains(n,!0)||o<0||!d(o))&&t.error("Expression is not a polynomial!"),(p=r[o])&&(m=t.add(p,m)),r[o]=m):e.group===l&&e.each((function(e){N.coeffs(e.clone(),n,r)}),!0));else for(var a=new S(e).coeffs.map((function(e){return new w(e)})),u=0,f=a.length;u<f;u++){var p,m=a[u];(p=r[u])&&(m=t.add(p,m)),r[u]=m}for(u=0,f=r.length;u<f;u++)void 0===r[u]&&(r[u]=new w(0));return r},polyPowers:function(t,r,s){if(s=s||[],(p=t.group)===u&&r===t.value)s=s.concat(f(t.symbols));else if(p===l)for(var o in t.symbols){var a=t.symbols[o],p=a.group;o=a.value;p===i&&r===o?s.push(a.power):p===u||p===l?s=N.polyPowers(a,r,s):p===c&&a.contains(r)?(a=a.symbols[r])&&s.push(a.power):p!==n&&r===o||s.push(0)}else p===c&&t.contains(r)&&s.push(e.Utils.decompose_fn(t,r,!0).x.power);return e.Utils.arrayUnique(s).sort()},Factor:{split:function(e){var n=new w(1),r=new w(1);return N.Factor.factor(e,new M).each((function(e){var i=t.parse(e);e.isConstant(!0)?n=t.multiply(n,i):r=t.multiply(r,i)})),[n,r]},mix:function(e,t){for(var n=f(e),r=n.length,i=[],s=0;s<r;s++){for(var o=n[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(n,r){try{if(n.group===l){for(var i=t.expand(n.clone(),!0).collectSymbols(null,null,(function(e,t){return(t.length||1)-(e.length||1)})),s={},o=[],a=0;a<i.length;a++){var u=i[a];o.push(u.multiplier.clone()),u.each((function(e){var t=Number(e.power);if(isNaN(t))throw new Error("exiting");e.value in s?(t<s[e.value][0]&&(s[e.value][0]=t),s[e.value][1].push(e)):s[e.value]=[t,[e]]}))}var c,f=new w(1);for(c in s)s[c][1].length===i.length&&(f=t.multiply(f,t.pow(new w(c),new w(s[c][0]))));var p=e.Math2.QGCD.apply(null,o);if(!p.equals(1))for(r.add(new w(p)),a=0;a<i.length;a++)i[a].multiplier=i[a].multiplier.divide(p);if(!f.equals(1))for(r.add(f),n=new w(0),a=0;a<i.length;a++)n=t.add(n,t.divide(i[a],f.clone()))}}catch(n){}return n},zeroes:function(n,r){function i(){throw new e.exceptions.ValueLimitExceededError("Exiting")}try{for(var s,o,a,u=(n=t.expand(n.clone())).toString(),c=h(n),f=new w(0),p=[],m=[],g=0,y=c.length;g<c.length;g++){for(var b={},S=0;S<y;S++)g!==S&&(b[c[S]]=0);var M,E=(M=t.parse(u,b)).power;d(E)||i(),p.push(M),m.push(M.power)}for(e.Utils.allSame(m)?(o=n.length,2===(a=p.length)&&(s=new v(m[0]/(o-1))),3===a&&(s=new v(m[0]/Math.round((Math.sqrt(8*o-1)-3)/2)))):s=e.Math2.QGCD.apply(null,m),d(s)||i(),g=0;g<p.length;g++){var x=p[g],q=x.power.clone().divide(s);x.multiplier=new v(Math.pow(x.multiplier,1/q)),x.power=s.clone(),f=t.add(f,x)}if(f.group!==l)return n;for(;;){var _=N.div(n.clone(),f.clone());if(!_[1].equals(0))break;if(n=_[0],r.add(f.clone()),n.equals(1))break}}catch(u){}return n},factor:function(n,r){if(n.isConstant())return e.Math2.factor(n);var i,s,o=t.parse(n);r=N.Factor._factor(o,r);return r.equals(n)||r.group===c&&(i=new w(1),n=t.parse(r.power),s=t.parse(r.multiplier),r.toUnitMultiplier(),r.multiplier.lessThan(0)&&(i.negate(),r.negate()),r.each((function(e){e=t.parse(N.Factor._factor(e)),e.group===c?(s=t.multiply(s,w.create(e.multiplier)),e.each((function(e){e=t.parse(N.Factor._factor(e)),i=t.multiply(i,e),e.group===c&&(s=t.multiply(s,w.create(e.multiplier)))}))):i=t.multiply(i,e)})),r=t.pow(t.multiply(s,i),n)),r},quadFactor:function(n,r){if(n.isPoly()&&N.degree(n.equals(2))){var i=e.Utils.variables(n)[0],s=N.coeffs(n,i),o=N.Factor._factor(s[2].clone());if(o.group===c){var a=o.collectSymbols();if(2<a.length)return n;var u=t.multiply(t.parse(s[0]),t.parse(a[0])),l=t.parse(s[1]).negate();o=t.parse(a[1]),u=N.quad(o,l,u).filter((function(t){if(e.Utils.isInt(t))return t}));1===u.length&&(u=u[0],s=t.divide(s[0],t.parse(u)),e.Utils.isInt(s)&&(r.add(t.parse(m("({0})*({1})+({2})",a[1],i,s))),r.add(t.parse(m("({0})*({1})+({2})",a[0],i,u))),n=new w(1)))}}return n},cubeFactor:function(e,n){var r,i,s,o,a,u;return!e.isComposite()||2===(u=e.collectSymbols()).length&&(r=u[0].sign(),i=u[0].clone().abs(),s=u[1].sign(),o=u[1].clone().abs(),i.isCube()&&o.isCube()&&(r<s&&([r,s]=[s,r],[i,o]=[o,i]),a=t.parse(i.getNth(3)),u=t.parse(o.getNth(3)),a=t.multiply(t.expand(t.pow(i.clone().toUnitMultiplier(),t.parse("1/3"))),a),u=t.multiply(t.expand(t.pow(o.clone().toUnitMultiplier(),t.parse("1/3"))),u),1===r&&-1===s?(n.add(t.parse(m("(({0})-({1}))",a,u))),n.add(t.parse(m("(({0})^2+({0})*({1})+({1})^2)",a,u))),e=w(1)):1===r&&1===s&&(n.add(t.parse(m("(({0})+({1}))",a,u))),n.add(t.parse(m("(({0})^2-({0})*({1})+({1})^2)",a,u))),e=w(1)))),e},_factor:function(n,r){if(n.group===a){var s=n.args[0];if(s.group===i&&s.isSimple())return n}else if(n.group===i&&n.isSimple())return n;var o;n.group===l&&(n.distributeMultiplier(!0),o=new w(0),n.each((function(e){(e.group===l&&e.power.greaterThan(1)||e.group===c)&&(e=t.expand(e)),o=t.add(o,e)})),o.power=n.power,n=o),s=(n=n.group===a&&"sqrt"!==n.fname?e.Utils.evaluate(n):n).clone();try{if(n.group===c){var u=t.parse(n.power),m=N.Simplify.strip(n.getDenom()),g=N.Simplify.strip(n.getNum()),v=m.pop(),y=g.pop();if(y.equals(n))return n;var b=N.Factor.factor(y),S=N.Factor.factor(v),E=N.Simplify.unstrip(g,b),x=N.Simplify.unstrip(m,S);return t.divide(E,x)}if(n.group===i)return n;if(n.isConstant())return n.equals(1)?n.clone():e.Math2.factor(n);if(u=n.power.clone(),!d(u)||u.lessThan(0)&&n.group===a)return n;var q=u.sign();n.toLinear(),r=r||new M;var _={};n=t.parse(e.Utils.subFunctions(n,_)),0<f(_).length&&(r.preAdd=function(n){return t.parse(n,e.Utils.getFunctionsSubs(_))}),n.isLinear()||(r.pFactor=n.power.toString(),n.toLinear());var A=h(n);n.isImaginary()&&A.push(e.Settings.IMAGINARY);var O=1<A.length;if(O){var C=!0,I=!0;if(n.each((function(e){e.group!==i&&(C=!1),e.multiplier.equals(1)||(I=!1)})),C&&I)return t.pow(t.parse(n,e.Utils.getFunctionsSubs(_)),t.parse(u))}var L=new M;n=N.Factor.coeffFactor(n,L),L.each((function(e){p(u)&&e.lessThan(0)&&e.negate(),q<0&&e.invert(),r.add(e)}));var U=new M;if(n=N.Factor.powerFactor(n,U),U.each((function(e){q<0&&e.invert(),r.add(e)})),O)n=N.Factor.cubeFactor(n,r),n=N.Factor.mfactor(n,r),r.each((function(e){q<0&&e.power.negate()}));else{var R=A[0];n=N.Factor.squareFree(n,r,R);var T=new M;n=N.Factor.trialAndError(n,T,R);var P,k=T.toSymbol();if(k.equals(s))return k;for(P in T.factors){var D=T.factors[P];r.add(t.pow(D,t.parse(u)))}n.equals(s)&&(n=N.Factor.quadFactor(n,r))}return n=t.parse(n,e.Utils.getFunctionsSubs(_)),r.add(t.pow(n,t.parse(u))),r.toSymbol()}catch(n){return s}},reduce:function(e,n){if(e.group===l&&2===e.length){var r=e.collectSymbols().sort((function(e,t){return t.multiplier-e.multiplier}));if(r[0].power.equals(r[1].power)){var i=t.parse(r[0].power),s=r[0].clone().toLinear(),o=r[1].clone().toLinear();n.add(t.add(s.clone(),o.clone())),o.negate();for(var a=Number(i),u=new w(0),c=1;c<=a;c++){var f=t.pow(s.clone(),t.subtract(i.clone(),new w(c))),p=t.pow(o.clone(),t.subtract(new w(c),new w(1)));u=t.add(u,t.multiply(f,p))}return u}}return e},squareFree:function(e,t,n){if(e.isConstant()||e.group===i)return e;var r=new S(e,n).squareFree();n=r[2];return 1===n?e:(e=r[1].toSymbol(),e.power=e.power.multiply(new v(n)),t.add(N.Factor.factor(e)),N.Factor.squareFree(r[0].toSymbol(),t))},powerFactor:function(n,r){if(n.group!==u||n.previousGroup===s)return n;var i=f(n.symbols);if(!e.Utils.allNumeric(i))return n;i=e.Utils.arrayMin(i);var o=new w(0),a=t.parse(n.value+"^"+i);return n.each((function(e){e=t.divide(e,a.clone()),o=t.add(o,e)})),r.add(a),o},coeffFactor:function(t,n){var r,i,s,o;return t.isComposite()&&((r=e.Math2.QGCD.apply(null,t.coeffs())).equals(1)?((i=function(e){var t;return e.group===c?(t=0,e.each((function(e){t+=e.power}))):t=Number(e.power),t})(o=(s=t.collectSymbols(null,null,null,!0).sort((function(e,t){return e.isConstant(!0)?1:t.power-e.power})))[0])>i(s[1])||s[1].isConstant(!0))&&o.multiplier.lessThan(0)&&(n.add(new w(-1)),t.each((function(e){e.negate()}),!0)):(t.each((function(e){e.isComposite()?e.each((function(e){e.multiplier=e.multiplier.divide(r)})):e.multiplier=e.multiplier.divide(r)})),t.updateHash()),n&&n.add(new w(r))),t},trialAndError:function(t,n,r){var s=t.clone();try{var o=[];if(t.isConstant()||t.group===i)return t;for(var a=new S(t,r),u=a.coeffs[0],l=e.Math2.ifactor(u),c=N.proots(t),f=0;f<c.length;f++){var p=c[f],h=1;if(!isNaN(p)){for(var m in l){var g=e.Utils.round(Math.log(m)/Math.log(Math.abs(p)),8);if(d(g)){p=m,h=g;break}}var w=new v(p),y=[new v(w.num).negate()];y[h]=new v(w.den);var b=S.fromArray(y,a.variable).fill(),M=a.divide(b);M[1].equalsNumber(0)&&(a=M[0],o.push(b.toSymbol()))}}return a.equalsNumber(1)||(a=N.Factor.search(a,n)),o.forEach((function(e){n.add(e)})),a.toSymbol()}catch(t){return s}},search:function(t,n,r){function i(e,i,o,a){return(o=S.fit(e,i,o,r,a,s))&&1<o.coeffs.length&&(a=t.divide(o),a[1].equalsNumber(0))?(n.add(o.toSymbol()),[a[0],o]):null}r=r||10;var s=t.variable,o=t.coeffs[0],a=e.Math2.ifactor(o),u=t.lc(),l=e.Math2.ifactor(u),c=t.sub(r),f=e.Math2.ifactor(c),p=N.Factor.mix(f,c<0),h=Math.ceil(t.coeffs.length/2),m=u.lessThan(0),g=o.lessThan(0);for(a[l[1]=1]=1;h--;)for(var v in l)for(var d in a)for(var w=0;w<p.length;w++){var y=i(v,d,p[w],h);if(y)return t=y[0],t=e.Utils.isPrime(t.sub(r))?t:N.Factor.search(t,n);y||(m&&g?y=i(-v,-d,p[w],h):m?y=i(-v,d,p[w],h):g&&(y=i(v,-d,p[w],h)))}return t},mSqfrFactor:function(t,n){if(t.group!==a)for(var r=h(t).reverse(),i=0;i<r.length;i++)do{if(r[i]!==t.value){var s=e.Calculus.diff(t,r[i]),o=N.Factor.coeffFactor(s);if(o.equals(0))break;var u=!0;if(o.isConstant()&&t.isComposite()&&t.each((function(e){e.multiplier%o!=0&&(u=!1)}),!0),u){var l=N.div(t,o.clone()),c=l[1].equals(0);if(l[0].isConstant()){n.add(l[0]);break}}else c=!1;c&&(n.add(l[0]),t=o)}else n.add(t),t=new w(1)}while(c);return t},sqdiff:function(n,r){if(n.isConstant("all"))return n;try{var s,o,a,u,l,c=function(t){return e.Utils.block("POSITIVE_MULTIPLIERS",(function(){return w.unwrapPARENS(b.sqrt(b.abs(t)))}),!0)},f=e.Utils.separate(n.clone()),h=[];for(s in f)"constants"!==s&&h.push(f[s]);if(h.sort((function(e,t){return t.power-e.power})),2===h.length){if(l=h.pop(),o=h.pop(),p(l.power)&&p(o.power)&&l.sign()===o.sign()&&l.group===i&&o.group===i)throw new Error("Unable to factor");l.isComposite()&&o.power.equals(2)?(o=c(o),(a=N.Factor.factor(t.add(l,f.constants))).power.equals(2)&&(a.toLinear(),r.add(t.subtract(a.clone(),o.clone())),r.add(t.add(a,o)),n=new w(1))):(l=l.powSimp(),o=o.powSimp(),l.group!==i&&""!==l.fname||!l.power.equals(2)||o.group!==i&&""!==o.fname||!o.power.equals(2)||f.constants||(l.multiplier.lessThan(0)&&(u=o,o=l,l=u),l.multiplier.greaterThan(0)&&(l=c(l),o=c(o)),r.add(t.subtract(l.clone(),o.clone())),r.add(t.add(l,o)),n=new w(1)))}}catch(n){}return n},mfactor:function(n,r){if(n.group===a){var i,s;"sqrt"===n.fname?(i=new M,s=N.Factor.common(n.args[0].clone(),i),s=N.Factor.coeffFactor(s,i),n=t.multiply(t.symfunction("sqrt",[s]),t.parse(n.multiplier)),i.each((function(r){n=t.multiply(n,t.parse(e.Utils.format("sqrt({0})",r)))}))):r.add(n)}else{n=N.Factor.mSqfrFactor(n,r);for(var o,u=h(n),l=n.collectSymbols().map((function(e){return w.unwrapSQRT(e)})),c={},f={},p=u.length,m=l.length,g=0;g<p;g++){var v=u[g];c[v]=new w(0);for(var y=0;y<m;y++){var b,S=l[y];S.contains(v)&&(b=(S.value===v?S:S.symbols[v]).power.toDecimal(),(!f[v]||b<f[v])&&(f[v]=b),c[v]=t.add(c[v],S.clone()))}}for(o in c){var E=t.parse(o+"^"+f[o]),x=t.divide(c[o],E),q=t.expand(x);if(q.equals(1))break;if(x=N.div(n.clone(),q),x[0].equals(0))break;if(x[1].equals(0)){var _=!1;if(x[0].each((function(e){d(e.multiplier)||(_=!0)})),_){x[1]=t.expand(t.multiply(x[1],q));break}}if(q=d(q)&&q.lessThan(0),x[1].equals(0)&&!q)return q=N.div(n.clone(),x[0].clone()),(E=q[0]).equals(0)?n:(n=q[1],E.equals(-1)&&!n.equals(0)?n:(q=x[0],n.equals(q)?(x=N.Factor.reduce(q,r),n.equals(x)?x:N.Factor.mfactor(x,r)):(r.add(q),n.equals(0)?E:E.isConstant("all")?(r.add(E),E):N.Factor.mfactor(E,r))))}}return n=N.Factor.sqdiff(n,r),n=N.Factor.zeroes(n,r)}},allLinear:function(e){for(var t=e.length,n=0;n<t;n++)if(!N.isLinear(e[n]))return!1;return!0},isLinear:function(e){var t=!1,r=e.group;if(r===u||r===l)for(var o in t=!0,e.symbols){var f=e.symbols[o];o=f.group;if(o!==a&&o!==s||(t=!1),o===c)t=1===h(f).length;else if(o===u||o===l)t=N.isLinear(f);else if(f.group!==n&&"1"!==f.power.toString()){t=!1;break}}else r===i&&1===e.power&&(t=!0);return t},gcd:function(){var n=1===arguments.length&&arguments[0]instanceof e.Vector?arguments[0].elements:e.Utils.arguments2Array(arguments);if(0===n.length)return new w(1);if(1===n.length)return n[0];for(var r=[],i=!1,s=0;s<n.length;s++)if(n[s].group===a&&"gcd"===n[s].fname)(n=n.concat(arguments[s].args)).splice(s,1);else{var o=h(n[s]);if(e.Utils.haveIntersection(o,r)){i=!0;break}r=r.concat(o)}if(i||0===r.length){if(n.every((function(e){return e.getDenom().equals(1)}))){var u=n[0];for(s=1;s<n.length;s++)u=N.gcd_(n[s],u);return u}return t.divide(N.gcd.apply(null,n.map((function(e){return e.getNum()}))),N.lcm.apply(null,n.map((function(e){return e.getDenom()}))))}return t.symfunction("gcd",n)},gcd_:function(n,i){if(n.group!==a&&n.group!==r||(n=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(n)}))),i.group===a&&(i=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(i)}))),n.isConstant()&&i.isConstant())return new w(e.Math2.QGCD(new v(+n),new v(+i)));var o=t.multiply(n.getDenom()||new w(1),i.getDenom()||new w(1)).invert();if(n=t.multiply(n.clone(),o.clone()),i=t.multiply(i.clone(),o.clone()),n=t.expand(n),i=t.expand(i),n.group===c||i.group===c){var u=t.divide(n.clone(),i.clone());if(!(g=t.multiply(i.clone(),u.getDenom().invert())).equals(1))return g}if(n.group===s||i.group===s){u=new w(e.Math2.GCD(n.multiplier,i.multiplier));var l=N.gcd_(n.value===y?new w(1):t.parse(n.value),i.value===y?new w(1):t.parse(i.value)),f=N.gcd_(t.parse(n.power),t.parse(i.power));return t.multiply(u,t.pow(l,f))}if(n.length<i.length&&(g=n,n=i,i=g),l=h(n),f=h(i),l.length===f.length&&1===l.length&&l[0]===f[0]||1===l.length&&0===f.length||0===l.length&&1===f.length)return n=new S(n),i=new S(i),t.divide(n.gcd(i).toSymbol(),o);var p,m=[];for(n.each((function(e){m.push(e.multiplier)})),i.each((function(e){m.push(e.multiplier)}));!i.equals(0);){var g=i.clone();if(n=n.clone(),p=N.div(n,g),i=p[1],p[0].equals(0))return t.divide(new w(e.Math2.QGCD(n.multiplier,i.multiplier)),o);n=g}var d=e.Math2.QGCD.apply(void 0,m);return d.equals(1)||n.each((function(e){e.multiplier=e.multiplier.divide(d)})),!n.equals(1)||n.isConstant()||i.isConstant()?t.divide(n,o):t.divide(t.symfunction("gcd",arguments),o)},lcm:function(){var n;1===arguments.length?arguments[0]instanceof e.Vector?n=arguments[0].elements:t.error("lcm expects either 1 vector or 2 or more arguments"):n=e.Utils.arguments2Array(arguments);var r=n.reduce((function(e,n){return t.multiply(e,n.clone())}),new w(1)),i=function(e,t){t=Number(t);for(var n,r,i=[],s=Math.pow(2,e.length),o=t;o<s;o++){for(n=[],r=e.length-1;0!=(o&1<<r)&&n.push(e[r]),r--;);n.length===t&&i.push(n)}return i}(arguments,arguments.length-1).map((function(e){return e.reduce((function(e,n){return t.multiply(e,n.clone())}),new w(1))}));i=n.every((function(t){return e.Utils.isVariableSymbol(t)}))?t.symfunction("gcd",e.Utils.arrayUnique(i)):N.gcd.apply(null,i);return t.divide(r,i)},divide:function(n,r){var i=e.Algebra.Factor.factor(n.clone()),s=i.getDenom();return s.isConstant("all")?s=new w(1):n=t.expand(w.unwrapPARENS(t.multiply(i,s.clone()))),n=N.div(n,r),r=t.divide(n[1],r),t.divide(t.add(n[0],r),s)},div:function(n,r){var s,o,a=[new w(0),n.clone()];try{if(r.isConstant("all"))return n.each((function(e){e.multiplier=e.multiplier.divide(r.multiplier)})),[n,new w(0)];if(n=t.expand(n),r=t.expand(r),n.group===i&&r.group===l){var u=n.value,c=e.Utils.decompose_fn(r.clone(),u,!0);if(n.isLinear()&&c.x&&c.x.isLinear()&&r.isLinear()){var f=w.create(n.multiplier);return[t.divide(f.clone(),c.a.clone()),t.divide(t.multiply(f,c.b),c.a).negate()]}}if(n.group===i&&r.group===i){var p=t.divide(n.clone(),r.clone());return p.isConstant()?[p,new w(0)]:[new w(0),n.clone()]}var m,g,d=n.hasFunc(),b=r.hasFunc(),M=!1;(d||b)&&(M=!0,m={},n=t.parse(e.Utils.subFunctions(n,m)),r=t.parse(e.Utils.subFunctions(r,m)),g=e.Utils.getFunctionsSubs(m));var N=e.Utils.arrayUnique(h(n).concat(h(r)));if((n.isImaginary()||r.isImaginary())&&N.push(e.Settings.IMAGINARY),1===N.length)var x=(W=new S(n).divide(new S(r)))[0].toSymbol(),q=W[1].toSymbol();else{N.push(y);var _=function(e){for(var n=new w(0),r=0;r<e.length;r++){var i=e[r].toSymbol();n=t.add(n,i)}return n},A=function(e,t){var n,r=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)&&(n=s,i++),1<i)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)){n=s;break}return[r,n,e]},O=function(e,t){var n=e[t=t||0],r=e.length;if(n){for(var i,s=A(n),o=t+1;o<r;o++){var a=e[o],u=n.sum.equals(a.sum);if(!u&&s)break;if(u){for(var l,c,f,p,h=n.terms.length,m=0;m<h;m++){var g=n.terms[m],v=a.terms[m];void 0!==l&&!g.greaterThan(l)||(l=g,f=m),void 0!==c&&!v.greaterThan(c)||(c=v,p=m)}var d=l.subtract(a.terms[f]);u=c.subtract(n.terms[p]);if(d<u){s=[c,p,a];break}if(u<d){s=[l,f,n];break}}else if(s=A(a))break;s=A(a)}if(!s)return A(e[0],!0);for(o=0;o<R.length;o++){var w,y=R[o].terms;if((w=s[1])===y.length-1)return;if(!(i=y[w]).equals(0))break}return i.equals(0)?O(e,++t):s}},C=e.Utils.toMapObj(N),I=function(e,t){return t.sum.subtract(e.sum)},L=function(e,t){if(!e||!t)return!1;for(var n=0;n<e.terms.length;n++)if(e.terms[n].lessThan(t.terms[n]))return!1;return!0},U=n.tBase(C).sort(I),R=r.tBase(C).sort(I),T=L(U[0],R[0])&&U[0].count>R[0].count?R:U,P=O(T),k=[];if(P){var D=P[1],F=function(e,t){var n=e.len(),r=t.len();t=t.terms[D],e=e.terms[D];return n<r&&t.greaterThan(e)?r-n:t.subtract(e)};D=function(e,t){for(var n=[],r=0;r<e.length;r++)for(var i=e[r],s=0;s<i.terms.length;s++){var o=n[s],a=i.terms[s];0===r?n[s]=a:o&&!o.equals(a)&&(n[s]=void 0)}for(r=0;r<n.length;r++)if((i=n[r])&&!i.equals(0))return r;return t}(U,D);U.sort(F),R.sort(F);var j=R[0],B=U[0],G=new E(new v(1),[],B.map);if(j.sum.greaterThan(B.sum)&&1<B.len())for(var V=0;V<B.terms.length;V++){var H=j.terms[V].subtract(B.terms[V]);if(H.equals(0))G.terms[V]=new v(0);else{var Z=H.add(new v(1));G.terms[V]=H;for(var z=0;z<U.length;z++)U[z].terms[V]=U[z].terms[V].add(Z)}}for(var X=L(U[0],R[0]),$=0;X&&(o=R,!(s=U)[0].sum.equals(o[0].sum)||s.length>=o.length);){if(200<$++)throw new e.exceptions.InfiniteLoopError("Unable to compute!");var W=U[0].divide(R[0]);for(k.push(W),U.shift(),V=1;V<R.length;V++){var Q=R[V].multiply(W).generateImage(),Y=U.length;for(0===Y&&(Q.coeff=Q.coeff.neg(),U.push(Q),U.sort(F)),z=0;z<Y;z++){var K=U[z];if(K.getImg()===Q.getImg()){K.coeff=K.coeff.subtract(Q.coeff),K.coeff.equals(0)&&(e.Utils.remove(U,z),z--);break}z===Y-1&&(Q.coeff=Q.coeff.neg(),U.push(Q),U.sort(F))}}if(!(X=L(U[0],R[0]))&&U.length>=R.length)for(V=1;V<U.length;V++)if(X=L(U[V],R[0])){U.unshift(e.Utils.remove(U,V));break}}}x=_(k),q=_(U),void 0!==G&&(G=G.toSymbol(),x=t.divide(x,G.clone()),q=t.divide(q,G))}return M&&(x=t.parse(x.text(),g),q=t.parse(q.text(),g)),[x,q]}catch(n){return a}},line:function(n,r,i){e.Utils.isArray(n)&&(n=e.Utils.convertToVector(n)),e.Utils.isArray(r)&&(r=e.Utils.convertToVector(r)),i=t.parse(i||"x"),e.Utils.isVector(n)&&e.Utils.isVector(r)||t.error('Line expects a vector! Received "'+n+'" & "'+r+'"');var s=t.subtract(r.e(1).clone(),n.e(1).clone());r=t.subtract(r.e(2).clone(),n.e(2).clone()),s=t.divide(r,s),i=t.multiply(i,s.clone()),s=t.multiply(n.e(1).clone(),s);return t.add(t.subtract(i,s),n.e(2).clone())},PartFrac:{createTemplate:function(e,n,r,s){(e=N.Factor.factor(e)).each((function(t,n){var r;t.group===a&&""===t.fname&&t.args[0].group===i&&(r=t.args[0],this.symbols?(delete this.symbols[n],this.symbols[r.value]=r):e=t.args[0])}));for(var o=n.collectFactors(),u=[],l=[],c=new w(1),f=0;f<o.length;f++){var p=w.unwrapPARENS(o[f]);if(p.power.greaterThan(1))for(var h=Number(p.power),m=p.clone().toLinear(),g=Number(N.degree(m,s)),v=0;v<h;v++){var d=t.pow(m.clone(),new w(v+1));r.push(d.clone());var y=t.divide(e.clone(),d.clone());l.push(g),u.push(y)}else g=Number(N.degree(p,s)),r.push(p),y=t.divide(e.clone(),p.clone()),y=t.expand(w.unwrapPARENS(y)),l.push(g),u.push(y)}return[r=r.map((function(e){return t.multiply(e,c.clone())})),u,l]},partfrac:function(n,r,i){var s=h(n);r=r||t.parse(s[0]);try{var o,a,u,l,c,f,p,m,g,v,d,y,b,S,M=t.expand(n.getNum()),E=t.expand(n.getDenom().toUnitMultiplier());if(M.multiplier=n.multiplier,u=M.groupTerms(r),Number(N.degree(M,r))>=Number(N.degree(E,r))?(m=(p=N.div(M.clone(),t.expand(E.clone())))[0],u=(M=p[1]).groupTerms(r)):m=new w(0),1===Number(N.degree(E,r))){var x=t.divide(M,E);return i?[m,x]:t.add(m,x)}a=N.Factor.factor(E),d=N.PartFrac.createTemplate(E.clone(),a,[],r),y=d[0],g=d[1],l=d[2],f=[u.length],c=[],o=[],v=[],g.map((function(e,n){b=y[n],S=l[n];for(var i=0;i<S;i++){o.push(b.clone());var s=w.create(r,i),a=t.expand(t.multiply(e,s.clone())).groupTerms(r),u=a.length;f.push(u),c.push(a),v.push(s.clone())}}));for(var q=e.Utils.arrayMax(f),_=new e.Matrix(e.Utils.fillHoles(u,q)).transpose(),A=new e.Matrix,O=0;O<c.length;O++)A.elements.push(e.Utils.fillHoles(c[O],q));var C=t.multiply(A.transpose().invert(),_),I=i?[m]:m;return C.each((function(e,n){n=t.multiply(v[n],t.divide(e,o[n])),i?I.push(n):I=t.add(I,n)})),I}catch(s){try{if(n.isComposite()){var L={};n.each((function(e){var n=e.getDenom(),r=e.getNum();e=L[n];L[n]=e?t.add(e,r):r}));var U,R=new w(0);for(U in L)R=t.add(R,t.divide(L[U],t.parse(U)));n=R}}catch(s){}}return n}},degree:function(n,r,o){if(o=o||{nd:[],sd:[],depth:0},!r){var a=h(n);if(1<a.length)throw new Error("You must specify the variable for multivariate polynomials!");if(0===a.length)return new w(0);r=t.parse(a[0])}return a=n.group,n.isComposite()?((n=n.clone()).distributeExponent(),n.each((function(e){o.depth++,N.degree(e,r,o),o.depth--}))):n.group===c?n.each((function(e){o.depth++,N.degree(e,r,o),o.depth++})):a===s&&n.value===r.value?o.sd.push(n.power.clone()):a===i&&n.value===r.value?o.nd.push(t.parse(n.power)):o.nd.push(new w(0)),n=0<o.nd.length?e.Utils.arrayMax(o.nd):void 0,0===o.depth&&0<o.sd.length?(void 0!==n&&o.sd.unshift(n),t.symfunction("max",o.sd)):e.Utils.isSymbol(n)?n:t.parse(n)},sqComplete:function(n,r,i){e.Utils.isSymbol(r)||(r=t.parse(r));var s,o,a,u,l,c=function(t){throw new e.exceptions.ValueLimitExceededError(t=t||"Stopping")};return n.isPoly(!0)||c("Must be a polynomial!"),u=e.Utils.inBrackets,n=n.clone(),(s=e.Algebra.degree(n,r)).equals(2)||c("Cannot complete square for degree "+s),l=(a=e.Algebra.coeffs(n,r))[2],c=a[1].sign(),s=t.divide(a[1],new w(2)),n=t.pow(s.clone(),new w(2)),i?[l,s,o]:(l=b.sqrt(l),n=t.divide(b.sqrt(n),l.clone()),o=t.subtract(a[0],t.pow(n.clone(),new w(2))),{a:n=t.parse(u(l.clone()+"*"+r+(c<0?"-":"+")+n)),c:o,f:t.add(t.pow(n.clone(),new w(2)),o.clone())})},Simplify:{strip:function(e){var n=t.parse(e.multiplier);e.toUnitMultiplier();var r=t.parse(e.power);return e.toLinear(),[n,r,e]},unstrip:function(e,n){var r=e[0];e=e[1];return t.multiply(r,t.pow(n,e))},complexSimp:function(e,n){var r=e.realpart(),i=e.imagpart(),s=n.realpart(),o=n.imagpart();e=t.multiply(r.clone(),s.clone()),n=t.multiply(i.clone(),o.clone()),i=t.multiply(s.clone(),i),r=t.multiply(r,o.clone()),o=t.add(t.pow(s,new w(2)),t.pow(o,new w(2)));return t.divide(t.add(t.add(e,n),t.multiply(t.subtract(i,r),w.imaginary())),o)},trigSimp:function(n){var r,i,s,o,a,u;return n.containsFunction(["cos","sin","tan"])&&(n=n.clone(),i=(n=(r=N.Simplify.strip(n)).pop()).clone(),n.group===l?(s=new w(0),n.each((function(e){e=N.Simplify.trigSimp(e.fnTransform()),s=t.add(s,e)}),!0),i=t.pow(t.multiply(new w(n.multiplier),s),new w(n.power))):n.group===c&&(o=n.getNum(),a=n.getDenom(),(i="sin"===o.fname&&"cos"===a.fname&&o.args[0].equals(a.args[0])&&o.power.equals(a.power)?t.parse(e.Utils.format("({0})*({1})*tan({2})^({3})",a.multiplier,o.multiplier,o.args[0],o.power)):i).group===c&&(u=new w(1),i.each((function(n){"tan"===n.fname&&(n=t.parse(e.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",n.multiplier,N.Simplify.simplify(n.args[0]),n.power))),u=t.multiply(u,n)})),i=u)),n=i=N.Simplify.unstrip(r,i).distributeMultiplier()),n},fracSimp:function(e){var n=e.getDenom();if((e=(u=e.getNum()).isImaginary()&&n.isImaginary()?N.Simplify.complexSimp(u,n):e).isComposite()){for(var r,i,s,o,a,u,l=(e=1<e.power?t.expand(e):e).collectSymbols(),c=l.pop();l.length;)a=l.pop(),o=t.parse(c.getDenom()),s=t.parse(a.getDenom()),r=c.getNum(),i=a.getNum(),a=t.multiply(o.clone(),s.clone()),s=t.multiply(r,s),o=t.multiply(i,o),c=t.divide(t.add(s,o),a);return n=t.expand(c.getDenom()),(n=(u=t.expand(c.getNum())).isImaginary()&&n.isImaginary()?N.Simplify.complexSimp(u,n):t.divide(u,n)).equals(e)?e:N.Simplify.simplify(n)}return e},ratSimp:function(e){var n,r;return e.group===c&&(n=e.getDenom(),r=e.getNum().distributeMultiplier(),n=N.Simplify.fracSimp(n),r=N.Simplify.fracSimp(r),e=t.divide(r,n)),e},sqrtSimp:function(e,r){if(e.isSQRT()){var i,s,o=N.Factor.factor(e.args[0].clone()),a=t.parse(o.multiplier),u=a.sign(),l=t.sqrt(a.abs());if(d(l))return o.group===c?(i=new w(1),o.each((function(e){var r;e.group===n?(r=t.sqrt(e.clone()),d(r)?l=t.multiply(l,r):i=t.multiply(i,e)):i=t.multiply(i,e)})),u=t.multiply(i,t.parse(u)),(s=t.sqrt(u.clone())).isImaginary&&(s=t.sqrt(t.expand(u.clone())))):s=t.sqrt(o.clone().toUnitMultiplier()),t.multiply(l,s)}else e.isComposite()&&e.isLinear()?(l=new w(0),e.each((function(e){l=t.add(l,N.Simplify.sqrtSimp(e))}),!0),l=t.multiply(l,t.parse(e.multiplier))):e.group===c&&(l=t.parse(e.multiplier),e.each((function(e){e=N.Simplify.sqrtSimp(e),l=t.multiply(l,e)}),!0),l=t.pow(l,t.parse(e.power)));return l||t.parse(e)},patternSub:function(t){var n={},r=function(e){var t=!1;return e.each((function(e){e.group===l?t=!0:e.symbols&&(t=r(e))})),t},i=function(s){s.each((function(s){var o;!s.symbols&&s.group!==a||(r(s)?i(s):n[s.value]||(o=e.Utils.getU(t),n[s.value]=o,t=t.sub(s.value,o)))}),!0)};return i(t),[t,n]},simplify:function(n){var r=N.Simplify.strip(n);if(n=r.pop(),(n=N.Simplify.fracSimp(n)).isConstant()||n.group===e.groups.S)return r.push(n),N.Simplify.unstrip(r,n);var i,s=n.clone();s=N.Simplify.trigSimp(s);return s=N.Simplify.ratSimp(s),(s=N.Factor.factor(s)).group===e.groups.CP&&s.isLinear()&&(n=s.multiplier.clone(),s.toUnitMultiplier(),i=new w(0),s.each((function(e){e=N.Simplify.simplify(e),i=t.add(i,e)})),(s=i).multiplier=i.multiplier.multiply(n)),N.Simplify.unstrip(r,s)}},Classes:{Polynomial:S,Factors:M,MVTerm:E}};e.Expression.prototype.simplify=function(){return N.Simplify.simplify(this.symbol)},o.useAlgebraDiv=function(){var n=N.divideFn=t.divide,r=0;t.divide=function(t,i){return i=1===++r?e.Algebra.divide(t,i):n(t,i),r=0,i}},o.useParserDiv=function(){N.divideFn&&(t.divide=N.divideFn),delete N.divideFn},o.register([{name:"factor",visible:!0,numargs:1,build:function(){return N.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return N.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return N.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return N.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return N.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return N.divide}},{name:"div",visible:!0,numargs:2,build:function(){return N.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return N.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return N.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){return function(){var t=N.coeffs.apply(N,arguments);return new e.Vector(t)}}},{name:"line",visible:!0,numargs:[2,3],build:function(){return N.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){return function(e,t){try{return t=t||h(e)[0],N.sqComplete(e.clone(),t).f}catch(t){return e}}}}]),o.api()}(),void 0===o&&(o=r("15f6"),r("aec1")),function(){"use strict";var e=o.getCore(),t=e.PARSER,n=e.Frac,r=e.Settings,i=e.Utils.isSymbol,s=e.groups.FN,a=e.Symbol,u=e.Utils.text,l=e.Utils.inBrackets,c=e.Utils.isInt,f=e.Utils.format,p=e.Utils.even,h=e.Utils.evaluate,m=e.groups.N,g=e.groups.S,v=(s=e.groups.FN,e.groups.PL),d=e.groups.CP,w=e.groups.CB,y=e.groups.EX,b=e.groups.P,S=r.LOG,M="sqrt",E="sin",N="cos",x="tan",q="sec",_="csc",A="cot",O="asin",C="atan",I="sinh",L="cosh",U="tanh";function R(e){this.message=e||""}R.prototype=new Error,a.prototype.hasIntegral=function(){return this.containsFunction("integrate")},a.prototype.fnTransform=function(){if(this.group!==s)return this;var e,n,r,i=this.args[0],o=new a(this.multiplier),u=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case I:r=t.parse(f("(e^({0})-e^(-({0})))/2",i));break;case L:r=t.parse(f("(e^({0})+e^(-({0})))/2",i));break;case U:r=t.parse(f("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",i));break;case x:r=t.parse(f("sin({0})/cos({0})",i));break;case _:r=t.parse(f("1/sin({0})",i));break;case q:r=t.parse(f("1/cos({0})",i));break;default:r=u}else if(this.power.equals(2))switch(this.fname){case E:r=t.parse(f("1/2-cos(2*({0}))/2",i));break;case N:r=t.parse(f("1/2+cos(2*({0}))/2",i));break;case x:r=t.parse(f("sin({0})^2/cos({0})^2",i));break;case L:r=t.parse(f("1/2+cosh(2*({0}))/2",i));break;case I:r=t.parse(f("-1/2+cosh(2*({0}))/2",i));break;case U:r=t.parse(f("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",i));break;case q:r=t.parse(f("(1-cos(2*({0})))/(1+cos(2*({0})))+1",i));break;default:r=u}else this.fname===q?r=t.parse(f("1/cos({0})^({1})",this.args[0],this.power)):this.fname===_?r=t.parse(f("1/sin({0})^({1})",this.args[0],this.power)):this.fname===x?r=this.power.lessThan(0)?t.parse(f("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):t.parse(f("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power)):this.fname===E&&this.power.lessThan(0)?r=t.parse(f("csc({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===N&&this.power.lessThan(0)?r=t.parse(f("sec({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===E&&this.power.equals(3)?r=t.parse(f("(3*sin({0})-sin(3*({0})))/4",this.args[0])):this.fname===N&&this.power.equals(3)?r=t.parse(f("(cos(3*({0}))+3*cos({0}))/4",this.args[0])):this.fname!==N&&this.fname!==E||!p(this.power)?r=u:(n=this.power/2,e=t.pow(this.clone().toLinear(),t.parse(2)).fnTransform(),n=t.expand(t.pow(e,t.parse(n))),r=new a(0),n.each((function(e){e=e.fnTransform(),r=t.add(r,e)}),!0));return t.multiply(r,o)},a.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===g)return!1;if(this.fname&&(e.Utils.in_trig(this.fname)||e.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].hasTrig())return!0;return!1},e.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},e.Utils.toCommonDenominator=function(n){if(n.isComposite()&&n.isLinear()){var r=new a(n.multiplier),i=new a(1),s=new a(0);return n.each((function(e){i=t.multiply(i,e.getDenom())}),!0),n.each((function(e){var n=e.getNum();e=e.getDenom(),e=t.multiply(n,t.divide(i.clone(),e));s=t.add(s,e)})),t.multiply(r,e.Algebra.divide(t.expand(s),t.expand(i)))}return n},e.Utils.in_inverse_trig=function(e){return-1!==[O,"acos",C,"acsc","asec","acot"].indexOf(e)},e.Utils.in_trig=function(e){return-1!==[N,E,x,q,_,A].indexOf(e)},e.Utils.in_htrig=function(e){return-1!==[I,L,U,"acsch","asech","acoth"].indexOf(e)},e.Matrix.jacobian=function(t,n){var r=new e.Matrix;return(n=n||e.Utils.arrayGetVariables(t)).forEach((function(n,i){t.forEach((function(t,s){t=e.Calculus.diff(t.clone(),n),r.set(s,i,t)}))})),r},e.Matrix.prototype.max=function(){var e=new a(0);return this.each((function(t){t=t.abs(),t.gt(e)&&(e=t)})),e},e.Matrix.cMatrix=function(n,r){var i=new e.Matrix;return r.forEach((function(e,r){i.set(r,0,t.parse(n))})),i};var T=e.Utils.all_functions=function(e){for(var t=0,n=e.length;t<n;t++)if(e[t].group!==s)return!1;return!0},P=e.Utils.cosAsinBtranform=function(e,n){return e=e.args[0],n=n.args[0],t.parse(f("(sin(({0})+({1}))-sin(({0})-({1})))/2",e,n))},k=e.Utils.cosAsinAtranform=function(e,n){return 1!==Number(n.power)?t.multiply(e,n):(e=e.args[0],t.parse(f("(sin(2*({0})))/2",e)))},D=e.Utils.cosAsinBtranform=function(e,n){return e=e.args[0],n=n.args[0],t.parse(f("(cos(({0})+({1}))-cos(({0})-({1})))/2",e,n))},F=e.Utils.trigTransform=function(e){for(var n,r,i,o,u={},l=new a(1),c=0,f=e.length;c<f;c++)(i=e[c]).group===s?(r=i.fname)===N&&u.sin?(n=(u.sin.args[0].toString()!==i.args[0].toString()?P:k)(i,u.sin),delete u.sin,l=t.multiply(l,n)):r===E&&u.cos?(n=(u.cos.args[0].toString()!==i.args[0].toString()?P:k)(i,u.cos),delete u.cos,l=t.multiply(l,n)):r===E&&u.sin?(n=u.sin.args[0].toString()!==i.args[0].toString()?D(i,u.sin):t.multiply(i,u.sin),delete u.sin,l=n):u[r]=i:l=t.multiply(l,i);for(o in u)l=t.multiply(l,u[o]);return l};e.Settings.integration_depth=10,e.Settings.max_lim_depth=10;var j=e.Calculus={version:"1.4.6",sum:function(n,r,i,s){if(r.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(r)+" provided");var o;return r=r.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)?(o=s-i<200?"":"PARSE2NUMBER",i=Number(i),s=Number(s),e.Utils.block(o,(function(){for(var o=n.text(),u={"~":!0},l=new e.Symbol(0),c=i;c<=s;c++){u[r]=new a(c);var f=t.parse(o,u);l=t.add(l,f)}return l}))):t.symfunction("sum",arguments)},product:function(n,r,i,s){if(r.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(r)+" provided");return r=r.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)?e.Utils.block(s-i<200?"":"PARSE2NUMBER",(function(){i=Number(i),s=Number(s.multiplier);for(var o=n.text(),u={},l=new e.Symbol(1),c=i;c<=s;c++)u[r]=new a(c),l=t.multiply(l,t.parse(o,u));return l})):t.symfunction("product",arguments)},diff:function(o,c,p){if(e.Utils.isVector(o)){var h=new e.Vector([]);return o.each((function(e){h.elements.push(j.diff(e,c,p))})),h}if(e.Utils.isMatrix(o)){var I=new e.Matrix;return o.each((function(e,t,n){I.set(t,n,j.diff(e,c,p))})),I}var L,R,T=i(c)?c.text():c;return p=i(p)?p.multiplier:p||1,void 0===T&&(T=e.Utils.variables(o)[0]),o.group===s&&o.fname===M&&(R=o.args[0],L=o.power.clone(),R.group===m&&R.group===b||(R.power=i(R.power)?t.multiply(R.power,t.multiply(new a(.5)),L):R.power.multiply(new n(.5)).multiply(L),R.multiplier=R.multiplier.multiply(o.multiplier)),o=R),o=o.group!==s||i(o.power)?k(o):(L=k(t.parse(o)),R=j.diff(o.args[0].clone(),T),t.multiply(L,R)),1<p?j.diff(o,c,--p):o;function P(e){return e.value!==T&&!e.contains(T,!0)||(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new n(1)),e.power.equals(0)&&(e=a(e.multiplier))),e}function k(e){var o=e.group;if(o===m||o===g&&e.value!==T||o===b)e=a(0);else if(o===g)e=P(e);else{if(o===w){var p=e.multiplier.clone();e.toUnitMultiplier();var h=t.multiply(function(e){for(var n=e.collectSymbols(),r=new a(0),i=n.length,s=0;s<i;s++){for(var o=j.diff(n[s].clone(),T),u=0;u<i;u++)s!==u&&(o=t.multiply(o,n[u].clone()));r=t.add(r,o)}return r}(e),P(e));return h.multiplier=h.multiplier.multiply(p),h}if(o===s&&e.power.equals(1))switch(e.fname){case S:I=e.clone(),(e=e.args[0].clone()).power=e.power.negate(),e.multiplier=I.multiplier.divide(e.multiplier);break;case N:e.fname=E,e.multiplier.negate();break;case E:e.fname=N;break;case x:e.fname=q,e.power=new n(2);break;case q:e=D(e,x);break;case _:e=D(e,"-cot");break;case A:e.fname=_,e.multiplier.negate(),e.power=new n(2);break;case O:e=t.parse("(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case"acos":e=t.parse("-(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case C:e=t.parse("(1+("+u(e.args[0])+")^2)^(-1)");break;case"abs":p=e.multiplier.clone(),e.toUnitMultiplier(),(L=e.args[0].clone()).toUnitMultiplier(),(e=t.parse(l(u(e.args[0]))+"/abs"+l(u(L)))).multiplier=p;break;case"parens":e=a(1);break;case"cosh":e.fname="sinh";break;case"sinh":e.fname="cosh";break;case U:e.fname="sech",e.power=new n(2);break;case"sech":e=D(e,"-tanh");break;case"csch":var M=String(e.args[0]);return t.parse("-coth("+M+")*csch("+M+")");case"coth":return M=String(e.args[0]),t.parse("-csch("+M+")^2");case"asinh":e=t.parse("(sqrt(1+("+u(e.args[0])+")^2))^(-1)");break;case"acosh":e=t.parse("(sqrt(-1+("+u(e.args[0])+")^2))^(-1)");break;case"atanh":e=t.parse("(1-("+u(e.args[0])+")^2)^(-1)");break;case"asech":M=String(e.args[0]),e=t.parse("-1/(sqrt(1/("+M+")^2-1)*("+M+")^2)");break;case"acoth":e=t.parse("-1/(("+e.args[0]+")^2-1)");break;case"acsch":M=String(e.args[0]),e=t.parse("-1/(sqrt(1/("+M+")^2+1)*("+M+")^2)");break;case"asec":M=String(e.args[0]),e=t.parse("1/(sqrt(1-1/("+M+")^2)*("+M+")^2)");break;case"acsc":M=String(e.args[0]),e=t.parse("-1/(sqrt(1-1/("+M+")^2)*("+M+")^2)");break;case"acot":e=t.parse("-1/(("+e.args[0]+")^2+1)");break;case"S":M=String(e.args[0]),e=t.parse("sin((pi*("+M+")^2)/2)");break;case"C":M=String(e.args[0]),e=t.parse("cos((pi*("+M+")^2)/2)");break;case"Si":M=e.args[0],e=t.parse("sin("+M+")/("+M+")");break;case"Shi":M=e.args[0],e=t.parse("sinh("+M+")/("+M+")");break;case"Ci":M=e.args[0],e=t.parse("cos("+M+")/("+M+")");break;case"Chi":M=e.args[0],e=t.parse("cosh("+M+")/("+M+")");break;case"Ei":M=e.args[0],e=t.parse("e^("+M+")/("+M+")");break;case"Li":M=e.args[0],e=t.parse("1/"+r.LOG+"("+M+")");break;case"erf":e=t.parse("(2*e^(-("+e.args[0]+")^2))/sqrt(pi)");break;case"atan2":var I=String(e.args[0]);M=String(e.args[1]);e=t.parse("("+M+")/(("+M+")^2+("+I+")^2)");break;case"sign":e=new a(0);break;case"sinc":e=t.parse(f("(({0})*cos({0})-sin({0}))*({0})^(-2)",e.args[0]));break;case r.LOG10:e=t.parse("1/(("+e.args[0]+")*"+r.LOG+"(10))");break;default:e=t.symfunction("diff",[e,c])}else if(o===y||o===s&&i(e.power)){h=o===y?e.value:o===s&&e.contains(T)?e.fname+l(u(e.args[0])):e.value+l(u(e.args[0]));var L=(t.multiply(t.parse(S+l(h)),e.power.clone()),j.diff(t.multiply(t.parse(S+l(h)),e.power.clone()),T));e=t.multiply(e,L)}else if(o!==s||e.power.equals(1)){if(o===d||o===v){o=e.clone();var R,F=new a(0);for(R in e.symbols)F=t.add(F,j.diff(e.symbols[R].clone(),T));e=t.multiply(P(o),F)}}else(L=e.clone()).toLinear(),L.toUnitMultiplier(),e=t.multiply(P(e.clone()),k(L))}return e.updateHash(),e}function D(e,n,r){return t.multiply(e,t.parse(n+l(r||u(e.args[0]))))}},integration:{u_substitution:function(n,r){function i(e,n,i){var s=j.diff(n,r);s=i?i(e,n):t.divide(e.clone(),s);return s.contains(r,!0)?null:s}function o(e,n){return e=j.integrate(t.symfunction(e,[new a(p)]),p,0),(e=e.sub(new a(p),n)).updateHash(),e}var u,l=n[0].clone(),c=n[1].clone(),f=l.group,p=(n=c.group,"__u__");if(f===s&&n!==s)return(u=i(c,(m=l.args[0]).clone()))?t.multiply(u,o(l.fname,m)):(u=i(c,l))?j.integration.poly_integrate(l):void 0;if(n===s&&f!==s){if(u=i(l,(m=c.args[0]).clone()))return t.multiply(u,o(c.fname,m))}else{if(f===s&&n===s)return(u=i(l.clone(),c.clone()))||(u=i(c.clone(),l.clone()))?t.multiply(j.integration.poly_integrate(c),u):void 0;if(f===y&&n!==y){if(!(u=i(c,(g=l.power).clone()))){var h=j.integration.decompose_arg(g.clone(),r),m=j.diff(h[2].clone(),r);m=j.integration.decompose_arg(m.clone(),r);if(t.multiply(h[1],m[1]).power.equals(c.power))return m=t.divide(h[0].clone(),m[0].clone()),m=t.multiply(m.clone(),t.pow(new a(l.value),t.multiply(h[0],new a(p)))),m=t.multiply(m,new a(p)),j.integration.by_parts(m,p,0,{}).sub(p,h[1].clone())}return h=j.integrate(l.sub(g.clone(),new a(p)),p,0),t.multiply(h.sub(new a(p),g),u)}if(n===y&&f!==y)return u=i(l,(g=c.power).clone()),h=j.integrate(c.sub(g,new a(p)),p,0),t.multiply(h.sub(new a(p),g),u);if(l.isComposite()||c.isComposite()){f=function(n,i){return i=j.diff(i,r),n=e.Algebra.Factor.factor(n),i=e.Algebra.Factor.factor(i),t.divide(n,i)},h=l.isComposite()?l.clone().toLinear():l.clone();var g=c.isComposite()?c.clone().toLinear():c.clone();return(u=i(h.clone(),g.clone(),f))?t.multiply(j.integration.poly_integrate(c),u):(u=i(g.clone(),h.clone(),f))?t.multiply(j.integration.poly_integrate(l),u):void 0}}},poly_integrate:function(e){var n=e.power.toString(),r=e.multiplier.toDecimal();e=e.toUnitMultiplier().toLinear();return-1===Number(n)?t.multiply(new a(r),t.symfunction(S,[e])):t.parse(f("({0})*({1})^(({2})+1)/(({2})+1)",r,e,n))},stop:function(t){throw e.Utils.warn(t=t||"Unable to compute integral!"),new R(t)},partial_fraction:function(n,r,s,o){var u;return i(r)||(r=t.parse(r)),u=new a(0),(n=e.Algebra.PartFrac.partfrac(n,r)).group===w&&n.isLinear()?(n.each((function(e){e.isLinear()||j.integration.stop()})),n.each((function(e){u=t.add(u,j.integrate(e,r,s,o))}))):u=t.add(u,j.integrate(n,r,s,o)),u},get_udv:function(n){function r(t){var n,r=t.group;r===s?(n=t.fname,e.Utils.in_trig(n)||e.Utils.in_htrig(n)?i[3].push(t):e.Utils.in_inverse_trig(n)?i[1].push(t):n===S?i[0].push(t):j.integration.stop()):r===g||t.isComposite()&&t.isLinear()||r===w&&t.isLinear()?i[2].push(t):r===y||t.isComposite()&&!t.isLinear()?i[4].push(t):j.integration.stop()}var i=[[],[],[],[],[]];n.group===w?n.each((function(e){r(a.unwrapSQRT(e,!0))})):r(n);for(var o,u=new a(1),l=0;l<5;l++){var c=i[l],f=c.length;if(0<f){if(1<f)for(var p=new a(1),h=0;h<f;h++)p=t.multiply(p,c[h].clone());else p=c[0].clone();o?u=t.multiply(u,p):(o=p).multiplier=o.multiplier.multiply(n.multiplier)}}return[o,u]},trig_sub:function(n,r,i,s,o,a){(o=o||j.integration.decompose_arg(n.clone().toLinear(),r))[3],o[2];var u=o[0],c=o[1];if(c.power.equals(2)&&u.greaterThan(0))return r=e.Utils.getU(n),o=t.parse(x+l(r)),u=t.parse(q+l(r)+"^2"),u=t.multiply(n.sub(c,o),u),c=j.integrate(u,r,i,s).sub(o,c),e.Utils.clearU(o),c},by_parts:function(n,r,i,s){var o,u,l,c,f,p;return s.previous=s.previous||[],l=(u=j.integration.get_udv(n))[0],o=u[1],f=(c=a.unwrapSQRT(t.expand(j.diff(l.clone(),r)),!0)).clone().stripVar(r),c=t.divide(c,f.clone()),n=j.integrate(o.clone(),r,i||0),c=(u=t.multiply(n.clone(),c)).toString(),-1!==s.previous.indexOf(c)&&e.Utils.in_trig(l.fname)&&o.isE()?(s.is_cyclic=!0,new a(1)):(s.previous.push(c),l=t.multiply(l,n),n=u.multiplier.clone(),u.toUnitMultiplier(),(f=t.multiply(j.integrate(u.clone(),r,i,s),f)).multiplier=f.multiplier.multiply(n),f=t.subtract(l,f),s.is_cyclic&&(s.previous.pop(),0===s.previous.length&&(f=t.expand(f),p=new a(0),f.each((function(e){e.contains(r)||(p=t.add(p,e.clone()))})),f=t.divide(t.subtract(f,p.clone()),t.subtract(new a(1),p)))),f)},decompose_arg:e.Utils.decompose_fn},integrate:function(o,u,h,m){var b;if(u||(b=e.Utils.variables(o),u=(u=1===b.length?b[0]:u)||"x"),e.Utils.isVector(o)){var P=new e.Vector([]);return o.each((function(e){P.elements.push(j.integrate(e,u))})),P}return isNaN(u)||t.error("variable expected but received "+u),o.isConstant(!0)?t.multiply(o.clone(),t.parse(u)):(m=m||{},e.Utils.block("PARSE2NUMBER",(function(){h=h||0;var b,P=i(u)?u.toString():u,k=(Xe=a.unwrapSQRT(o.clone(),!0)).group;try{if(++h>e.Settings.integration_depth&&j.integration.stop("Maximum depth reached. Exiting!"),Xe.contains(P,!0)){if(k===g)b=j.integration.poly_integrate(Xe,P,h);else if(k===y)if(Xe.previousGroup===s&&"sqrt"!==Xe.fname&&Xe.fname!==r.PARENTHESIS&&j.integration.stop(),Xe.contains(P)&&Xe.previousGroup!==s)Xe.power.contains(P)?j.integration.stop():((Rt=j.diff(Xe.clone().toLinear(),P)).contains(P)&&j.integration.stop(),b=j.integration.poly_integrate(Xe,P,h));else{if((W=j.diff(Xe.power.clone(),P)).contains(P)){var D=W.stripVar(P);if((Q=t.divide(W.clone(),D.clone())).group===g&&Q.isLinear())return D.multiplier=D.multiplier.divide(new n(2)),t.parse(f("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",D,P,Xe.multiplier));j.integration.stop()}Xe.isE()?W.isLinear()?b=Xe:W.isE()&&W.power.group===g&&W.power.power.equals(1)?b=t.multiply(t.symfunction("Ei",[Xe.power.clone()]),Xe.power):j.integration.stop():(K=t.symfunction(S,[t.parse(Xe.value)]),b=t.divide(Xe,K)),b=t.divide(b,W)}else if(Xe.isComposite()&&Xe.isLinear()){var B=t.parse(Xe.multiplier);Xe.toUnitMultiplier(),b=new a(0),Xe.each((function(e){b=t.add(b,j.integrate(e,P,h))})),b=t.multiply(B,b)}else if(k===d)if((Xe=Xe.power.greaterThan(1)?t.expand(Xe):Xe).power.equals(1))b=new a(0),Xe.each((function(e){b=t.add(b,j.integrate(e,P,h))}),!0);else{var G=Number(Xe.power);B=Xe.multiplier.clone();Xe.toUnitMultiplier();var V,H,Z,z=Xe.clone().toLinear(),X=(xt=j.integration.decompose_arg(z,P))[3],$=xt[2],W=xt[0],Q=xt[1];if(-1===G&&Q.group!==v&&Q.power.equals(2)){var Y,K,J,ee,te,ne,re,ie,se,oe,ae,ue=!c(X)||0<X;b=Q.group===g&&Q.power.equals(2)&&ue?(Y=function(e){var n=new a(1);return e.each((function(e){n=t.multiply(n,"abs"===e.fname?e.args[0]:e)})),n},J=W.clone(),ee=X.clone(),J=t.pow(J,new a(.5)),ee=t.pow(ee,new a(.5)),K=t.multiply(Y(ee),Y(J)),de=t.symfunction(C,[t.divide(t.multiply(W,Q.toLinear()),K.clone())]),t.divide(de,K)):Q.group===g&&Q.isLinear()?t.divide(j.integration.poly_integrate(Xe),W):Q.power.equals(4)?(ae=l,J=t.parse(M+ae(W)+"*"+P+"^2"),ee=t.parse(M+ae(2)+"*"+ae(W)+"^"+ae("1/4")+"*"+ae(X)+"^"+ae("1/4")+"*"+P),te=t.parse(M+ae(X)),ye=t.add(t.add(J.clone(),ee.clone()),te.clone()),Ae=t.add(t.subtract(J,ee),te),ne=t.parse(M+ae(2)+"*"+ae(X)+"^"+ae("3/4")),re=t.parse(M+ae(X)+"*"+ae(X)+"^"+ae("1/4")+"*"+P),ie=t.parse("2*"+ae(X)+"*"+M+ae(2)+"*"+ae(X)+"^"+ae("1/4")),se=t.divide(t.subtract(ne.clone(),re.clone()),t.multiply(ie.clone(),Ae)),oe=t.divide(t.add(ne,re),t.multiply(ie,ye.clone())),t.add(j.integrate(se,P,h,m),j.integrate(oe,P,h,m))):j.integration.partial_fraction(Xe,P,h)}else if(-.5===G)Q.group===g&&Q.power.equals(2)&&$.multiplier.lessThan(0)&&!X.multiplier.lessThan(0)?(W.negate(),b=X.isConstant()&&W.isConstant()?(K=t.symfunction(M,[W.clone()]),V=t.symfunction(M,[t.multiply(W.clone(),X)]),t.divide(t.symfunction(O,[t.divide($.toLinear(),V)]),K)):(H=t.symfunction(M,[W]),Z=t.multiply(H.clone(),Q.clone().toLinear()),t.divide(t.symfunction(C,[t.divide(Z,t.symfunction(M,[z.clone()]))]),H))):j.integration.stop();else if(Q.isLinear()&&Q.group!==v)b=t.divide(j.integration.poly_integrate(Xe),W);else{if(Q.power.equals(2)&&W.greaterThan(0)){var le=t.parse(M+l(W)),ce=t.parse(M+l(X)),fe=t.multiply(le.clone(),ce.clone()).invert(),pe=t.pow(X,new a(Xe.power)),he=e.Utils.getU(Xe);Ct=t.multiply(fe,Q.clone().toLinear());var me=t.parse(C+l(Ct)),ge=2*(Math.abs(Xe.power)-1),ve=j.integrate(t.parse(N+l(he)+"^"+ge));return e.Utils.clearU(he),t.multiply(ve.sub(he,me),pe)}if(Xe.group===w||Xe.power.lessThan(0)){var de=Xe.clone().toLinear(),we=e.Algebra.Factor.factor(de).toString()!==de.toString();if(e.Algebra.degree(de,t.parse(P)).equals(2)&&!we)try{var ye,be,Se=e.Algebra.sqComplete(de,P);Ct=e.Utils.getU(de),ye=Se.f.sub(Se.a,Ct),be=t.pow(ye,t.parse(Xe.power)),b=j.integrate(be,Ct).sub(Ct,Se.a)}catch(k){j.integration.stop()}else b=j.integration.partial_fraction(Xe,P,h,m)}else b=j.integration.by_parts(Xe,P,h,m)}b.multiplier=b.multiplier.multiply(B)}else if(k===s){var Me=Xe.args[0];B=Xe.multiplier.clone();Xe.toUnitMultiplier();W=(xt=j.integration.decompose_arg(Me,P))[0],Q=xt[1];var Ee,Ne,xe,qe,_e,Ae,Oe,Ce,Ie,Le=Xe.fname;if(Le===S||Le===O||"acos"===Le||Le===C&&Q.isLinear()){var Ue;G=Xe.power.toString();c(G)&&(h-=G),b=Me.isComposite()?(Ct=e.Utils.getU(Xe),de=t.pow(t.parse(S+l(Ct)),new a(G)),ft=j.diff(Me,P),Ue=t.multiply(de,ft),ve=j.integrate(Ue,Ct,h,m),t.multiply(t.parse(B),ve.sub(Ct,Me))):t.multiply(t.parse(B),j.integration.by_parts(Xe,P,h,m))}else{if(Le===x&&Xe.power.lessThan(0))return(Tt=Xe.clone()).power.negate(),Tt.fname=A,t.multiply(t.parse(B),j.integrate(Tt,P,h));if(!W.contains(P,!0)&&Xe.isLinear())if("abs"===Le)(Q=t.divide(Me.clone(),W.clone())).group!==g||Q.power.lessThan(0)?j.integration.stop():b=e.Utils.even(Q.power)?j.integrate(Me,P,h):((Ie=j.integrate(Q,P,h)).power=Ie.power.subtract(new n(1)),t.multiply(t.multiply(t.symfunction("abs",[Q.toLinear()]),Ie),W));else{var Re=Xe.args[0].group,Te=j.integration.decompose_arg(Me,P);switch((Re!==d&&Re!==g&&Re!==w||!Te[1].power.equals(1)||Me.hasFunc())&&j.integration.stop(),Le){case N:b=t.symfunction(E,[Me]);break;case E:(b=t.symfunction(N,[Me])).negate();break;case x:b=t.parse(f(r.LOG+"(sec({0}))",Me));break;case q:b=t.parse(f(r.LOG+"(tan({0})+sec({0}))",Me));break;case _:b=t.parse(f("-"+r.LOG+"(csc({0})+cot({0}))",Me));break;case A:b=t.parse(f(r.LOG+"(sin({0}))",Me));break;case I:b=t.symfunction(L,[Me]);break;case L:b=t.symfunction(I,[Me]);break;case U:b=t.parse(f(r.LOG+"(cosh({0}))",Me));break;case"asec":case"acsc":case"acot":case"asech":case"acsch":case"acoth":b=j.integration.by_parts(Xe,P,h,m);break;case"sech":b=t.parse(f("atan(sinh({0}))",Me));break;case"csch":b=t.parse(f(r.LOG+"(tanh(({0})/2))",Me));break;case"coth":b=t.parse(f(r.LOG+"(sinh({0}))",Me));break;case"exp":b=j.integrate(t.parse(f("e^({0})",Me)),P,h);break;case"S":Me=Xe.args[0].clone();var Pe=(it=j.integration.decompose_arg(Me,P))[1],ke=it[0],De=it[3];b=t.parse(f("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",ke,De,Q));break;case"C":Me=Xe.args[0].clone(),Pe=(it=j.integration.decompose_arg(Me,P))[1],ke=it[0],De=it[3],b=t.parse(f("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",ke,De,Pe));break;case"erf":Me=Xe.args[0].clone(),Pe=(it=j.integration.decompose_arg(Me,P))[1],ke=it[0],b=t.parse(f("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",ke,Pe,Me));break;case"sign":b=t.multiply(Xe.clone(),Me.clone());break;default:j.integration.stop()}b=t.divide(b,W)}else Q.isLinear()?Le===N||Le===E?(G=Number(Xe.power),b=G<0?(Xe.fname=Le===E?_:q,Xe.invert().updateHash(),j.integrate(Xe,P,h)):(Me=Xe.args[0],Ee=Xe.clone(),Ne=Xe.clone(),ht=new a((G-1)/G),xe=t.multiply(W.clone(),new a(G)).invert(),Ee.power=Ee.power.subtract(new n(1)),Ne.power=Ne.power.subtract(new n(2)),Rt=t.symfunction(Le===N?E:N,[Me.clone()]),Le===E&&Rt.negate(),t.add(t.multiply(t.multiply(xe,Ee),Rt),t.multiply(ht,j.integrate(t.parse(Ne),P,h))))):Le===x||Le===A?Xe.args[0].isLinear(P)&&(ge=Xe.power.subtract(new n(1)).toString(),Ft=Xe.clone().toUnitMultiplier(),Ce=t.parse(f((Le===A?"-":"")+"1/({2}*{0})*{3}({1})^({0})",ge,Me,W,Le)),Ft.power=Ft.power.subtract(new n(2)),Ft.power.equals(0)&&(Ft=t.parse(Ft)),b=t.subtract(Ce,j.integrate(Ft,P,h))):Le===q||Le===_?(qe=Xe.power.subtract(new n(1)).toString(),_e=Xe.power.subtract(new n(2)).toString(),Ae=Le===q?x:A,Ft=Xe.clone().toUnitMultiplier(),Oe=f((Le===_?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",W,qe,_e,Me,Le,Ae),Ce=t.parse(Oe),Ft.power=Ft.power.subtract(new n(2)),Ft.power.equals(0)&&(Ft=t.parse(Ft)),b=t.add(Ce,t.multiply(new a(_e/qe),j.integrate(Ft,P,h)))):Le!==L&&Le!==I||!Xe.power.equals(2)?j.integration.stop():b=j.integrate(Xe.fnTransform(),P,h):j.integration.stop();b.multiplier=b.multiplier.multiply(B)}}else if(k===v)b=j.integration.partial_fraction(Xe,P,h);else if(k===w){var Fe=(Xe=Xe.getDenom().group===g?t.expand(Xe):Xe).stripVar(P),je=t.divide(Xe.clone(),Fe.clone());if(Fe.contains(P)&&(je=t.multiply(je,Fe),Fe=new a(1)),je.group!==w){if(je.equals(1))return j.integrate(t.expand(Xe),P,h);je.clone().toLinear().isPoly(!0)&&1<e.Utils.variables(je).length&&(je=e.Algebra.Factor.factor(je)),b=j.integrate(je,P,h)}else{var Be=je.collectSymbols().sort((function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group})).map((function(e){return e=a.unwrapSQRT(e,!0),"exp"===e.fname?t.parse(f("({1})*e^({0})",e.args[0],e.multiplier)):e})),Ge=Be.length;if(Xe.power<0){if(2===Ge)return j.integrate(t.expand(Xe),P,h,m)}else if(2===Ge){try{b=j.integration.u_substitution(Be,P)}catch(k){}if(!b){var Ve,He,Ze,ze,Xe,$e,We,Qe,Ye,Ke,Je,et,tt,nt,rt,it,st,ot,at,ut,lt,ct,ft,pt,ht,mt,gt,vt,dt,wt,yt=Be[0].group,bt=Be[1].group,St=Be[0],Mt=Be[1],Et=St.fname,Nt=Mt.fname;if(Xe=t.multiply(St.clone(),Mt.clone()),yt===s&&bt===s)if(Et===S||Nt===S)b=j.integration.by_parts(Xe.clone(),P,h,m);else{Be.sort((function(e,t){return t.fname>e.fname}));var xt,qt=St.args[0];qt.isLinear()&&(qt.group===d||qt.group===w||qt.group===g)||j.integration.stop(),Q=(xt=j.integration.decompose_arg(qt,P))[1],W=xt[0],Q.isLinear()||j.integration.stop();var _t,At=Mt.args[0];if(qt.equals(At))if(Et===E&&Nt===N||Et===N&&Nt===E)if(St.power.lessThan(0)&&j.integration.stop(),Et===E&&St.power.add(Mt.power).equals(0))St.fname=x,St.updateHash(),b=j.integrate(St,P,h);else if(p(St.power)&&Nt===N&&Mt.power.lessThan(0)){ge=Number(St.power)/2;var Ot=t.parse(f("(1-cos({0})^2)^({1})",St.args[0],ge));b=j.integrate(t.expand(t.multiply(Ot,Mt.clone())),P,h,m)}else if(p(St.power)&&Nt===E&&Mt.power.lessThan(0))ge=Number(St.power)/2,Ot=t.parse(f("(1-sin({0})^2)^({1})",St.args[0],ge)),b=j.integrate(t.expand(t.multiply(Ot,Mt.clone())),P,h,m);else{var Ct,It=e.Utils.even(St.power),Lt=e.Utils.even(Mt.power);if(b=new a(0),It&&Lt){var Ut=function(e){var n=e.power/2;n=e.fname===N?"((1/2)+(cos(2*("+e.args[0]+"))/2))^"+n:"((1/2)-(cos(2*("+e.args[0]+"))/2))^"+n;return t.parse(n)},Rt=(W=Ut(St),X=Ut(Mt),t.multiply(W,X));return(Tt=t.expand(Rt)).each((function(e){b=t.add(b,j.integrate(e,P,h))})),t.multiply(b,Fe)}Ft=It?(Ct=St,Mt):(Ct=Mt,St);var Tt,Pt=Ct.fname===N?-1:1,kt=((ge=Ft.power)-1)/2,Dt=t.parse("(1-"+Ct.fname+e.Utils.inBrackets(qt)+"^2)^"+kt);(Tt=t.expand(t.multiply(new a(Pt),t.multiply(Ct.clone(),Dt)))).each((function(e){b=t.add(b,j.integration.poly_integrate(e.clone()))}))}else Et===q&&Nt===x&&Q.isLinear()&&Mt.isLinear()?b=t.parse(f("sec({0})^({1})/({1})",St.args[0],St.power)):Et===x&&Nt===q&&Q.isLinear()?St.isLinear()&&Mt.isLinear()?b=t.divide(t.symfunction(q,[qt.clone()]),W):p(St.power)?(G=Number(St.power)/2,Rt=t.parse(f("(sec({0})^2-1)^({1})",St.args[0],G)),b=j.integrate(t.expand(t.multiply(Rt,Mt)),P,h)):j.integration.stop():b=Et===q&&Nt===N?(St.fname=N,St.invert().updateHash(),j.integrate(t.multiply(St,Mt),P,h)):Et===E&&Nt===_?(Mt.fname=E,Mt.invert().updateHash(),j.integrate(t.multiply(St,Mt),P,h)):(Rt=Et!==x||Nt!==N&&Nt!==E||!Mt.power.lessThan(0)?t.multiply(St.fnTransform(),Mt.fnTransform()):t.multiply(St.fnTransform(),Mt),j.integrate(t.expand(Rt),P,h));else Et!==E&&Et!==N||Nt!==E&&Nt!==N?j.integration.stop():St.isLinear()&&Mt.isLinear()?b=St.args[0].isLinear()&&Mt.args[0].isLinear()?(Nt===E?($=St.args[0],_t=Mt.args[0]):(_t=St.args[0],$=Mt.args[0]),de=t.parse(f("(sin(({1})+({0}))+sin(({1})-({0})))/2",$.toString(),_t.toString())),j.integrate(de,P,h)):(Gt=F(Be),j.integrate(t.expand(Gt),P,h)):(Gt=new a(1),Be.map((function(e){e=e.fnTransform(),Gt=t.multiply(Gt,e)})),Rt=t.expand(Gt),(b=j.integrate(Rt,P,h)).hasIntegral()&&(b=j.integrate(F(Gt.collectSymbols()),P,h)))}else yt===s&&bt===g?(Ve=St.isLinear(),St.fname===N&&Ve&&Mt.power.equals(-1)?b=t.symfunction("Ci",[St.args[0]]):St.fname===N&&Mt.power.equals(-1)?b=j.integrate(t.multiply(St.fnTransform(),Mt.clone()),P,h):St.fname===L&&Ve&&Mt.power.equals(-1)?b=t.symfunction("Chi",[St.args[0]]):St.fname===L&&Mt.power.equals(-1)?b=j.integrate(t.multiply(St.fnTransform(),Mt.clone()),P,h):St.fname===E&&Ve&&Mt.power.equals(-1)?b=t.symfunction("Si",[St.args[0]]):St.fname===E&&Mt.power.equals(-1)?b=j.integrate(t.multiply(St.fnTransform(),Mt.clone()),P,h):St.fname===I&&Ve&&Mt.power.equals(-1)?b=t.symfunction("Shi",[St.args[0]]):St.fname===I&&Mt.power.equals(-1)?b=j.integrate(t.multiply(St.fnTransform(),Mt.clone()),P,h):St.fname===S&&Mt.power.equals(-1)?b=j.integration.poly_integrate(St,P,h):"erf"===St.fname?Mt.power.equals(1)&&(ke=(it=j.integration.decompose_arg(St.args[0],P))[0],Pe=it[1],Me=St.args[0].toString(),b=t.parse(f("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",ke,Pe,Me))):b=j.integration.by_parts(Xe,P,h,m)):yt===y&&bt===g?(Q=Et===S?j.integration.decompose_arg(St.args[0],P)[1]:null,b=St.isE()&&(St.power.group===g||St.power.group===w)&&Mt.power.equals(-1)?t.symfunction("Ei",[St.power.clone()]):Et===S&&Q.value===Mt.value?j.integration.poly_integrate(St,P,h):j.integration.by_parts(Xe,P,h,m)):yt===v&&bt===g?(Xe=Mt.value===St.value&&St.power.equals(-1)?(He=Math.min.apply(null,e.Utils.keys(St.symbols)),Ze=Math.min(He,Mt.power),(ze=Mt.clone()).power=new n(Ze),Mt=t.divide(Mt,ze.clone()),Rt=new a(0),St.each((function(e){Rt=t.add(Rt,t.divide(e.clone(),ze.clone()))})),Rt.multiplier=St.multiplier,t.divide(Mt,Rt)):t.expand(Xe),b=j.integration.partial_fraction(Xe,P,h)):yt===d&&bt===g?(de=St.clone().toLinear(),$e=e.Algebra.degree(de,t.parse(P)).equals(1),St.power.equals(-.5)?(W=(xt=j.integration.decompose_arg(St.clone().toLinear(),P))[0].negate(),Q=xt[1],X=xt[3],lt=Number(St.power),ct=Number(Mt.power),c(ct)&&e.Utils.even(ct)&&Q.power.equals(2)?(st=t.divide(t.multiply(t.pow(X.clone(),new a(2)),t.symfunction(M,[t.divide(X.clone(),W.clone())])),t.pow(W.clone(),new a(2))),st=t.multiply(st,t.symfunction(M,[X]).invert()),(We=t.parse("sin(u)")).power=We.power.multiply(Mt.power),ve=j.integrate(We,"u",h),Qe=t.parse("asin(sqrt("+W+"/"+X+")*"+P+")"),b=t.multiply(st,ve.sub(new a("u"),Qe))):-.5===lt&&(Ye=function(e,n){if(n=t.parse(j.integrate(e,P,h,m).sub(P,f(n,P))),!n.hasIntegral())return n},-1===ct?b=Ye(t.expand(t.expand(t.pow(t.multiply(St.invert(),Mt.invert()),new a(2)))).invert(),"sqrt(1-1/({0})^2)"):-2===ct&&(b=Ye(t.sqrt(t.expand(t.divide(t.pow(Xe,new a(2)).invert(),t.pow(new a(P),new a(2))).negate())).invert(),"sqrt(1-1/({0})^2)")))):St.power.equals(-1)&&Mt.isLinear()&&$e?b=j.integration.partial_fraction(Xe,P,h):!St.power.lessThan(0)&&c(St.power)?(Ke=t.expand(St),b=new a(0),Ke.each((function(e){e.group===v?e.each((function(e){b=t.add(b,j.integrate(t.multiply(Mt.clone(),e),P,h))})):b=t.add(b,j.integrate(t.multiply(Mt.clone(),e),P,h))}))):St.power.lessThan(-2)?b=j.integration.by_parts(Xe,P,h,m):St.power.lessThan(0)&&Mt.power.greaterThan(1)?(W=(xt=j.integration.decompose_arg(St.clone().toLinear(),P))[0].negate(),Q=xt[1],X=xt[3],z=St.clone().toLinear(),b=Q.group!==v&&Q.isLinear()?(G=Number(Mt.power),Ct=new a(ft="_u_"),Je=t.expand(t.divide(t.pow(t.subtract(Ct.clone(),X.clone()),new a(G)),Ct.clone())),(et={})[ft]=z,tt=t.parse(Je,et),j.integrate(tt,P,0)):Mt.power.greaterThan(Q.power)||Mt.power.equals(Q.power)?(nt=new e.Algebra.Classes.Factors,St=e.Algebra.Factor.coeffFactor(St.invert(),nt),(rt=e.Algebra.divide(Mt,St)).group!==w?(b=new a(0),rt.each((function(e){b=t.add(b,j.integrate(e,P,h))})),nt.each((function(e){b=t.divide(b,e)})),t.expand(b)):j.integration.by_parts(Xe,P,h,m)):j.integration.partial_fraction(Xe,P,h)):St.power.den.equals(2)?(W=(it=j.integration.decompose_arg(St.clone().toLinear(),P))[3],Q=it[1],X=it[0],_t=it[2],b=Q.power.equals(2)&&X.lessThan(0)?(W.equals(1)||(Fe=t.multiply(Fe,t.pow(W,new a(2)))),Ct=P,st=t.divide(t.pow(X.clone().negate(),new a(.5)),t.pow(W,new a(.5))),ft=t.symfunction(N,[new a(Ct)]),ot=t.pow(t.symfunction(N,[new a(Ct)]),new a(St.power.num)),at=t.pow(t.symfunction(E,[new a(Ct)]),new a(Mt.power)),ut=t.multiply(t.multiply(ot,ft),at),(ve=j.integrate(ut,Ct,h)).sub(Ct,t.symfunction(O,[t.multiply(new a(P),st)]))):j.integration.partial_fraction(Xe,P,h,m)):$e&&(b=j.integration.partial_fraction(Xe,P,h))):St.isComposite()&&Mt.isComposite()?(b=new a(0),St.power.greaterThan(0)&&Mt.power.greaterThan(0)?(Tt=t.expand(Xe)).each((function(e){b=t.add(b,j.integrate(e,P,h))}),!0):(lt=Number(St.power),ct=Number(Mt.power),lt<0&&0<ct&&(Rt=St,St=Mt,Mt=Rt),-1===lt&&-1===ct?b=j.integration.partial_fraction(Xe,P):St.each((function(e){e=t.multiply(e,Mt.clone()),e=j.integrate(e,P,h),b=t.add(b,e)})))):yt===d&&Be[0].power.greaterThan(0)?(St=t.expand(St),b=new a(0),St.each((function(e){b=t.add(b,j.integrate(t.multiply(e,Mt.clone()),P,h))}),!0)):yt===s&&bt===y&&e.Utils.in_htrig(St.fname)?(St=St.fnTransform(),b=j.integrate(t.expand(t.multiply(St,Mt)),P,h)):yt===s&&bt===d||bt===s&&yt===d?(bt===s&&yt===d&&(Rt=St,St=Mt,Mt=Rt),ft=a.unwrapSQRT(j.diff(St.clone(),P),!0),pt=a.unwrapSQRT(Mt,!0),ft.power.equals(pt.power)?(G=new a(Mt.power),mt=ft.clone().toLinear(),gt=Mt.clone().toLinear(),(ht=e.Algebra.divide(mt.toLinear(),gt)).isConstant()&&(vt=t.pow(ht,G.negate()),b=t.multiply(vt,j.integration.poly_integrate(St.clone())))):b=j.integration.by_parts(Xe,P,h,m)):(dt=St.clone().toLinear(),wt=Mt.clone().toLinear(),b=yt===y&&bt===y&&St.power.contains(P)&&Mt.power.contains(P)&&!dt.contains(P)&&!wt.contains(P)?t.parse(f("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",dt.toString(),wt.toString(),St.power.multiplier.toString(),Mt.power.multiplier.toString(),P)):j.integration.by_parts(Xe,P,h,m))}}else if(3===Ge&&(Be[2].group===g&&Be[2].power.lessThan(2)||Be[0].group===d)){var Ft,jt=Be[0];jt.group===d?(jt.power.greaterThan(1)&&(jt=t.expand(jt)),Ft=t.multiply(Be[1],Be[2]),b=new a(0),jt.each((function(e){e=t.multiply(e,Ft.clone()),e=j.integrate(e,P,h),b=t.add(b,e)}),!0)):b=j.integration.by_parts(Xe,P,h,m)}else if(T(Be)){Rt=new a(1);var Bt=0;for(Ge=Be.length;Bt<Ge;Bt++)Rt=t.multiply(Rt,Be[Bt].fnTransform());Rt=t.expand(Rt),b=j.integrate(Rt,P,h)}else{var Gt=F(Be);b=j.integrate(t.expand(Gt),P,h)}}b=t.multiply(b,Fe)}}else b=t.multiply(Xe.clone(),t.parse(P));if(b)return b}catch(k){if(!(k instanceof R||k instanceof e.exceptions.DivisionByZero))throw k}return t.symfunction("integrate",[o,u])}),!1))},defint:function(n,r,i,s){function o(e,n,r){try{return t.parse(e,n)}catch(n){return j.Limit.limit(e,s,r)}}s=s||"x";var u,l,c=e.Utils.variables(n),f=n.hasTrig();return 1!==c.length||s||(s=c[0]),f||(u=j.integrate(n,s)),f||u.hasIntegral()?1===c.length&&r.isConstant()&&i.isConstant()?(l=e.Utils.build(n),new a(e.Math2.num_integrate(l,Number(r),Number(i)))):t.symfunction("defint",[n,r,i,s]):(l={},(n={})[s]=i,l[s]=r,i=o(u,n,i),r=o(u,l,r),t.subtract(i,r))},Limit:{interval:function(e,n){return t.parse(f("[{0}, {1}]",e,n))},diverges:function(){return j.Limit.interval("-Infinity","Infinity")},divide:function(n,i,s,o,u){if(!(u++>r.max_lim_depth)){n.clone();var l=i.clone();if("abs"===i.fname){var c=n.sign(),f=o.sign();if(o.isInfinity)return t.multiply(new a(c),new a(f));if(o.equals(0)){f=t.parse(n.multiplier);var p=t.parse(i.multiplier);return t.divide(t.multiply(f,j.Limit.interval("-1","1")),p)}j.Limit.diverges()}var m=function(t){if(e.Utils.isVector(t)){for(var n=0;n<t.elements.length;n++)if(!t.elements[n].isInfinity)return!1;return!0}return t.isInfinity},g=function(t,n){return!e.Utils.isVector(t)&&t.equals(n)};do{var v,d,w=h(j.Limit.limit(n.clone(),s,o,u)),y=h(j.Limit.limit(i.clone(),s,o,u)),b=m(w)&&m(y)||g(w,0)&&g(y,0)}while(b&&(v=j.diff(n.clone(),s),d=j.diff(i.clone(),s),n=(d=t.expand(t.divide(v,d))).getNum(),i=d.getDenom()),b);return p=y.equals(0),l=Number(l.power),o.isConstant(!0)&&p?a.infinity(e.Utils.even(l)&&w.lessThan(0)?-1:void 0):p?j.Limit.diverges():t.divide(w,y)}},rewriteToLog:function(e){var n=e.power.clone();return e.toLinear(),t.pow(new a("e"),t.multiply(n,t.symfunction(r.LOG+"",[e])))},getSubbed:function(e,t,n){var r;e.group===y&&(e=j.rewriteToLog(e));try{r=e.sub(t,n)}catch(t){r=e}return r},isInterval:function(t){return e.Utils.isVector(t)},isConvergent:function(e){return!(j.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction("limit"))},limit:function(n,i,o,u){if(n.isLinear()&&n.isComposite()){var l=new a(0);return n.each((function(e){l=t.add(l,j.Limit.limit(e,i,o,u))}),!0),l}if(n=e.Algebra.Simplify.simplify(n),u=u||1,!(u++>r.max_lim_depth)){var c=t.parse(n.multiplier);n.toUnitMultiplier();try{if(n.isConstant(!0))C=n;else{var p={};p[i]=o;try{var m=t.parse(n.sub(i,o),p);(m.isConstant(!0)||m.isInfinity)&&(C=m)}catch(c){}if(!C){var v,d=n.getNum(),b=n.getDenom();if(b.isConstant(!0)){if(n.group===y){var M,q,_,A,O,C,I=n.clone().toLinear(),L=(n.power.clone(),I.getNum()),U=I.getDenom(),R=e.Utils.decompose_fn(U,i,!0);C=L.group===g&&L.multiplier.isOne()&&R.ax.group===g&&R.b.isConstant(!0)&&R.a.isOne()&&R.b.isConstant(!0)?t.parse(f("(1/e^({0}))",R.b)):(q=(M=j.Limit.rewriteToLog(n.clone())).power.clone(),_=M.clone().toLinear(),A=j.Limit.limit(_,i,o,u),O=j.Limit.limit(q,i,o,u),t.pow(A,O))}else if(n.group===s&&1===n.args.length){var T,P=j.Limit.limit(n.args[0],i,o,u);if(e.Utils.isVector(P))return C=P.map((function(e){return n.clone().args[0]=e,j.Limit.limit(t.symfunction(n.fname,[e]),i,o,u)})),t.multiply(c,C);if(P.isConstant(!0)){var k=t.symfunction(n.fname,[P]);try{h(k),T=!0}catch(c){T=!1}}if(T)C=k;else if(j.Limit.isConvergent(P))if(n.fname===S)switch(P.toString()){case"0":C=a.infinity().negate();break;case"Infinity":case"-Infinity":C=a.infinity()}else if(n.fname!==N&&n.fname!==E||!o.isInfinity){if(n.fname===x){var D=n.args[0],F=D.getNum(),B=D.getDenom(),G=F.toUnitMultiplier();(o.isInfinity||G.equals("pi")&&B.equals(2))&&(C=divergent())}else if(n.fname===r.FACTORIAL&&P.isInfinity)return a.infinity()}else C=j.Limit.interval(-1,1)}else if(n.group===g){if(0<n.power)return t.parse(n,p);C=e.Utils.even(n.power)?a.infinity():j.Limit.diverges()}else if(n.group===w){I=(z=n.collectSymbols().sort((function(e,t){return e.group-t.group}))).pop();for(var V=h(j.Limit.limit(I,i,o,u));z.length;){var H=z.pop(),Z=h(j.Limit.limit(H,i,o,u));V.isInfinity||!j.Limit.isConvergent(V)&&Z.equals(0)||V.equals(0)&&j.Limit.isConvergent(Z)?((H=H.containsFunction(S)?[I,I=H][0]:H).invert(),V=V.isInfinity&&Z.isInfinity?a.infinity():j.Limit.divide(I,H,i,o,u)):(V=t.multiply(V,Z),I=t.multiply(I,H))}C=V}else if(n.isComposite()){n.isLinear()||(n=t.expand(n)),C=new a(0);for(var z=n.collectSymbols().sort((function(e,t){return t.group-e.group})),X=[],$=new a(0),W=0,Q=z.length;W<Q;W++)(Y=z[W].clone()).group===s||Y.group===w&&Y.hasFunc()?$=t.add($,Y):X.push(Y);for(X.unshift($),1!==X.length&&(z=X),W=0,Q=z.length;W<Q;W++){var Y=z[W];try{v=j.Limit.limit(Y,i,o,u)}catch(c){v=j.Limit.diverges()}try{C=t.add(C,v)}catch(c){if(u++>r.max_lim_depth)return;C=j.Limit.limit(j.diff(n,i),i,o,u)}}}}else C=j.Limit.divide(d,b,i,o,u)}}C=C||t.symfunction("limit",[n,i,o])}catch(c){C=t.symfunction("limit",[n,i,o])}return t.multiply(c,C)}}},Fresnel:{S:function(e){return e.isConstant(!0)?j.defint(t.parse("sin(pi*x^2/2)"),a(0),e,"x"):t.symfunction("S",arguments)},C:function(e){return e.isConstant(!0)?j.defint(t.parse("cos(pi*x^2/2)"),a(0),e,"x"):t.symfunction("C",arguments)}}};o.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return j.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return j.sum}},{name:"product",visible:!0,numargs:4,build:function(){return j.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return j.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return j.defint}},{name:"S",visible:!0,numargs:1,build:function(){return j.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return j.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return j.Limit.limit}}]),o.api()}(),o=r("15f6"),r("4016"),r("aec1"),function(){var e,t=o.getCore(),r=t.PARSER,i=t.Algebra,s=t.Calculus,a=s.integration.decompose_arg,u=t.Utils.evaluate,l=t.Utils.remove,c=t.Utils.format,f=t.Utils.build,p=t.Utils.knownVariable,h=t.Symbol,m=t.Utils.isSymbol,g=t.Utils.variables,v=t.groups.S,d=t.groups.PL,w=t.groups.CB,y=t.groups.CP,b=t.groups.FN,S=t.Settings,M=t.Utils.range,E=t.Utils.isArray;function N(e,n){if(n.isConstant()&&e.isConstant()&&!e.equals(n)||e.equals(t.Settings.IMAGINARY)||n.equals(t.Settings.IMAGINARY))throw new t.exceptions.NerdamerValueError(e.toString()+" does not equal "+n.toString());this.LHS=e,this.RHS=n}function x(e,t){return r.equals(e,t)}t.Settings.SOLVE_RADIUS=1e3,t.Settings.ROOTS_PER_SIDE=10,t.Settings.make_pi_conversions=!1,t.Settings.STEP_SIZE=.1,t.Settings.EPSILON=1e-13,t.Settings.MAX_NEWTON_ITERATIONS=200,t.Settings.MAX_NON_LINEAR_TRIES=12,t.Settings.NON_LINEAR_JUMP_AT=50,t.Settings.NON_LINEAR_JUMP_SIZE=100,t.Settings.NON_LINEAR_START=.01,t.Settings.NEWTON_SLICES=200,t.Settings.NEWTON_EPSILON=2*Number.EPSILON,t.Settings.SOLUTION_PROXIMITY=1e-14,t.Settings.FILTER_SOLUTIONS=!0,t.Settings.MAX_SOLVE_DEPTH=10,t.Settings.ZERO_EPSILON=1e-9,t.Settings.MAX_BISECTION_ITER=2e3,t.Settings.BI_SECTION_EPSILON=1e-12,t.Symbol.prototype.hasTrig=function(){return this.containsFunction(["cos","sin","tan","cot","csc","sec"])},t.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var e in this.symbols){var t=this.symbols[e];if(t.group===d&&t.hasNegativeTerms()||this.symbols[e].power.lessThan(0))return!0}return!1},N.prototype={toString:function(){return this.LHS.toString()+"="+this.RHS.toString()},text:function(e){return this.LHS.text(e)+"="+this.RHS.text(e)},toLHS:function(e){var t=(n=(e=void 0===e)?this.removeDenom():this.clone()).LHS,n=n.RHS;return t.isConstant(!0)&&!n.isConstant(!0)&&([t,n]=[n,t]),n=r.subtract(t,n),e?r.expand(n):n},removeDenom:function(){var e=this.LHS.clone(),t=this.RHS.clone(),n=r.multiply(e.getDenom(),t.getDenom());if(e=r.expand(r.multiply(e,n.clone())),(t=r.expand(r.multiply(t,n))).group===y&&t.group!==y&&(i=e,e=t,t=i),e.group===w){var i=new h(e.multiplier),s=t.clone();e.each((function(e){e.power.lessThan(0)?s=r.divide(s,e):i=r.multiply(i,e)})),e=i,t=s}else if(e.group===y)for(var o in e.symbols){var a=e.symbols[o];if(a.group===w)for(var u in a.symbols)if(u=a.symbols[u],u.power.lessThan(0))return new N(r.expand(r.multiply(u.clone().toLinear(),e)),r.expand(r.multiply(u.clone().toLinear(),t)))}return new N(e,t)},clone:function(){return new N(this.LHS.clone(),this.RHS.clone())},sub:function(e,t){var n=this.clone();return n.LHS=n.LHS.sub(e.clone(),t.clone()),n.RHS=n.RHS.sub(e.clone(),t.clone()),n},isZero:function(){return t.Utils.evaluate(this.toLHS()).equals(0)},latex:function(e){return[this.LHS.latex(e),this.RHS.latex(e)].join("=")}},r.equals=function(e,t){return new N(e,t)},e=r.functions.simplify[0],r.functions.simplify[0]=function(t){return t instanceof N?(t.LHS=e(t.LHS),t.RHS=e(t.RHS),t):e(t)},t.Expression.prototype.equals=function(e){return e instanceof t.Expression&&(e=e.symbol),new N(this.symbol,e)},t.Expression.prototype.solveFor=function(e){var n;if(this.symbol instanceof N){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(e))return new t.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(e))return new t.Expression(this.symbol.RHS);n=this.symbol.toLHS()}else n=this.symbol;return A(n,e).map((function(e){return new t.Expression(e)}))},t.Expression.prototype.expand=function(){if(this.symbol instanceof N){var e=this.symbol.clone();return e.RHS=r.expand(e.RHS),e.LHS=r.expand(e.LHS),new t.Expression(e)}return new t.Expression(r.expand(this.symbol))},t.Expression.prototype.variables=function(){return this.symbol instanceof N?t.Utils.arrayUnique(g(this.symbol.LHS).concat(g(this.symbol.RHS))):g(this.symbol)},t.Equation=N;var q=t.Utils.checkAll=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return!1;return!0},_=t.Solve={version:"2.0.3",solutions:[],solve:function(e,n){return n=A(e,String(n)),new t.Vector(n)},toLHS:function(e,t){return m(e)?e:(e instanceof N||((n=e.split("="))[1]=n[1]||"0",e=new N(r.parse(n[0]),r.parse(n[1]))),e.toLHS(t));var n},solveCircle:function(e,n){for(var i=n.map((function(e){return r.parse(e)})),s=[],o=[],a=0;a<e.length;a++){for(var u=[],l=0;l<i.length;l++)u.push(Number(t.Algebra.degree(e[a],i[l])));u.push(t.Utils.arraySum(u,!0)),s.push(u)}var c,f,h=e[0],m=e[1];return s[0][2]>s[1][2]&&([m,h]=[h,m],[s[1],s[0]]=[s[0],s[1]]),1===s[0][0]&&2===s[0][2]&&2===s[1][0]&&4===s[1][2]&&(c=n[0],f=n[1],n=A(r.parse(m,p(c,A(r.parse(h),c)[0])),f).map((function(e){return e.toString()})),m=[A(r.parse(h,p(f,n[0])))[0].toString()],n[1]&&m.push(A(r.parse(h,p(f,n[1])))[0].toString()),S.SOLUTIONS_AS_OBJECT?((o={})[c]=m,o[f]=n):(n.unshift(f),m.unshift(c),o=[m,n])),o},solveNonLinearSystem:function(e,i,s){if(i<0)return[];s=void 0===s?t.Settings.NON_LINEAR_START:s;var o=t.Settings.MAX_NON_LINEAR_TRIES,a=Math.floor(o/2);i=void 0===i?o:i;var u,l,c,p,h,m=t.Settings.NON_LINEAR_JUMP_AT,g=t.Settings.NON_LINEAR_JUMP_SIZE,v=!0,d=t.Utils.arrayGetVariables(e),w=(o=t.Matrix.jacobian(e,d,(function(e){return f(e,d)}),!0),t.Settings.MAX_NEWTON_ITERATIONS),y=e.map((function(e){return f(e,d)})),b=o.map((function(e){return f(e,d)}),!0),S=t.Matrix.cMatrix(0,d),M=t.Matrix.cMatrix(s,d),E=0;do{if(w<E)break;u=function(e,t){return e.map((function(e,n){return Number(t.get(n,0))}))}(d,M),p=M.clone(),y.forEach((function(e,t){M.set(t,0,e.apply(null,u))}));var N=new t.Matrix;if(b.each((function(e,t,n){e=e.apply(null,u),N.set(t,n,e)})),N=N.invert(),h=(l=r.multiply(N,M).negate()).subtract(S,(function(e){return r.parse(Number(e))})),S=p.add(l,(function(e){return r.parse(Number(e))})),M=S,m<=E&&1<c){i===a&&(s=0);var x=a<i?1:-1;return n=i%Math.floor(a)+1,s+=x*n*g,_.solveNonLinearSystem(e,--i,s)}}while(x=c,E++,c=h.max(),Number(c)!==Number(x)&&Number(c)>=Number.EPSILON);return v?_.systemSolutions(M,d,!0,(function(e){return t.Utils.round(Number(e),14)})):[]},systemSolutions:function(e,n,i,s){var o=t.Settings.SOLUTIONS_AS_OBJECT?{}:[];return e.each((function(e,a){var u=(i?r.expand(e):e).valueOf();s&&(u=s.call(e,u)),a=n[a],t.Settings.SOLUTIONS_AS_OBJECT?o[a]=u:o.push([a,u])})),o},solveSystemBySubstitution:function(e){var n=g(e[0]),r=g(e[1]);return 2===e.length&&2===n.length&&t.Utils.arrayEqual(n,r)?_.solveCircle(e,n):[]},solveSystem:function(e,n){for(var s=0;s<e.length;s++)e[s]=_.toLHS(e[s]);var u,c=e.length,f=new t.Matrix,p=new t.Matrix,m=!1;if(void 0===n){if(!i.allLinear(e))try{return _.solveNonLinearSystem(e)}catch(b){if(b instanceof t.exceptions.DivisionByZero)return _.solveSystemBySubstitution(e)}if((u=t.Utils.arrayGetVariables(e)).length<e.length){var g=[],v=e.length;for(s=0;s<v-1;s++)g.push(r.parse(e[s]));var d={},w=_.solveSystem(g,u);Array.isArray(w)?w.forEach((function(e){d[e[0]]=e[1]})):d=w;var y=!0;for(s=v-1;s<v;s++)r.parse(e[s],d).equals(0)||(y=!1);if(y)return w}for(s=0;s<u.length;s++)o.setVar(u[s],"delete");for(s=0;s<c;s++){for(var b=e[s],S=0;S<u.length;S++){var M=u[S],E=[];b.each((function(e){e.contains(M)&&(E=E.concat(e.coeffs()))}));var N=t.Utils.arraySum(E);f.set(s,S,N)}var x=b.clone();u.map((function(e){x=x.stripVar(e,!0)})),p.set(s,0,x.negate())}}else for(u=n,m=!0,s=0;s<c;s++){for(p.set(s,0,new h(0)),b=r.expand(e[s]).collectSymbols(),S=0;S<n.length;S++){f.set(s,S,new h(0));M=n[S];for(var q=0;q<b.length;q++){for(var A,O=b[q],C=!1,I=0;I<n.length;I++)O.contains(n[I])&&(C&&t.err("Multiple variables found for term "+O),C=!0);O.contains(M)&&(A=a(l(b,q),M),f.set(s,S,r.add(f.get(s,S),A[0])))}}for(q=0;q<b.length;q++)p.set(s,0,r.add(p.get(s,0),b[q]))}if(u.length!==e.length||f.determinant().equals(0))throw new t.exceptions.SolveError("System does not have a distinct solution");return w=(f=f.invert()).multiply(p),t.Utils.isArray(n)&&w.each((function(e){return e.negate()})),_.systemSolutions(w,u,m)},quad:function(e,t,n){return e=r.subtract(r.pow(t.clone(),h(2)),r.multiply(r.multiply(n.clone(),e.clone()),h(4))),e=r.pow(e,h(.5)),n=r.parse(r.multiply(new h(2),n.clone())),[r.parse(c("(-({0})+({1}))/({2})",t,e,n)),r.parse(c("(-({0})-({1}))/({2})",t,e,n))]},cubic:function(e,t,n,i){return i=i.text(),n=n.text(),t=t.text(),e=`(-(${n})^3/(27*(${i})^3)+(${n})*(${t})/(6*(${i})^2)-(${e.text()})/(2*(${i})))`,t=`((${t})/(3*(${i}))-(${n})^2/(9*(${i})^2))`,n=`((${e})+sqrt((${e})^2+(${t})^3))^(1/3)+((${e})-sqrt((${e})^2+(${t})^3))^(1/3)-((${n})/(3*(${i})))`,i="1/2+sqrt(3)/2*i",[r.parse(n),r.parse(`(${n})(${i})`),r.parse(`(${n})(${i})^2`)]},quartic:function(e,n,i,s,o){var a,u,l,f={};return t.Utils.arrayUnique(g(o).concat(g(s)).concat(g(i)).concat(g(n)).concat(g(e))).map((function(e){f[e]=1})),o=o.toString(),s=s.toString(),i=i.toString(),n=n.toString(),e=e.toString(),a=r.parse(c("(8*({0})*({2})-3*({1})^2)/(8*({0})^2)",o,s,i)).toString(),u=r.parse(c("(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)",o,s,i,n)).toString(),l=r.parse(c("12*({0})*({4})-3*({1})*({3})+({2})^2",o,s,i,n,e)).toString(),e=r.parse(c("2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})",o,s,i,n,e)).toString(),e=r.parse(c("((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)",l,e)).toString(),v=r.parse(c("(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)",o,a,e,l)).toString(),[r.parse(c("-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",o,s,a,u,v)),r.parse(c("-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",o,s,a,u,v)),r.parse(c("-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",o,s,a,u,v)),r.parse(c("-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",o,s,a,u,v))]},divideAndConquer:function(e,n){var r=[];e=t.Algebra.Factor.factor(e);return e.group===w&&e.each((function(e){e=h.unwrapPARENS(e),r=r.concat(A(e,n))})),r},csolve:function(e,n){return t.Utils.block("IGNORE_E",(function(){var i=[],s=t.Utils.decompose_fn(e,n,!0);if(s.x.group===v)for(var o,a=r.parse(s.x.power),u=Number(a),l=r.pow(r.divide(s.b.negate(),s.a),a.invert()),f=(l=(s=h.toPolarFormArray(l))[0],s[1],l.toString()),p=(a.toString(),0);p<u;p++)o=c("({0})*e^(2*{1}*pi*{2}*{3})",f,p,a,t.Settings.IMAGINARY),o=r.parse(o),i.push(o);return i}),!0)},getPoints:function(e,n,r){n=n||.01,r=r||[];var i=f(e),s=Math.round(0),o=i(s),a=o/Math.abs(o),u=t.Settings.ROOTS_PER_SIDE;o=u;return r.push(Math.floor(s/2)),r.push(Math.abs(s)),r.push(s),e.each((function(e){e.containsFunction(t.Settings.LOG)&&r.push(.1)})),e=M(-t.Settings.SOLVE_RADIUS,s,n),s=M(s,t.Settings.SOLVE_RADIUS,n),n=function(e,t){for(var n,s,o,u=[],l=0,c=e.length;l<c;l++)n=e[l],o=(s=i(n))/Math.abs(s),isNaN(s)||!isFinite(s)||u.length>t||(o!==a&&u.push(n),a=o);r=r.concat(u)},n(e,o),n(s,u),r},bisection:function(e,n){var r=e-1,i=e+1;if(Math.sign(n(r))!==Math.sign(n(i))){var s,o,a=0;do{if(s=Math.abs(i-r),a++>t.Settings.MAX_BISECTION_ITER||isNaN(s))return}while(o=(r+i)/2,0<n(r)*n(o)?r=o:i=o,s>=S.EPSILON);var u=(r+i)/2;e=n(u);if(!isNaN(e)&&Math.abs(e)<=t.Settings.BI_SECTION_EPSILON)return t.Utils.round(u,13)}},Newton:function(e,n,r){var i=t.Settings.MAX_NEWTON_ITERATIONS,s=0,o=e;do{var a=n(o);if(0===o&&0===a){u=0;break}if(i<++s)return;var u=o-a/r(o);a=Math.abs(u-o),o=u}while(a>S.NEWTON_EPSILON);if(Math.abs(n(u))<=S.EPSILON)return u},rewrite:function(e,n,i){var s,o;n=n||new h(0),e.isComposite()&&e.isLinear()?(s=[],o=[],e.each((function(e){("sqrt"===(e=e.clone()).fname&&e.contains(i)?s:o).push(e)}),!0),1===s.length&&(n=r.expand(r.pow(r.subtract(n,t.Utils.arraySum(o)),new h(2))),e=r.expand(r.pow(h.unwrapSQRT(s[0]),new h(2))))):e=h.unwrapSQRT(r.expand(e));var a=0,u=e.length;if(e.group===y&&e.contains(i)&&e.isLinear()){e.distributeMultiplier();var l=new h(0);return e.each((function(e){e.contains(i)?(a++,l=r.add(l,e.clone())):n=r.subtract(n,e.clone())})),e=l,a!==u?_.rewrite(e,n,i):[e,n]}return e.group===w&&e.contains(i)&&e.isLinear()?(e.multiplier.lessThan(0)&&(e.multiplier=e.multiplier.multiply(new t.Frac(-1)),n.multiplier=n.multiplier.multiply(new t.Frac(-1))),n.equals(0)?new h(0):(l=new h(1),e.each((function(e){e.contains(i)?l=r.multiply(l,e.clone()):n=r.divide(n,e.clone())})),_.rewrite(e=l,n,i))):!e.isLinear()&&e.contains(i)?(u=r.parse(e.power.clone().invert()),e=r.pow(e,u.clone()),n=r.pow(r.expand(n),u.clone()),_.rewrite(e,n,i)):e.group===b||e.group===v||e.group===d?[e,n]:void 0},sqrtSolve:function(e,t){var n=new h(0),i=new h(0);if(e.isComposite()&&(e.each((function(e){"sqrt"===e.fname&&e.contains(t)?n=r.add(n,e.clone()):i=r.add(i,e.clone())})),!n.equals(0))){var s=r.expand(r.multiply(r.parse(e.multiplier),r.subtract(r.pow(i,new h(2)),r.pow(n,new h(2)))));return A(s,t).filter((function(n){if(n.isImaginary())return n;var r={};return r[t]=n,u(e,r).equals(0)?n:void 0}))}}},A=function(e,n,o,l,c){if(l=l||0,l++>S.MAX_SOLVE_DEPTH)return o;if(e instanceof N){if(e.isZero())return[new h(0)];if(e.LHS.equals(n)&&!e.RHS.contains(n))return[e.RHS];if(e.RHS.equals(n)&&!e.LHS.contains(n))return[e.LHS]}if(e instanceof t.Vector&&(e=e.elements),n=n||"x",E(e))return _.solveSystem.apply(void 0,arguments);o=o||[];var p={},g={};if(g[n]=0,m(e)&&!0===u(e.getDenom(),g).equals(0))return o;var M=function(e,n){var i,s=m(e);void 0===e||"number"==typeof e&&isNaN(e)||(E(e)?e.forEach((function(e){M(e)})):"null"!==e.valueOf()&&("function"==typeof t.Settings.PRE_ADD_SOLUTION&&(e=t.Settings.PRE_ADD_SOLUTION(e)),s||(e=r.parse(e)),t.Settings.make_pi_conversions&&n&&(s=(i=r.divide(e.clone(),new h(Math.PI))).multiplier,n=Math.abs(s.num),s=Math.abs(s.den),n<10&&s<10&&(e=r.multiply(i,new h("pi")))),i=e.toString(),p[i]||o.push(e),p[i]=!0))};if(e.group===v&&e.contains(n)){try{var x={};x[n]=0,u(c,x,"numer"),M(new h(0))}catch(c){}return o}if(e.group===w){var O=e.getNum();if(O.group!==w)return A(O,n,o,l,c);var C=String(n);return O.each((function(t){t.contains(C)&&A(t,n,o,l,e)})),o}e.group===b&&"sqrt"===e.fname&&(e=r.pow(h.unwrapSQRT(e),new h(2)));var I=(t.Utils.isSymbol(e)?e:_.toLHS(e,!1)).getNum();g=t.Utils.variables(I),x=g.length;if((I=t.Utils.isInt(I.power)&&0<I.power?r.parse(I).toLinear():I).group===v||I.group===w&&I.contains(n))return[new h(0)];function L(e){var t=new h(0),i=new h(0);return e.each((function(e){e.contains(n,!0)?t=r.add(t,e.clone()):i=r.subtract(i,e.clone())})),[t,i]}var U,R={},T=function(e){var i=(e=r.expand(e,{expand_denominator:!0,expand_functions:!0})).clone();if(e.symbols)for(var s in e.symbols){var o=e.symbols[s],u=o.getDenom();if(!u.isConstant(!0)&&e.isComposite()){var l=new h(0);return e.each((function(e){l=r.add(l,r.multiply(e,u.clone()))})),T(r.multiply(r.parse(e.multiplier),l))}var c=a(o,n),f=c[1].fname===t.Settings.SQRT,p=h.unwrapSQRT(c[1]);s=p.power.clone();if(!m(s)&&!s.equals(.5))if(s.den.gt(1)){if(f)return e=r.subtract(e,o.clone()),e=r.add(e,r.multiply(c[0].clone(),p)),T(e);p=R[s.den],R[s.den]=p?p++:1}else{if(-1===s.sign()){var g=r.parse(n+"^"+Math.abs(s));return e.each((function(t,i){t.contains(n)&&(e.symbols[i]=r.multiply(t,g.clone()))})),R={},T(r.parse(e))}if(o.group===d&&(o=t.Utils.arrayMin(t.Utils.keys(o.symbols)),o<0)){g=r.parse(n+"^"+Math.abs(o));var v=new h(0);return i.each((function(e){v=r.add(v,r.multiply(e.clone(),g.clone()))}),!0),v}}}return e};if(_.inverseFunctionSolve=function(e,t,i){var s=a(t.args[0],n);if(s[1].group===v)return r.divide(r.symfunction(e,[r.divide(i,r.parse(t.multiplier))]),s[0])},(I=T(I)).equals(0))return[I];var P,k;O=t.Utils.keys(R);if(1===O.length&&(U=O[0],I.each((function(e,i){var s,o;!e.contains(n)||(e=(o=(s=a(e,n))[1]).power).den.gt(1)&&(o.power=e.multiply(new t.Frac(U)),I.symbols[i]=r.multiply(o,s[0]))})),I=r.parse(I)),M(_.sqrtSolve(I,n)),1===x)if(I.isPoly(!0)){var D=new t.Algebra.Classes.Factors;if(t.Algebra.Factor.factor(I,D),1<D.getNumberSymbolics())for(var F in D.factors)M(A(D.factors[F],n));else{var j,B,G=(j=t.Utils.getCoeffs(I,n)).length-1;x=!1;g[0]===n&&(q(j,(function(e){return e.group!==t.groups.N}))&&(g=t.Algebra.proots(I),q(g,(function(e){return!t.Utils.isInt(e)}))&&(x=!0,g.map((function(e){M(new h(e))})))),x||((e=r.parse(e))instanceof t.Equation&&(e=e.toLHS()),1===G?M(r.divide(j[0],j[1].negate())):2===G?M(r.expand(_.quad.apply(void 0,j))):3===G?(o=[],B=t.Algebra.Factor.factor(e),0<(o=[]).length?M(o):M(_.cubic.apply(void 0,j))):i.proots(I).map(M)))}}else try{for(var V,H,Z=I.hasTrig(),z=_.getPoints(I,.1),X=_.getPoints(I,.05),$=_.getPoints(I,.01),W=t.Utils.arrayUnique(z.concat(X).concat($)).sort((function(e,t){return e-t})),Q=f(I.clone()),Y=[],K=0;K<W.length;K++)V=W[K],void 0!==(H=_.bisection(V,Q))?M(H,Z):Y.push(V);W=Y;var J=s.diff(I.clone()),ee=f(J);for(K=0;K<W.length;K++)V=W[K],M(_.Newton(V,Q,ee),Z);o.sort()}catch(c){console.log(c)}else if(!I.hasFunc(n)&&I.isComposite())try{if((B=t.Algebra.Factor.factor(I.clone())).group===w)B.each((function(e){M(A(e,n))}));else{switch(G=(j=t.Utils.getCoeffs(I,n)).length-1){case 0:var te,ne=(te=L(I))[0],re=te[1];ne.group===t.groups.EX&&M(r.parse(t.Utils.format(t.Settings.LOG+"(({0})/({2}))/"+t.Settings.LOG+"({1})",re,ne.value,ne.multiplier)));break;case 1:M(r.divide(j[0],j[1].negate()));break;case 2:M(_.quad.apply(void 0,j));break;case 3:M(_.cubic.apply(void 0,j));break;case 4:M(_.quartic.apply(void 0,j));break;default:M(_.csolve(I,n)),0===o.length&&M(_.divideAndConquer(I,n))}0===o.length&&M(A(B,n,o,l))}}catch(c){}else try{var ie,se=_.rewrite(I,null,n);ne=se[0],re=se[1];if(ne.group===b)"abs"===ne.fname?M([re.clone(),re.negate()]):"sin"===ne.fname?M(_.inverseFunctionSolve("asin",ne,re)):"cos"===ne.fname?M(_.inverseFunctionSolve("acos",ne,re)):"tan"===ne.fname?M(_.inverseFunctionSolve("atan",ne,re)):ne.fname===t.Settings.LOG?(F=(ie=a(ne.args[0],n))[1]).group===v&&(I=new N(F,re=r.divide(r.subtract(r.pow(1<ne.args.length?ne.args[1]:new h("e"),r.divide(re,r.parse(ne.multiplier))),ie[3]),ie[0])).toLHS(),M(A(I,n))):M(r.subtract(ne,re));else{var oe=new N(ne,re).toLHS();if(oe.equals(I))throw new Error("Stopping. No stop condition exists");M(A(oe,n))}}catch(c){try{I.group===w?M(0):I.group===y&&(ne=(te=L(I))[0],re=te[1],ne.group===t.groups.EX&&ne.value===n&&(P=ne.power.clone().invert(),M(r.pow(re,P))))}catch(c){}}return U&&(o=o.map((function(e){return r.pow(e,new h(U))}))),m(e)&&(k={},o=o.filter((function(t){try{k[n]=t;var r=Number(u(e,k));return isNaN(r),!0}catch(t){return!1}}))),o};o.register([{name:"solveEquations",parent:"nerdamer",numargs:-1,visible:!0,build:function(){return A}},{name:"solve",parent:"Solve",numargs:2,visible:!0,build:function(){return t.Solve.solve}},{name:"setEquation",parent:"Solve",visible:!0,build:function(){return x}}]),o.api()}(),o=r("15f6"),r("4016"),r("aec1"),function(){"use strict";var e=o.getCore(),t=e.PARSER,n=e.Symbol,r=e.Utils.format,i=e.Utils.isVector,s=e.Utils.isArray,a=(e.Vector,e.groups.S),u=(e.groups.EX,e.groups.CP),l=e.groups.CB,c=e.groups.FN;e.Settings.Laplace_integration_depth=40,n.prototype.findFunction=function(e){if(this.group===c&&this.fname===e)return this.clone();var t;if(this.symbols)for(var n in this.symbols)if(t=this.symbols[n].findFunction(e))break;return t};var f=e.Extra={version:"1.4.2",LaPlace:{transform:function(i,s,o){i=i.clone(),s=s.toString();var u=(i=n.unwrapSQRT(i,!0)).stripVar(s),p=i.group;if((i=t.divide(i,u.clone())).isConstant()||!i.contains(s,!0))m=t.parse(r("({0})/({1})",i,o));else if(p===a&&e.Utils.isInt(i.power))var h=String(i.power),m=t.parse(r("factorial({0})/({1})^({0}+1)",h,o));else if(i.group===a&&i.power.equals(.5))m=t.parse(r("sqrt(pi)/(2*({0})^(3/2))",o));else if(i.isComposite())m=new n(0),i.each((function(e){m=t.add(m,f.LaPlace.transform(e,s,o))}),!0);else if(!i.isE()||i.power.group!==a&&i.power.group!==l)if(i.group!==c||-1===["sin","cos","sinh","cosh"].indexOf(i.fname)||i.args[0].group!==a&&i.args[0].group!==l){var g;h=e.Settings.integration_depth<e.Settings.Laplace_integration_depth;h&&(g=e.Settings.integration_depth,e.Settings.integration_depth=e.Settings.Laplace_integration_depth),e.Utils.block("PARSE2NUMBER",(function(){var r=s,a=i.sub(s,r);a=t.parse("e^(-"+o+"*"+r+")*"+a);if((m=e.Calculus.integrate(a,r)).hasIntegral())return t.symfunction("laplace",arguments);m=m.sub(s,0),m=(m=t.expand(t.multiply(m,new n(-1)))).sub(r,s)}),!1),m=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(m)}),!0),h&&(e.Settings.integration_depth=g)}else switch(v=i.args[0].stripVar(s),i.fname){case"sin":m=t.parse(r("({0})/(({1})^2+({0})^2)",v,o));break;case"cos":m=t.parse(r("({1})/(({1})^2+({0})^2)",v,o));break;case"sinh":m=t.parse(r("({0})/(({1})^2-({0})^2)",v,o));break;case"cosh":m=t.parse(r("({1})/(({1})^2-({0})^2)",v,o))}else{var v=i.power.stripVar(s);m=t.parse(r("1/(({1})-({0}))",v,o))}return t.multiply(m,u)},inverse:function(i,s,o){var c=i.clone();return e.Utils.block("POSITIVE_MULTIPLIERS",(function(){if((i=i.group===l?e.Algebra.PartFrac.partfrac(t.expand(i),s):i).group===a||i.group===l||i.isComposite()){var p,h,m,g,v,d,w,y,b,S,M,E,N,x,q,_=function(){(d=t.multiply(d,p)).multiplier=d.multiplier.multiply(i.multiplier),d=t.divide(d,g.a)},A=i.multiplier.clone();if(i.toUnitMultiplier(),p=i.getNum(),(h=i.getDenom().toUnitMultiplier()).group===u?(v=h.power.clone(),h.toLinear()):v=new e.Frac(1),m=s.toString(),g=e.Utils.decompose_fn(h,m,!0),e.Utils.decompose_fn(t.expand(p.clone()),m,!0),p.multiplier=p.multiplier.multiply(A),(h.group===a||h.group===l)&&g.x.value===m&&g.b.equals(0)&&e.Utils.isInt(g.x.power))E=g.x.power-1,N=e.Math2.factorial(E),d=t.divide(t.pow(o,new n(E)),new n(N)),_();else if(h.group===u&&v.equals(1))g.x.group===e.groups.PL&&e.Algebra.degree(h).equals(2)?(b=e.Algebra.sqComplete(h,m),S=e.Utils.getU(h),x=e.Utils.decompose_fn(b.a,m,!0).b,M=f.LaPlace.inverse(t.parse(`1/((${S})^2+(${b.c}))`),S,o),d=t.multiply(M,t.parse(`(${A})*e^(-(${x})*(${o}))`))):g.x.isLinear()&&!p.contains(m)?(o=t.divide(o,g.a.clone()),d=t.parse(r("(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({4})*({1})^({3}))",o,g.a,g.b,v,N=0===(E=v-1)||1===E?"1":`(${v}-1)!`)),_()):g.x.group===a&&g.x.power.equals(2)&&(p.contains(m)?(x=new n(1),p.group===l&&(w=new n(1),p.each((function(e){e.contains(m)?w=t.multiply(w,e):x=t.multiply(x,e)})),p=w),b=(y=e.Utils.decompose_fn(p,m,!0)).a,S=y.b,M=b.containsFunction("sin"),E=b.containsFunction("cos"),N=S.containsFunction("cos"),_=S.containsFunction("sin"),y.x.value===m&&y.x.isLinear()&&!(M&&N||E||_)?d=t.parse(r("(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})",o,y.a,g.a,g.b)):M&&N&&(M=b.findFunction("sin"),N=S.findFunction("cos"),M.args[0].equals(N.args[0])&&!M.args[0].contains(m)&&(O=t.divide(S,N.toUnitMultiplier()).toString(),N=M.args[0].toString(),q=g.b,M=t.divide(b,M.toUnitMultiplier()),d=t.parse(r("(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))",o,x,O,N,q,M))))):d=t.parse(r("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))",o,p,g.a,g.b)));else if(g.x.power.num&&g.x.power.num.equals(3)&&g.x.power.den.equals(2)&&p.contains("sqrt(pi)")&&!p.contains(m)&&p.isLinear()){var O=t.divide(p.clone(),t.parse("sqrt(pi)"));d=t.parse(r("(2*({2})*sqrt({0}))/({1})",o,g.a,O,p))}else if(v.equals(2)&&g.x.power.equals(2))if(p.contains(m))if((y=e.Utils.decompose_fn(t.expand(p.clone()),m,!0)).x.isComposite()){var C=[],I=p.collectSymbols((function(t){t=n.unwrapPARENS(t);var r=e.Utils.decompose_fn(t,m,!0);return r.symbol=t,r})).sort((function(e,t){return e=e.x.value!==m?0:e.x.power,(t.x.value!==m?0:t.x.power)-e}));x=new n(-1);for(var L=0;L<I.length;L++){var U=I[L];U.x.value===m?C.push(U):x=t.multiply(x,U.symbol)}C[0].x.power.equals(2)&&C[1].x.power.equals(1)&&C[1].b.equals(0)&&!C[0].b.equals(0)&&(O=C[0].a.negate(),d=t.parse(r("-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2",o,x,O,C[0].b,g.a,g.b)))}else y.x.isLinear()?(x=t.divide(y.a,new n(2)),d=t.parse(r("(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))",o,x,g.a,g.b))):y.x.power.equals(2)&&(d=y.b.equals(0)?(x=t.divide(y.a,new n(2)),t.parse(r("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",o,x,g.a,g.b))):(x=t.divide(y.a,new n(2)),q=y.b.negate(),t.parse(r("-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",o,x,g.a,g.b,q))));else x=t.divide(p,new n(2)),d=t.parse(r("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))",o,x,g.a,g.b));else i.isComposite()&&(v.equals(2)&&g.x.group===a?d=t.parse(`(${A})*(${o})*e^(-(${g.b})*(${o}))`):(d=new n(0),i.each((function(e){d=t.add(d,f.LaPlace.inverse(e,s,o))}),!0)))}return d=d||t.symfunction("ilt",[c,s,o])}),!0)}},Statistics:{frequencyMap:function(e){for(var t={},n=0,r=e.length;n<r;n++){var i=e[n].toString();t[i]||(t[i]=0),t[i]++}return t},sort:function(e){return e.sort((function(e,n){return e.isConstant()&&n.isConstant()||t.error("Unable to sort! All values must be numeric"),e.multiplier.subtract(n.multiplier)}))},count:function(e){return new n(e.length)},sum:function(e,r){for(var i=new n(0),s=0,o=e.length;s<o;s++){var a=e[s].clone();i=r?t.add(t.pow(t.subtract(a,r.clone()),new n(2)),i):t.add(a,i)}return i},mean:function(){var e=[].slice.call(arguments);return i(e[0])?f.Statistics.mean.apply(this,e[0].elements):t.divide(f.Statistics.sum(e),f.Statistics.count(e))},median:function(){var n=[].slice.call(arguments);if(i(n[0]))return f.Statistics.median.apply(this,n[0].elements);try{var r,s,o=f.Statistics.sort(n),a=n.length;s=e.Utils.even(a)?(r=a/2,f.Statistics.mean(o[r-1],o[r])):o[Math.floor(a/2)]}catch(r){s=t.symfunction("median",n)}return s},mode:function(){var n=[].slice.call(arguments);if(i(n[0]))return f.Statistics.mode.apply(this,n[0].elements);var r=f.Statistics.frequencyMap(n);if(1===e.Utils.keys(r).length)c=n[0];else{var o,a={};for(o in r){var u,l=r[o];l in a?(u=a[l],s(u)?u.push(o):a[l]=[o,a[l]]):a[l]=o}n=a[Math.max.apply(null,e.Utils.keys(a))];var c=s(n)?t.symfunction("mode",n.sort()):t.parse(n)}return c},gVariance:function(e,n){var r=f.Statistics.mean.apply(f.Statistics,n);r=f.Statistics.sum(n,r);return t.multiply(e,r)},variance:function(){var e=[].slice.call(arguments);if(i(e[0]))return f.Statistics.variance.apply(this,e[0].elements);var r=t.divide(new n(1),f.Statistics.count(e));return f.Statistics.gVariance(r,e)},sampleVariance:function(){var e=[].slice.call(arguments);if(i(e[0]))return f.Statistics.sampleVariance.apply(this,e[0].elements);var r=t.divide(new n(1),t.subtract(f.Statistics.count(e),new n(1)));return f.Statistics.gVariance(r,e)},standardDeviation:function(){var e=[].slice.call(arguments);return i(e[0])?f.Statistics.standardDeviation.apply(this,e[0].elements):t.pow(f.Statistics.variance.apply(f.Statistics,e),new n(.5))},sampleStandardDeviation:function(){var e=[].slice.call(arguments);return i(e[0])?f.Statistics.sampleStandardDeviation.apply(this,e[0].elements):t.pow(f.Statistics.sampleVariance.apply(f.Statistics,e),new n(.5))},zScore:function(e,n,r){return t.divide(t.subtract(e,n),r)}},Units:{table:{foot:"12 inch",meter:"100 cm",decimeter:"10 cm"}}};o.register([{name:"laplace",visible:!0,numargs:3,build:function(){return f.LaPlace.transform}},{name:"ilt",visible:!0,numargs:3,build:function(){return f.LaPlace.inverse}},{name:"mean",visible:!0,numargs:-1,build:function(){return f.Statistics.mean}},{name:"median",visible:!0,numargs:-1,build:function(){return f.Statistics.median}},{name:"mode",visible:!0,numargs:-1,build:function(){return f.Statistics.mode}},{name:"smpvar",visible:!0,numargs:-1,build:function(){return f.Statistics.sampleVariance}},{name:"variance",visible:!0,numargs:-1,build:function(){return f.Statistics.variance}},{name:"smpstdev",visible:!0,numargs:-1,build:function(){return f.Statistics.sampleStandardDeviation}},{name:"stdev",visible:!0,numargs:-1,build:function(){return f.Statistics.standardDeviation}},{name:"zscore",visible:!0,numargs:3,build:function(){return f.Statistics.zScore}}]),o.api()}(),e.exports=o}).call(this,r("62e4")(e))}}]);
//# sourceMappingURL=chunk-3ef81cb0.d1c85f99.js.map